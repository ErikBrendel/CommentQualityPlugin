# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractHandlerMapping -> public final void setOrder(int order);1328020251;Specify the order value for this HandlerMapping bean._<p>Default value is <code>Integer.MAX_VALUE</code>, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,code,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1346174472;Specify the order value for this HandlerMapping bean._<p>Default value is <code>Integer.MAX_VALUE</code>, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,code,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1356735495;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1357119239;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1362408075;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1368482696;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1368581529;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1394840766;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1427983931;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1430734105;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1431730371;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1431966054;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1432032520;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1432064452;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1432857824;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1436473186;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1437382044;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1438251419;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1467051782;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1467730834;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1471517882;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1472031618;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1476136811;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1486634978;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1486635693;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1495868221;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1496837955;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1498780456;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1500043922;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1500448076;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1502974979;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public final void setOrder(int order);1519295386;Specify the order value for this HandlerMapping bean._<p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered._@see org.springframework.core.Ordered#getOrder();public final void setOrder(int order) {_	  this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,default,value,is,code,integer,meaning,that,it,s,non,ordered,see,org,springframework,core,ordered,get,order;public,final,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1328020251;Adapt the given interceptor object to the HandlerInterceptor interface._<p>Supported interceptor types are HandlerInterceptor and WebRequestInterceptor._Each given WebRequestInterceptor will be wrapped in a WebRequestHandlerInterceptorAdapter._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,handler,interceptor,interface,p,supported,interceptor,types,are,handler,interceptor,and,web,request,interceptor,each,given,web,request,interceptor,will,be,wrapped,in,a,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1346174472;Adapt the given interceptor object to the HandlerInterceptor interface._<p>Supported interceptor types are HandlerInterceptor and WebRequestInterceptor._Each given WebRequestInterceptor will be wrapped in a WebRequestHandlerInterceptorAdapter._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,handler,interceptor,interface,p,supported,interceptor,types,are,handler,interceptor,and,web,request,interceptor,each,given,web,request,interceptor,will,be,wrapped,in,a,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1356735495;Adapt the given interceptor object to the HandlerInterceptor interface._<p>Supported interceptor types are HandlerInterceptor and WebRequestInterceptor._Each given WebRequestInterceptor will be wrapped in a WebRequestHandlerInterceptorAdapter._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,handler,interceptor,interface,p,supported,interceptor,types,are,handler,interceptor,and,web,request,interceptor,each,given,web,request,interceptor,will,be,wrapped,in,a,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1357119239;Adapt the given interceptor object to the HandlerInterceptor interface._<p>Supported interceptor types are HandlerInterceptor and WebRequestInterceptor._Each given WebRequestInterceptor will be wrapped in a WebRequestHandlerInterceptorAdapter._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,handler,interceptor,interface,p,supported,interceptor,types,are,handler,interceptor,and,web,request,interceptor,each,given,web,request,interceptor,will,be,wrapped,in,a,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1362408075;Adapt the given interceptor object to the HandlerInterceptor interface._<p>Supported interceptor types are HandlerInterceptor and WebRequestInterceptor._Each given WebRequestInterceptor will be wrapped in a WebRequestHandlerInterceptorAdapter._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,handler,interceptor,interface,p,supported,interceptor,types,are,handler,interceptor,and,web,request,interceptor,each,given,web,request,interceptor,will,be,wrapped,in,a,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1368482696;Adapt the given interceptor object to the HandlerInterceptor interface._<p>Supported interceptor types are HandlerInterceptor and WebRequestInterceptor._Each given WebRequestInterceptor will be wrapped in a WebRequestHandlerInterceptorAdapter._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,handler,interceptor,interface,p,supported,interceptor,types,are,handler,interceptor,and,web,request,interceptor,each,given,web,request,interceptor,will,be,wrapped,in,a,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1368581529;Adapt the given interceptor object to the HandlerInterceptor interface._<p>Supported interceptor types are HandlerInterceptor and WebRequestInterceptor._Each given WebRequestInterceptor will be wrapped in a WebRequestHandlerInterceptorAdapter._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,handler,interceptor,interface,p,supported,interceptor,types,are,handler,interceptor,and,web,request,interceptor,each,given,web,request,interceptor,will,be,wrapped,in,a,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1394840766;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1427983931;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1430734105;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1431730371;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1431966054;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1432032520;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1432064452;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1432857824;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1436473186;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1437382044;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1438251419;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1467051782;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1467730834;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1471517882;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1472031618;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1476136811;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1486634978;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1486635693;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1495868221;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1496837955;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1498780456;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1500043922;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1500448076;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1502974979;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1519295386;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1522448444;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1529361191;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1529948549;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1530174524;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1530174524;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> protected HandlerInterceptor adaptInterceptor(Object interceptor);1533715735;Adapt the given interceptor object to the {@link HandlerInterceptor} interface._<p>By default, the supported interceptor types are {@link HandlerInterceptor}_and {@link WebRequestInterceptor}. Each given {@link WebRequestInterceptor}_will be wrapped in a {@link WebRequestHandlerInterceptorAdapter}._Can be overridden in subclasses._@param interceptor the specified interceptor object_@return the interceptor wrapped as HandlerInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor_@see WebRequestHandlerInterceptorAdapter;protected HandlerInterceptor adaptInterceptor(Object interceptor) {_		if (interceptor instanceof HandlerInterceptor) {_			return (HandlerInterceptor) interceptor__		}_		else if (interceptor instanceof WebRequestInterceptor) {_			return new WebRequestHandlerInterceptorAdapter((WebRequestInterceptor) interceptor)__		}_		else {_			throw new IllegalArgumentException("Interceptor type not supported: " + interceptor.getClass().getName())__		}_	};adapt,the,given,interceptor,object,to,the,link,handler,interceptor,interface,p,by,default,the,supported,interceptor,types,are,link,handler,interceptor,and,link,web,request,interceptor,each,given,link,web,request,interceptor,will,be,wrapped,in,a,link,web,request,handler,interceptor,adapter,can,be,overridden,in,subclasses,param,interceptor,the,specified,interceptor,object,return,the,interceptor,wrapped,as,handler,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor,see,web,request,handler,interceptor,adapter;protected,handler,interceptor,adapt,interceptor,object,interceptor,if,interceptor,instanceof,handler,interceptor,return,handler,interceptor,interceptor,else,if,interceptor,instanceof,web,request,interceptor,return,new,web,request,handler,interceptor,adapter,web,request,interceptor,interceptor,else,throw,new,illegal,argument,exception,interceptor,type,not,supported,interceptor,get,class,get,name
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1328020251;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1346174472;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1356735495;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1357119239;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1362408075;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1368482696;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1368581529;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1394840766;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1427983931;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1430734105;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1431730371;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1431966054;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1432032520;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1432064452;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1432857824;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1436473186;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		this.corsMapping.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,this,cors,mapping,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1437382044;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		this.corsConfigSource.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,this,cors,config,source,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1438251419;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		this.corsConfigSource.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,this,cors,config,source,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1467051782;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		this.corsConfigSource.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,this,cors,config,source,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1467730834;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		this.corsConfigSource.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,this,cors,config,source,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1471517882;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		this.corsConfigSource.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,this,cors,config,source,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1472031618;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		this.corsConfigSource.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,this,cors,config,source,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1476136811;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		this.globalCorsConfigSource.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,this,global,cors,config,source,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1486634978;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		this.globalCorsConfigSource.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,this,global,cors,config,source,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1486635693;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		this.globalCorsConfigSource.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,this,global,cors,config,source,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1495868221;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		this.globalCorsConfigSource.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,this,global,cors,config,source,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1496837955;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		this.globalCorsConfigSource.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,this,global,cors,config,source,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1498780456;Set if context path and request URI should be URL-decoded. Both are returned_<i>undecoded</i> by the Servlet API, in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		this.globalCorsConfigSource.setUrlDecode(urlDecode)__	};set,if,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,this,global,cors,config,source,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1500043922;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setUrlDecode(boolean);public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		this.globalCorsConfigSource.setUrlDecode(urlDecode)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,url,decode,boolean;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,this,global,cors,config,source,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1500448076;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setUrlDecode(boolean);public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		this.globalCorsConfigSource.setUrlDecode(urlDecode)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,url,decode,boolean;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,this,global,cors,config,source,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1502974979;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setUrlDecode(boolean);public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		this.globalCorsConfigSource.setUrlDecode(urlDecode)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,url,decode,boolean;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,this,global,cors,config,source,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1519295386;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setUrlDecode(boolean);public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		this.globalCorsConfigSource.setUrlDecode(urlDecode)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,url,decode,boolean;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,this,global,cors,config,source,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1522448444;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setUrlDecode(boolean);public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		this.globalCorsConfigSource.setUrlDecode(urlDecode)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,url,decode,boolean;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,this,global,cors,config,source,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1529361191;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setUrlDecode(boolean);public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		this.globalCorsConfigSource.setUrlDecode(urlDecode)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,url,decode,boolean;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,this,global,cors,config,source,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1529948549;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setUrlDecode(boolean);public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		this.globalCorsConfigSource.setUrlDecode(urlDecode)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,url,decode,boolean;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,this,global,cors,config,source,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1530174524;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setUrlDecode(boolean);public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		this.globalCorsConfigSource.setUrlDecode(urlDecode)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,url,decode,boolean;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,this,global,cors,config,source,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1530174524;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setUrlDecode(boolean);public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		this.globalCorsConfigSource.setUrlDecode(urlDecode)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,url,decode,boolean;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,this,global,cors,config,source,set,url,decode,url,decode
AbstractHandlerMapping -> public void setUrlDecode(boolean urlDecode);1533715735;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setUrlDecode(boolean);public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__		if (this.corsConfigurationSource instanceof UrlBasedCorsConfigurationSource) {_			((UrlBasedCorsConfigurationSource)this.corsConfigurationSource).setUrlDecode(urlDecode)__		}_	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,url,decode,boolean;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode,if,this,cors,configuration,source,instanceof,url,based,cors,configuration,source,url,based,cors,configuration,source,this,cors,configuration,source,set,url,decode,url,decode
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1346174472;Set if "_" (semicolon) content should be stripped from the request URI._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1356735495;Set if "_" (semicolon) content should be stripped from the request URI._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1357119239;Set if "_" (semicolon) content should be stripped from the request URI._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1362408075;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code false}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,false,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1368482696;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code false}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,false,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1368581529;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code true}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,true,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1394840766;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code true}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,true,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1427983931;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code true}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,true,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1430734105;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code true}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,true,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1431730371;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code true}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,true,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1431966054;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code true}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,true,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1432032520;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code true}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,true,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1432064452;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code true}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,true,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1432857824;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code true}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,true,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1436473186;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code true}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		this.corsMapping.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,true,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,this,cors,mapping,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1437382044;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code true}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		this.corsConfigSource.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,true,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,this,cors,config,source,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1438251419;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code true}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		this.corsConfigSource.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,true,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,this,cors,config,source,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1467051782;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code true}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		this.corsConfigSource.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,true,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,this,cors,config,source,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1467730834;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code true}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		this.corsConfigSource.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,true,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,this,cors,config,source,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1471517882;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code true}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		this.corsConfigSource.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,true,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,this,cors,config,source,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1472031618;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code true}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		this.corsConfigSource.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,true,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,this,cors,config,source,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1476136811;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code true}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		this.globalCorsConfigSource.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,true,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,this,global,cors,config,source,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1486634978;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code true}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		this.globalCorsConfigSource.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,true,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,this,global,cors,config,source,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1486635693;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code true}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		this.globalCorsConfigSource.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,true,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,this,global,cors,config,source,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1495868221;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code true}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		this.globalCorsConfigSource.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,true,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,this,global,cors,config,source,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1496837955;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code true}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		this.globalCorsConfigSource.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,true,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,this,global,cors,config,source,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1498780456;Set if "_" (semicolon) content should be stripped from the request URI._<p>The default value is {@code true}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		this.globalCorsConfigSource.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,p,the,default,value,is,code,true,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,this,global,cors,config,source,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1500043922;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		this.globalCorsConfigSource.setRemoveSemicolonContent(removeSemicolonContent)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,this,global,cors,config,source,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1500448076;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		this.globalCorsConfigSource.setRemoveSemicolonContent(removeSemicolonContent)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,this,global,cors,config,source,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1502974979;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		this.globalCorsConfigSource.setRemoveSemicolonContent(removeSemicolonContent)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,this,global,cors,config,source,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1519295386;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		this.globalCorsConfigSource.setRemoveSemicolonContent(removeSemicolonContent)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,this,global,cors,config,source,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1522448444;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		this.globalCorsConfigSource.setRemoveSemicolonContent(removeSemicolonContent)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,this,global,cors,config,source,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1529361191;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		this.globalCorsConfigSource.setRemoveSemicolonContent(removeSemicolonContent)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,this,global,cors,config,source,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1529948549;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		this.globalCorsConfigSource.setRemoveSemicolonContent(removeSemicolonContent)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,this,global,cors,config,source,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1530174524;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		this.globalCorsConfigSource.setRemoveSemicolonContent(removeSemicolonContent)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,this,global,cors,config,source,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1530174524;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		this.globalCorsConfigSource.setRemoveSemicolonContent(removeSemicolonContent)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,this,global,cors,config,source,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1533715735;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__		if (this.corsConfigurationSource instanceof UrlBasedCorsConfigurationSource) {_			((UrlBasedCorsConfigurationSource)this.corsConfigurationSource).setRemoveSemicolonContent(removeSemicolonContent)__		}_	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content,if,this,cors,configuration,source,instanceof,url,based,cors,configuration,source,url,based,cors,configuration,source,this,cors,configuration,source,set,remove,semicolon,content,remove,semicolon,content
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1328020251;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1346174472;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1356735495;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1357119239;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1362408075;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1368482696;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1368581529;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1394840766;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1427983931;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1430734105;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1431730371;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1431966054;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1432032520;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1432064452;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1432857824;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1436473186;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1437382044;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1438251419;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1467051782;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1467730834;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1471517882;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1472031618;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1476136811;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1486634978;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1486635693;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1495868221;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1496837955;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1498780456;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1500043922;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1500448076;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1502974979;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1519295386;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1522448444;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1529361191;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1529948549;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1530174524;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1530174524;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public PathMatcher getPathMatcher();1533715735;Return the PathMatcher implementation to use for matching URL paths_against registered URL patterns.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns;public,path,matcher,get,path,matcher,return,this,path,matcher
AbstractHandlerMapping -> public void setInterceptors(Object... interceptors);1471517882;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object... interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object... interceptors);1472031618;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object... interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object... interceptors);1476136811;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object... interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object... interceptors);1486634978;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object... interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object... interceptors);1486635693;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object... interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object... interceptors);1496837955;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object... interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object... interceptors);1498780456;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object... interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object... interceptors);1500043922;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object... interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object... interceptors);1500448076;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object... interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object... interceptors);1502974979;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object... interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object... interceptors);1519295386;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object... interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object... interceptors);1522448444;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object... interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object... interceptors);1529361191;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object... interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object... interceptors);1529948549;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object... interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object... interceptors);1530174524;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object... interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object... interceptors);1530174524;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object... interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object... interceptors);1533715735;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object... interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> @Nullable 	protected final HandlerInterceptor[] getAdaptedInterceptors();1495868221;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;@Nullable_	protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;nullable,protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> @Nullable 	protected final HandlerInterceptor[] getAdaptedInterceptors();1496837955;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;@Nullable_	protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;nullable,protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> @Nullable 	protected final HandlerInterceptor[] getAdaptedInterceptors();1498780456;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;@Nullable_	protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;nullable,protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> @Nullable 	protected final HandlerInterceptor[] getAdaptedInterceptors();1500043922;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;@Nullable_	protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;nullable,protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> @Nullable 	protected final HandlerInterceptor[] getAdaptedInterceptors();1500448076;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;@Nullable_	protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;nullable,protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> @Nullable 	protected final HandlerInterceptor[] getAdaptedInterceptors();1502974979;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;@Nullable_	protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;nullable,protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> @Nullable 	protected final HandlerInterceptor[] getAdaptedInterceptors();1519295386;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;@Nullable_	protected final HandlerInterceptor[] getAdaptedInterceptors() {_		return (!this.adaptedInterceptors.isEmpty() ?_				this.adaptedInterceptors.toArray(new HandlerInterceptor[0]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;nullable,protected,final,handler,interceptor,get,adapted,interceptors,return,this,adapted,interceptors,is,empty,this,adapted,interceptors,to,array,new,handler,interceptor,0,null
AbstractHandlerMapping -> @Nullable 	protected final HandlerInterceptor[] getAdaptedInterceptors();1522448444;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;@Nullable_	protected final HandlerInterceptor[] getAdaptedInterceptors() {_		return (!this.adaptedInterceptors.isEmpty() ?_				this.adaptedInterceptors.toArray(new HandlerInterceptor[0]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;nullable,protected,final,handler,interceptor,get,adapted,interceptors,return,this,adapted,interceptors,is,empty,this,adapted,interceptors,to,array,new,handler,interceptor,0,null
AbstractHandlerMapping -> @Nullable 	protected final HandlerInterceptor[] getAdaptedInterceptors();1529361191;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;@Nullable_	protected final HandlerInterceptor[] getAdaptedInterceptors() {_		return (!this.adaptedInterceptors.isEmpty() ?_				this.adaptedInterceptors.toArray(new HandlerInterceptor[0]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;nullable,protected,final,handler,interceptor,get,adapted,interceptors,return,this,adapted,interceptors,is,empty,this,adapted,interceptors,to,array,new,handler,interceptor,0,null
AbstractHandlerMapping -> @Nullable 	protected final HandlerInterceptor[] getAdaptedInterceptors();1529948549;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;@Nullable_	protected final HandlerInterceptor[] getAdaptedInterceptors() {_		return (!this.adaptedInterceptors.isEmpty() ?_				this.adaptedInterceptors.toArray(new HandlerInterceptor[0]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;nullable,protected,final,handler,interceptor,get,adapted,interceptors,return,this,adapted,interceptors,is,empty,this,adapted,interceptors,to,array,new,handler,interceptor,0,null
AbstractHandlerMapping -> @Nullable 	protected final HandlerInterceptor[] getAdaptedInterceptors();1530174524;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor HandlerInterceptors}, or {@code null} if none;@Nullable_	protected final HandlerInterceptor[] getAdaptedInterceptors() {_		return (!this.adaptedInterceptors.isEmpty() ?_				this.adaptedInterceptors.toArray(new HandlerInterceptor[0]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,handler,interceptors,or,code,null,if,none;nullable,protected,final,handler,interceptor,get,adapted,interceptors,return,this,adapted,interceptors,is,empty,this,adapted,interceptors,to,array,new,handler,interceptor,0,null
AbstractHandlerMapping -> @Nullable 	protected final HandlerInterceptor[] getAdaptedInterceptors();1530174524;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor HandlerInterceptors}, or {@code null} if none;@Nullable_	protected final HandlerInterceptor[] getAdaptedInterceptors() {_		return (!this.adaptedInterceptors.isEmpty() ?_				this.adaptedInterceptors.toArray(new HandlerInterceptor[0]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,handler,interceptors,or,code,null,if,none;nullable,protected,final,handler,interceptor,get,adapted,interceptors,return,this,adapted,interceptors,is,empty,this,adapted,interceptors,to,array,new,handler,interceptor,0,null
AbstractHandlerMapping -> @Nullable 	protected final HandlerInterceptor[] getAdaptedInterceptors();1533715735;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor HandlerInterceptors}, or {@code null} if none;@Nullable_	protected final HandlerInterceptor[] getAdaptedInterceptors() {_		return (!this.adaptedInterceptors.isEmpty() ?_				this.adaptedInterceptors.toArray(new HandlerInterceptor[0]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,handler,interceptors,or,code,null,if,none;nullable,protected,final,handler,interceptor,get,adapted,interceptors,return,this,adapted,interceptors,is,empty,this,adapted,interceptors,to,array,new,handler,interceptor,0,null
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1431730371;Set the {@link CorsConfiguration} map.__@since 4.2_@see #registerCorsConfiguration(String, CorsConfiguration);public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.corsConfigurations = corsConfigurations__	};set,the,link,cors,configuration,map,since,4,2,see,register,cors,configuration,string,cors,configuration;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1436473186;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.corsMapping.setCorsConfigurations(corsConfigurations)__	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,cors,mapping,set,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1437382044;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.corsConfigSource.setCorsConfigurations(corsConfigurations)__	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,cors,config,source,set,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1438251419;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.corsConfigSource.setCorsConfigurations(corsConfigurations)__	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,cors,config,source,set,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1467051782;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.corsConfigSource.setCorsConfigurations(corsConfigurations)__	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,cors,config,source,set,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1467730834;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.corsConfigSource.setCorsConfigurations(corsConfigurations)__	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,cors,config,source,set,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1471517882;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.corsConfigSource.setCorsConfigurations(corsConfigurations)__	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,cors,config,source,set,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1472031618;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.corsConfigSource.setCorsConfigurations(corsConfigurations)__	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,cors,config,source,set,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1476136811;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.globalCorsConfigSource.setCorsConfigurations(corsConfigurations)__	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,global,cors,config,source,set,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1486634978;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.globalCorsConfigSource.setCorsConfigurations(corsConfigurations)__	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,global,cors,config,source,set,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1486635693;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.globalCorsConfigSource.setCorsConfigurations(corsConfigurations)__	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,global,cors,config,source,set,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1495868221;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.globalCorsConfigSource.setCorsConfigurations(corsConfigurations)__	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,global,cors,config,source,set,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1496837955;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.globalCorsConfigSource.setCorsConfigurations(corsConfigurations)__	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,global,cors,config,source,set,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1498780456;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.globalCorsConfigSource.setCorsConfigurations(corsConfigurations)__	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,global,cors,config,source,set,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1500043922;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.globalCorsConfigSource.setCorsConfigurations(corsConfigurations)__	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,global,cors,config,source,set,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1500448076;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.globalCorsConfigSource.setCorsConfigurations(corsConfigurations)__	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,global,cors,config,source,set,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1502974979;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.globalCorsConfigSource.setCorsConfigurations(corsConfigurations)__	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,global,cors,config,source,set,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1519295386;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.globalCorsConfigSource.setCorsConfigurations(corsConfigurations)__	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,global,cors,config,source,set,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1522448444;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.globalCorsConfigSource.setCorsConfigurations(corsConfigurations)__	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,global,cors,config,source,set,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1529361191;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.globalCorsConfigSource.setCorsConfigurations(corsConfigurations)__	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,global,cors,config,source,set,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1529948549;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.globalCorsConfigSource.setCorsConfigurations(corsConfigurations)__	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,global,cors,config,source,set,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1530174524;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.globalCorsConfigSource.setCorsConfigurations(corsConfigurations)__	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,global,cors,config,source,set,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1530174524;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		this.globalCorsConfigSource.setCorsConfigurations(corsConfigurations)__	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,this,global,cors,config,source,set,cors,configurations,cors,configurations
AbstractHandlerMapping -> public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations);1533715735;Set the "global" CORS configurations based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the handler, if any._@since 4.2_@see #setCorsConfigurationSource(CorsConfigurationSource);public void setCorsConfigurations(Map<String, CorsConfiguration> corsConfigurations) {_		Assert.notNull(corsConfigurations, "corsConfigurations must not be null")__		UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource()__		source.setCorsConfigurations(corsConfigurations)__		source.setPathMatcher(this.pathMatcher)__		source.setUrlPathHelper(this.urlPathHelper)__		this.corsConfigurationSource = source__	};set,the,global,cors,configurations,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2,see,set,cors,configuration,source,cors,configuration,source;public,void,set,cors,configurations,map,string,cors,configuration,cors,configurations,assert,not,null,cors,configurations,cors,configurations,must,not,be,null,url,based,cors,configuration,source,source,new,url,based,cors,configuration,source,source,set,cors,configurations,cors,configurations,source,set,path,matcher,this,path,matcher,source,set,url,path,helper,this,url,path,helper,this,cors,configuration,source,source
AbstractHandlerMapping -> @Nullable 	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1495868221;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfigurations},_<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;@Nullable_	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configurations,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;nullable,protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> @Nullable 	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1496837955;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfigurations},_<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;@Nullable_	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configurations,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;nullable,protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> @Nullable 	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1498780456;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfigurations},_<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;@Nullable_	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configurations,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;nullable,protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> @Nullable 	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1500043922;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfigurations},_<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;@Nullable_	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configurations,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;nullable,protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> @Nullable 	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1500448076;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfigurations},_<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;@Nullable_	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configurations,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;nullable,protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> @Nullable 	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1502974979;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfigurations},_<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;@Nullable_	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configurations,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;nullable,protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> @Nullable 	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1519295386;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfigurations},_<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;@Nullable_	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configurations,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;nullable,protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> @Nullable 	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1522448444;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfigurations},_<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;@Nullable_	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configurations,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;nullable,protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> @Nullable 	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1529361191;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfigurations},_<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;@Nullable_	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configurations,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;nullable,protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> @Nullable 	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1529948549;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfigurations},_<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;@Nullable_	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configurations,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;nullable,protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> @Nullable 	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1530174524;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfigurations},_<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;@Nullable_	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configurations,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;nullable,protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> @Nullable 	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1530174524;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfigurations},_<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;@Nullable_	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configurations,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;nullable,protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> @Nullable 	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1533715735;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfiguration(Object, HttpServletRequest)},_<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;@Nullable_	protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configuration,object,http,servlet,request,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;nullable,protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1432064452;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1432857824;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1436473186;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1437382044;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1438251419;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1467051782;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1467730834;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1471517882;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1472031618;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1476136811;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1486634978;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1486635693;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1495868221;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1496837955;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						obtainApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,obtain,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1498780456;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						obtainApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,obtain,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1500043922;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						obtainApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,obtain,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1500448076;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						obtainApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,obtain,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1502974979;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						obtainApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,obtain,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1519295386;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						obtainApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,obtain,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1522448444;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						obtainApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,obtain,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1529361191;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						obtainApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,obtain,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1529948549;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						obtainApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,obtain,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1530174524;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor MappedInterceptors} that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						obtainApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,mapped,interceptors,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,obtain,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1530174524;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor MappedInterceptors} that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						obtainApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,mapped,interceptors,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,obtain,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors);1533715735;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor MappedInterceptors} that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<HandlerInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						obtainApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,mapped,interceptors,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,handler,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,obtain,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected CorsConfiguration getCorsConfiguration(HttpServletRequest request);1431966054;Find the "global" CORS configuration for the given URL configured via_{@link #setCorsConfiguration(Map)}._@param request the request_@return the CORS configuration or {@code null};protected CorsConfiguration getCorsConfiguration(HttpServletRequest request) {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		for(Map.Entry<String, CorsConfiguration> entry : getCorsConfiguration().entrySet()) {_			if (getPathMatcher().match(entry.getKey(), lookupPath)) {_				return entry.getValue()__			}_		}_		return null__	};find,the,global,cors,configuration,for,the,given,url,configured,via,link,set,cors,configuration,map,param,request,the,request,return,the,cors,configuration,or,code,null;protected,cors,configuration,get,cors,configuration,http,servlet,request,request,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,for,map,entry,string,cors,configuration,entry,get,cors,configuration,entry,set,if,get,path,matcher,match,entry,get,key,lookup,path,return,entry,get,value,return,null
AbstractHandlerMapping -> protected CorsConfiguration getCorsConfiguration(HttpServletRequest request);1432032520;Find the "global" CORS configuration for the given URL configured via_{@link #setCorsConfiguration(Map)}._@param request the request_@return the CORS configuration or {@code null};protected CorsConfiguration getCorsConfiguration(HttpServletRequest request) {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		for(Map.Entry<String, CorsConfiguration> entry : getCorsConfiguration().entrySet()) {_			if (getPathMatcher().match(entry.getKey(), lookupPath)) {_				return entry.getValue()__			}_		}_		return null__	};find,the,global,cors,configuration,for,the,given,url,configured,via,link,set,cors,configuration,map,param,request,the,request,return,the,cors,configuration,or,code,null;protected,cors,configuration,get,cors,configuration,http,servlet,request,request,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,for,map,entry,string,cors,configuration,entry,get,cors,configuration,entry,set,if,get,path,matcher,match,entry,get,key,lookup,path,return,entry,get,value,return,null
AbstractHandlerMapping -> protected CorsConfiguration getCorsConfiguration(HttpServletRequest request);1432064452;Find the "global" CORS configuration for the given URL configured via_{@link #setCorsConfiguration(Map)}._@param request the request_@return the CORS configuration or {@code null};protected CorsConfiguration getCorsConfiguration(HttpServletRequest request) {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		for(Map.Entry<String, CorsConfiguration> entry : getCorsConfiguration().entrySet()) {_			if (getPathMatcher().match(entry.getKey(), lookupPath)) {_				return entry.getValue()__			}_		}_		return null__	};find,the,global,cors,configuration,for,the,given,url,configured,via,link,set,cors,configuration,map,param,request,the,request,return,the,cors,configuration,or,code,null;protected,cors,configuration,get,cors,configuration,http,servlet,request,request,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,for,map,entry,string,cors,configuration,entry,get,cors,configuration,entry,set,if,get,path,matcher,match,entry,get,key,lookup,path,return,entry,get,value,return,null
AbstractHandlerMapping -> protected CorsConfiguration getCorsConfiguration(HttpServletRequest request);1432857824;Find the "global" CORS configuration for the given URL configured via_{@link #setCorsConfiguration(Map)}._@param request the request_@return the CORS configuration or {@code null};protected CorsConfiguration getCorsConfiguration(HttpServletRequest request) {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		for(Map.Entry<String, CorsConfiguration> entry : getCorsConfiguration().entrySet()) {_			if (getPathMatcher().match(entry.getKey(), lookupPath)) {_				return entry.getValue()__			}_		}_		return null__	};find,the,global,cors,configuration,for,the,given,url,configured,via,link,set,cors,configuration,map,param,request,the,request,return,the,cors,configuration,or,code,null;protected,cors,configuration,get,cors,configuration,http,servlet,request,request,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,for,map,entry,string,cors,configuration,entry,get,cors,configuration,entry,set,if,get,path,matcher,match,entry,get,key,lookup,path,return,entry,get,value,return,null
AbstractHandlerMapping -> @Nullable 	protected final MappedInterceptor[] getMappedInterceptors();1495868221;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;@Nullable_	protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<>()__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		int count = mappedInterceptors.size()__		return (count > 0 ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;nullable,protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> @Nullable 	protected final MappedInterceptor[] getMappedInterceptors();1496837955;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;@Nullable_	protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<>()__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		int count = mappedInterceptors.size()__		return (count > 0 ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;nullable,protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> @Nullable 	protected final MappedInterceptor[] getMappedInterceptors();1498780456;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;@Nullable_	protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<>()__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		int count = mappedInterceptors.size()__		return (count > 0 ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;nullable,protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> @Nullable 	protected final MappedInterceptor[] getMappedInterceptors();1500043922;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;@Nullable_	protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<>()__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		int count = mappedInterceptors.size()__		return (count > 0 ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;nullable,protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> @Nullable 	protected final MappedInterceptor[] getMappedInterceptors();1500448076;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;@Nullable_	protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<>()__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		int count = mappedInterceptors.size()__		return (count > 0 ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;nullable,protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> @Nullable 	protected final MappedInterceptor[] getMappedInterceptors();1502974979;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;@Nullable_	protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<>()__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		int count = mappedInterceptors.size()__		return (count > 0 ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;nullable,protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> @Nullable 	protected final MappedInterceptor[] getMappedInterceptors();1519295386;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;@Nullable_	protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<>(this.adaptedInterceptors.size())__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		return (!mappedInterceptors.isEmpty() ? mappedInterceptors.toArray(new MappedInterceptor[0]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;nullable,protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,this,adapted,interceptors,size,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,return,mapped,interceptors,is,empty,mapped,interceptors,to,array,new,mapped,interceptor,0,null
AbstractHandlerMapping -> @Nullable 	protected final MappedInterceptor[] getMappedInterceptors();1522448444;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;@Nullable_	protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<>(this.adaptedInterceptors.size())__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		return (!mappedInterceptors.isEmpty() ? mappedInterceptors.toArray(new MappedInterceptor[0]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;nullable,protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,this,adapted,interceptors,size,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,return,mapped,interceptors,is,empty,mapped,interceptors,to,array,new,mapped,interceptor,0,null
AbstractHandlerMapping -> @Nullable 	protected final MappedInterceptor[] getMappedInterceptors();1529361191;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;@Nullable_	protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<>(this.adaptedInterceptors.size())__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		return (!mappedInterceptors.isEmpty() ? mappedInterceptors.toArray(new MappedInterceptor[0]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;nullable,protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,this,adapted,interceptors,size,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,return,mapped,interceptors,is,empty,mapped,interceptors,to,array,new,mapped,interceptor,0,null
AbstractHandlerMapping -> @Nullable 	protected final MappedInterceptor[] getMappedInterceptors();1529948549;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;@Nullable_	protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<>(this.adaptedInterceptors.size())__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		return (!mappedInterceptors.isEmpty() ? mappedInterceptors.toArray(new MappedInterceptor[0]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;nullable,protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,this,adapted,interceptors,size,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,return,mapped,interceptors,is,empty,mapped,interceptors,to,array,new,mapped,interceptor,0,null
AbstractHandlerMapping -> @Nullable 	protected final MappedInterceptor[] getMappedInterceptors();1530174524;Return all configured {@link MappedInterceptor MappedInterceptors} as an array._@return the array of {@link MappedInterceptor MappedInterceptors}, or {@code null} if none;@Nullable_	protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<>(this.adaptedInterceptors.size())__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		return (!mappedInterceptors.isEmpty() ? mappedInterceptors.toArray(new MappedInterceptor[0]) : null)__	};return,all,configured,link,mapped,interceptor,mapped,interceptors,as,an,array,return,the,array,of,link,mapped,interceptor,mapped,interceptors,or,code,null,if,none;nullable,protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,this,adapted,interceptors,size,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,return,mapped,interceptors,is,empty,mapped,interceptors,to,array,new,mapped,interceptor,0,null
AbstractHandlerMapping -> @Nullable 	protected final MappedInterceptor[] getMappedInterceptors();1530174524;Return all configured {@link MappedInterceptor MappedInterceptors} as an array._@return the array of {@link MappedInterceptor MappedInterceptors}, or {@code null} if none;@Nullable_	protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<>(this.adaptedInterceptors.size())__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		return (!mappedInterceptors.isEmpty() ? mappedInterceptors.toArray(new MappedInterceptor[0]) : null)__	};return,all,configured,link,mapped,interceptor,mapped,interceptors,as,an,array,return,the,array,of,link,mapped,interceptor,mapped,interceptors,or,code,null,if,none;nullable,protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,this,adapted,interceptors,size,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,return,mapped,interceptors,is,empty,mapped,interceptors,to,array,new,mapped,interceptor,0,null
AbstractHandlerMapping -> @Nullable 	protected final MappedInterceptor[] getMappedInterceptors();1533715735;Return all configured {@link MappedInterceptor MappedInterceptors} as an array._@return the array of {@link MappedInterceptor MappedInterceptors}, or {@code null} if none;@Nullable_	protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<>(this.adaptedInterceptors.size())__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		return (!mappedInterceptors.isEmpty() ? mappedInterceptors.toArray(new MappedInterceptor[0]) : null)__	};return,all,configured,link,mapped,interceptor,mapped,interceptors,as,an,array,return,the,array,of,link,mapped,interceptor,mapped,interceptors,or,code,null,if,none;nullable,protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,this,adapted,interceptors,size,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,return,mapped,interceptors,is,empty,mapped,interceptors,to,array,new,mapped,interceptor,0,null
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1427983931;@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1430734105;@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1431730371;@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1431966054;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1432032520;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1432064452;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1432857824;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1436473186;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1437382044;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1438251419;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1467051782;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1467730834;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1471517882;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1472031618;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1476136811;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1486634978;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1486635693;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1495868221;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1496837955;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1498780456;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1500043922;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1500448076;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1502974979;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1519295386;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1522448444;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1529361191;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1529948549;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1530174524;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1530174524;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setCorsProcessor(CorsProcessor corsProcessor);1533715735;Configure a custom {@link CorsProcessor} to use to apply the matched_{@link CorsConfiguration} for a request._<p>By default {@link DefaultCorsProcessor} is used._@since 4.2;public void setCorsProcessor(CorsProcessor corsProcessor) {_		Assert.notNull(corsProcessor, "CorsProcessor must not be null")__		this.corsProcessor = corsProcessor__	};configure,a,custom,link,cors,processor,to,use,to,apply,the,matched,link,cors,configuration,for,a,request,p,by,default,link,default,cors,processor,is,used,since,4,2;public,void,set,cors,processor,cors,processor,cors,processor,assert,not,null,cors,processor,cors,processor,must,not,be,null,this,cors,processor,cors,processor
AbstractHandlerMapping -> public void setInterceptors(Object[] interceptors);1328020251;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or <code>null</code> if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object[] interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,code,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object[] interceptors);1346174472;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or <code>null</code> if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object[] interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,code,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object[] interceptors);1356735495;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object[] interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object[] interceptors);1357119239;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object[] interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object[] interceptors);1362408075;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object[] interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object[] interceptors);1368482696;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object[] interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object[] interceptors);1368581529;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object[] interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object[] interceptors);1394840766;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object[] interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object[] interceptors);1427983931;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object[] interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object[] interceptors);1430734105;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object[] interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object[] interceptors);1431730371;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object[] interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object[] interceptors);1431966054;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object[] interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object[] interceptors);1432032520;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object[] interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object[] interceptors);1432064452;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object[] interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object[] interceptors);1432857824;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object[] interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object[] interceptors);1436473186;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object[] interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object[] interceptors);1437382044;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object[] interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object[] interceptors);1438251419;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object[] interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object[] interceptors);1467051782;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object[] interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setInterceptors(Object[] interceptors);1467730834;Set the interceptors to apply for all handlers mapped by this handler mapping._<p>Supported interceptor types are HandlerInterceptor, WebRequestInterceptor, and MappedInterceptor._Mapped interceptors apply only to request URLs that match its path patterns._Mapped interceptor beans are also detected by type during initialization._@param interceptors array of handler interceptors, or {@code null} if none_@see #adaptInterceptor_@see org.springframework.web.servlet.HandlerInterceptor_@see org.springframework.web.context.request.WebRequestInterceptor;public void setInterceptors(Object[] interceptors) {_		this.interceptors.addAll(Arrays.asList(interceptors))__	};set,the,interceptors,to,apply,for,all,handlers,mapped,by,this,handler,mapping,p,supported,interceptor,types,are,handler,interceptor,web,request,interceptor,and,mapped,interceptor,mapped,interceptors,apply,only,to,request,urls,that,match,its,path,patterns,mapped,interceptor,beans,are,also,detected,by,type,during,initialization,param,interceptors,array,of,handler,interceptors,or,code,null,if,none,see,adapt,interceptor,see,org,springframework,web,servlet,handler,interceptor,see,org,springframework,web,context,request,web,request,interceptor;public,void,set,interceptors,object,interceptors,this,interceptors,add,all,arrays,as,list,interceptors
AbstractHandlerMapping -> public void setCorsConfiguration(Map<String, CorsConfiguration> corsConfiguration);1431966054;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfiguration(Map<String, CorsConfiguration> corsConfiguration) {_		this.corsConfiguration.clear()__		if (corsConfiguration != null) {_			this.corsConfiguration.putAll(corsConfiguration)__		}_	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configuration,map,string,cors,configuration,cors,configuration,this,cors,configuration,clear,if,cors,configuration,null,this,cors,configuration,put,all,cors,configuration
AbstractHandlerMapping -> public void setCorsConfiguration(Map<String, CorsConfiguration> corsConfiguration);1432032520;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfiguration(Map<String, CorsConfiguration> corsConfiguration) {_		this.corsConfiguration.clear()__		if (corsConfiguration != null) {_			this.corsConfiguration.putAll(corsConfiguration)__		}_	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configuration,map,string,cors,configuration,cors,configuration,this,cors,configuration,clear,if,cors,configuration,null,this,cors,configuration,put,all,cors,configuration
AbstractHandlerMapping -> public void setCorsConfiguration(Map<String, CorsConfiguration> corsConfiguration);1432064452;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfiguration(Map<String, CorsConfiguration> corsConfiguration) {_		this.corsConfiguration.clear()__		if (corsConfiguration != null) {_			this.corsConfiguration.putAll(corsConfiguration)__		}_	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configuration,map,string,cors,configuration,cors,configuration,this,cors,configuration,clear,if,cors,configuration,null,this,cors,configuration,put,all,cors,configuration
AbstractHandlerMapping -> public void setCorsConfiguration(Map<String, CorsConfiguration> corsConfiguration);1432857824;Set "global" CORS configuration based on URL patterns. By default the first_matching URL pattern is combined with the CORS configuration for the_handler, if any._@since 4.2;public void setCorsConfiguration(Map<String, CorsConfiguration> corsConfiguration) {_		this.corsConfiguration.clear()__		if (corsConfiguration != null) {_			this.corsConfiguration.putAll(corsConfiguration)__		}_	};set,global,cors,configuration,based,on,url,patterns,by,default,the,first,matching,url,pattern,is,combined,with,the,cors,configuration,for,the,handler,if,any,since,4,2;public,void,set,cors,configuration,map,string,cors,configuration,cors,configuration,this,cors,configuration,clear,if,cors,configuration,null,this,cors,configuration,put,all,cors,configuration
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, CorsConfiguration config);1427983931;Update the HandlerExecutionChain for CORS-related handling.__<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}.__<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers.;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, CorsConfiguration config) {__		if (config != null) {_			if (CorsUtils.isPreFlightRequest(request)) {_				HandlerInterceptor[] interceptors = chain.getInterceptors()__				chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__			}_			else {_				chain.addInterceptor(new CorsInterceptor(config))__			}_		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,cors,configuration,config,if,config,null,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, CorsConfiguration config);1430734105;Update the HandlerExecutionChain for CORS-related handling.__<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}.__<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers.;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, CorsConfiguration config) {__		if (config != null) {_			if (CorsUtils.isPreFlightRequest(request)) {_				HandlerInterceptor[] interceptors = chain.getInterceptors()__				chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__			}_			else {_				chain.addInterceptor(new CorsInterceptor(config))__			}_		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,cors,configuration,config,if,config,null,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, CorsConfiguration config);1431966054;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration, possibly {@code null}_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, CorsConfiguration config);1432032520;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration, possibly {@code null}_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, CorsConfiguration config);1432064452;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration, possibly {@code null}_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, CorsConfiguration config);1432857824;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration, possibly {@code null}_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, CorsConfiguration config);1436473186;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration, possibly {@code null}_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, CorsConfiguration config);1437382044;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration, possibly {@code null}_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, CorsConfiguration config);1438251419;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration, possibly {@code null}_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, CorsConfiguration config);1467051782;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration, possibly {@code null}_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, CorsConfiguration config);1467730834;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration, possibly {@code null}_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, CorsConfiguration config);1471517882;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration, possibly {@code null}_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, CorsConfiguration config);1472031618;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration, possibly {@code null}_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, CorsConfiguration config);1476136811;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration, possibly {@code null}_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, CorsConfiguration config);1486634978;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration, possibly {@code null}_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, CorsConfiguration config);1486635693;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration, possibly {@code null}_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1328020251;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is <code>null</code>, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,code,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1346174472;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is <code>null</code>, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,code,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1356735495;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1357119239;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1362408075;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1368482696;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1368581529;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1394840766;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1427983931;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1430734105;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1431730371;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1431966054;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1432032520;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1432064452;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1432857824;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1436473186;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1437382044;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1438251419;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1467051782;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1467730834;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1471517882;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1472031618;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1476136811;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1486634978;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1486635693;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1495868221;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1496837955;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1498780456;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(Object defaultHandler);1500043922;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> protected void initInterceptors();1328020251;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and adapting_HandlerInterceptors where necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				if (interceptor instanceof MappedInterceptor) {_					mappedInterceptors.add((MappedInterceptor) interceptor)__				}_				else {_					adaptedInterceptors.add(adaptInterceptor(interceptor))__				}_			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,handler,interceptors,where,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,else,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1346174472;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and adapting_HandlerInterceptors where necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				if (interceptor instanceof MappedInterceptor) {_					mappedInterceptors.add((MappedInterceptor) interceptor)__				}_				else {_					adaptedInterceptors.add(adaptInterceptor(interceptor))__				}_			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,handler,interceptors,where,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,else,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1356735495;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and adapting_HandlerInterceptors where necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				if (interceptor instanceof MappedInterceptor) {_					mappedInterceptors.add((MappedInterceptor) interceptor)__				}_				else {_					adaptedInterceptors.add(adaptInterceptor(interceptor))__				}_			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,handler,interceptors,where,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,else,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1357119239;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and adapting_HandlerInterceptors where necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				if (interceptor instanceof MappedInterceptor) {_					mappedInterceptors.add((MappedInterceptor) interceptor)__				}_				else {_					adaptedInterceptors.add(adaptInterceptor(interceptor))__				}_			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,handler,interceptors,where,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,else,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1362408075;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and adapting_HandlerInterceptors where necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				if (interceptor instanceof MappedInterceptor) {_					mappedInterceptors.add((MappedInterceptor) interceptor)__				}_				else {_					adaptedInterceptors.add(adaptInterceptor(interceptor))__				}_			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,handler,interceptors,where,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,else,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1368482696;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and adapting_HandlerInterceptors where necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				if (interceptor instanceof MappedInterceptor) {_					mappedInterceptors.add((MappedInterceptor) interceptor)__				}_				else {_					adaptedInterceptors.add(adaptInterceptor(interceptor))__				}_			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,handler,interceptors,where,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,else,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1368581529;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and adapting_HandlerInterceptors where necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				if (interceptor instanceof MappedInterceptor) {_					mappedInterceptors.add((MappedInterceptor) interceptor)__				}_				else {_					adaptedInterceptors.add(adaptInterceptor(interceptor))__				}_			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,handler,interceptors,where,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,else,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1394840766;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				if (interceptor instanceof MappedInterceptor) {_					this.mappedInterceptors.add((MappedInterceptor) interceptor)__				}_				else {_					this.adaptedInterceptors.add(adaptInterceptor(interceptor))__				}_			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,if,interceptor,instanceof,mapped,interceptor,this,mapped,interceptors,add,mapped,interceptor,interceptor,else,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1427983931;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				if (interceptor instanceof MappedInterceptor) {_					this.mappedInterceptors.add((MappedInterceptor) interceptor)__				}_				else {_					this.adaptedInterceptors.add(adaptInterceptor(interceptor))__				}_			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,if,interceptor,instanceof,mapped,interceptor,this,mapped,interceptors,add,mapped,interceptor,interceptor,else,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1430734105;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				if (interceptor instanceof MappedInterceptor) {_					this.mappedInterceptors.add((MappedInterceptor) interceptor)__				}_				else {_					this.adaptedInterceptors.add(adaptInterceptor(interceptor))__				}_			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,if,interceptor,instanceof,mapped,interceptor,this,mapped,interceptors,add,mapped,interceptor,interceptor,else,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1431730371;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				if (interceptor instanceof MappedInterceptor) {_					this.mappedInterceptors.add((MappedInterceptor) interceptor)__				}_				else {_					this.adaptedInterceptors.add(adaptInterceptor(interceptor))__				}_			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,if,interceptor,instanceof,mapped,interceptor,this,mapped,interceptors,add,mapped,interceptor,interceptor,else,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1431966054;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				if (interceptor instanceof MappedInterceptor) {_					this.mappedInterceptors.add((MappedInterceptor) interceptor)__				}_				else {_					this.adaptedInterceptors.add(adaptInterceptor(interceptor))__				}_			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,if,interceptor,instanceof,mapped,interceptor,this,mapped,interceptors,add,mapped,interceptor,interceptor,else,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1432032520;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.handlerInterceptors.add(adaptInterceptor(interceptor))__			}_		}_		this.handlerInterceptors.addAll(this.detectedMappedInterceptors)__		this.interceptors.clear()__	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,handler,interceptors,add,adapt,interceptor,interceptor,this,handler,interceptors,add,all,this,detected,mapped,interceptors,this,interceptors,clear
AbstractHandlerMapping -> protected void initInterceptors();1432064452;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1432857824;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1436473186;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1437382044;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1438251419;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1467051782;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1467730834;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1471517882;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1472031618;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1476136811;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1486634978;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1486635693;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1495868221;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1496837955;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1498780456;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1500043922;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1500448076;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1502974979;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1519295386;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1522448444;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1529361191;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1529948549;Initialize the specified interceptors, checking for {@link MappedInterceptor}s and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,s,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1530174524;Initialize the specified interceptors, checking for {@link MappedInterceptor MappedInterceptors} and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor HandlerInterceptor}s and {@link WebRequestInterceptors} if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,mapped,interceptors,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,handler,interceptor,s,and,link,web,request,interceptors,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1530174524;Initialize the specified interceptors, checking for {@link MappedInterceptor MappedInterceptors} and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor HandlerInterceptor}s and {@link WebRequestInterceptors} if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,mapped,interceptors,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,handler,interceptor,s,and,link,web,request,interceptors,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> protected void initInterceptors();1533715735;Initialize the specified interceptors, checking for {@link MappedInterceptor MappedInterceptors} and_adapting {@link HandlerInterceptor}s and {@link WebRequestInterceptor HandlerInterceptor}s and_{@link WebRequestInterceptor}s if necessary._@see #setInterceptors_@see #adaptInterceptor;protected void initInterceptors() {_		if (!this.interceptors.isEmpty()) {_			for (int i = 0_ i < this.interceptors.size()_ i++) {_				Object interceptor = this.interceptors.get(i)__				if (interceptor == null) {_					throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null")__				}_				this.adaptedInterceptors.add(adaptInterceptor(interceptor))__			}_		}_	};initialize,the,specified,interceptors,checking,for,link,mapped,interceptor,mapped,interceptors,and,adapting,link,handler,interceptor,s,and,link,web,request,interceptor,handler,interceptor,s,and,link,web,request,interceptor,s,if,necessary,see,set,interceptors,see,adapt,interceptor;protected,void,init,interceptors,if,this,interceptors,is,empty,for,int,i,0,i,this,interceptors,size,i,object,interceptor,this,interceptors,get,i,if,interceptor,null,throw,new,illegal,argument,exception,entry,number,i,in,interceptors,array,is,null,this,adapted,interceptors,add,adapt,interceptor,interceptor
AbstractHandlerMapping -> public Object getDefaultHandler();1328020251;Return the default handler for this handler mapping,_or <code>null</code> if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,code,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1346174472;Return the default handler for this handler mapping,_or <code>null</code> if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,code,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1356735495;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1357119239;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1362408075;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1368482696;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1368581529;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1394840766;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1427983931;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1430734105;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1431730371;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1431966054;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1432032520;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1432064452;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1432857824;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1436473186;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1437382044;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1438251419;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1467051782;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1467730834;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1471517882;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1472031618;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1476136811;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1486634978;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> public Object getDefaultHandler();1486635693;Return the default handler for this handler mapping,_or {@code null} if none.;public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors);1328020251;Detects beans of type {@link MappedInterceptor} and adds them to the list of mapped interceptors._This is done in addition to any {@link MappedInterceptor}s that may have been provided via_{@link #setInterceptors(Object[])}. Subclasses can override this method to change that.__@param mappedInterceptors an empty list to add MappedInterceptor types to;protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(),MappedInterceptor.class, true, false).values())__	};detects,beans,of,type,link,mapped,interceptor,and,adds,them,to,the,list,of,mapped,interceptors,this,is,done,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,object,subclasses,can,override,this,method,to,change,that,param,mapped,interceptors,an,empty,list,to,add,mapped,interceptor,types,to;protected,void,detect,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors);1346174472;Detects beans of type {@link MappedInterceptor} and adds them to the list of mapped interceptors._This is done in addition to any {@link MappedInterceptor}s that may have been provided via_{@link #setInterceptors(Object[])}. Subclasses can override this method to change that.__@param mappedInterceptors an empty list to add MappedInterceptor types to;protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(),MappedInterceptor.class, true, false).values())__	};detects,beans,of,type,link,mapped,interceptor,and,adds,them,to,the,list,of,mapped,interceptors,this,is,done,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,object,subclasses,can,override,this,method,to,change,that,param,mapped,interceptors,an,empty,list,to,add,mapped,interceptor,types,to;protected,void,detect,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors);1356735495;Detects beans of type {@link MappedInterceptor} and adds them to the list of mapped interceptors._This is done in addition to any {@link MappedInterceptor}s that may have been provided via_{@link #setInterceptors(Object[])}. Subclasses can override this method to change that.__@param mappedInterceptors an empty list to add MappedInterceptor types to;protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(),MappedInterceptor.class, true, false).values())__	};detects,beans,of,type,link,mapped,interceptor,and,adds,them,to,the,list,of,mapped,interceptors,this,is,done,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,object,subclasses,can,override,this,method,to,change,that,param,mapped,interceptors,an,empty,list,to,add,mapped,interceptor,types,to;protected,void,detect,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors);1357119239;Detects beans of type {@link MappedInterceptor} and adds them to the list of mapped interceptors._This is done in addition to any {@link MappedInterceptor}s that may have been provided via_{@link #setInterceptors(Object[])}. Subclasses can override this method to change that.__@param mappedInterceptors an empty list to add MappedInterceptor types to;protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(),MappedInterceptor.class, true, false).values())__	};detects,beans,of,type,link,mapped,interceptor,and,adds,them,to,the,list,of,mapped,interceptors,this,is,done,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,object,subclasses,can,override,this,method,to,change,that,param,mapped,interceptors,an,empty,list,to,add,mapped,interceptor,types,to;protected,void,detect,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors);1362408075;Detects beans of type {@link MappedInterceptor} and adds them to the list of mapped interceptors._This is done in addition to any {@link MappedInterceptor}s that may have been provided via_{@link #setInterceptors(Object[])}. Subclasses can override this method to change that.__@param mappedInterceptors an empty list to add MappedInterceptor types to;protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(),MappedInterceptor.class, true, false).values())__	};detects,beans,of,type,link,mapped,interceptor,and,adds,them,to,the,list,of,mapped,interceptors,this,is,done,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,object,subclasses,can,override,this,method,to,change,that,param,mapped,interceptors,an,empty,list,to,add,mapped,interceptor,types,to;protected,void,detect,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors);1368482696;Detects beans of type {@link MappedInterceptor} and adds them to the list of mapped interceptors._This is done in addition to any {@link MappedInterceptor}s that may have been provided via_{@link #setInterceptors(Object[])}. Subclasses can override this method to change that.__@param mappedInterceptors an empty list to add MappedInterceptor types to;protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(),MappedInterceptor.class, true, false).values())__	};detects,beans,of,type,link,mapped,interceptor,and,adds,them,to,the,list,of,mapped,interceptors,this,is,done,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,object,subclasses,can,override,this,method,to,change,that,param,mapped,interceptors,an,empty,list,to,add,mapped,interceptor,types,to;protected,void,detect,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors);1368581529;Detects beans of type {@link MappedInterceptor} and adds them to the list of mapped interceptors._This is done in addition to any {@link MappedInterceptor}s that may have been provided via_{@link #setInterceptors(Object[])}. Subclasses can override this method to change that.__@param mappedInterceptors an empty list to add MappedInterceptor types to;protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(),MappedInterceptor.class, true, false).values())__	};detects,beans,of,type,link,mapped,interceptor,and,adds,them,to,the,list,of,mapped,interceptors,this,is,done,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,object,subclasses,can,override,this,method,to,change,that,param,mapped,interceptors,an,empty,list,to,add,mapped,interceptor,types,to;protected,void,detect,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors);1394840766;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors);1427983931;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors);1430734105;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors);1431730371;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors);1431966054;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors);1432032520;Detect beans of type {@link MappedInterceptor} and add them to the list of mapped interceptors._<p>This is called in addition to any {@link MappedInterceptor}s that may have been provided_via {@link #setInterceptors}, by default adding all beans of type {@link MappedInterceptor}_from the current context and its ancestors. Subclasses can override and refine this policy._@param mappedInterceptors an empty list to add {@link MappedInterceptor} instances to;protected void detectMappedInterceptors(List<MappedInterceptor> mappedInterceptors) {_		mappedInterceptors.addAll(_				BeanFactoryUtils.beansOfTypeIncludingAncestors(_						getApplicationContext(), MappedInterceptor.class, true, false).values())__	};detect,beans,of,type,link,mapped,interceptor,and,add,them,to,the,list,of,mapped,interceptors,p,this,is,called,in,addition,to,any,link,mapped,interceptor,s,that,may,have,been,provided,via,link,set,interceptors,by,default,adding,all,beans,of,type,link,mapped,interceptor,from,the,current,context,and,its,ancestors,subclasses,can,override,and,refine,this,policy,param,mapped,interceptors,an,empty,list,to,add,link,mapped,interceptor,instances,to;protected,void,detect,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,mapped,interceptors,add,all,bean,factory,utils,beans,of,type,including,ancestors,get,application,context,mapped,interceptor,class,true,false,values
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1328020251;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1346174472;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1356735495;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1357119239;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1362408075;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1368482696;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1368581529;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1394840766;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1427983931;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1430734105;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1431730371;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1431966054;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1432032520;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1432064452;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1432857824;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1436473186;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		this.corsMapping.setPathMatcher(pathMatcher)__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,this,cors,mapping,set,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1437382044;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		this.corsConfigSource.setPathMatcher(pathMatcher)__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,this,cors,config,source,set,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1438251419;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		this.corsConfigSource.setPathMatcher(pathMatcher)__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,this,cors,config,source,set,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1467051782;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		this.corsConfigSource.setPathMatcher(pathMatcher)__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,this,cors,config,source,set,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1467730834;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		this.corsConfigSource.setPathMatcher(pathMatcher)__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,this,cors,config,source,set,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1471517882;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		this.corsConfigSource.setPathMatcher(pathMatcher)__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,this,cors,config,source,set,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1472031618;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		this.corsConfigSource.setPathMatcher(pathMatcher)__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,this,cors,config,source,set,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1476136811;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		this.globalCorsConfigSource.setPathMatcher(pathMatcher)__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,this,global,cors,config,source,set,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1486634978;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		this.globalCorsConfigSource.setPathMatcher(pathMatcher)__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,this,global,cors,config,source,set,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1486635693;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		this.globalCorsConfigSource.setPathMatcher(pathMatcher)__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,this,global,cors,config,source,set,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1495868221;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		this.globalCorsConfigSource.setPathMatcher(pathMatcher)__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,this,global,cors,config,source,set,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1496837955;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		this.globalCorsConfigSource.setPathMatcher(pathMatcher)__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,this,global,cors,config,source,set,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1498780456;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		this.globalCorsConfigSource.setPathMatcher(pathMatcher)__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,this,global,cors,config,source,set,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1500043922;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		this.globalCorsConfigSource.setPathMatcher(pathMatcher)__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,this,global,cors,config,source,set,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1500448076;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		this.globalCorsConfigSource.setPathMatcher(pathMatcher)__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,this,global,cors,config,source,set,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1502974979;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		this.globalCorsConfigSource.setPathMatcher(pathMatcher)__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,this,global,cors,config,source,set,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1519295386;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		this.globalCorsConfigSource.setPathMatcher(pathMatcher)__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,this,global,cors,config,source,set,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1522448444;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		this.globalCorsConfigSource.setPathMatcher(pathMatcher)__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,this,global,cors,config,source,set,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1529361191;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		this.globalCorsConfigSource.setPathMatcher(pathMatcher)__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,this,global,cors,config,source,set,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1529948549;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		this.globalCorsConfigSource.setPathMatcher(pathMatcher)__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,this,global,cors,config,source,set,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1530174524;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		this.globalCorsConfigSource.setPathMatcher(pathMatcher)__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,this,global,cors,config,source,set,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1530174524;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		this.globalCorsConfigSource.setPathMatcher(pathMatcher)__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,this,global,cors,config,source,set,path,matcher,path,matcher
AbstractHandlerMapping -> public void setPathMatcher(PathMatcher pathMatcher);1533715735;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public void setPathMatcher(PathMatcher pathMatcher) {_		Assert.notNull(pathMatcher, "PathMatcher must not be null")__		this.pathMatcher = pathMatcher__		if (this.corsConfigurationSource instanceof UrlBasedCorsConfigurationSource) {_			((UrlBasedCorsConfigurationSource)this.corsConfigurationSource).setPathMatcher(pathMatcher)__		}_	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,void,set,path,matcher,path,matcher,path,matcher,assert,not,null,path,matcher,path,matcher,must,not,be,null,this,path,matcher,path,matcher,if,this,cors,configuration,source,instanceof,url,based,cors,configuration,source,url,based,cors,configuration,source,this,cors,configuration,source,set,path,matcher,path,matcher
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, @Nullable CorsConfiguration config);1495868221;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration, possibly {@code null}_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, @Nullable CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,nullable,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, @Nullable CorsConfiguration config);1496837955;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration (possibly {@code null})_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, @Nullable CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,nullable,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, @Nullable CorsConfiguration config);1498780456;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration (possibly {@code null})_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, @Nullable CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,nullable,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, @Nullable CorsConfiguration config);1500043922;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration (possibly {@code null})_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, @Nullable CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,nullable,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, @Nullable CorsConfiguration config);1500448076;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration (possibly {@code null})_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, @Nullable CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,nullable,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, @Nullable CorsConfiguration config);1502974979;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration (possibly {@code null})_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, @Nullable CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,nullable,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, @Nullable CorsConfiguration config);1519295386;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration (possibly {@code null})_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, @Nullable CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,nullable,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, @Nullable CorsConfiguration config);1522448444;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration (possibly {@code null})_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, @Nullable CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,nullable,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, @Nullable CorsConfiguration config);1529361191;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration (possibly {@code null})_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, @Nullable CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,nullable,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, @Nullable CorsConfiguration config);1529948549;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration (possibly {@code null})_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, @Nullable CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,nullable,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, @Nullable CorsConfiguration config);1530174524;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration (possibly {@code null})_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, @Nullable CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,nullable,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, @Nullable CorsConfiguration config);1530174524;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration (possibly {@code null})_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, @Nullable CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,nullable,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, @Nullable CorsConfiguration config);1533715735;Update the HandlerExecutionChain for CORS-related handling._<p>For pre-flight requests, the default implementation replaces the selected_handler with a simple HttpRequestHandler that invokes the configured_{@link #setCorsProcessor}._<p>For actual requests, the default implementation inserts a_HandlerInterceptor that makes CORS-related checks and adds CORS headers._@param request the current request_@param chain the handler chain_@param config the applicable CORS configuration (possibly {@code null})_@since 4.2;protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,_			HandlerExecutionChain chain, @Nullable CorsConfiguration config) {__		if (CorsUtils.isPreFlightRequest(request)) {_			HandlerInterceptor[] interceptors = chain.getInterceptors()__			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors)__		}_		else {_			chain.addInterceptor(new CorsInterceptor(config))__		}_		return chain__	};update,the,handler,execution,chain,for,cors,related,handling,p,for,pre,flight,requests,the,default,implementation,replaces,the,selected,handler,with,a,simple,http,request,handler,that,invokes,the,configured,link,set,cors,processor,p,for,actual,requests,the,default,implementation,inserts,a,handler,interceptor,that,makes,cors,related,checks,and,adds,cors,headers,param,request,the,current,request,param,chain,the,handler,chain,param,config,the,applicable,cors,configuration,possibly,code,null,since,4,2;protected,handler,execution,chain,get,cors,handler,execution,chain,http,servlet,request,request,handler,execution,chain,chain,nullable,cors,configuration,config,if,cors,utils,is,pre,flight,request,request,handler,interceptor,interceptors,chain,get,interceptors,chain,new,handler,execution,chain,new,pre,flight,handler,config,interceptors,else,chain,add,interceptor,new,cors,interceptor,config,return,chain
AbstractHandlerMapping -> public void setOrder(int order);1522448444;Specify the order value for this HandlerMapping bean._<p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered._@see org.springframework.core.Ordered#getOrder();public void setOrder(int order) {_		this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,the,default,value,is,code,ordered,meaning,non,ordered,see,org,springframework,core,ordered,get,order;public,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public void setOrder(int order);1529361191;Specify the order value for this HandlerMapping bean._<p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered._@see org.springframework.core.Ordered#getOrder();public void setOrder(int order) {_		this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,the,default,value,is,code,ordered,meaning,non,ordered,see,org,springframework,core,ordered,get,order;public,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public void setOrder(int order);1529948549;Specify the order value for this HandlerMapping bean._<p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered._@see org.springframework.core.Ordered#getOrder();public void setOrder(int order) {_		this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,the,default,value,is,code,ordered,meaning,non,ordered,see,org,springframework,core,ordered,get,order;public,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public void setOrder(int order);1530174524;Specify the order value for this HandlerMapping bean._<p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered._@see org.springframework.core.Ordered#getOrder();public void setOrder(int order) {_		this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,the,default,value,is,code,ordered,meaning,non,ordered,see,org,springframework,core,ordered,get,order;public,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public void setOrder(int order);1530174524;Specify the order value for this HandlerMapping bean._<p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered._@see org.springframework.core.Ordered#getOrder();public void setOrder(int order) {_		this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,the,default,value,is,code,ordered,meaning,non,ordered,see,org,springframework,core,ordered,get,order;public,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> public void setOrder(int order);1533715735;Specify the order value for this HandlerMapping bean._<p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered._@see org.springframework.core.Ordered#getOrder();public void setOrder(int order) {_		this.order = order__	};specify,the,order,value,for,this,handler,mapping,bean,p,the,default,value,is,code,ordered,meaning,non,ordered,see,org,springframework,core,ordered,get,order;public,void,set,order,int,order,this,order,order
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1328020251;Build a HandlerExecutionChain for the given handler, including applicable interceptors._<p>The default implementation simply builds a standard HandlerExecutionChain with_the given handler, the handler mapping's common interceptors, and any {@link MappedInterceptor}s_matching to the current request URL. Subclasses may_override this in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a pre-built_HandlerExecutionChain. This method should handle those two cases explicitly,_either building a new HandlerExecutionChain or extending the existing chain._<p>For simply adding an interceptor, consider calling <code>super.getHandlerExecutionChain</code>_and invoking {@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never <code>null</code>)_@param request current HTTP request_@return the HandlerExecutionChain (never <code>null</code>)_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = _			(handler instanceof HandlerExecutionChain) ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler)__				_		chain.addInterceptors(getAdaptedInterceptors())__		_		String lookupPath = urlPathHelper.getLookupPathForRequest(request)__		for (MappedInterceptor mappedInterceptor : mappedInterceptors) {_			if (mappedInterceptor.matches(lookupPath, pathMatcher)) {_				chain.addInterceptor(mappedInterceptor.getInterceptor())__			}_		}_		_		return chain__	};build,a,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,simply,builds,a,standard,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,consider,calling,code,super,get,handler,execution,chain,code,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,code,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,code,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,chain,add,interceptors,get,adapted,interceptors,string,lookup,path,url,path,helper,get,lookup,path,for,request,request,for,mapped,interceptor,mapped,interceptor,mapped,interceptors,if,mapped,interceptor,matches,lookup,path,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1346174472;Build a HandlerExecutionChain for the given handler, including applicable interceptors._<p>The default implementation simply builds a standard HandlerExecutionChain with_the given handler, the handler mapping's common interceptors, and any {@link MappedInterceptor}s_matching to the current request URL. Subclasses may_override this in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a pre-built_HandlerExecutionChain. This method should handle those two cases explicitly,_either building a new HandlerExecutionChain or extending the existing chain._<p>For simply adding an interceptor, consider calling <code>super.getHandlerExecutionChain</code>_and invoking {@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never <code>null</code>)_@param request current HTTP request_@return the HandlerExecutionChain (never <code>null</code>)_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain =_			(handler instanceof HandlerExecutionChain) ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler)___		chain.addInterceptors(getAdaptedInterceptors())___		String lookupPath = urlPathHelper.getLookupPathForRequest(request)__		for (MappedInterceptor mappedInterceptor : mappedInterceptors) {_			if (mappedInterceptor.matches(lookupPath, pathMatcher)) {_				chain.addInterceptor(mappedInterceptor.getInterceptor())__			}_		}__		return chain__	};build,a,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,simply,builds,a,standard,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,consider,calling,code,super,get,handler,execution,chain,code,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,code,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,code,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,chain,add,interceptors,get,adapted,interceptors,string,lookup,path,url,path,helper,get,lookup,path,for,request,request,for,mapped,interceptor,mapped,interceptor,mapped,interceptors,if,mapped,interceptor,matches,lookup,path,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1356735495;Build a HandlerExecutionChain for the given handler, including applicable interceptors._<p>The default implementation simply builds a standard HandlerExecutionChain with_the given handler, the handler mapping's common interceptors, and any {@link MappedInterceptor}s_matching to the current request URL. Subclasses may_override this in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a pre-built_HandlerExecutionChain. This method should handle those two cases explicitly,_either building a new HandlerExecutionChain or extending the existing chain._<p>For simply adding an interceptor, consider calling {@code super.getHandlerExecutionChain}_and invoking {@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain =_			(handler instanceof HandlerExecutionChain) ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler)___		chain.addInterceptors(getAdaptedInterceptors())___		String lookupPath = urlPathHelper.getLookupPathForRequest(request)__		for (MappedInterceptor mappedInterceptor : mappedInterceptors) {_			if (mappedInterceptor.matches(lookupPath, pathMatcher)) {_				chain.addInterceptor(mappedInterceptor.getInterceptor())__			}_		}__		return chain__	};build,a,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,simply,builds,a,standard,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,consider,calling,code,super,get,handler,execution,chain,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,chain,add,interceptors,get,adapted,interceptors,string,lookup,path,url,path,helper,get,lookup,path,for,request,request,for,mapped,interceptor,mapped,interceptor,mapped,interceptors,if,mapped,interceptor,matches,lookup,path,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1357119239;Build a HandlerExecutionChain for the given handler, including applicable interceptors._<p>The default implementation simply builds a standard HandlerExecutionChain with_the given handler, the handler mapping's common interceptors, and any {@link MappedInterceptor}s_matching to the current request URL. Subclasses may_override this in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a pre-built_HandlerExecutionChain. This method should handle those two cases explicitly,_either building a new HandlerExecutionChain or extending the existing chain._<p>For simply adding an interceptor, consider calling {@code super.getHandlerExecutionChain}_and invoking {@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain =_			(handler instanceof HandlerExecutionChain) ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler)___		chain.addInterceptors(getAdaptedInterceptors())___		String lookupPath = urlPathHelper.getLookupPathForRequest(request)__		for (MappedInterceptor mappedInterceptor : mappedInterceptors) {_			if (mappedInterceptor.matches(lookupPath, pathMatcher)) {_				chain.addInterceptor(mappedInterceptor.getInterceptor())__			}_		}__		return chain__	};build,a,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,simply,builds,a,standard,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,consider,calling,code,super,get,handler,execution,chain,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,chain,add,interceptors,get,adapted,interceptors,string,lookup,path,url,path,helper,get,lookup,path,for,request,request,for,mapped,interceptor,mapped,interceptor,mapped,interceptors,if,mapped,interceptor,matches,lookup,path,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1362408075;Build a HandlerExecutionChain for the given handler, including applicable interceptors._<p>The default implementation simply builds a standard HandlerExecutionChain with_the given handler, the handler mapping's common interceptors, and any {@link MappedInterceptor}s_matching to the current request URL. Subclasses may_override this in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a pre-built_HandlerExecutionChain. This method should handle those two cases explicitly,_either building a new HandlerExecutionChain or extending the existing chain._<p>For simply adding an interceptor, consider calling {@code super.getHandlerExecutionChain}_and invoking {@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain =_			(handler instanceof HandlerExecutionChain) ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler)___		chain.addInterceptors(getAdaptedInterceptors())___		String lookupPath = urlPathHelper.getLookupPathForRequest(request)__		for (MappedInterceptor mappedInterceptor : mappedInterceptors) {_			if (mappedInterceptor.matches(lookupPath, pathMatcher)) {_				chain.addInterceptor(mappedInterceptor.getInterceptor())__			}_		}__		return chain__	};build,a,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,simply,builds,a,standard,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,consider,calling,code,super,get,handler,execution,chain,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,chain,add,interceptors,get,adapted,interceptors,string,lookup,path,url,path,helper,get,lookup,path,for,request,request,for,mapped,interceptor,mapped,interceptor,mapped,interceptors,if,mapped,interceptor,matches,lookup,path,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1368482696;Build a HandlerExecutionChain for the given handler, including applicable interceptors._<p>The default implementation simply builds a standard HandlerExecutionChain with_the given handler, the handler mapping's common interceptors, and any {@link MappedInterceptor}s_matching to the current request URL. Subclasses may_override this in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a pre-built_HandlerExecutionChain. This method should handle those two cases explicitly,_either building a new HandlerExecutionChain or extending the existing chain._<p>For simply adding an interceptor, consider calling {@code super.getHandlerExecutionChain}_and invoking {@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain =_			(handler instanceof HandlerExecutionChain) ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler)___		chain.addInterceptors(getAdaptedInterceptors())___		String lookupPath = urlPathHelper.getLookupPathForRequest(request)__		for (MappedInterceptor mappedInterceptor : mappedInterceptors) {_			if (mappedInterceptor.matches(lookupPath, pathMatcher)) {_				chain.addInterceptor(mappedInterceptor.getInterceptor())__			}_		}__		return chain__	};build,a,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,simply,builds,a,standard,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,consider,calling,code,super,get,handler,execution,chain,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,chain,add,interceptors,get,adapted,interceptors,string,lookup,path,url,path,helper,get,lookup,path,for,request,request,for,mapped,interceptor,mapped,interceptor,mapped,interceptors,if,mapped,interceptor,matches,lookup,path,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1368581529;Build a HandlerExecutionChain for the given handler, including applicable interceptors._<p>The default implementation simply builds a standard HandlerExecutionChain with_the given handler, the handler mapping's common interceptors, and any {@link MappedInterceptor}s_matching to the current request URL. Subclasses may_override this in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a pre-built_HandlerExecutionChain. This method should handle those two cases explicitly,_either building a new HandlerExecutionChain or extending the existing chain._<p>For simply adding an interceptor, consider calling {@code super.getHandlerExecutionChain}_and invoking {@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain =_			(handler instanceof HandlerExecutionChain) ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler)___		chain.addInterceptors(getAdaptedInterceptors())___		String lookupPath = urlPathHelper.getLookupPathForRequest(request)__		for (MappedInterceptor mappedInterceptor : mappedInterceptors) {_			if (mappedInterceptor.matches(lookupPath, pathMatcher)) {_				chain.addInterceptor(mappedInterceptor.getInterceptor())__			}_		}__		return chain__	};build,a,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,simply,builds,a,standard,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,consider,calling,code,super,get,handler,execution,chain,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,chain,add,interceptors,get,adapted,interceptors,string,lookup,path,url,path,helper,get,lookup,path,for,request,request,for,mapped,interceptor,mapped,interceptor,mapped,interceptors,if,mapped,interceptor,matches,lookup,path,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1394840766;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Subclasses_may override this in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))__		chain.addInterceptors(getAdaptedInterceptors())___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (MappedInterceptor mappedInterceptor : this.mappedInterceptors) {_			if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_				chain.addInterceptor(mappedInterceptor.getInterceptor())__			}_		}__		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,chain,add,interceptors,get,adapted,interceptors,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,mapped,interceptor,mapped,interceptor,this,mapped,interceptors,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1427983931;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Subclasses_may override this in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))__		chain.addInterceptors(getAdaptedInterceptors())___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (MappedInterceptor mappedInterceptor : this.mappedInterceptors) {_			if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_				chain.addInterceptor(mappedInterceptor.getInterceptor())__			}_		}__		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,chain,add,interceptors,get,adapted,interceptors,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,mapped,interceptor,mapped,interceptor,this,mapped,interceptors,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1430734105;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Subclasses_may override this in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))__		chain.addInterceptors(getAdaptedInterceptors())___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (MappedInterceptor mappedInterceptor : this.mappedInterceptors) {_			if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_				chain.addInterceptor(mappedInterceptor.getInterceptor())__			}_		}__		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,chain,add,interceptors,get,adapted,interceptors,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,mapped,interceptor,mapped,interceptor,this,mapped,interceptors,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1431730371;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Subclasses_may override this in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))__		chain.addInterceptors(getAdaptedInterceptors())___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (MappedInterceptor mappedInterceptor : this.mappedInterceptors) {_			if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_				chain.addInterceptor(mappedInterceptor.getInterceptor())__			}_		}__		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,chain,add,interceptors,get,adapted,interceptors,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,mapped,interceptor,mapped,interceptor,this,mapped,interceptors,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1431966054;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Subclasses_may override this in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))__		chain.addInterceptors(getAdaptedInterceptors())___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (MappedInterceptor mappedInterceptor : this.mappedInterceptors) {_			if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_				chain.addInterceptor(mappedInterceptor.getInterceptor())__			}_		}__		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,chain,add,interceptors,get,adapted,interceptors,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,mapped,interceptor,mapped,interceptor,this,mapped,interceptors,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1432032520;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.handlerInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,handler,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1432064452;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1432857824;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1436473186;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1437382044;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1438251419;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1467051782;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1467730834;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1471517882;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1472031618;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1476136811;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1486634978;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1486635693;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1495868221;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1496837955;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1498780456;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1500043922;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1500448076;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1502974979;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1519295386;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1522448444;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1529361191;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1529948549;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor}s matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,s,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1530174524;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor MappedInterceptors} matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,mapped,interceptors,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1530174524;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor MappedInterceptors} matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,mapped,interceptors,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request);1533715735;Build a {@link HandlerExecutionChain} for the given handler, including_applicable interceptors._<p>The default implementation builds a standard {@link HandlerExecutionChain}_with the given handler, the handler mapping's common interceptors, and any_{@link MappedInterceptor MappedInterceptors} matching to the current request URL. Interceptors_are added in the order they were registered. Subclasses may override this_in order to extend/rearrange the list of interceptors._<p><b>NOTE:</b> The passed-in handler object may be a raw handler or a_pre-built {@link HandlerExecutionChain}. This method should handle those_two cases explicitly, either building a new {@link HandlerExecutionChain}_or extending the existing chain._<p>For simply adding an interceptor in a custom subclass, consider calling_{@code super.getHandlerExecutionChain(handler, request)} and invoking_{@link HandlerExecutionChain#addInterceptor} on the returned chain object._@param handler the resolved handler instance (never {@code null})_@param request current HTTP request_@return the HandlerExecutionChain (never {@code null})_@see #getAdaptedInterceptors();protected HandlerExecutionChain getHandlerExecutionChain(Object handler, HttpServletRequest request) {_		HandlerExecutionChain chain = (handler instanceof HandlerExecutionChain ?_				(HandlerExecutionChain) handler : new HandlerExecutionChain(handler))___		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				MappedInterceptor mappedInterceptor = (MappedInterceptor) interceptor__				if (mappedInterceptor.matches(lookupPath, this.pathMatcher)) {_					chain.addInterceptor(mappedInterceptor.getInterceptor())__				}_			}_			else {_				chain.addInterceptor(interceptor)__			}_		}_		return chain__	};build,a,link,handler,execution,chain,for,the,given,handler,including,applicable,interceptors,p,the,default,implementation,builds,a,standard,link,handler,execution,chain,with,the,given,handler,the,handler,mapping,s,common,interceptors,and,any,link,mapped,interceptor,mapped,interceptors,matching,to,the,current,request,url,interceptors,are,added,in,the,order,they,were,registered,subclasses,may,override,this,in,order,to,extend,rearrange,the,list,of,interceptors,p,b,note,b,the,passed,in,handler,object,may,be,a,raw,handler,or,a,pre,built,link,handler,execution,chain,this,method,should,handle,those,two,cases,explicitly,either,building,a,new,link,handler,execution,chain,or,extending,the,existing,chain,p,for,simply,adding,an,interceptor,in,a,custom,subclass,consider,calling,code,super,get,handler,execution,chain,handler,request,and,invoking,link,handler,execution,chain,add,interceptor,on,the,returned,chain,object,param,handler,the,resolved,handler,instance,never,code,null,param,request,current,http,request,return,the,handler,execution,chain,never,code,null,see,get,adapted,interceptors;protected,handler,execution,chain,get,handler,execution,chain,object,handler,http,servlet,request,request,handler,execution,chain,chain,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,new,handler,execution,chain,handler,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptor,mapped,interceptor,mapped,interceptor,interceptor,if,mapped,interceptor,matches,lookup,path,this,path,matcher,chain,add,interceptor,mapped,interceptor,get,interceptor,else,chain,add,interceptor,interceptor,return,chain
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfiguration();1431966054;Get the CORS configuration.;public Map<String, CorsConfiguration> getCorsConfiguration() {_		return this.corsConfiguration__	};get,the,cors,configuration;public,map,string,cors,configuration,get,cors,configuration,return,this,cors,configuration
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfiguration();1432032520;Get the CORS configuration.;public Map<String, CorsConfiguration> getCorsConfiguration() {_		return this.corsConfiguration__	};get,the,cors,configuration;public,map,string,cors,configuration,get,cors,configuration,return,this,cors,configuration
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfiguration();1432064452;Get the CORS configuration.;public Map<String, CorsConfiguration> getCorsConfiguration() {_		return this.corsConfiguration__	};get,the,cors,configuration;public,map,string,cors,configuration,get,cors,configuration,return,this,cors,configuration
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfiguration();1432857824;Get the CORS configuration.;public Map<String, CorsConfiguration> getCorsConfiguration() {_		return this.corsConfiguration__	};get,the,cors,configuration;public,map,string,cors,configuration,get,cors,configuration,return,this,cors,configuration
AbstractHandlerMapping -> @Nullable 	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1495868221;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler or {@code null}._@since 4.2;@Nullable_	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		if (handler instanceof HandlerExecutionChain) {_			handler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (handler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) handler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,since,4,2;nullable,protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,if,handler,instanceof,handler,execution,chain,handler,handler,execution,chain,handler,get,handler,if,handler,instanceof,cors,configuration,source,return,cors,configuration,source,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> @Nullable 	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1496837955;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler, or {@code null} if none_@since 4.2;@Nullable_	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		Object resolvedHandler = handler__		if (handler instanceof HandlerExecutionChain) {_			resolvedHandler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (resolvedHandler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) resolvedHandler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,if,none,since,4,2;nullable,protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,object,resolved,handler,handler,if,handler,instanceof,handler,execution,chain,resolved,handler,handler,execution,chain,handler,get,handler,if,resolved,handler,instanceof,cors,configuration,source,return,cors,configuration,source,resolved,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> @Nullable 	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1498780456;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler, or {@code null} if none_@since 4.2;@Nullable_	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		Object resolvedHandler = handler__		if (handler instanceof HandlerExecutionChain) {_			resolvedHandler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (resolvedHandler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) resolvedHandler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,if,none,since,4,2;nullable,protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,object,resolved,handler,handler,if,handler,instanceof,handler,execution,chain,resolved,handler,handler,execution,chain,handler,get,handler,if,resolved,handler,instanceof,cors,configuration,source,return,cors,configuration,source,resolved,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> @Nullable 	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1500043922;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler, or {@code null} if none_@since 4.2;@Nullable_	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		Object resolvedHandler = handler__		if (handler instanceof HandlerExecutionChain) {_			resolvedHandler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (resolvedHandler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) resolvedHandler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,if,none,since,4,2;nullable,protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,object,resolved,handler,handler,if,handler,instanceof,handler,execution,chain,resolved,handler,handler,execution,chain,handler,get,handler,if,resolved,handler,instanceof,cors,configuration,source,return,cors,configuration,source,resolved,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> @Nullable 	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1500448076;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler, or {@code null} if none_@since 4.2;@Nullable_	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		Object resolvedHandler = handler__		if (handler instanceof HandlerExecutionChain) {_			resolvedHandler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (resolvedHandler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) resolvedHandler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,if,none,since,4,2;nullable,protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,object,resolved,handler,handler,if,handler,instanceof,handler,execution,chain,resolved,handler,handler,execution,chain,handler,get,handler,if,resolved,handler,instanceof,cors,configuration,source,return,cors,configuration,source,resolved,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> @Nullable 	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1502974979;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler, or {@code null} if none_@since 4.2;@Nullable_	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		Object resolvedHandler = handler__		if (handler instanceof HandlerExecutionChain) {_			resolvedHandler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (resolvedHandler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) resolvedHandler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,if,none,since,4,2;nullable,protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,object,resolved,handler,handler,if,handler,instanceof,handler,execution,chain,resolved,handler,handler,execution,chain,handler,get,handler,if,resolved,handler,instanceof,cors,configuration,source,return,cors,configuration,source,resolved,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> @Nullable 	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1519295386;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler, or {@code null} if none_@since 4.2;@Nullable_	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		Object resolvedHandler = handler__		if (handler instanceof HandlerExecutionChain) {_			resolvedHandler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (resolvedHandler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) resolvedHandler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,if,none,since,4,2;nullable,protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,object,resolved,handler,handler,if,handler,instanceof,handler,execution,chain,resolved,handler,handler,execution,chain,handler,get,handler,if,resolved,handler,instanceof,cors,configuration,source,return,cors,configuration,source,resolved,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> @Nullable 	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1522448444;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler, or {@code null} if none_@since 4.2;@Nullable_	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		Object resolvedHandler = handler__		if (handler instanceof HandlerExecutionChain) {_			resolvedHandler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (resolvedHandler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) resolvedHandler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,if,none,since,4,2;nullable,protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,object,resolved,handler,handler,if,handler,instanceof,handler,execution,chain,resolved,handler,handler,execution,chain,handler,get,handler,if,resolved,handler,instanceof,cors,configuration,source,return,cors,configuration,source,resolved,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> @Nullable 	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1529361191;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler, or {@code null} if none_@since 4.2;@Nullable_	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		Object resolvedHandler = handler__		if (handler instanceof HandlerExecutionChain) {_			resolvedHandler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (resolvedHandler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) resolvedHandler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,if,none,since,4,2;nullable,protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,object,resolved,handler,handler,if,handler,instanceof,handler,execution,chain,resolved,handler,handler,execution,chain,handler,get,handler,if,resolved,handler,instanceof,cors,configuration,source,return,cors,configuration,source,resolved,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> @Nullable 	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1529948549;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler, or {@code null} if none_@since 4.2;@Nullable_	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		Object resolvedHandler = handler__		if (handler instanceof HandlerExecutionChain) {_			resolvedHandler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (resolvedHandler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) resolvedHandler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,if,none,since,4,2;nullable,protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,object,resolved,handler,handler,if,handler,instanceof,handler,execution,chain,resolved,handler,handler,execution,chain,handler,get,handler,if,resolved,handler,instanceof,cors,configuration,source,return,cors,configuration,source,resolved,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> @Nullable 	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1530174524;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler, or {@code null} if none_@since 4.2;@Nullable_	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		Object resolvedHandler = handler__		if (handler instanceof HandlerExecutionChain) {_			resolvedHandler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (resolvedHandler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) resolvedHandler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,if,none,since,4,2;nullable,protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,object,resolved,handler,handler,if,handler,instanceof,handler,execution,chain,resolved,handler,handler,execution,chain,handler,get,handler,if,resolved,handler,instanceof,cors,configuration,source,return,cors,configuration,source,resolved,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> @Nullable 	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1530174524;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler, or {@code null} if none_@since 4.2;@Nullable_	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		Object resolvedHandler = handler__		if (handler instanceof HandlerExecutionChain) {_			resolvedHandler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (resolvedHandler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) resolvedHandler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,if,none,since,4,2;nullable,protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,object,resolved,handler,handler,if,handler,instanceof,handler,execution,chain,resolved,handler,handler,execution,chain,handler,get,handler,if,resolved,handler,instanceof,cors,configuration,source,return,cors,configuration,source,resolved,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> @Nullable 	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1533715735;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler, or {@code null} if none_@since 4.2;@Nullable_	protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		Object resolvedHandler = handler__		if (handler instanceof HandlerExecutionChain) {_			resolvedHandler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (resolvedHandler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) resolvedHandler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,if,none,since,4,2;nullable,protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,object,resolved,handler,handler,if,handler,instanceof,handler,execution,chain,resolved,handler,handler,execution,chain,handler,get,handler,if,resolved,handler,instanceof,cors,configuration,source,return,cors,configuration,source,resolved,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> @Override 	@Nullable 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1502974979;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	@Nullable_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = obtainApplicationContext().getBean(handlerName)__		}__		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.globalCorsConfigSource.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,nullable,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,obtain,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,global,cors,config,source,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	@Nullable 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1519295386;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	@Nullable_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = obtainApplicationContext().getBean(handlerName)__		}__		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.globalCorsConfigSource.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,nullable,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,obtain,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,global,cors,config,source,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	@Nullable 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1522448444;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	@Nullable_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = obtainApplicationContext().getBean(handlerName)__		}__		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.globalCorsConfigSource.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,nullable,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,obtain,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,global,cors,config,source,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	@Nullable 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1529361191;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	@Nullable_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = obtainApplicationContext().getBean(handlerName)__		}__		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)___		if (logger.isTraceEnabled()) {_			logger.trace("Mapped to " + handler)__		}_		else if (logger.isDebugEnabled()) {_			logger.debug("Mapped to " + executionChain.getHandler())__		}__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.globalCorsConfigSource.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}__		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,nullable,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,obtain,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,logger,is,trace,enabled,logger,trace,mapped,to,handler,else,if,logger,is,debug,enabled,logger,debug,mapped,to,execution,chain,get,handler,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,global,cors,config,source,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	@Nullable 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1529948549;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	@Nullable_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = obtainApplicationContext().getBean(handlerName)__		}__		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)___		if (logger.isTraceEnabled()) {_			logger.trace("Mapped to " + handler)__		}_		else if (logger.isDebugEnabled() && !request.getDispatcherType().equals(DispatcherType.ASYNC)) {_			logger.debug("Mapped to " + executionChain.getHandler())__		}__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.globalCorsConfigSource.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}__		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,nullable,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,obtain,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,logger,is,trace,enabled,logger,trace,mapped,to,handler,else,if,logger,is,debug,enabled,request,get,dispatcher,type,equals,dispatcher,type,async,logger,debug,mapped,to,execution,chain,get,handler,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,global,cors,config,source,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	@Nullable 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1530174524;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	@Nullable_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = obtainApplicationContext().getBean(handlerName)__		}__		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)___		if (logger.isTraceEnabled()) {_			logger.trace("Mapped to " + handler)__		}_		else if (logger.isDebugEnabled() && !request.getDispatcherType().equals(DispatcherType.ASYNC)) {_			logger.debug("Mapped to " + executionChain.getHandler())__		}__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.globalCorsConfigSource.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}__		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,nullable,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,obtain,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,logger,is,trace,enabled,logger,trace,mapped,to,handler,else,if,logger,is,debug,enabled,request,get,dispatcher,type,equals,dispatcher,type,async,logger,debug,mapped,to,execution,chain,get,handler,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,global,cors,config,source,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	@Nullable 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1530174524;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	@Nullable_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = obtainApplicationContext().getBean(handlerName)__		}__		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)___		if (logger.isTraceEnabled()) {_			logger.trace("Mapped to " + handler)__		}_		else if (logger.isDebugEnabled() && !request.getDispatcherType().equals(DispatcherType.ASYNC)) {_			logger.debug("Mapped to " + executionChain.getHandler())__		}__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.globalCorsConfigSource.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}__		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,nullable,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,obtain,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,logger,is,trace,enabled,logger,trace,mapped,to,handler,else,if,logger,is,debug,enabled,request,get,dispatcher,type,equals,dispatcher,type,async,logger,debug,mapped,to,execution,chain,get,handler,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,global,cors,config,source,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	@Nullable 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1533715735;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	@Nullable_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = obtainApplicationContext().getBean(handlerName)__		}__		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)___		if (logger.isTraceEnabled()) {_			logger.trace("Mapped to " + handler)__		}_		else if (logger.isDebugEnabled() && !request.getDispatcherType().equals(DispatcherType.ASYNC)) {_			logger.debug("Mapped to " + executionChain.getHandler())__		}__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.corsConfigurationSource.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}__		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,nullable,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,obtain,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,logger,is,trace,enabled,logger,trace,mapped,to,handler,else,if,logger,is,debug,enabled,request,get,dispatcher,type,equals,dispatcher,type,async,logger,debug,mapped,to,execution,chain,get,handler,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,cors,configuration,source,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1328020251;Return the adapted interceptors as HandlerInterceptor array._@return the array of HandlerInterceptors, or <code>null</code> if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = adaptedInterceptors.size()__		return (count > 0) ? adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null__	};return,the,adapted,interceptors,as,handler,interceptor,array,return,the,array,of,handler,interceptors,or,code,null,code,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,adapted,interceptors,size,return,count,0,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1346174472;Return the adapted interceptors as HandlerInterceptor array._@return the array of HandlerInterceptors, or <code>null</code> if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = adaptedInterceptors.size()__		return (count > 0) ? adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null__	};return,the,adapted,interceptors,as,handler,interceptor,array,return,the,array,of,handler,interceptors,or,code,null,code,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,adapted,interceptors,size,return,count,0,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1356735495;Return the adapted interceptors as HandlerInterceptor array._@return the array of HandlerInterceptors, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = adaptedInterceptors.size()__		return (count > 0) ? adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null__	};return,the,adapted,interceptors,as,handler,interceptor,array,return,the,array,of,handler,interceptors,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,adapted,interceptors,size,return,count,0,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1357119239;Return the adapted interceptors as HandlerInterceptor array._@return the array of HandlerInterceptors, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = adaptedInterceptors.size()__		return (count > 0) ? adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null__	};return,the,adapted,interceptors,as,handler,interceptor,array,return,the,array,of,handler,interceptors,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,adapted,interceptors,size,return,count,0,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1362408075;Return the adapted interceptors as HandlerInterceptor array._@return the array of HandlerInterceptors, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = adaptedInterceptors.size()__		return (count > 0) ? adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null__	};return,the,adapted,interceptors,as,handler,interceptor,array,return,the,array,of,handler,interceptors,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,adapted,interceptors,size,return,count,0,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1368482696;Return the adapted interceptors as HandlerInterceptor array._@return the array of HandlerInterceptors, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = adaptedInterceptors.size()__		return (count > 0) ? adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null__	};return,the,adapted,interceptors,as,handler,interceptor,array,return,the,array,of,handler,interceptors,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,adapted,interceptors,size,return,count,0,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1368581529;Return the adapted interceptors as HandlerInterceptor array._@return the array of HandlerInterceptors, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = adaptedInterceptors.size()__		return (count > 0) ? adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null__	};return,the,adapted,interceptors,as,handler,interceptor,array,return,the,array,of,handler,interceptors,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,adapted,interceptors,size,return,count,0,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1394840766;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1427983931;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1430734105;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1431730371;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1431966054;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1432032520;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		List<HandlerInterceptor> adaptedInterceptors = new ArrayList<HandlerInterceptor>()__		for (HandlerInterceptor interceptor : this.handlerInterceptors) {_			if (!(interceptor instanceof MappedInterceptor)) {_				adaptedInterceptors.add(interceptor)__			}_		}_		int count = adaptedInterceptors.size()__		return (count > 0 ? adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,list,handler,interceptor,adapted,interceptors,new,array,list,handler,interceptor,for,handler,interceptor,interceptor,this,handler,interceptors,if,interceptor,instanceof,mapped,interceptor,adapted,interceptors,add,interceptor,int,count,adapted,interceptors,size,return,count,0,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1432064452;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1432857824;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1436473186;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1437382044;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1438251419;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1467051782;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1467730834;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1471517882;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1472031618;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1476136811;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1486634978;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> protected final HandlerInterceptor[] getAdaptedInterceptors();1486635693;Return the adapted interceptors as {@link HandlerInterceptor} array._@return the array of {@link HandlerInterceptor}s, or {@code null} if none;protected final HandlerInterceptor[] getAdaptedInterceptors() {_		int count = this.adaptedInterceptors.size()__		return (count > 0 ? this.adaptedInterceptors.toArray(new HandlerInterceptor[count]) : null)__	};return,the,adapted,interceptors,as,link,handler,interceptor,array,return,the,array,of,link,handler,interceptor,s,or,code,null,if,none;protected,final,handler,interceptor,get,adapted,interceptors,int,count,this,adapted,interceptors,size,return,count,0,this,adapted,interceptors,to,array,new,handler,interceptor,count,null
AbstractHandlerMapping -> public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1328020251;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}_		return getHandlerExecutionChain(handler, request)__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,return,get,handler,execution,chain,handler,request
AbstractHandlerMapping -> public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1346174472;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}_		return getHandlerExecutionChain(handler, request)__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,return,get,handler,execution,chain,handler,request
AbstractHandlerMapping -> public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1357119239;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}_		return getHandlerExecutionChain(handler, request)__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,return,get,handler,execution,chain,handler,request
AbstractHandlerMapping -> public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1362408075;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}_		return getHandlerExecutionChain(handler, request)__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,return,get,handler,execution,chain,handler,request
AbstractHandlerMapping -> protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1427983931;Retrieve the CORS configuration for the given handler.;protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		handler = (handler instanceof HandlerExecutionChain) ? ((HandlerExecutionChain) handler).getHandler() : handler__		if (handler != null && handler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) handler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler;protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,handler,handler,instanceof,handler,execution,chain,handler,execution,chain,handler,get,handler,handler,if,handler,null,handler,instanceof,cors,configuration,source,return,cors,configuration,source,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1430734105;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler or {@code null}.;protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		if (handler instanceof HandlerExecutionChain) {_			handler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (handler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) handler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null;protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,if,handler,instanceof,handler,execution,chain,handler,handler,execution,chain,handler,get,handler,if,handler,instanceof,cors,configuration,source,return,cors,configuration,source,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1431730371;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler or {@code null}.;protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		if (handler instanceof HandlerExecutionChain) {_			handler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (handler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) handler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null;protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,if,handler,instanceof,handler,execution,chain,handler,handler,execution,chain,handler,get,handler,if,handler,instanceof,cors,configuration,source,return,cors,configuration,source,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1431966054;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler or {@code null}._@since 4.2;protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		if (handler instanceof HandlerExecutionChain) {_			handler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (handler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) handler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,since,4,2;protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,if,handler,instanceof,handler,execution,chain,handler,handler,execution,chain,handler,get,handler,if,handler,instanceof,cors,configuration,source,return,cors,configuration,source,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1432032520;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler or {@code null}._@since 4.2;protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		if (handler instanceof HandlerExecutionChain) {_			handler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (handler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) handler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,since,4,2;protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,if,handler,instanceof,handler,execution,chain,handler,handler,execution,chain,handler,get,handler,if,handler,instanceof,cors,configuration,source,return,cors,configuration,source,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1432064452;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler or {@code null}._@since 4.2;protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		if (handler instanceof HandlerExecutionChain) {_			handler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (handler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) handler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,since,4,2;protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,if,handler,instanceof,handler,execution,chain,handler,handler,execution,chain,handler,get,handler,if,handler,instanceof,cors,configuration,source,return,cors,configuration,source,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1432857824;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler or {@code null}._@since 4.2;protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		if (handler instanceof HandlerExecutionChain) {_			handler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (handler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) handler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,since,4,2;protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,if,handler,instanceof,handler,execution,chain,handler,handler,execution,chain,handler,get,handler,if,handler,instanceof,cors,configuration,source,return,cors,configuration,source,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1436473186;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler or {@code null}._@since 4.2;protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		if (handler instanceof HandlerExecutionChain) {_			handler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (handler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) handler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,since,4,2;protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,if,handler,instanceof,handler,execution,chain,handler,handler,execution,chain,handler,get,handler,if,handler,instanceof,cors,configuration,source,return,cors,configuration,source,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1437382044;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler or {@code null}._@since 4.2;protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		if (handler instanceof HandlerExecutionChain) {_			handler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (handler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) handler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,since,4,2;protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,if,handler,instanceof,handler,execution,chain,handler,handler,execution,chain,handler,get,handler,if,handler,instanceof,cors,configuration,source,return,cors,configuration,source,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1438251419;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler or {@code null}._@since 4.2;protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		if (handler instanceof HandlerExecutionChain) {_			handler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (handler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) handler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,since,4,2;protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,if,handler,instanceof,handler,execution,chain,handler,handler,execution,chain,handler,get,handler,if,handler,instanceof,cors,configuration,source,return,cors,configuration,source,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1467051782;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler or {@code null}._@since 4.2;protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		if (handler instanceof HandlerExecutionChain) {_			handler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (handler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) handler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,since,4,2;protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,if,handler,instanceof,handler,execution,chain,handler,handler,execution,chain,handler,get,handler,if,handler,instanceof,cors,configuration,source,return,cors,configuration,source,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1467730834;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler or {@code null}._@since 4.2;protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		if (handler instanceof HandlerExecutionChain) {_			handler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (handler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) handler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,since,4,2;protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,if,handler,instanceof,handler,execution,chain,handler,handler,execution,chain,handler,get,handler,if,handler,instanceof,cors,configuration,source,return,cors,configuration,source,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1471517882;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler or {@code null}._@since 4.2;protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		if (handler instanceof HandlerExecutionChain) {_			handler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (handler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) handler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,since,4,2;protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,if,handler,instanceof,handler,execution,chain,handler,handler,execution,chain,handler,get,handler,if,handler,instanceof,cors,configuration,source,return,cors,configuration,source,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1472031618;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler or {@code null}._@since 4.2;protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		if (handler instanceof HandlerExecutionChain) {_			handler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (handler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) handler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,since,4,2;protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,if,handler,instanceof,handler,execution,chain,handler,handler,execution,chain,handler,get,handler,if,handler,instanceof,cors,configuration,source,return,cors,configuration,source,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1476136811;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler or {@code null}._@since 4.2;protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		if (handler instanceof HandlerExecutionChain) {_			handler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (handler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) handler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,since,4,2;protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,if,handler,instanceof,handler,execution,chain,handler,handler,execution,chain,handler,get,handler,if,handler,instanceof,cors,configuration,source,return,cors,configuration,source,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1486634978;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler or {@code null}._@since 4.2;protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		if (handler instanceof HandlerExecutionChain) {_			handler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (handler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) handler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,since,4,2;protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,if,handler,instanceof,handler,execution,chain,handler,handler,execution,chain,handler,get,handler,if,handler,instanceof,cors,configuration,source,return,cors,configuration,source,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request);1486635693;Retrieve the CORS configuration for the given handler._@param handler the handler to check (never {@code null})._@param request the current request._@return the CORS configuration for the handler or {@code null}._@since 4.2;protected CorsConfiguration getCorsConfiguration(Object handler, HttpServletRequest request) {_		if (handler instanceof HandlerExecutionChain) {_			handler = ((HandlerExecutionChain) handler).getHandler()__		}_		if (handler instanceof CorsConfigurationSource) {_			return ((CorsConfigurationSource) handler).getCorsConfiguration(request)__		}_		return null__	};retrieve,the,cors,configuration,for,the,given,handler,param,handler,the,handler,to,check,never,code,null,param,request,the,current,request,return,the,cors,configuration,for,the,handler,or,code,null,since,4,2;protected,cors,configuration,get,cors,configuration,object,handler,http,servlet,request,request,if,handler,instanceof,handler,execution,chain,handler,handler,execution,chain,handler,get,handler,if,handler,instanceof,cors,configuration,source,return,cors,configuration,source,handler,get,cors,configuration,request,return,null
AbstractHandlerMapping -> @Nullable 	public Object getDefaultHandler();1495868221;Return the default handler for this handler mapping,_or {@code null} if none.;@Nullable_	public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;nullable,public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> @Nullable 	public Object getDefaultHandler();1496837955;Return the default handler for this handler mapping,_or {@code null} if none.;@Nullable_	public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;nullable,public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> @Nullable 	public Object getDefaultHandler();1498780456;Return the default handler for this handler mapping,_or {@code null} if none.;@Nullable_	public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;nullable,public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> @Nullable 	public Object getDefaultHandler();1500043922;Return the default handler for this handler mapping,_or {@code null} if none.;@Nullable_	public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;nullable,public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> @Nullable 	public Object getDefaultHandler();1500448076;Return the default handler for this handler mapping,_or {@code null} if none.;@Nullable_	public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;nullable,public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> @Nullable 	public Object getDefaultHandler();1502974979;Return the default handler for this handler mapping,_or {@code null} if none.;@Nullable_	public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;nullable,public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> @Nullable 	public Object getDefaultHandler();1519295386;Return the default handler for this handler mapping,_or {@code null} if none.;@Nullable_	public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;nullable,public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> @Nullable 	public Object getDefaultHandler();1522448444;Return the default handler for this handler mapping,_or {@code null} if none.;@Nullable_	public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;nullable,public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> @Nullable 	public Object getDefaultHandler();1529361191;Return the default handler for this handler mapping,_or {@code null} if none.;@Nullable_	public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;nullable,public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> @Nullable 	public Object getDefaultHandler();1529948549;Return the default handler for this handler mapping,_or {@code null} if none.;@Nullable_	public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;nullable,public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> @Nullable 	public Object getDefaultHandler();1530174524;Return the default handler for this handler mapping,_or {@code null} if none.;@Nullable_	public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;nullable,public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> @Nullable 	public Object getDefaultHandler();1530174524;Return the default handler for this handler mapping,_or {@code null} if none.;@Nullable_	public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;nullable,public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> @Nullable 	public Object getDefaultHandler();1533715735;Return the default handler for this handler mapping,_or {@code null} if none.;@Nullable_	public Object getDefaultHandler() {_		return this.defaultHandler__	};return,the,default,handler,for,this,handler,mapping,or,code,null,if,none;nullable,public,object,get,default,handler,return,this,default,handler
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1356735495;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}_		return getHandlerExecutionChain(handler, request)__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,return,get,handler,execution,chain,handler,request
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1368482696;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}_		return getHandlerExecutionChain(handler, request)__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,return,get,handler,execution,chain,handler,request
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1368581529;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}_		return getHandlerExecutionChain(handler, request)__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,return,get,handler,execution,chain,handler,request
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1394840766;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}_		return getHandlerExecutionChain(handler, request)__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,return,get,handler,execution,chain,handler,request
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1427983931;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}_		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration config = getCorsConfiguration(handler, request)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,config,get,cors,configuration,handler,request,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1430734105;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}_		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration config = getCorsConfiguration(handler, request)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,config,get,cors,configuration,handler,request,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1431730371;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}_		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			executionChain = getCorsHandlerExecutionChain(request, executionChain)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,execution,chain,get,cors,handler,execution,chain,request,execution,chain,return,execution,chain
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1431966054;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}_		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,global,config,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1432032520;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}_		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,global,config,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1432064452;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}_		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,global,config,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1432857824;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}_		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,global,config,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1436473186;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}_		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.corsMapping.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,cors,mapping,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1437382044;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}_		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.corsConfigSource.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,cors,config,source,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1438251419;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}__		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.corsConfigSource.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,cors,config,source,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1467051782;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}__		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.corsConfigSource.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,cors,config,source,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1467730834;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}__		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.corsConfigSource.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,cors,config,source,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1471517882;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}__		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.corsConfigSource.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,cors,config,source,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1472031618;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}__		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.corsConfigSource.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,cors,config,source,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1476136811;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}__		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.globalCorsConfigSource.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,global,cors,config,source,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1486634978;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}__		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.globalCorsConfigSource.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,global,cors,config,source,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1486635693;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}__		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.globalCorsConfigSource.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,global,cors,config,source,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1495868221;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = getApplicationContext().getBean(handlerName)__		}__		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.globalCorsConfigSource.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,get,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,global,cors,config,source,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1496837955;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = obtainApplicationContext().getBean(handlerName)__		}__		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.globalCorsConfigSource.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,obtain,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,global,cors,config,source,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1498780456;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = obtainApplicationContext().getBean(handlerName)__		}__		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.globalCorsConfigSource.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,obtain,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,global,cors,config,source,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1500043922;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = obtainApplicationContext().getBean(handlerName)__		}__		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.globalCorsConfigSource.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,obtain,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,global,cors,config,source,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> @Override 	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;1500448076;Look up a handler for the given request, falling back to the default_handler if no specific one is found._@param request current HTTP request_@return the corresponding handler instance, or the default handler_@see #getHandlerInternal;@Override_	public final HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {_		Object handler = getHandlerInternal(request)__		if (handler == null) {_			handler = getDefaultHandler()__		}_		if (handler == null) {_			return null__		}_		_		if (handler instanceof String) {_			String handlerName = (String) handler__			handler = obtainApplicationContext().getBean(handlerName)__		}__		HandlerExecutionChain executionChain = getHandlerExecutionChain(handler, request)__		if (CorsUtils.isCorsRequest(request)) {_			CorsConfiguration globalConfig = this.globalCorsConfigSource.getCorsConfiguration(request)__			CorsConfiguration handlerConfig = getCorsConfiguration(handler, request)__			CorsConfiguration config = (globalConfig != null ? globalConfig.combine(handlerConfig) : handlerConfig)__			executionChain = getCorsHandlerExecutionChain(request, executionChain, config)__		}_		return executionChain__	};look,up,a,handler,for,the,given,request,falling,back,to,the,default,handler,if,no,specific,one,is,found,param,request,current,http,request,return,the,corresponding,handler,instance,or,the,default,handler,see,get,handler,internal;override,public,final,handler,execution,chain,get,handler,http,servlet,request,request,throws,exception,object,handler,get,handler,internal,request,if,handler,null,handler,get,default,handler,if,handler,null,return,null,if,handler,instanceof,string,string,handler,name,string,handler,handler,obtain,application,context,get,bean,handler,name,handler,execution,chain,execution,chain,get,handler,execution,chain,handler,request,if,cors,utils,is,cors,request,request,cors,configuration,global,config,this,global,cors,config,source,get,cors,configuration,request,cors,configuration,handler,config,get,cors,configuration,handler,request,cors,configuration,config,global,config,null,global,config,combine,handler,config,handler,config,execution,chain,get,cors,handler,execution,chain,request,execution,chain,config,return,execution,chain
AbstractHandlerMapping -> public void setDefaultHandler(@Nullable Object defaultHandler);1500448076;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(@Nullable Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,nullable,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(@Nullable Object defaultHandler);1502974979;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(@Nullable Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,nullable,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(@Nullable Object defaultHandler);1519295386;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(@Nullable Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,nullable,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(@Nullable Object defaultHandler);1522448444;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(@Nullable Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,nullable,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(@Nullable Object defaultHandler);1529361191;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(@Nullable Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,nullable,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(@Nullable Object defaultHandler);1529948549;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(@Nullable Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,nullable,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(@Nullable Object defaultHandler);1530174524;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(@Nullable Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,nullable,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(@Nullable Object defaultHandler);1530174524;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(@Nullable Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,nullable,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public void setDefaultHandler(@Nullable Object defaultHandler);1533715735;Set the default handler for this handler mapping._This handler will be returned if no specific mapping was found._<p>Default is {@code null}, indicating no default handler.;public void setDefaultHandler(@Nullable Object defaultHandler) {_		this.defaultHandler = defaultHandler__	};set,the,default,handler,for,this,handler,mapping,this,handler,will,be,returned,if,no,specific,mapping,was,found,p,default,is,code,null,indicating,no,default,handler;public,void,set,default,handler,nullable,object,default,handler,this,default,handler,default,handler
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfigurations();1436473186;Get the CORS configuration.;public Map<String, CorsConfiguration> getCorsConfigurations() {_		return this.corsMapping.getCorsConfigurations()__	};get,the,cors,configuration;public,map,string,cors,configuration,get,cors,configurations,return,this,cors,mapping,get,cors,configurations
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfigurations();1437382044;Get the CORS configuration.;public Map<String, CorsConfiguration> getCorsConfigurations() {_		return this.corsConfigSource.getCorsConfigurations()__	};get,the,cors,configuration;public,map,string,cors,configuration,get,cors,configurations,return,this,cors,config,source,get,cors,configurations
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfigurations();1438251419;Get the CORS configuration.;public Map<String, CorsConfiguration> getCorsConfigurations() {_		return this.corsConfigSource.getCorsConfigurations()__	};get,the,cors,configuration;public,map,string,cors,configuration,get,cors,configurations,return,this,cors,config,source,get,cors,configurations
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfigurations();1467051782;Get the CORS configuration.;public Map<String, CorsConfiguration> getCorsConfigurations() {_		return this.corsConfigSource.getCorsConfigurations()__	};get,the,cors,configuration;public,map,string,cors,configuration,get,cors,configurations,return,this,cors,config,source,get,cors,configurations
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfigurations();1467730834;Get the CORS configuration.;public Map<String, CorsConfiguration> getCorsConfigurations() {_		return this.corsConfigSource.getCorsConfigurations()__	};get,the,cors,configuration;public,map,string,cors,configuration,get,cors,configurations,return,this,cors,config,source,get,cors,configurations
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfigurations();1471517882;Get the CORS configuration.;public Map<String, CorsConfiguration> getCorsConfigurations() {_		return this.corsConfigSource.getCorsConfigurations()__	};get,the,cors,configuration;public,map,string,cors,configuration,get,cors,configurations,return,this,cors,config,source,get,cors,configurations
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfigurations();1472031618;Get the CORS configuration.;public Map<String, CorsConfiguration> getCorsConfigurations() {_		return this.corsConfigSource.getCorsConfigurations()__	};get,the,cors,configuration;public,map,string,cors,configuration,get,cors,configurations,return,this,cors,config,source,get,cors,configurations
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfigurations();1476136811;Get the "global" CORS configuration.;public Map<String, CorsConfiguration> getCorsConfigurations() {_		return this.globalCorsConfigSource.getCorsConfigurations()__	};get,the,global,cors,configuration;public,map,string,cors,configuration,get,cors,configurations,return,this,global,cors,config,source,get,cors,configurations
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfigurations();1486634978;Get the "global" CORS configuration.;public Map<String, CorsConfiguration> getCorsConfigurations() {_		return this.globalCorsConfigSource.getCorsConfigurations()__	};get,the,global,cors,configuration;public,map,string,cors,configuration,get,cors,configurations,return,this,global,cors,config,source,get,cors,configurations
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfigurations();1486635693;Get the "global" CORS configuration.;public Map<String, CorsConfiguration> getCorsConfigurations() {_		return this.globalCorsConfigSource.getCorsConfigurations()__	};get,the,global,cors,configuration;public,map,string,cors,configuration,get,cors,configurations,return,this,global,cors,config,source,get,cors,configurations
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfigurations();1495868221;Get the "global" CORS configuration.;public Map<String, CorsConfiguration> getCorsConfigurations() {_		return this.globalCorsConfigSource.getCorsConfigurations()__	};get,the,global,cors,configuration;public,map,string,cors,configuration,get,cors,configurations,return,this,global,cors,config,source,get,cors,configurations
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfigurations();1496837955;Get the "global" CORS configuration.;public Map<String, CorsConfiguration> getCorsConfigurations() {_		return this.globalCorsConfigSource.getCorsConfigurations()__	};get,the,global,cors,configuration;public,map,string,cors,configuration,get,cors,configurations,return,this,global,cors,config,source,get,cors,configurations
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfigurations();1498780456;Get the "global" CORS configuration.;public Map<String, CorsConfiguration> getCorsConfigurations() {_		return this.globalCorsConfigSource.getCorsConfigurations()__	};get,the,global,cors,configuration;public,map,string,cors,configuration,get,cors,configurations,return,this,global,cors,config,source,get,cors,configurations
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfigurations();1500043922;Get the "global" CORS configuration.;public Map<String, CorsConfiguration> getCorsConfigurations() {_		return this.globalCorsConfigSource.getCorsConfigurations()__	};get,the,global,cors,configuration;public,map,string,cors,configuration,get,cors,configurations,return,this,global,cors,config,source,get,cors,configurations
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfigurations();1500448076;Get the "global" CORS configuration.;public Map<String, CorsConfiguration> getCorsConfigurations() {_		return this.globalCorsConfigSource.getCorsConfigurations()__	};get,the,global,cors,configuration;public,map,string,cors,configuration,get,cors,configurations,return,this,global,cors,config,source,get,cors,configurations
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfigurations();1502974979;Get the "global" CORS configuration.;public Map<String, CorsConfiguration> getCorsConfigurations() {_		return this.globalCorsConfigSource.getCorsConfigurations()__	};get,the,global,cors,configuration;public,map,string,cors,configuration,get,cors,configurations,return,this,global,cors,config,source,get,cors,configurations
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfigurations();1519295386;Get the "global" CORS configuration.;public Map<String, CorsConfiguration> getCorsConfigurations() {_		return this.globalCorsConfigSource.getCorsConfigurations()__	};get,the,global,cors,configuration;public,map,string,cors,configuration,get,cors,configurations,return,this,global,cors,config,source,get,cors,configurations
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfigurations();1522448444;Get the "global" CORS configuration.;public Map<String, CorsConfiguration> getCorsConfigurations() {_		return this.globalCorsConfigSource.getCorsConfigurations()__	};get,the,global,cors,configuration;public,map,string,cors,configuration,get,cors,configurations,return,this,global,cors,config,source,get,cors,configurations
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfigurations();1529361191;Get the "global" CORS configuration.;public Map<String, CorsConfiguration> getCorsConfigurations() {_		return this.globalCorsConfigSource.getCorsConfigurations()__	};get,the,global,cors,configuration;public,map,string,cors,configuration,get,cors,configurations,return,this,global,cors,config,source,get,cors,configurations
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfigurations();1529948549;Get the "global" CORS configuration.;public Map<String, CorsConfiguration> getCorsConfigurations() {_		return this.globalCorsConfigSource.getCorsConfigurations()__	};get,the,global,cors,configuration;public,map,string,cors,configuration,get,cors,configurations,return,this,global,cors,config,source,get,cors,configurations
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfigurations();1530174524;Get the "global" CORS configuration.;public Map<String, CorsConfiguration> getCorsConfigurations() {_		return this.globalCorsConfigSource.getCorsConfigurations()__	};get,the,global,cors,configuration;public,map,string,cors,configuration,get,cors,configurations,return,this,global,cors,config,source,get,cors,configurations
AbstractHandlerMapping -> public Map<String, CorsConfiguration> getCorsConfigurations();1530174524;Get the "global" CORS configuration.;public Map<String, CorsConfiguration> getCorsConfigurations() {_		return this.globalCorsConfigSource.getCorsConfigurations()__	};get,the,global,cors,configuration;public,map,string,cors,configuration,get,cors,configurations,return,this,global,cors,config,source,get,cors,configurations
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1328020251;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or <code>null</code> if none;protected final MappedInterceptor[] getMappedInterceptors() {_		int count = mappedInterceptors.size()__		return (count > 0) ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,code,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1346174472;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or <code>null</code> if none;protected final MappedInterceptor[] getMappedInterceptors() {_		int count = mappedInterceptors.size()__		return (count > 0) ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,code,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1356735495;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		int count = mappedInterceptors.size()__		return (count > 0) ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1357119239;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		int count = mappedInterceptors.size()__		return (count > 0) ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1362408075;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		int count = mappedInterceptors.size()__		return (count > 0) ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1368482696;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		int count = mappedInterceptors.size()__		return (count > 0) ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1368581529;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		int count = mappedInterceptors.size()__		return (count > 0) ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1394840766;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		int count = this.mappedInterceptors.size()__		return (count > 0 ? this.mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,int,count,this,mapped,interceptors,size,return,count,0,this,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1427983931;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		int count = this.mappedInterceptors.size()__		return (count > 0 ? this.mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,int,count,this,mapped,interceptors,size,return,count,0,this,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1430734105;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		int count = this.mappedInterceptors.size()__		return (count > 0 ? this.mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,int,count,this,mapped,interceptors,size,return,count,0,this,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1431730371;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		int count = this.mappedInterceptors.size()__		return (count > 0 ? this.mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,int,count,this,mapped,interceptors,size,return,count,0,this,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1431966054;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		int count = this.mappedInterceptors.size()__		return (count > 0 ? this.mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,int,count,this,mapped,interceptors,size,return,count,0,this,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1432032520;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<MappedInterceptor>()__		for (HandlerInterceptor interceptor : this.handlerInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		int count = mappedInterceptors.size()__		return (count > 0 ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,mapped,interceptor,for,handler,interceptor,interceptor,this,handler,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1432064452;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<MappedInterceptor>()__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		int count = mappedInterceptors.size()__		return (count > 0 ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,mapped,interceptor,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1432857824;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<MappedInterceptor>()__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		int count = mappedInterceptors.size()__		return (count > 0 ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,mapped,interceptor,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1436473186;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<MappedInterceptor>()__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		int count = mappedInterceptors.size()__		return (count > 0 ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,mapped,interceptor,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1437382044;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<MappedInterceptor>()__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		int count = mappedInterceptors.size()__		return (count > 0 ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,mapped,interceptor,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1438251419;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<MappedInterceptor>()__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		int count = mappedInterceptors.size()__		return (count > 0 ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,mapped,interceptor,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1467051782;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<MappedInterceptor>()__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		int count = mappedInterceptors.size()__		return (count > 0 ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,mapped,interceptor,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1467730834;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<>()__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		int count = mappedInterceptors.size()__		return (count > 0 ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1471517882;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<>()__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		int count = mappedInterceptors.size()__		return (count > 0 ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1472031618;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<>()__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		int count = mappedInterceptors.size()__		return (count > 0 ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1476136811;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<>()__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		int count = mappedInterceptors.size()__		return (count > 0 ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1486634978;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<>()__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		int count = mappedInterceptors.size()__		return (count > 0 ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected final MappedInterceptor[] getMappedInterceptors();1486635693;Return all configured {@link MappedInterceptor}s as an array._@return the array of {@link MappedInterceptor}s, or {@code null} if none;protected final MappedInterceptor[] getMappedInterceptors() {_		List<MappedInterceptor> mappedInterceptors = new ArrayList<>()__		for (HandlerInterceptor interceptor : this.adaptedInterceptors) {_			if (interceptor instanceof MappedInterceptor) {_				mappedInterceptors.add((MappedInterceptor) interceptor)__			}_		}_		int count = mappedInterceptors.size()__		return (count > 0 ? mappedInterceptors.toArray(new MappedInterceptor[count]) : null)__	};return,all,configured,link,mapped,interceptor,s,as,an,array,return,the,array,of,link,mapped,interceptor,s,or,code,null,if,none;protected,final,mapped,interceptor,get,mapped,interceptors,list,mapped,interceptor,mapped,interceptors,new,array,list,for,handler,interceptor,interceptor,this,adapted,interceptors,if,interceptor,instanceof,mapped,interceptor,mapped,interceptors,add,mapped,interceptor,interceptor,int,count,mapped,interceptors,size,return,count,0,mapped,interceptors,to,array,new,mapped,interceptor,count,null
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1328020251;Look up a handler for the given request, returning <code>null</code> if no_specific one is found. This method is called by {@link #getHandler}__a <code>null</code> return value will lead to the default handler, if one is set._<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or <code>null</code> if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,code,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,code,return,value,will,lead,to,the,default,handler,if,one,is,set,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,code,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1346174472;Look up a handler for the given request, returning <code>null</code> if no_specific one is found. This method is called by {@link #getHandler}__a <code>null</code> return value will lead to the default handler, if one is set._<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or <code>null</code> if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,code,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,code,return,value,will,lead,to,the,default,handler,if,one,is,set,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,code,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1356735495;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1357119239;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1362408075;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1368482696;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1368581529;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1394840766;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1427983931;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set.__<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfiguration},__<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain.__@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configuration,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1430734105;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set.__<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfiguration},__<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain.__@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configuration,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1431730371;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set.__<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfiguration},__<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain.__@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configuration,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1431966054;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set.__<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfiguration},__<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain.__@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configuration,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1432032520;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set.__<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfiguration},__<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain.__@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configuration,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1432064452;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set.__<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfiguration},__<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain.__@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configuration,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1432857824;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set.__<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfiguration},__<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain.__@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configuration,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1436473186;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set.__<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfigurations},__<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain.__@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configurations,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1437382044;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set.__<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfigurations},__<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain.__@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configurations,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1438251419;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfigurations},_<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configurations,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1467051782;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfigurations},_<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configurations,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1467730834;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfigurations},_<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configurations,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1471517882;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfigurations},_<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configurations,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1472031618;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfigurations},_<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configurations,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1476136811;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfigurations},_<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configurations,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1486634978;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfigurations},_<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configurations,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;1486635693;Look up a handler for the given request, returning {@code null} if no_specific one is found. This method is called by {@link #getHandler}__a {@code null} return value will lead to the default handler, if one is set._<p>On CORS pre-flight requests this method should return a match not for_the pre-flight request but for the expected actual request based on the URL_path, the HTTP methods from the "Access-Control-Request-Method" header, and_the headers from the "Access-Control-Request-Headers" header thus allowing_the CORS configuration to be obtained via {@link #getCorsConfigurations},_<p>Note: This method may also return a pre-built {@link HandlerExecutionChain},_combining a handler object with dynamically determined interceptors._Statically specified interceptors will get merged into such an existing chain._@param request current HTTP request_@return the corresponding handler instance, or {@code null} if none found_@throws Exception if there is an internal error;protected abstract Object getHandlerInternal(HttpServletRequest request) throws Exception_;look,up,a,handler,for,the,given,request,returning,code,null,if,no,specific,one,is,found,this,method,is,called,by,link,get,handler,a,code,null,return,value,will,lead,to,the,default,handler,if,one,is,set,p,on,cors,pre,flight,requests,this,method,should,return,a,match,not,for,the,pre,flight,request,but,for,the,expected,actual,request,based,on,the,url,path,the,http,methods,from,the,access,control,request,method,header,and,the,headers,from,the,access,control,request,headers,header,thus,allowing,the,cors,configuration,to,be,obtained,via,link,get,cors,configurations,p,note,this,method,may,also,return,a,pre,built,link,handler,execution,chain,combining,a,handler,object,with,dynamically,determined,interceptors,statically,specified,interceptors,will,get,merged,into,such,an,existing,chain,param,request,current,http,request,return,the,corresponding,handler,instance,or,code,null,if,none,found,throws,exception,if,there,is,an,internal,error;protected,abstract,object,get,handler,internal,http,servlet,request,request,throws,exception
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1328020251;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1346174472;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1356735495;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1357119239;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1362408075;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1368482696;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1368581529;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1394840766;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1427983931;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1430734105;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1431730371;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1431966054;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1432032520;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1432064452;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1432857824;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1436473186;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		this.corsMapping.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,this,cors,mapping,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1437382044;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		this.corsConfigSource.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,this,cors,config,source,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1438251419;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		this.corsConfigSource.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,this,cors,config,source,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1467051782;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		this.corsConfigSource.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,this,cors,config,source,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1467730834;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		this.corsConfigSource.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,this,cors,config,source,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1471517882;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		this.corsConfigSource.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,this,cors,config,source,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1472031618;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		this.corsConfigSource.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,this,cors,config,source,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1476136811;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		this.globalCorsConfigSource.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,this,global,cors,config,source,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1486634978;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		this.globalCorsConfigSource.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,this,global,cors,config,source,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1486635693;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		this.globalCorsConfigSource.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,this,global,cors,config,source,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1495868221;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		this.globalCorsConfigSource.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,this,global,cors,config,source,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1496837955;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		this.globalCorsConfigSource.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,this,global,cors,config,source,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1498780456;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used if applicable_(that is, in the case of a ".../*" servlet mapping in web.xml)._<p>Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		this.globalCorsConfigSource.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,that,is,in,the,case,of,a,servlet,mapping,in,web,xml,p,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,this,global,cors,config,source,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1500043922;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath(boolean);public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		this.globalCorsConfigSource.setAlwaysUseFullPath(alwaysUseFullPath)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,always,use,full,path,boolean;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,this,global,cors,config,source,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1500448076;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath(boolean);public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		this.globalCorsConfigSource.setAlwaysUseFullPath(alwaysUseFullPath)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,always,use,full,path,boolean;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,this,global,cors,config,source,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1502974979;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath(boolean);public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		this.globalCorsConfigSource.setAlwaysUseFullPath(alwaysUseFullPath)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,always,use,full,path,boolean;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,this,global,cors,config,source,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1519295386;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath(boolean);public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		this.globalCorsConfigSource.setAlwaysUseFullPath(alwaysUseFullPath)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,always,use,full,path,boolean;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,this,global,cors,config,source,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1522448444;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath(boolean);public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		this.globalCorsConfigSource.setAlwaysUseFullPath(alwaysUseFullPath)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,always,use,full,path,boolean;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,this,global,cors,config,source,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1529361191;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath(boolean);public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		this.globalCorsConfigSource.setAlwaysUseFullPath(alwaysUseFullPath)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,always,use,full,path,boolean;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,this,global,cors,config,source,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1529948549;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath(boolean);public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		this.globalCorsConfigSource.setAlwaysUseFullPath(alwaysUseFullPath)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,always,use,full,path,boolean;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,this,global,cors,config,source,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1530174524;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath(boolean);public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		this.globalCorsConfigSource.setAlwaysUseFullPath(alwaysUseFullPath)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,always,use,full,path,boolean;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,this,global,cors,config,source,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1530174524;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath(boolean);public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		this.globalCorsConfigSource.setAlwaysUseFullPath(alwaysUseFullPath)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,always,use,full,path,boolean;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,this,global,cors,config,source,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1533715735;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath(boolean);public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__		if (this.corsConfigurationSource instanceof UrlBasedCorsConfigurationSource) {_			((UrlBasedCorsConfigurationSource)this.corsConfigurationSource).setAlwaysUseFullPath(alwaysUseFullPath)__		}_	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,always,use,full,path,boolean;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path,if,this,cors,configuration,source,instanceof,url,based,cors,configuration,source,url,based,cors,configuration,source,this,cors,configuration,source,set,always,use,full,path,always,use,full,path
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1328020251;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1346174472;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1356735495;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1357119239;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1362408075;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1368482696;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1368581529;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1394840766;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1427983931;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1430734105;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1431730371;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1431966054;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1432032520;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1432064452;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1432857824;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1436473186;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		this.corsMapping.setUrlPathHelper(urlPathHelper)__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,this,cors,mapping,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1437382044;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		this.corsConfigSource.setUrlPathHelper(urlPathHelper)__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,this,cors,config,source,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1438251419;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		this.corsConfigSource.setUrlPathHelper(urlPathHelper)__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,this,cors,config,source,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1467051782;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		this.corsConfigSource.setUrlPathHelper(urlPathHelper)__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,this,cors,config,source,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1467730834;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		this.corsConfigSource.setUrlPathHelper(urlPathHelper)__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,this,cors,config,source,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1471517882;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		this.corsConfigSource.setUrlPathHelper(urlPathHelper)__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,this,cors,config,source,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1472031618;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		this.corsConfigSource.setUrlPathHelper(urlPathHelper)__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,this,cors,config,source,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1476136811;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		this.globalCorsConfigSource.setUrlPathHelper(urlPathHelper)__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,this,global,cors,config,source,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1486634978;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		this.globalCorsConfigSource.setUrlPathHelper(urlPathHelper)__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,this,global,cors,config,source,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1486635693;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		this.globalCorsConfigSource.setUrlPathHelper(urlPathHelper)__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,this,global,cors,config,source,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1495868221;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		this.globalCorsConfigSource.setUrlPathHelper(urlPathHelper)__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,this,global,cors,config,source,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1496837955;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		this.globalCorsConfigSource.setUrlPathHelper(urlPathHelper)__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,this,global,cors,config,source,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1498780456;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		this.globalCorsConfigSource.setUrlPathHelper(urlPathHelper)__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,this,global,cors,config,source,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1500043922;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		this.globalCorsConfigSource.setUrlPathHelper(urlPathHelper)__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,this,global,cors,config,source,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1500448076;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		this.globalCorsConfigSource.setUrlPathHelper(urlPathHelper)__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,this,global,cors,config,source,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1502974979;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		this.globalCorsConfigSource.setUrlPathHelper(urlPathHelper)__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,this,global,cors,config,source,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1519295386;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		this.globalCorsConfigSource.setUrlPathHelper(urlPathHelper)__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,this,global,cors,config,source,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1522448444;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		this.globalCorsConfigSource.setUrlPathHelper(urlPathHelper)__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,this,global,cors,config,source,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1529361191;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		this.globalCorsConfigSource.setUrlPathHelper(urlPathHelper)__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,this,global,cors,config,source,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1529948549;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		this.globalCorsConfigSource.setUrlPathHelper(urlPathHelper)__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,this,global,cors,config,source,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1530174524;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		this.globalCorsConfigSource.setUrlPathHelper(urlPathHelper)__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,this,global,cors,config,source,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1530174524;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		this.globalCorsConfigSource.setUrlPathHelper(urlPathHelper)__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,this,global,cors,config,source,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1533715735;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__		if (this.corsConfigurationSource instanceof UrlBasedCorsConfigurationSource) {_			((UrlBasedCorsConfigurationSource)this.corsConfigurationSource).setUrlPathHelper(urlPathHelper)__		}_	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper,if,this,cors,configuration,source,instanceof,url,based,cors,configuration,source,url,based,cors,configuration,source,this,cors,configuration,source,set,url,path,helper,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1328020251;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1346174472;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1356735495;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1357119239;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1362408075;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1368482696;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1368581529;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1394840766;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1427983931;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1430734105;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1431730371;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1431966054;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1432032520;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1432064452;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1432857824;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1436473186;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1437382044;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1438251419;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1467051782;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1467730834;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1471517882;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1472031618;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1476136811;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1486634978;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1486635693;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1495868221;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1496837955;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1498780456;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1500043922;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1500448076;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1502974979;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1519295386;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1522448444;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1529361191;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1529948549;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1530174524;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1530174524;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return this.urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,this,url,path,helper
AbstractHandlerMapping -> public UrlPathHelper getUrlPathHelper();1533715735;Return the UrlPathHelper implementation to use for resolution of lookup paths.;public UrlPathHelper getUrlPathHelper() {_		return this.urlPathHelper__	};return,the,url,path,helper,implementation,to,use,for,resolution,of,lookup,paths;public,url,path,helper,get,url,path,helper,return,this,url,path,helper
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1328020251;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.mappedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,mapped,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1346174472;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.mappedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,mapped,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1356735495;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.mappedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,mapped,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1357119239;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.mappedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,mapped,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1362408075;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.mappedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,mapped,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1368482696;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.mappedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,mapped,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1368581529;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.mappedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,mapped,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1394840766;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.mappedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,mapped,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1427983931;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.mappedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,mapped,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1430734105;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.mappedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,mapped,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1431730371;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.mappedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,mapped,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1431966054;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.mappedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,mapped,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1432032520;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.detectedMappedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,detected,mapped,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1432064452;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1432857824;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1436473186;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1437382044;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1438251419;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1467051782;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1467730834;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1471517882;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1472031618;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1476136811;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1486634978;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1486635693;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1495868221;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1496837955;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1498780456;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1500043922;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1500448076;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1502974979;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1519295386;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1522448444;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1529361191;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1529948549;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1530174524;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1530174524;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> @Override 	protected void initApplicationContext() throws BeansException;1533715735;Initializes the interceptors._@see #extendInterceptors(java.util.List)_@see #initInterceptors();@Override_	protected void initApplicationContext() throws BeansException {_		extendInterceptors(this.interceptors)__		detectMappedInterceptors(this.adaptedInterceptors)__		initInterceptors()__	};initializes,the,interceptors,see,extend,interceptors,java,util,list,see,init,interceptors;override,protected,void,init,application,context,throws,beans,exception,extend,interceptors,this,interceptors,detect,mapped,interceptors,this,adapted,interceptors,init,interceptors
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1431966054;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1432032520;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1432064452;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1432857824;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1436473186;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1437382044;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1438251419;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1467051782;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1467730834;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1471517882;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1472031618;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1476136811;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1486634978;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1486635693;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1495868221;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1496837955;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1498780456;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1500043922;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1500448076;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1502974979;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1519295386;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1522448444;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1529361191;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1529948549;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1530174524;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1530174524;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> public CorsProcessor getCorsProcessor();1533715735;Return the configured {@link CorsProcessor}.;public CorsProcessor getCorsProcessor() {_		return this.corsProcessor__	};return,the,configured,link,cors,processor;public,cors,processor,get,cors,processor,return,this,cors,processor
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1328020251;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never <code>null</code>),_allowing to add further interceptors before as well as after the existing_interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,code,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1346174472;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never <code>null</code>),_allowing to add further interceptors before as well as after the existing_interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,code,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1356735495;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}),_allowing to add further interceptors before as well as after the existing_interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1357119239;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}),_allowing to add further interceptors before as well as after the existing_interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1362408075;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}),_allowing to add further interceptors before as well as after the existing_interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1368482696;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}),_allowing to add further interceptors before as well as after the existing_interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1368581529;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}),_allowing to add further interceptors before as well as after the existing_interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1394840766;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1427983931;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1430734105;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1431730371;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1431966054;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1432032520;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1432064452;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1432857824;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1436473186;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1437382044;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1438251419;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1467051782;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1467730834;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1471517882;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1472031618;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1476136811;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1486634978;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1486635693;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1495868221;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1496837955;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1498780456;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1500043922;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1500448076;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1502974979;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1519295386;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1522448444;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1529361191;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1529948549;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1530174524;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1530174524;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
AbstractHandlerMapping -> protected void extendInterceptors(List<Object> interceptors);1533715735;Extension hook that subclasses can override to register additional interceptors,_given the configured interceptors (see {@link #setInterceptors})._<p>Will be invoked before {@link #initInterceptors()} adapts the specified_interceptors into {@link HandlerInterceptor} instances._<p>The default implementation is empty._@param interceptors the configured interceptor List (never {@code null}), allowing_to add further interceptors before as well as after the existing interceptors;protected void extendInterceptors(List<Object> interceptors) {_	};extension,hook,that,subclasses,can,override,to,register,additional,interceptors,given,the,configured,interceptors,see,link,set,interceptors,p,will,be,invoked,before,link,init,interceptors,adapts,the,specified,interceptors,into,link,handler,interceptor,instances,p,the,default,implementation,is,empty,param,interceptors,the,configured,interceptor,list,never,code,null,allowing,to,add,further,interceptors,before,as,well,as,after,the,existing,interceptors;protected,void,extend,interceptors,list,object,interceptors
