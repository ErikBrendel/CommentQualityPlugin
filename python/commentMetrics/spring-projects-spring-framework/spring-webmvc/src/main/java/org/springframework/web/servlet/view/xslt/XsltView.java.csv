# id;timestamp;commentText;codeText;commentWords;codeWords
XsltView -> protected final TransformerFactory getTransformerFactory();1328020251;Return the TransformerFactory that this XsltView uses._@return the TransformerFactory (never <code>null</code>);protected final TransformerFactory getTransformerFactory() {_		return this.transformerFactory__	};return,the,transformer,factory,that,this,xslt,view,uses,return,the,transformer,factory,never,code,null,code;protected,final,transformer,factory,get,transformer,factory,return,this,transformer,factory
XsltView -> protected final TransformerFactory getTransformerFactory();1356735495;Return the TransformerFactory that this XsltView uses._@return the TransformerFactory (never {@code null});protected final TransformerFactory getTransformerFactory() {_		return this.transformerFactory__	};return,the,transformer,factory,that,this,xslt,view,uses,return,the,transformer,factory,never,code,null;protected,final,transformer,factory,get,transformer,factory,return,this,transformer,factory
XsltView -> protected final TransformerFactory getTransformerFactory();1385412762;Return the TransformerFactory that this XsltView uses._@return the TransformerFactory (never {@code null});protected final TransformerFactory getTransformerFactory() {_		return this.transformerFactory__	};return,the,transformer,factory,that,this,xslt,view,uses,return,the,transformer,factory,never,code,null;protected,final,transformer,factory,get,transformer,factory,return,this,transformer,factory
XsltView -> protected final TransformerFactory getTransformerFactory();1385423968;Return the TransformerFactory that this XsltView uses._@return the TransformerFactory (never {@code null});protected final TransformerFactory getTransformerFactory() {_		return this.transformerFactory__	};return,the,transformer,factory,that,this,xslt,view,uses,return,the,transformer,factory,never,code,null;protected,final,transformer,factory,get,transformer,factory,return,this,transformer,factory
XsltView -> protected final TransformerFactory getTransformerFactory();1468948866;Return the TransformerFactory that this XsltView uses._@return the TransformerFactory (never {@code null});protected final TransformerFactory getTransformerFactory() {_		return this.transformerFactory__	};return,the,transformer,factory,that,this,xslt,view,uses,return,the,transformer,factory,never,code,null;protected,final,transformer,factory,get,transformer,factory,return,this,transformer,factory
XsltView -> protected final TransformerFactory getTransformerFactory();1469047316;Return the TransformerFactory that this XsltView uses._@return the TransformerFactory (never {@code null});protected final TransformerFactory getTransformerFactory() {_		return this.transformerFactory__	};return,the,transformer,factory,that,this,xslt,view,uses,return,the,transformer,factory,never,code,null;protected,final,transformer,factory,get,transformer,factory,return,this,transformer,factory
XsltView -> protected final TransformerFactory getTransformerFactory();1483750478;Return the TransformerFactory that this XsltView uses._@return the TransformerFactory (never {@code null});protected final TransformerFactory getTransformerFactory() {_		return this.transformerFactory__	};return,the,transformer,factory,that,this,xslt,view,uses,return,the,transformer,factory,never,code,null;protected,final,transformer,factory,get,transformer,factory,return,this,transformer,factory
XsltView -> protected final TransformerFactory getTransformerFactory();1495868221;Return the TransformerFactory that this XsltView uses._@return the TransformerFactory (never {@code null});protected final TransformerFactory getTransformerFactory() {_		return this.transformerFactory__	};return,the,transformer,factory,that,this,xslt,view,uses,return,the,transformer,factory,never,code,null;protected,final,transformer,factory,get,transformer,factory,return,this,transformer,factory
XsltView -> protected final TransformerFactory getTransformerFactory();1496837955;Return the TransformerFactory that this XsltView uses._@return the TransformerFactory (never {@code null});protected final TransformerFactory getTransformerFactory() {_		return this.transformerFactory__	};return,the,transformer,factory,that,this,xslt,view,uses,return,the,transformer,factory,never,code,null;protected,final,transformer,factory,get,transformer,factory,return,this,transformer,factory
XsltView -> protected final TransformerFactory getTransformerFactory();1497250713;Return the TransformerFactory that this XsltView uses._@return the TransformerFactory (never {@code null});protected final TransformerFactory getTransformerFactory() {_		return this.transformerFactory__	};return,the,transformer,factory,that,this,xslt,view,uses,return,the,transformer,factory,never,code,null;protected,final,transformer,factory,get,transformer,factory,return,this,transformer,factory
XsltView -> protected final TransformerFactory getTransformerFactory();1498780456;Return the TransformerFactory that this XsltView uses._@return the TransformerFactory (never {@code null});protected final TransformerFactory getTransformerFactory() {_		Assert.state(this.transformerFactory != null, "No TransformerFactory available")__		return this.transformerFactory__	};return,the,transformer,factory,that,this,xslt,view,uses,return,the,transformer,factory,never,code,null;protected,final,transformer,factory,get,transformer,factory,assert,state,this,transformer,factory,null,no,transformer,factory,available,return,this,transformer,factory
XsltView -> protected final TransformerFactory getTransformerFactory();1508532146;Return the TransformerFactory that this XsltView uses._@return the TransformerFactory (never {@code null});protected final TransformerFactory getTransformerFactory() {_		Assert.state(this.transformerFactory != null, "No TransformerFactory available")__		return this.transformerFactory__	};return,the,transformer,factory,that,this,xslt,view,uses,return,the,transformer,factory,never,code,null;protected,final,transformer,factory,get,transformer,factory,assert,state,this,transformer,factory,null,no,transformer,factory,available,return,this,transformer,factory
XsltView -> protected final TransformerFactory getTransformerFactory();1529361191;Return the TransformerFactory that this XsltView uses._@return the TransformerFactory (never {@code null});protected final TransformerFactory getTransformerFactory() {_		Assert.state(this.transformerFactory != null, "No TransformerFactory available")__		return this.transformerFactory__	};return,the,transformer,factory,that,this,xslt,view,uses,return,the,transformer,factory,never,code,null;protected,final,transformer,factory,get,transformer,factory,assert,state,this,transformer,factory,null,no,transformer,factory,available,return,this,transformer,factory
XsltView -> protected Result createResult(HttpServletResponse response) throws Exception;1328020251;Create the XSLT {@link Result} used to render the result of the transformation._<p>The default implementation creates a {@link StreamResult} wrapping the supplied_HttpServletResponse's {@link HttpServletResponse#getOutputStream() OutputStream}._@param response current HTTP response_@return the XSLT Result to use_@throws Exception if the Result cannot be built;protected Result createResult(HttpServletResponse response) throws Exception {_		return new StreamResult(response.getOutputStream())__	};create,the,xslt,link,result,used,to,render,the,result,of,the,transformation,p,the,default,implementation,creates,a,link,stream,result,wrapping,the,supplied,http,servlet,response,s,link,http,servlet,response,get,output,stream,output,stream,param,response,current,http,response,return,the,xslt,result,to,use,throws,exception,if,the,result,cannot,be,built;protected,result,create,result,http,servlet,response,response,throws,exception,return,new,stream,result,response,get,output,stream
XsltView -> protected Result createResult(HttpServletResponse response) throws Exception;1356735495;Create the XSLT {@link Result} used to render the result of the transformation._<p>The default implementation creates a {@link StreamResult} wrapping the supplied_HttpServletResponse's {@link HttpServletResponse#getOutputStream() OutputStream}._@param response current HTTP response_@return the XSLT Result to use_@throws Exception if the Result cannot be built;protected Result createResult(HttpServletResponse response) throws Exception {_		return new StreamResult(response.getOutputStream())__	};create,the,xslt,link,result,used,to,render,the,result,of,the,transformation,p,the,default,implementation,creates,a,link,stream,result,wrapping,the,supplied,http,servlet,response,s,link,http,servlet,response,get,output,stream,output,stream,param,response,current,http,response,return,the,xslt,result,to,use,throws,exception,if,the,result,cannot,be,built;protected,result,create,result,http,servlet,response,response,throws,exception,return,new,stream,result,response,get,output,stream
XsltView -> protected Result createResult(HttpServletResponse response) throws Exception;1385412762;Create the XSLT {@link Result} used to render the result of the transformation._<p>The default implementation creates a {@link StreamResult} wrapping the supplied_HttpServletResponse's {@link HttpServletResponse#getOutputStream() OutputStream}._@param response current HTTP response_@return the XSLT Result to use_@throws Exception if the Result cannot be built;protected Result createResult(HttpServletResponse response) throws Exception {_		return new StreamResult(response.getOutputStream())__	};create,the,xslt,link,result,used,to,render,the,result,of,the,transformation,p,the,default,implementation,creates,a,link,stream,result,wrapping,the,supplied,http,servlet,response,s,link,http,servlet,response,get,output,stream,output,stream,param,response,current,http,response,return,the,xslt,result,to,use,throws,exception,if,the,result,cannot,be,built;protected,result,create,result,http,servlet,response,response,throws,exception,return,new,stream,result,response,get,output,stream
XsltView -> protected Result createResult(HttpServletResponse response) throws Exception;1385423968;Create the XSLT {@link Result} used to render the result of the transformation._<p>The default implementation creates a {@link StreamResult} wrapping the supplied_HttpServletResponse's {@link HttpServletResponse#getOutputStream() OutputStream}._@param response current HTTP response_@return the XSLT Result to use_@throws Exception if the Result cannot be built;protected Result createResult(HttpServletResponse response) throws Exception {_		return new StreamResult(response.getOutputStream())__	};create,the,xslt,link,result,used,to,render,the,result,of,the,transformation,p,the,default,implementation,creates,a,link,stream,result,wrapping,the,supplied,http,servlet,response,s,link,http,servlet,response,get,output,stream,output,stream,param,response,current,http,response,return,the,xslt,result,to,use,throws,exception,if,the,result,cannot,be,built;protected,result,create,result,http,servlet,response,response,throws,exception,return,new,stream,result,response,get,output,stream
XsltView -> protected Result createResult(HttpServletResponse response) throws Exception;1468948866;Create the XSLT {@link Result} used to render the result of the transformation._<p>The default implementation creates a {@link StreamResult} wrapping the supplied_HttpServletResponse's {@link HttpServletResponse#getOutputStream() OutputStream}._@param response current HTTP response_@return the XSLT Result to use_@throws Exception if the Result cannot be built;protected Result createResult(HttpServletResponse response) throws Exception {_		return new StreamResult(response.getOutputStream())__	};create,the,xslt,link,result,used,to,render,the,result,of,the,transformation,p,the,default,implementation,creates,a,link,stream,result,wrapping,the,supplied,http,servlet,response,s,link,http,servlet,response,get,output,stream,output,stream,param,response,current,http,response,return,the,xslt,result,to,use,throws,exception,if,the,result,cannot,be,built;protected,result,create,result,http,servlet,response,response,throws,exception,return,new,stream,result,response,get,output,stream
XsltView -> protected Result createResult(HttpServletResponse response) throws Exception;1469047316;Create the XSLT {@link Result} used to render the result of the transformation._<p>The default implementation creates a {@link StreamResult} wrapping the supplied_HttpServletResponse's {@link HttpServletResponse#getOutputStream() OutputStream}._@param response current HTTP response_@return the XSLT Result to use_@throws Exception if the Result cannot be built;protected Result createResult(HttpServletResponse response) throws Exception {_		return new StreamResult(response.getOutputStream())__	};create,the,xslt,link,result,used,to,render,the,result,of,the,transformation,p,the,default,implementation,creates,a,link,stream,result,wrapping,the,supplied,http,servlet,response,s,link,http,servlet,response,get,output,stream,output,stream,param,response,current,http,response,return,the,xslt,result,to,use,throws,exception,if,the,result,cannot,be,built;protected,result,create,result,http,servlet,response,response,throws,exception,return,new,stream,result,response,get,output,stream
XsltView -> protected Result createResult(HttpServletResponse response) throws Exception;1483750478;Create the XSLT {@link Result} used to render the result of the transformation._<p>The default implementation creates a {@link StreamResult} wrapping the supplied_HttpServletResponse's {@link HttpServletResponse#getOutputStream() OutputStream}._@param response current HTTP response_@return the XSLT Result to use_@throws Exception if the Result cannot be built;protected Result createResult(HttpServletResponse response) throws Exception {_		return new StreamResult(response.getOutputStream())__	};create,the,xslt,link,result,used,to,render,the,result,of,the,transformation,p,the,default,implementation,creates,a,link,stream,result,wrapping,the,supplied,http,servlet,response,s,link,http,servlet,response,get,output,stream,output,stream,param,response,current,http,response,return,the,xslt,result,to,use,throws,exception,if,the,result,cannot,be,built;protected,result,create,result,http,servlet,response,response,throws,exception,return,new,stream,result,response,get,output,stream
XsltView -> protected Result createResult(HttpServletResponse response) throws Exception;1495868221;Create the XSLT {@link Result} used to render the result of the transformation._<p>The default implementation creates a {@link StreamResult} wrapping the supplied_HttpServletResponse's {@link HttpServletResponse#getOutputStream() OutputStream}._@param response current HTTP response_@return the XSLT Result to use_@throws Exception if the Result cannot be built;protected Result createResult(HttpServletResponse response) throws Exception {_		return new StreamResult(response.getOutputStream())__	};create,the,xslt,link,result,used,to,render,the,result,of,the,transformation,p,the,default,implementation,creates,a,link,stream,result,wrapping,the,supplied,http,servlet,response,s,link,http,servlet,response,get,output,stream,output,stream,param,response,current,http,response,return,the,xslt,result,to,use,throws,exception,if,the,result,cannot,be,built;protected,result,create,result,http,servlet,response,response,throws,exception,return,new,stream,result,response,get,output,stream
XsltView -> protected Result createResult(HttpServletResponse response) throws Exception;1496837955;Create the XSLT {@link Result} used to render the result of the transformation._<p>The default implementation creates a {@link StreamResult} wrapping the supplied_HttpServletResponse's {@link HttpServletResponse#getOutputStream() OutputStream}._@param response current HTTP response_@return the XSLT Result to use_@throws Exception if the Result cannot be built;protected Result createResult(HttpServletResponse response) throws Exception {_		return new StreamResult(response.getOutputStream())__	};create,the,xslt,link,result,used,to,render,the,result,of,the,transformation,p,the,default,implementation,creates,a,link,stream,result,wrapping,the,supplied,http,servlet,response,s,link,http,servlet,response,get,output,stream,output,stream,param,response,current,http,response,return,the,xslt,result,to,use,throws,exception,if,the,result,cannot,be,built;protected,result,create,result,http,servlet,response,response,throws,exception,return,new,stream,result,response,get,output,stream
XsltView -> protected Result createResult(HttpServletResponse response) throws Exception;1497250713;Create the XSLT {@link Result} used to render the result of the transformation._<p>The default implementation creates a {@link StreamResult} wrapping the supplied_HttpServletResponse's {@link HttpServletResponse#getOutputStream() OutputStream}._@param response current HTTP response_@return the XSLT Result to use_@throws Exception if the Result cannot be built;protected Result createResult(HttpServletResponse response) throws Exception {_		return new StreamResult(response.getOutputStream())__	};create,the,xslt,link,result,used,to,render,the,result,of,the,transformation,p,the,default,implementation,creates,a,link,stream,result,wrapping,the,supplied,http,servlet,response,s,link,http,servlet,response,get,output,stream,output,stream,param,response,current,http,response,return,the,xslt,result,to,use,throws,exception,if,the,result,cannot,be,built;protected,result,create,result,http,servlet,response,response,throws,exception,return,new,stream,result,response,get,output,stream
XsltView -> protected Result createResult(HttpServletResponse response) throws Exception;1498780456;Create the XSLT {@link Result} used to render the result of the transformation._<p>The default implementation creates a {@link StreamResult} wrapping the supplied_HttpServletResponse's {@link HttpServletResponse#getOutputStream() OutputStream}._@param response current HTTP response_@return the XSLT Result to use_@throws Exception if the Result cannot be built;protected Result createResult(HttpServletResponse response) throws Exception {_		return new StreamResult(response.getOutputStream())__	};create,the,xslt,link,result,used,to,render,the,result,of,the,transformation,p,the,default,implementation,creates,a,link,stream,result,wrapping,the,supplied,http,servlet,response,s,link,http,servlet,response,get,output,stream,output,stream,param,response,current,http,response,return,the,xslt,result,to,use,throws,exception,if,the,result,cannot,be,built;protected,result,create,result,http,servlet,response,response,throws,exception,return,new,stream,result,response,get,output,stream
XsltView -> protected Result createResult(HttpServletResponse response) throws Exception;1508532146;Create the XSLT {@link Result} used to render the result of the transformation._<p>The default implementation creates a {@link StreamResult} wrapping the supplied_HttpServletResponse's {@link HttpServletResponse#getOutputStream() OutputStream}._@param response current HTTP response_@return the XSLT Result to use_@throws Exception if the Result cannot be built;protected Result createResult(HttpServletResponse response) throws Exception {_		return new StreamResult(response.getOutputStream())__	};create,the,xslt,link,result,used,to,render,the,result,of,the,transformation,p,the,default,implementation,creates,a,link,stream,result,wrapping,the,supplied,http,servlet,response,s,link,http,servlet,response,get,output,stream,output,stream,param,response,current,http,response,return,the,xslt,result,to,use,throws,exception,if,the,result,cannot,be,built;protected,result,create,result,http,servlet,response,response,throws,exception,return,new,stream,result,response,get,output,stream
XsltView -> protected Result createResult(HttpServletResponse response) throws Exception;1529361191;Create the XSLT {@link Result} used to render the result of the transformation._<p>The default implementation creates a {@link StreamResult} wrapping the supplied_HttpServletResponse's {@link HttpServletResponse#getOutputStream() OutputStream}._@param response current HTTP response_@return the XSLT Result to use_@throws Exception if the Result cannot be built;protected Result createResult(HttpServletResponse response) throws Exception {_		return new StreamResult(response.getOutputStream())__	};create,the,xslt,link,result,used,to,render,the,result,of,the,transformation,p,the,default,implementation,creates,a,link,stream,result,wrapping,the,supplied,http,servlet,response,s,link,http,servlet,response,get,output,stream,output,stream,param,response,current,http,response,return,the,xslt,result,to,use,throws,exception,if,the,result,cannot,be,built;protected,result,create,result,http,servlet,response,response,throws,exception,return,new,stream,result,response,get,output,stream
XsltView -> public void setIndent(boolean indent);1328020251;Set whether the XSLT transformer may add additional whitespace when_outputting the result tree._<p>Default is <code>true</code> (on)_ set this to <code>false</code> (off)_to not specify an "indent" key, leaving the choice up to the stylesheet._@see javax.xml.transform.OutputKeys#INDENT;public void setIndent(boolean indent) {_		this.indent = indent__	};set,whether,the,xslt,transformer,may,add,additional,whitespace,when,outputting,the,result,tree,p,default,is,code,true,code,on,set,this,to,code,false,code,off,to,not,specify,an,indent,key,leaving,the,choice,up,to,the,stylesheet,see,javax,xml,transform,output,keys,indent;public,void,set,indent,boolean,indent,this,indent,indent
XsltView -> public void setIndent(boolean indent);1356735495;Set whether the XSLT transformer may add additional whitespace when_outputting the result tree._<p>Default is {@code true} (on)_ set this to {@code false} (off)_to not specify an "indent" key, leaving the choice up to the stylesheet._@see javax.xml.transform.OutputKeys#INDENT;public void setIndent(boolean indent) {_		this.indent = indent__	};set,whether,the,xslt,transformer,may,add,additional,whitespace,when,outputting,the,result,tree,p,default,is,code,true,on,set,this,to,code,false,off,to,not,specify,an,indent,key,leaving,the,choice,up,to,the,stylesheet,see,javax,xml,transform,output,keys,indent;public,void,set,indent,boolean,indent,this,indent,indent
XsltView -> public void setIndent(boolean indent);1385412762;Set whether the XSLT transformer may add additional whitespace when_outputting the result tree._<p>Default is {@code true} (on)_ set this to {@code false} (off)_to not specify an "indent" key, leaving the choice up to the stylesheet._@see javax.xml.transform.OutputKeys#INDENT;public void setIndent(boolean indent) {_		this.indent = indent__	};set,whether,the,xslt,transformer,may,add,additional,whitespace,when,outputting,the,result,tree,p,default,is,code,true,on,set,this,to,code,false,off,to,not,specify,an,indent,key,leaving,the,choice,up,to,the,stylesheet,see,javax,xml,transform,output,keys,indent;public,void,set,indent,boolean,indent,this,indent,indent
XsltView -> public void setIndent(boolean indent);1385423968;Set whether the XSLT transformer may add additional whitespace when_outputting the result tree._<p>Default is {@code true} (on)_ set this to {@code false} (off)_to not specify an "indent" key, leaving the choice up to the stylesheet._@see javax.xml.transform.OutputKeys#INDENT;public void setIndent(boolean indent) {_		this.indent = indent__	};set,whether,the,xslt,transformer,may,add,additional,whitespace,when,outputting,the,result,tree,p,default,is,code,true,on,set,this,to,code,false,off,to,not,specify,an,indent,key,leaving,the,choice,up,to,the,stylesheet,see,javax,xml,transform,output,keys,indent;public,void,set,indent,boolean,indent,this,indent,indent
XsltView -> public void setIndent(boolean indent);1468948866;Set whether the XSLT transformer may add additional whitespace when_outputting the result tree._<p>Default is {@code true} (on)_ set this to {@code false} (off)_to not specify an "indent" key, leaving the choice up to the stylesheet._@see javax.xml.transform.OutputKeys#INDENT;public void setIndent(boolean indent) {_		this.indent = indent__	};set,whether,the,xslt,transformer,may,add,additional,whitespace,when,outputting,the,result,tree,p,default,is,code,true,on,set,this,to,code,false,off,to,not,specify,an,indent,key,leaving,the,choice,up,to,the,stylesheet,see,javax,xml,transform,output,keys,indent;public,void,set,indent,boolean,indent,this,indent,indent
XsltView -> public void setIndent(boolean indent);1469047316;Set whether the XSLT transformer may add additional whitespace when_outputting the result tree._<p>Default is {@code true} (on)_ set this to {@code false} (off)_to not specify an "indent" key, leaving the choice up to the stylesheet._@see javax.xml.transform.OutputKeys#INDENT;public void setIndent(boolean indent) {_		this.indent = indent__	};set,whether,the,xslt,transformer,may,add,additional,whitespace,when,outputting,the,result,tree,p,default,is,code,true,on,set,this,to,code,false,off,to,not,specify,an,indent,key,leaving,the,choice,up,to,the,stylesheet,see,javax,xml,transform,output,keys,indent;public,void,set,indent,boolean,indent,this,indent,indent
XsltView -> public void setIndent(boolean indent);1483750478;Set whether the XSLT transformer may add additional whitespace when_outputting the result tree._<p>Default is {@code true} (on)_ set this to {@code false} (off)_to not specify an "indent" key, leaving the choice up to the stylesheet._@see javax.xml.transform.OutputKeys#INDENT;public void setIndent(boolean indent) {_		this.indent = indent__	};set,whether,the,xslt,transformer,may,add,additional,whitespace,when,outputting,the,result,tree,p,default,is,code,true,on,set,this,to,code,false,off,to,not,specify,an,indent,key,leaving,the,choice,up,to,the,stylesheet,see,javax,xml,transform,output,keys,indent;public,void,set,indent,boolean,indent,this,indent,indent
XsltView -> public void setIndent(boolean indent);1495868221;Set whether the XSLT transformer may add additional whitespace when_outputting the result tree._<p>Default is {@code true} (on)_ set this to {@code false} (off)_to not specify an "indent" key, leaving the choice up to the stylesheet._@see javax.xml.transform.OutputKeys#INDENT;public void setIndent(boolean indent) {_		this.indent = indent__	};set,whether,the,xslt,transformer,may,add,additional,whitespace,when,outputting,the,result,tree,p,default,is,code,true,on,set,this,to,code,false,off,to,not,specify,an,indent,key,leaving,the,choice,up,to,the,stylesheet,see,javax,xml,transform,output,keys,indent;public,void,set,indent,boolean,indent,this,indent,indent
XsltView -> public void setIndent(boolean indent);1496837955;Set whether the XSLT transformer may add additional whitespace when_outputting the result tree._<p>Default is {@code true} (on)_ set this to {@code false} (off)_to not specify an "indent" key, leaving the choice up to the stylesheet._@see javax.xml.transform.OutputKeys#INDENT;public void setIndent(boolean indent) {_		this.indent = indent__	};set,whether,the,xslt,transformer,may,add,additional,whitespace,when,outputting,the,result,tree,p,default,is,code,true,on,set,this,to,code,false,off,to,not,specify,an,indent,key,leaving,the,choice,up,to,the,stylesheet,see,javax,xml,transform,output,keys,indent;public,void,set,indent,boolean,indent,this,indent,indent
XsltView -> public void setIndent(boolean indent);1497250713;Set whether the XSLT transformer may add additional whitespace when_outputting the result tree._<p>Default is {@code true} (on)_ set this to {@code false} (off)_to not specify an "indent" key, leaving the choice up to the stylesheet._@see javax.xml.transform.OutputKeys#INDENT;public void setIndent(boolean indent) {_		this.indent = indent__	};set,whether,the,xslt,transformer,may,add,additional,whitespace,when,outputting,the,result,tree,p,default,is,code,true,on,set,this,to,code,false,off,to,not,specify,an,indent,key,leaving,the,choice,up,to,the,stylesheet,see,javax,xml,transform,output,keys,indent;public,void,set,indent,boolean,indent,this,indent,indent
XsltView -> public void setIndent(boolean indent);1498780456;Set whether the XSLT transformer may add additional whitespace when_outputting the result tree._<p>Default is {@code true} (on)_ set this to {@code false} (off)_to not specify an "indent" key, leaving the choice up to the stylesheet._@see javax.xml.transform.OutputKeys#INDENT;public void setIndent(boolean indent) {_		this.indent = indent__	};set,whether,the,xslt,transformer,may,add,additional,whitespace,when,outputting,the,result,tree,p,default,is,code,true,on,set,this,to,code,false,off,to,not,specify,an,indent,key,leaving,the,choice,up,to,the,stylesheet,see,javax,xml,transform,output,keys,indent;public,void,set,indent,boolean,indent,this,indent,indent
XsltView -> public void setIndent(boolean indent);1508532146;Set whether the XSLT transformer may add additional whitespace when_outputting the result tree._<p>Default is {@code true} (on)_ set this to {@code false} (off)_to not specify an "indent" key, leaving the choice up to the stylesheet._@see javax.xml.transform.OutputKeys#INDENT;public void setIndent(boolean indent) {_		this.indent = indent__	};set,whether,the,xslt,transformer,may,add,additional,whitespace,when,outputting,the,result,tree,p,default,is,code,true,on,set,this,to,code,false,off,to,not,specify,an,indent,key,leaving,the,choice,up,to,the,stylesheet,see,javax,xml,transform,output,keys,indent;public,void,set,indent,boolean,indent,this,indent,indent
XsltView -> public void setIndent(boolean indent);1529361191;Set whether the XSLT transformer may add additional whitespace when_outputting the result tree._<p>Default is {@code true} (on)_ set this to {@code false} (off)_to not specify an "indent" key, leaving the choice up to the stylesheet._@see javax.xml.transform.OutputKeys#INDENT;public void setIndent(boolean indent) {_		this.indent = indent__	};set,whether,the,xslt,transformer,may,add,additional,whitespace,when,outputting,the,result,tree,p,default,is,code,true,on,set,this,to,code,false,off,to,not,specify,an,indent,key,leaving,the,choice,up,to,the,stylesheet,see,javax,xml,transform,output,keys,indent;public,void,set,indent,boolean,indent,this,indent,indent
XsltView -> protected Source convertSource(Object source) throws Exception;1328020251;Convert the supplied {@link Object} into an XSLT {@link Source} if the_{@link Object} type is {@link #getSourceTypes() supported}._@param source the original source object_@return the adapted XSLT Source_@throws IllegalArgumentException if the given Object is not of a supported type;protected Source convertSource(Object source) throws Exception {_		if (source instanceof Source) {_			return (Source) source__		}_		else if (source instanceof Document) {_			return new DOMSource(((Document) source).getDocumentElement())__		}_		else if (source instanceof Node) {_			return new DOMSource((Node) source)__		}_		else if (source instanceof Reader) {_			return new StreamSource((Reader) source)__		}_		else if (source instanceof InputStream) {_			return new StreamSource((InputStream) source)__		}_		else if (source instanceof Resource) {_			Resource resource = (Resource) source__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		else {_			throw new IllegalArgumentException("Value '" + source + "' cannot be converted to XSLT Source")__		}_	};convert,the,supplied,link,object,into,an,xslt,link,source,if,the,link,object,type,is,link,get,source,types,supported,param,source,the,original,source,object,return,the,adapted,xslt,source,throws,illegal,argument,exception,if,the,given,object,is,not,of,a,supported,type;protected,source,convert,source,object,source,throws,exception,if,source,instanceof,source,return,source,source,else,if,source,instanceof,document,return,new,domsource,document,source,get,document,element,else,if,source,instanceof,node,return,new,domsource,node,source,else,if,source,instanceof,reader,return,new,stream,source,reader,source,else,if,source,instanceof,input,stream,return,new,stream,source,input,stream,source,else,if,source,instanceof,resource,resource,resource,resource,source,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,else,throw,new,illegal,argument,exception,value,source,cannot,be,converted,to,xslt,source
XsltView -> protected Source convertSource(Object source) throws Exception;1356735495;Convert the supplied {@link Object} into an XSLT {@link Source} if the_{@link Object} type is {@link #getSourceTypes() supported}._@param source the original source object_@return the adapted XSLT Source_@throws IllegalArgumentException if the given Object is not of a supported type;protected Source convertSource(Object source) throws Exception {_		if (source instanceof Source) {_			return (Source) source__		}_		else if (source instanceof Document) {_			return new DOMSource(((Document) source).getDocumentElement())__		}_		else if (source instanceof Node) {_			return new DOMSource((Node) source)__		}_		else if (source instanceof Reader) {_			return new StreamSource((Reader) source)__		}_		else if (source instanceof InputStream) {_			return new StreamSource((InputStream) source)__		}_		else if (source instanceof Resource) {_			Resource resource = (Resource) source__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		else {_			throw new IllegalArgumentException("Value '" + source + "' cannot be converted to XSLT Source")__		}_	};convert,the,supplied,link,object,into,an,xslt,link,source,if,the,link,object,type,is,link,get,source,types,supported,param,source,the,original,source,object,return,the,adapted,xslt,source,throws,illegal,argument,exception,if,the,given,object,is,not,of,a,supported,type;protected,source,convert,source,object,source,throws,exception,if,source,instanceof,source,return,source,source,else,if,source,instanceof,document,return,new,domsource,document,source,get,document,element,else,if,source,instanceof,node,return,new,domsource,node,source,else,if,source,instanceof,reader,return,new,stream,source,reader,source,else,if,source,instanceof,input,stream,return,new,stream,source,input,stream,source,else,if,source,instanceof,resource,resource,resource,resource,source,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,else,throw,new,illegal,argument,exception,value,source,cannot,be,converted,to,xslt,source
XsltView -> protected Source convertSource(Object source) throws Exception;1385412762;Convert the supplied {@link Object} into an XSLT {@link Source} if the_{@link Object} type is {@link #getSourceTypes() supported}._@param source the original source object_@return the adapted XSLT Source_@throws IllegalArgumentException if the given Object is not of a supported type;protected Source convertSource(Object source) throws Exception {_		if (source instanceof Source) {_			return (Source) source__		}_		else if (source instanceof Document) {_			return new DOMSource(((Document) source).getDocumentElement())__		}_		else if (source instanceof Node) {_			return new DOMSource((Node) source)__		}_		else if (source instanceof Reader) {_			return new StreamSource((Reader) source)__		}_		else if (source instanceof InputStream) {_			return new StreamSource((InputStream) source)__		}_		else if (source instanceof Resource) {_			Resource resource = (Resource) source__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		else {_			throw new IllegalArgumentException("Value '" + source + "' cannot be converted to XSLT Source")__		}_	};convert,the,supplied,link,object,into,an,xslt,link,source,if,the,link,object,type,is,link,get,source,types,supported,param,source,the,original,source,object,return,the,adapted,xslt,source,throws,illegal,argument,exception,if,the,given,object,is,not,of,a,supported,type;protected,source,convert,source,object,source,throws,exception,if,source,instanceof,source,return,source,source,else,if,source,instanceof,document,return,new,domsource,document,source,get,document,element,else,if,source,instanceof,node,return,new,domsource,node,source,else,if,source,instanceof,reader,return,new,stream,source,reader,source,else,if,source,instanceof,input,stream,return,new,stream,source,input,stream,source,else,if,source,instanceof,resource,resource,resource,resource,source,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,else,throw,new,illegal,argument,exception,value,source,cannot,be,converted,to,xslt,source
XsltView -> protected Source convertSource(Object source) throws Exception;1385423968;Convert the supplied {@link Object} into an XSLT {@link Source} if the_{@link Object} type is {@link #getSourceTypes() supported}._@param source the original source object_@return the adapted XSLT Source_@throws IllegalArgumentException if the given Object is not of a supported type;protected Source convertSource(Object source) throws Exception {_		if (source instanceof Source) {_			return (Source) source__		}_		else if (source instanceof Document) {_			return new DOMSource(((Document) source).getDocumentElement())__		}_		else if (source instanceof Node) {_			return new DOMSource((Node) source)__		}_		else if (source instanceof Reader) {_			return new StreamSource((Reader) source)__		}_		else if (source instanceof InputStream) {_			return new StreamSource((InputStream) source)__		}_		else if (source instanceof Resource) {_			Resource resource = (Resource) source__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		else {_			throw new IllegalArgumentException("Value '" + source + "' cannot be converted to XSLT Source")__		}_	};convert,the,supplied,link,object,into,an,xslt,link,source,if,the,link,object,type,is,link,get,source,types,supported,param,source,the,original,source,object,return,the,adapted,xslt,source,throws,illegal,argument,exception,if,the,given,object,is,not,of,a,supported,type;protected,source,convert,source,object,source,throws,exception,if,source,instanceof,source,return,source,source,else,if,source,instanceof,document,return,new,domsource,document,source,get,document,element,else,if,source,instanceof,node,return,new,domsource,node,source,else,if,source,instanceof,reader,return,new,stream,source,reader,source,else,if,source,instanceof,input,stream,return,new,stream,source,input,stream,source,else,if,source,instanceof,resource,resource,resource,resource,source,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,else,throw,new,illegal,argument,exception,value,source,cannot,be,converted,to,xslt,source
XsltView -> protected Source convertSource(Object source) throws Exception;1468948866;Convert the supplied {@link Object} into an XSLT {@link Source} if the_{@link Object} type is {@link #getSourceTypes() supported}._@param source the original source object_@return the adapted XSLT Source_@throws IllegalArgumentException if the given Object is not of a supported type;protected Source convertSource(Object source) throws Exception {_		if (source instanceof Source) {_			return (Source) source__		}_		else if (source instanceof Document) {_			return new DOMSource(((Document) source).getDocumentElement())__		}_		else if (source instanceof Node) {_			return new DOMSource((Node) source)__		}_		else if (source instanceof Reader) {_			return new StreamSource((Reader) source)__		}_		else if (source instanceof InputStream) {_			return new StreamSource((InputStream) source)__		}_		else if (source instanceof Resource) {_			Resource resource = (Resource) source__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		else {_			throw new IllegalArgumentException("Value '" + source + "' cannot be converted to XSLT Source")__		}_	};convert,the,supplied,link,object,into,an,xslt,link,source,if,the,link,object,type,is,link,get,source,types,supported,param,source,the,original,source,object,return,the,adapted,xslt,source,throws,illegal,argument,exception,if,the,given,object,is,not,of,a,supported,type;protected,source,convert,source,object,source,throws,exception,if,source,instanceof,source,return,source,source,else,if,source,instanceof,document,return,new,domsource,document,source,get,document,element,else,if,source,instanceof,node,return,new,domsource,node,source,else,if,source,instanceof,reader,return,new,stream,source,reader,source,else,if,source,instanceof,input,stream,return,new,stream,source,input,stream,source,else,if,source,instanceof,resource,resource,resource,resource,source,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,else,throw,new,illegal,argument,exception,value,source,cannot,be,converted,to,xslt,source
XsltView -> protected Source convertSource(Object source) throws Exception;1469047316;Convert the supplied {@link Object} into an XSLT {@link Source} if the_{@link Object} type is {@link #getSourceTypes() supported}._@param source the original source object_@return the adapted XSLT Source_@throws IllegalArgumentException if the given Object is not of a supported type;protected Source convertSource(Object source) throws Exception {_		if (source instanceof Source) {_			return (Source) source__		}_		else if (source instanceof Document) {_			return new DOMSource(((Document) source).getDocumentElement())__		}_		else if (source instanceof Node) {_			return new DOMSource((Node) source)__		}_		else if (source instanceof Reader) {_			return new StreamSource((Reader) source)__		}_		else if (source instanceof InputStream) {_			return new StreamSource((InputStream) source)__		}_		else if (source instanceof Resource) {_			Resource resource = (Resource) source__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		else {_			throw new IllegalArgumentException("Value '" + source + "' cannot be converted to XSLT Source")__		}_	};convert,the,supplied,link,object,into,an,xslt,link,source,if,the,link,object,type,is,link,get,source,types,supported,param,source,the,original,source,object,return,the,adapted,xslt,source,throws,illegal,argument,exception,if,the,given,object,is,not,of,a,supported,type;protected,source,convert,source,object,source,throws,exception,if,source,instanceof,source,return,source,source,else,if,source,instanceof,document,return,new,domsource,document,source,get,document,element,else,if,source,instanceof,node,return,new,domsource,node,source,else,if,source,instanceof,reader,return,new,stream,source,reader,source,else,if,source,instanceof,input,stream,return,new,stream,source,input,stream,source,else,if,source,instanceof,resource,resource,resource,resource,source,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,else,throw,new,illegal,argument,exception,value,source,cannot,be,converted,to,xslt,source
XsltView -> protected Source convertSource(Object source) throws Exception;1483750478;Convert the supplied {@link Object} into an XSLT {@link Source} if the_{@link Object} type is {@link #getSourceTypes() supported}._@param source the original source object_@return the adapted XSLT Source_@throws IllegalArgumentException if the given Object is not of a supported type;protected Source convertSource(Object source) throws Exception {_		if (source instanceof Source) {_			return (Source) source__		}_		else if (source instanceof Document) {_			return new DOMSource(((Document) source).getDocumentElement())__		}_		else if (source instanceof Node) {_			return new DOMSource((Node) source)__		}_		else if (source instanceof Reader) {_			return new StreamSource((Reader) source)__		}_		else if (source instanceof InputStream) {_			return new StreamSource((InputStream) source)__		}_		else if (source instanceof Resource) {_			Resource resource = (Resource) source__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		else {_			throw new IllegalArgumentException("Value '" + source + "' cannot be converted to XSLT Source")__		}_	};convert,the,supplied,link,object,into,an,xslt,link,source,if,the,link,object,type,is,link,get,source,types,supported,param,source,the,original,source,object,return,the,adapted,xslt,source,throws,illegal,argument,exception,if,the,given,object,is,not,of,a,supported,type;protected,source,convert,source,object,source,throws,exception,if,source,instanceof,source,return,source,source,else,if,source,instanceof,document,return,new,domsource,document,source,get,document,element,else,if,source,instanceof,node,return,new,domsource,node,source,else,if,source,instanceof,reader,return,new,stream,source,reader,source,else,if,source,instanceof,input,stream,return,new,stream,source,input,stream,source,else,if,source,instanceof,resource,resource,resource,resource,source,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,else,throw,new,illegal,argument,exception,value,source,cannot,be,converted,to,xslt,source
XsltView -> protected Source convertSource(Object source) throws Exception;1495868221;Convert the supplied {@link Object} into an XSLT {@link Source} if the_{@link Object} type is {@link #getSourceTypes() supported}._@param source the original source object_@return the adapted XSLT Source_@throws IllegalArgumentException if the given Object is not of a supported type;protected Source convertSource(Object source) throws Exception {_		if (source instanceof Source) {_			return (Source) source__		}_		else if (source instanceof Document) {_			return new DOMSource(((Document) source).getDocumentElement())__		}_		else if (source instanceof Node) {_			return new DOMSource((Node) source)__		}_		else if (source instanceof Reader) {_			return new StreamSource((Reader) source)__		}_		else if (source instanceof InputStream) {_			return new StreamSource((InputStream) source)__		}_		else if (source instanceof Resource) {_			Resource resource = (Resource) source__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		else {_			throw new IllegalArgumentException("Value '" + source + "' cannot be converted to XSLT Source")__		}_	};convert,the,supplied,link,object,into,an,xslt,link,source,if,the,link,object,type,is,link,get,source,types,supported,param,source,the,original,source,object,return,the,adapted,xslt,source,throws,illegal,argument,exception,if,the,given,object,is,not,of,a,supported,type;protected,source,convert,source,object,source,throws,exception,if,source,instanceof,source,return,source,source,else,if,source,instanceof,document,return,new,domsource,document,source,get,document,element,else,if,source,instanceof,node,return,new,domsource,node,source,else,if,source,instanceof,reader,return,new,stream,source,reader,source,else,if,source,instanceof,input,stream,return,new,stream,source,input,stream,source,else,if,source,instanceof,resource,resource,resource,resource,source,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,else,throw,new,illegal,argument,exception,value,source,cannot,be,converted,to,xslt,source
XsltView -> protected Source convertSource(Object source) throws Exception;1496837955;Convert the supplied {@link Object} into an XSLT {@link Source} if the_{@link Object} type is {@link #getSourceTypes() supported}._@param source the original source object_@return the adapted XSLT Source_@throws IllegalArgumentException if the given Object is not of a supported type;protected Source convertSource(Object source) throws Exception {_		if (source instanceof Source) {_			return (Source) source__		}_		else if (source instanceof Document) {_			return new DOMSource(((Document) source).getDocumentElement())__		}_		else if (source instanceof Node) {_			return new DOMSource((Node) source)__		}_		else if (source instanceof Reader) {_			return new StreamSource((Reader) source)__		}_		else if (source instanceof InputStream) {_			return new StreamSource((InputStream) source)__		}_		else if (source instanceof Resource) {_			Resource resource = (Resource) source__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		else {_			throw new IllegalArgumentException("Value '" + source + "' cannot be converted to XSLT Source")__		}_	};convert,the,supplied,link,object,into,an,xslt,link,source,if,the,link,object,type,is,link,get,source,types,supported,param,source,the,original,source,object,return,the,adapted,xslt,source,throws,illegal,argument,exception,if,the,given,object,is,not,of,a,supported,type;protected,source,convert,source,object,source,throws,exception,if,source,instanceof,source,return,source,source,else,if,source,instanceof,document,return,new,domsource,document,source,get,document,element,else,if,source,instanceof,node,return,new,domsource,node,source,else,if,source,instanceof,reader,return,new,stream,source,reader,source,else,if,source,instanceof,input,stream,return,new,stream,source,input,stream,source,else,if,source,instanceof,resource,resource,resource,resource,source,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,else,throw,new,illegal,argument,exception,value,source,cannot,be,converted,to,xslt,source
XsltView -> protected Source convertSource(Object source) throws Exception;1497250713;Convert the supplied {@link Object} into an XSLT {@link Source} if the_{@link Object} type is {@link #getSourceTypes() supported}._@param source the original source object_@return the adapted XSLT Source_@throws IllegalArgumentException if the given Object is not of a supported type;protected Source convertSource(Object source) throws Exception {_		if (source instanceof Source) {_			return (Source) source__		}_		else if (source instanceof Document) {_			return new DOMSource(((Document) source).getDocumentElement())__		}_		else if (source instanceof Node) {_			return new DOMSource((Node) source)__		}_		else if (source instanceof Reader) {_			return new StreamSource((Reader) source)__		}_		else if (source instanceof InputStream) {_			return new StreamSource((InputStream) source)__		}_		else if (source instanceof Resource) {_			Resource resource = (Resource) source__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		else {_			throw new IllegalArgumentException("Value '" + source + "' cannot be converted to XSLT Source")__		}_	};convert,the,supplied,link,object,into,an,xslt,link,source,if,the,link,object,type,is,link,get,source,types,supported,param,source,the,original,source,object,return,the,adapted,xslt,source,throws,illegal,argument,exception,if,the,given,object,is,not,of,a,supported,type;protected,source,convert,source,object,source,throws,exception,if,source,instanceof,source,return,source,source,else,if,source,instanceof,document,return,new,domsource,document,source,get,document,element,else,if,source,instanceof,node,return,new,domsource,node,source,else,if,source,instanceof,reader,return,new,stream,source,reader,source,else,if,source,instanceof,input,stream,return,new,stream,source,input,stream,source,else,if,source,instanceof,resource,resource,resource,resource,source,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,else,throw,new,illegal,argument,exception,value,source,cannot,be,converted,to,xslt,source
XsltView -> protected Source convertSource(Object source) throws Exception;1498780456;Convert the supplied {@link Object} into an XSLT {@link Source} if the_{@link Object} type is {@link #getSourceTypes() supported}._@param source the original source object_@return the adapted XSLT Source_@throws IllegalArgumentException if the given Object is not of a supported type;protected Source convertSource(Object source) throws Exception {_		if (source instanceof Source) {_			return (Source) source__		}_		else if (source instanceof Document) {_			return new DOMSource(((Document) source).getDocumentElement())__		}_		else if (source instanceof Node) {_			return new DOMSource((Node) source)__		}_		else if (source instanceof Reader) {_			return new StreamSource((Reader) source)__		}_		else if (source instanceof InputStream) {_			return new StreamSource((InputStream) source)__		}_		else if (source instanceof Resource) {_			Resource resource = (Resource) source__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		else {_			throw new IllegalArgumentException("Value '" + source + "' cannot be converted to XSLT Source")__		}_	};convert,the,supplied,link,object,into,an,xslt,link,source,if,the,link,object,type,is,link,get,source,types,supported,param,source,the,original,source,object,return,the,adapted,xslt,source,throws,illegal,argument,exception,if,the,given,object,is,not,of,a,supported,type;protected,source,convert,source,object,source,throws,exception,if,source,instanceof,source,return,source,source,else,if,source,instanceof,document,return,new,domsource,document,source,get,document,element,else,if,source,instanceof,node,return,new,domsource,node,source,else,if,source,instanceof,reader,return,new,stream,source,reader,source,else,if,source,instanceof,input,stream,return,new,stream,source,input,stream,source,else,if,source,instanceof,resource,resource,resource,resource,source,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,else,throw,new,illegal,argument,exception,value,source,cannot,be,converted,to,xslt,source
XsltView -> protected Source convertSource(Object source) throws Exception;1508532146;Convert the supplied {@link Object} into an XSLT {@link Source} if the_{@link Object} type is {@link #getSourceTypes() supported}._@param source the original source object_@return the adapted XSLT Source_@throws IllegalArgumentException if the given Object is not of a supported type;protected Source convertSource(Object source) throws Exception {_		if (source instanceof Source) {_			return (Source) source__		}_		else if (source instanceof Document) {_			return new DOMSource(((Document) source).getDocumentElement())__		}_		else if (source instanceof Node) {_			return new DOMSource((Node) source)__		}_		else if (source instanceof Reader) {_			return new StreamSource((Reader) source)__		}_		else if (source instanceof InputStream) {_			return new StreamSource((InputStream) source)__		}_		else if (source instanceof Resource) {_			Resource resource = (Resource) source__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		else {_			throw new IllegalArgumentException("Value '" + source + "' cannot be converted to XSLT Source")__		}_	};convert,the,supplied,link,object,into,an,xslt,link,source,if,the,link,object,type,is,link,get,source,types,supported,param,source,the,original,source,object,return,the,adapted,xslt,source,throws,illegal,argument,exception,if,the,given,object,is,not,of,a,supported,type;protected,source,convert,source,object,source,throws,exception,if,source,instanceof,source,return,source,source,else,if,source,instanceof,document,return,new,domsource,document,source,get,document,element,else,if,source,instanceof,node,return,new,domsource,node,source,else,if,source,instanceof,reader,return,new,stream,source,reader,source,else,if,source,instanceof,input,stream,return,new,stream,source,input,stream,source,else,if,source,instanceof,resource,resource,resource,resource,source,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,else,throw,new,illegal,argument,exception,value,source,cannot,be,converted,to,xslt,source
XsltView -> protected Source convertSource(Object source) throws Exception;1529361191;Convert the supplied {@link Object} into an XSLT {@link Source} if the_{@link Object} type is {@link #getSourceTypes() supported}._@param source the original source object_@return the adapted XSLT Source_@throws IllegalArgumentException if the given Object is not of a supported type;protected Source convertSource(Object source) throws Exception {_		if (source instanceof Source) {_			return (Source) source__		}_		else if (source instanceof Document) {_			return new DOMSource(((Document) source).getDocumentElement())__		}_		else if (source instanceof Node) {_			return new DOMSource((Node) source)__		}_		else if (source instanceof Reader) {_			return new StreamSource((Reader) source)__		}_		else if (source instanceof InputStream) {_			return new StreamSource((InputStream) source)__		}_		else if (source instanceof Resource) {_			Resource resource = (Resource) source__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		else {_			throw new IllegalArgumentException("Value '" + source + "' cannot be converted to XSLT Source")__		}_	};convert,the,supplied,link,object,into,an,xslt,link,source,if,the,link,object,type,is,link,get,source,types,supported,param,source,the,original,source,object,return,the,adapted,xslt,source,throws,illegal,argument,exception,if,the,given,object,is,not,of,a,supported,type;protected,source,convert,source,object,source,throws,exception,if,source,instanceof,source,return,source,source,else,if,source,instanceof,document,return,new,domsource,document,source,get,document,element,else,if,source,instanceof,node,return,new,domsource,node,source,else,if,source,instanceof,reader,return,new,stream,source,reader,source,else,if,source,instanceof,input,stream,return,new,stream,source,input,stream,source,else,if,source,instanceof,resource,resource,resource,resource,source,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,else,throw,new,illegal,argument,exception,value,source,cannot,be,converted,to,xslt,source
XsltView -> protected final void copyOutputProperties(Transformer transformer);1328020251;Copy the configured output {@link Properties}, if any, into the_{@link Transformer#setOutputProperty output property set} of the supplied_{@link Transformer}._@param transformer the target transformer;protected final void copyOutputProperties(Transformer transformer) {_		if (this.outputProperties != null) {_			Enumeration en = this.outputProperties.propertyNames()__			while (en.hasMoreElements()) {_				String name = (String) en.nextElement()__				transformer.setOutputProperty(name, this.outputProperties.getProperty(name))__			}_		}_	};copy,the,configured,output,link,properties,if,any,into,the,link,transformer,set,output,property,output,property,set,of,the,supplied,link,transformer,param,transformer,the,target,transformer;protected,final,void,copy,output,properties,transformer,transformer,if,this,output,properties,null,enumeration,en,this,output,properties,property,names,while,en,has,more,elements,string,name,string,en,next,element,transformer,set,output,property,name,this,output,properties,get,property,name
XsltView -> protected final void copyOutputProperties(Transformer transformer);1356735495;Copy the configured output {@link Properties}, if any, into the_{@link Transformer#setOutputProperty output property set} of the supplied_{@link Transformer}._@param transformer the target transformer;protected final void copyOutputProperties(Transformer transformer) {_		if (this.outputProperties != null) {_			Enumeration en = this.outputProperties.propertyNames()__			while (en.hasMoreElements()) {_				String name = (String) en.nextElement()__				transformer.setOutputProperty(name, this.outputProperties.getProperty(name))__			}_		}_	};copy,the,configured,output,link,properties,if,any,into,the,link,transformer,set,output,property,output,property,set,of,the,supplied,link,transformer,param,transformer,the,target,transformer;protected,final,void,copy,output,properties,transformer,transformer,if,this,output,properties,null,enumeration,en,this,output,properties,property,names,while,en,has,more,elements,string,name,string,en,next,element,transformer,set,output,property,name,this,output,properties,get,property,name
XsltView -> protected final void copyOutputProperties(Transformer transformer);1385412762;Copy the configured output {@link Properties}, if any, into the_{@link Transformer#setOutputProperty output property set} of the supplied_{@link Transformer}._@param transformer the target transformer;protected final void copyOutputProperties(Transformer transformer) {_		if (this.outputProperties != null) {_			Enumeration<?> en = this.outputProperties.propertyNames()__			while (en.hasMoreElements()) {_				String name = (String) en.nextElement()__				transformer.setOutputProperty(name, this.outputProperties.getProperty(name))__			}_		}_	};copy,the,configured,output,link,properties,if,any,into,the,link,transformer,set,output,property,output,property,set,of,the,supplied,link,transformer,param,transformer,the,target,transformer;protected,final,void,copy,output,properties,transformer,transformer,if,this,output,properties,null,enumeration,en,this,output,properties,property,names,while,en,has,more,elements,string,name,string,en,next,element,transformer,set,output,property,name,this,output,properties,get,property,name
XsltView -> protected final void copyOutputProperties(Transformer transformer);1385423968;Copy the configured output {@link Properties}, if any, into the_{@link Transformer#setOutputProperty output property set} of the supplied_{@link Transformer}._@param transformer the target transformer;protected final void copyOutputProperties(Transformer transformer) {_		if (this.outputProperties != null) {_			Enumeration<?> en = this.outputProperties.propertyNames()__			while (en.hasMoreElements()) {_				String name = (String) en.nextElement()__				transformer.setOutputProperty(name, this.outputProperties.getProperty(name))__			}_		}_	};copy,the,configured,output,link,properties,if,any,into,the,link,transformer,set,output,property,output,property,set,of,the,supplied,link,transformer,param,transformer,the,target,transformer;protected,final,void,copy,output,properties,transformer,transformer,if,this,output,properties,null,enumeration,en,this,output,properties,property,names,while,en,has,more,elements,string,name,string,en,next,element,transformer,set,output,property,name,this,output,properties,get,property,name
XsltView -> protected final void copyOutputProperties(Transformer transformer);1468948866;Copy the configured output {@link Properties}, if any, into the_{@link Transformer#setOutputProperty output property set} of the supplied_{@link Transformer}._@param transformer the target transformer;protected final void copyOutputProperties(Transformer transformer) {_		if (this.outputProperties != null) {_			Enumeration<?> en = this.outputProperties.propertyNames()__			while (en.hasMoreElements()) {_				String name = (String) en.nextElement()__				transformer.setOutputProperty(name, this.outputProperties.getProperty(name))__			}_		}_	};copy,the,configured,output,link,properties,if,any,into,the,link,transformer,set,output,property,output,property,set,of,the,supplied,link,transformer,param,transformer,the,target,transformer;protected,final,void,copy,output,properties,transformer,transformer,if,this,output,properties,null,enumeration,en,this,output,properties,property,names,while,en,has,more,elements,string,name,string,en,next,element,transformer,set,output,property,name,this,output,properties,get,property,name
XsltView -> protected final void copyOutputProperties(Transformer transformer);1469047316;Copy the configured output {@link Properties}, if any, into the_{@link Transformer#setOutputProperty output property set} of the supplied_{@link Transformer}._@param transformer the target transformer;protected final void copyOutputProperties(Transformer transformer) {_		if (this.outputProperties != null) {_			Enumeration<?> en = this.outputProperties.propertyNames()__			while (en.hasMoreElements()) {_				String name = (String) en.nextElement()__				transformer.setOutputProperty(name, this.outputProperties.getProperty(name))__			}_		}_	};copy,the,configured,output,link,properties,if,any,into,the,link,transformer,set,output,property,output,property,set,of,the,supplied,link,transformer,param,transformer,the,target,transformer;protected,final,void,copy,output,properties,transformer,transformer,if,this,output,properties,null,enumeration,en,this,output,properties,property,names,while,en,has,more,elements,string,name,string,en,next,element,transformer,set,output,property,name,this,output,properties,get,property,name
XsltView -> protected final void copyOutputProperties(Transformer transformer);1483750478;Copy the configured output {@link Properties}, if any, into the_{@link Transformer#setOutputProperty output property set} of the supplied_{@link Transformer}._@param transformer the target transformer;protected final void copyOutputProperties(Transformer transformer) {_		if (this.outputProperties != null) {_			Enumeration<?> en = this.outputProperties.propertyNames()__			while (en.hasMoreElements()) {_				String name = (String) en.nextElement()__				transformer.setOutputProperty(name, this.outputProperties.getProperty(name))__			}_		}_	};copy,the,configured,output,link,properties,if,any,into,the,link,transformer,set,output,property,output,property,set,of,the,supplied,link,transformer,param,transformer,the,target,transformer;protected,final,void,copy,output,properties,transformer,transformer,if,this,output,properties,null,enumeration,en,this,output,properties,property,names,while,en,has,more,elements,string,name,string,en,next,element,transformer,set,output,property,name,this,output,properties,get,property,name
XsltView -> protected final void copyOutputProperties(Transformer transformer);1495868221;Copy the configured output {@link Properties}, if any, into the_{@link Transformer#setOutputProperty output property set} of the supplied_{@link Transformer}._@param transformer the target transformer;protected final void copyOutputProperties(Transformer transformer) {_		if (this.outputProperties != null) {_			Enumeration<?> en = this.outputProperties.propertyNames()__			while (en.hasMoreElements()) {_				String name = (String) en.nextElement()__				transformer.setOutputProperty(name, this.outputProperties.getProperty(name))__			}_		}_	};copy,the,configured,output,link,properties,if,any,into,the,link,transformer,set,output,property,output,property,set,of,the,supplied,link,transformer,param,transformer,the,target,transformer;protected,final,void,copy,output,properties,transformer,transformer,if,this,output,properties,null,enumeration,en,this,output,properties,property,names,while,en,has,more,elements,string,name,string,en,next,element,transformer,set,output,property,name,this,output,properties,get,property,name
XsltView -> protected final void copyOutputProperties(Transformer transformer);1496837955;Copy the configured output {@link Properties}, if any, into the_{@link Transformer#setOutputProperty output property set} of the supplied_{@link Transformer}._@param transformer the target transformer;protected final void copyOutputProperties(Transformer transformer) {_		if (this.outputProperties != null) {_			Enumeration<?> en = this.outputProperties.propertyNames()__			while (en.hasMoreElements()) {_				String name = (String) en.nextElement()__				transformer.setOutputProperty(name, this.outputProperties.getProperty(name))__			}_		}_	};copy,the,configured,output,link,properties,if,any,into,the,link,transformer,set,output,property,output,property,set,of,the,supplied,link,transformer,param,transformer,the,target,transformer;protected,final,void,copy,output,properties,transformer,transformer,if,this,output,properties,null,enumeration,en,this,output,properties,property,names,while,en,has,more,elements,string,name,string,en,next,element,transformer,set,output,property,name,this,output,properties,get,property,name
XsltView -> protected final void copyOutputProperties(Transformer transformer);1497250713;Copy the configured output {@link Properties}, if any, into the_{@link Transformer#setOutputProperty output property set} of the supplied_{@link Transformer}._@param transformer the target transformer;protected final void copyOutputProperties(Transformer transformer) {_		if (this.outputProperties != null) {_			Enumeration<?> en = this.outputProperties.propertyNames()__			while (en.hasMoreElements()) {_				String name = (String) en.nextElement()__				transformer.setOutputProperty(name, this.outputProperties.getProperty(name))__			}_		}_	};copy,the,configured,output,link,properties,if,any,into,the,link,transformer,set,output,property,output,property,set,of,the,supplied,link,transformer,param,transformer,the,target,transformer;protected,final,void,copy,output,properties,transformer,transformer,if,this,output,properties,null,enumeration,en,this,output,properties,property,names,while,en,has,more,elements,string,name,string,en,next,element,transformer,set,output,property,name,this,output,properties,get,property,name
XsltView -> protected final void copyOutputProperties(Transformer transformer);1498780456;Copy the configured output {@link Properties}, if any, into the_{@link Transformer#setOutputProperty output property set} of the supplied_{@link Transformer}._@param transformer the target transformer;protected final void copyOutputProperties(Transformer transformer) {_		if (this.outputProperties != null) {_			Enumeration<?> en = this.outputProperties.propertyNames()__			while (en.hasMoreElements()) {_				String name = (String) en.nextElement()__				transformer.setOutputProperty(name, this.outputProperties.getProperty(name))__			}_		}_	};copy,the,configured,output,link,properties,if,any,into,the,link,transformer,set,output,property,output,property,set,of,the,supplied,link,transformer,param,transformer,the,target,transformer;protected,final,void,copy,output,properties,transformer,transformer,if,this,output,properties,null,enumeration,en,this,output,properties,property,names,while,en,has,more,elements,string,name,string,en,next,element,transformer,set,output,property,name,this,output,properties,get,property,name
XsltView -> protected final void copyOutputProperties(Transformer transformer);1508532146;Copy the configured output {@link Properties}, if any, into the_{@link Transformer#setOutputProperty output property set} of the supplied_{@link Transformer}._@param transformer the target transformer;protected final void copyOutputProperties(Transformer transformer) {_		if (this.outputProperties != null) {_			Enumeration<?> en = this.outputProperties.propertyNames()__			while (en.hasMoreElements()) {_				String name = (String) en.nextElement()__				transformer.setOutputProperty(name, this.outputProperties.getProperty(name))__			}_		}_	};copy,the,configured,output,link,properties,if,any,into,the,link,transformer,set,output,property,output,property,set,of,the,supplied,link,transformer,param,transformer,the,target,transformer;protected,final,void,copy,output,properties,transformer,transformer,if,this,output,properties,null,enumeration,en,this,output,properties,property,names,while,en,has,more,elements,string,name,string,en,next,element,transformer,set,output,property,name,this,output,properties,get,property,name
XsltView -> protected final void copyOutputProperties(Transformer transformer);1529361191;Copy the configured output {@link Properties}, if any, into the_{@link Transformer#setOutputProperty output property set} of the supplied_{@link Transformer}._@param transformer the target transformer;protected final void copyOutputProperties(Transformer transformer) {_		if (this.outputProperties != null) {_			Enumeration<?> en = this.outputProperties.propertyNames()__			while (en.hasMoreElements()) {_				String name = (String) en.nextElement()__				transformer.setOutputProperty(name, this.outputProperties.getProperty(name))__			}_		}_	};copy,the,configured,output,link,properties,if,any,into,the,link,transformer,set,output,property,output,property,set,of,the,supplied,link,transformer,param,transformer,the,target,transformer;protected,final,void,copy,output,properties,transformer,transformer,if,this,output,properties,null,enumeration,en,this,output,properties,property,names,while,en,has,more,elements,string,name,string,en,next,element,transformer,set,output,property,name,this,output,properties,get,property,name
XsltView -> protected TransformerFactory newTransformerFactory(Class<?> transformerFactoryClass);1385412762;Instantiate a new TransformerFactory for this view._<p>The default implementation simply calls_{@link javax.xml.transform.TransformerFactory#newInstance()}._If a {@link #setTransformerFactoryClass "transformerFactoryClass"}_has been specified explicitly, the default constructor of the_specified class will be called instead._<p>Can be overridden in subclasses._@param transformerFactoryClass the specified factory class (if any)_@return the new TransactionFactory instance_@see #setTransformerFactoryClass_@see #getTransformerFactory();protected TransformerFactory newTransformerFactory(Class<?> transformerFactoryClass) {_		if (transformerFactoryClass != null) {_			try {_				return (TransformerFactory) transformerFactoryClass.newInstance()__			}_			catch (Exception ex) {_				throw new TransformerFactoryConfigurationError(ex, "Could not instantiate TransformerFactory")__			}_		}_		else {_			return TransformerFactory.newInstance()__		}_	};instantiate,a,new,transformer,factory,for,this,view,p,the,default,implementation,simply,calls,link,javax,xml,transform,transformer,factory,new,instance,if,a,link,set,transformer,factory,class,transformer,factory,class,has,been,specified,explicitly,the,default,constructor,of,the,specified,class,will,be,called,instead,p,can,be,overridden,in,subclasses,param,transformer,factory,class,the,specified,factory,class,if,any,return,the,new,transaction,factory,instance,see,set,transformer,factory,class,see,get,transformer,factory;protected,transformer,factory,new,transformer,factory,class,transformer,factory,class,if,transformer,factory,class,null,try,return,transformer,factory,transformer,factory,class,new,instance,catch,exception,ex,throw,new,transformer,factory,configuration,error,ex,could,not,instantiate,transformer,factory,else,return,transformer,factory,new,instance
XsltView -> protected TransformerFactory newTransformerFactory(Class<?> transformerFactoryClass);1385423968;Instantiate a new TransformerFactory for this view._<p>The default implementation simply calls_{@link javax.xml.transform.TransformerFactory#newInstance()}._If a {@link #setTransformerFactoryClass "transformerFactoryClass"}_has been specified explicitly, the default constructor of the_specified class will be called instead._<p>Can be overridden in subclasses._@param transformerFactoryClass the specified factory class (if any)_@return the new TransactionFactory instance_@see #setTransformerFactoryClass_@see #getTransformerFactory();protected TransformerFactory newTransformerFactory(Class<?> transformerFactoryClass) {_		if (transformerFactoryClass != null) {_			try {_				return (TransformerFactory) transformerFactoryClass.newInstance()__			}_			catch (Exception ex) {_				throw new TransformerFactoryConfigurationError(ex, "Could not instantiate TransformerFactory")__			}_		}_		else {_			return TransformerFactory.newInstance()__		}_	};instantiate,a,new,transformer,factory,for,this,view,p,the,default,implementation,simply,calls,link,javax,xml,transform,transformer,factory,new,instance,if,a,link,set,transformer,factory,class,transformer,factory,class,has,been,specified,explicitly,the,default,constructor,of,the,specified,class,will,be,called,instead,p,can,be,overridden,in,subclasses,param,transformer,factory,class,the,specified,factory,class,if,any,return,the,new,transaction,factory,instance,see,set,transformer,factory,class,see,get,transformer,factory;protected,transformer,factory,new,transformer,factory,class,transformer,factory,class,if,transformer,factory,class,null,try,return,transformer,factory,transformer,factory,class,new,instance,catch,exception,ex,throw,new,transformer,factory,configuration,error,ex,could,not,instantiate,transformer,factory,else,return,transformer,factory,new,instance
XsltView -> protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1328020251;Configure the supplied {@link Transformer} instance._<p>The default implementation copies parameters from the model into the_Transformer's {@link Transformer#setParameter parameter set}._This implementation also copies the {@link #setOutputProperties output properties}_into the {@link Transformer} {@link Transformer#setOutputProperty output properties}._Indentation properties are set as well._@param model merged output Map (never <code>null</code>)_@param response current HTTP response_@param transformer the target transformer_@see #copyModelParameters(Map, Transformer)_@see #copyOutputProperties(Transformer)_@see #configureIndentation(Transformer);protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		copyModelParameters(model, transformer)__		copyOutputProperties(transformer)__		configureIndentation(transformer)__	};configure,the,supplied,link,transformer,instance,p,the,default,implementation,copies,parameters,from,the,model,into,the,transformer,s,link,transformer,set,parameter,parameter,set,this,implementation,also,copies,the,link,set,output,properties,output,properties,into,the,link,transformer,link,transformer,set,output,property,output,properties,indentation,properties,are,set,as,well,param,model,merged,output,map,never,code,null,code,param,response,current,http,response,param,transformer,the,target,transformer,see,copy,model,parameters,map,transformer,see,copy,output,properties,transformer,see,configure,indentation,transformer;protected,void,configure,transformer,map,string,object,model,http,servlet,response,response,transformer,transformer,copy,model,parameters,model,transformer,copy,output,properties,transformer,configure,indentation,transformer
XsltView -> protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1356735495;Configure the supplied {@link Transformer} instance._<p>The default implementation copies parameters from the model into the_Transformer's {@link Transformer#setParameter parameter set}._This implementation also copies the {@link #setOutputProperties output properties}_into the {@link Transformer} {@link Transformer#setOutputProperty output properties}._Indentation properties are set as well._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer_@see #copyModelParameters(Map, Transformer)_@see #copyOutputProperties(Transformer)_@see #configureIndentation(Transformer);protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		copyModelParameters(model, transformer)__		copyOutputProperties(transformer)__		configureIndentation(transformer)__	};configure,the,supplied,link,transformer,instance,p,the,default,implementation,copies,parameters,from,the,model,into,the,transformer,s,link,transformer,set,parameter,parameter,set,this,implementation,also,copies,the,link,set,output,properties,output,properties,into,the,link,transformer,link,transformer,set,output,property,output,properties,indentation,properties,are,set,as,well,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer,see,copy,model,parameters,map,transformer,see,copy,output,properties,transformer,see,configure,indentation,transformer;protected,void,configure,transformer,map,string,object,model,http,servlet,response,response,transformer,transformer,copy,model,parameters,model,transformer,copy,output,properties,transformer,configure,indentation,transformer
XsltView -> protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1385412762;Configure the supplied {@link Transformer} instance._<p>The default implementation copies parameters from the model into the_Transformer's {@link Transformer#setParameter parameter set}._This implementation also copies the {@link #setOutputProperties output properties}_into the {@link Transformer} {@link Transformer#setOutputProperty output properties}._Indentation properties are set as well._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer_@see #copyModelParameters(Map, Transformer)_@see #copyOutputProperties(Transformer)_@see #configureIndentation(Transformer);protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		copyModelParameters(model, transformer)__		copyOutputProperties(transformer)__		configureIndentation(transformer)__	};configure,the,supplied,link,transformer,instance,p,the,default,implementation,copies,parameters,from,the,model,into,the,transformer,s,link,transformer,set,parameter,parameter,set,this,implementation,also,copies,the,link,set,output,properties,output,properties,into,the,link,transformer,link,transformer,set,output,property,output,properties,indentation,properties,are,set,as,well,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer,see,copy,model,parameters,map,transformer,see,copy,output,properties,transformer,see,configure,indentation,transformer;protected,void,configure,transformer,map,string,object,model,http,servlet,response,response,transformer,transformer,copy,model,parameters,model,transformer,copy,output,properties,transformer,configure,indentation,transformer
XsltView -> protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1385423968;Configure the supplied {@link Transformer} instance._<p>The default implementation copies parameters from the model into the_Transformer's {@link Transformer#setParameter parameter set}._This implementation also copies the {@link #setOutputProperties output properties}_into the {@link Transformer} {@link Transformer#setOutputProperty output properties}._Indentation properties are set as well._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer_@see #copyModelParameters(Map, Transformer)_@see #copyOutputProperties(Transformer)_@see #configureIndentation(Transformer);protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		copyModelParameters(model, transformer)__		copyOutputProperties(transformer)__		configureIndentation(transformer)__	};configure,the,supplied,link,transformer,instance,p,the,default,implementation,copies,parameters,from,the,model,into,the,transformer,s,link,transformer,set,parameter,parameter,set,this,implementation,also,copies,the,link,set,output,properties,output,properties,into,the,link,transformer,link,transformer,set,output,property,output,properties,indentation,properties,are,set,as,well,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer,see,copy,model,parameters,map,transformer,see,copy,output,properties,transformer,see,configure,indentation,transformer;protected,void,configure,transformer,map,string,object,model,http,servlet,response,response,transformer,transformer,copy,model,parameters,model,transformer,copy,output,properties,transformer,configure,indentation,transformer
XsltView -> protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1468948866;Configure the supplied {@link Transformer} instance._<p>The default implementation copies parameters from the model into the_Transformer's {@link Transformer#setParameter parameter set}._This implementation also copies the {@link #setOutputProperties output properties}_into the {@link Transformer} {@link Transformer#setOutputProperty output properties}._Indentation properties are set as well._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer_@see #copyModelParameters(Map, Transformer)_@see #copyOutputProperties(Transformer)_@see #configureIndentation(Transformer);protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		copyModelParameters(model, transformer)__		copyOutputProperties(transformer)__		configureIndentation(transformer)__	};configure,the,supplied,link,transformer,instance,p,the,default,implementation,copies,parameters,from,the,model,into,the,transformer,s,link,transformer,set,parameter,parameter,set,this,implementation,also,copies,the,link,set,output,properties,output,properties,into,the,link,transformer,link,transformer,set,output,property,output,properties,indentation,properties,are,set,as,well,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer,see,copy,model,parameters,map,transformer,see,copy,output,properties,transformer,see,configure,indentation,transformer;protected,void,configure,transformer,map,string,object,model,http,servlet,response,response,transformer,transformer,copy,model,parameters,model,transformer,copy,output,properties,transformer,configure,indentation,transformer
XsltView -> protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1469047316;Configure the supplied {@link Transformer} instance._<p>The default implementation copies parameters from the model into the_Transformer's {@link Transformer#setParameter parameter set}._This implementation also copies the {@link #setOutputProperties output properties}_into the {@link Transformer} {@link Transformer#setOutputProperty output properties}._Indentation properties are set as well._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer_@see #copyModelParameters(Map, Transformer)_@see #copyOutputProperties(Transformer)_@see #configureIndentation(Transformer);protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		copyModelParameters(model, transformer)__		copyOutputProperties(transformer)__		configureIndentation(transformer)__	};configure,the,supplied,link,transformer,instance,p,the,default,implementation,copies,parameters,from,the,model,into,the,transformer,s,link,transformer,set,parameter,parameter,set,this,implementation,also,copies,the,link,set,output,properties,output,properties,into,the,link,transformer,link,transformer,set,output,property,output,properties,indentation,properties,are,set,as,well,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer,see,copy,model,parameters,map,transformer,see,copy,output,properties,transformer,see,configure,indentation,transformer;protected,void,configure,transformer,map,string,object,model,http,servlet,response,response,transformer,transformer,copy,model,parameters,model,transformer,copy,output,properties,transformer,configure,indentation,transformer
XsltView -> protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1483750478;Configure the supplied {@link Transformer} instance._<p>The default implementation copies parameters from the model into the_Transformer's {@link Transformer#setParameter parameter set}._This implementation also copies the {@link #setOutputProperties output properties}_into the {@link Transformer} {@link Transformer#setOutputProperty output properties}._Indentation properties are set as well._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer_@see #copyModelParameters(Map, Transformer)_@see #copyOutputProperties(Transformer)_@see #configureIndentation(Transformer);protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		copyModelParameters(model, transformer)__		copyOutputProperties(transformer)__		configureIndentation(transformer)__	};configure,the,supplied,link,transformer,instance,p,the,default,implementation,copies,parameters,from,the,model,into,the,transformer,s,link,transformer,set,parameter,parameter,set,this,implementation,also,copies,the,link,set,output,properties,output,properties,into,the,link,transformer,link,transformer,set,output,property,output,properties,indentation,properties,are,set,as,well,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer,see,copy,model,parameters,map,transformer,see,copy,output,properties,transformer,see,configure,indentation,transformer;protected,void,configure,transformer,map,string,object,model,http,servlet,response,response,transformer,transformer,copy,model,parameters,model,transformer,copy,output,properties,transformer,configure,indentation,transformer
XsltView -> protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1495868221;Configure the supplied {@link Transformer} instance._<p>The default implementation copies parameters from the model into the_Transformer's {@link Transformer#setParameter parameter set}._This implementation also copies the {@link #setOutputProperties output properties}_into the {@link Transformer} {@link Transformer#setOutputProperty output properties}._Indentation properties are set as well._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer_@see #copyModelParameters(Map, Transformer)_@see #copyOutputProperties(Transformer)_@see #configureIndentation(Transformer);protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		copyModelParameters(model, transformer)__		copyOutputProperties(transformer)__		configureIndentation(transformer)__	};configure,the,supplied,link,transformer,instance,p,the,default,implementation,copies,parameters,from,the,model,into,the,transformer,s,link,transformer,set,parameter,parameter,set,this,implementation,also,copies,the,link,set,output,properties,output,properties,into,the,link,transformer,link,transformer,set,output,property,output,properties,indentation,properties,are,set,as,well,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer,see,copy,model,parameters,map,transformer,see,copy,output,properties,transformer,see,configure,indentation,transformer;protected,void,configure,transformer,map,string,object,model,http,servlet,response,response,transformer,transformer,copy,model,parameters,model,transformer,copy,output,properties,transformer,configure,indentation,transformer
XsltView -> protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1496837955;Configure the supplied {@link Transformer} instance._<p>The default implementation copies parameters from the model into the_Transformer's {@link Transformer#setParameter parameter set}._This implementation also copies the {@link #setOutputProperties output properties}_into the {@link Transformer} {@link Transformer#setOutputProperty output properties}._Indentation properties are set as well._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer_@see #copyModelParameters(Map, Transformer)_@see #copyOutputProperties(Transformer)_@see #configureIndentation(Transformer);protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		copyModelParameters(model, transformer)__		copyOutputProperties(transformer)__		configureIndentation(transformer)__	};configure,the,supplied,link,transformer,instance,p,the,default,implementation,copies,parameters,from,the,model,into,the,transformer,s,link,transformer,set,parameter,parameter,set,this,implementation,also,copies,the,link,set,output,properties,output,properties,into,the,link,transformer,link,transformer,set,output,property,output,properties,indentation,properties,are,set,as,well,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer,see,copy,model,parameters,map,transformer,see,copy,output,properties,transformer,see,configure,indentation,transformer;protected,void,configure,transformer,map,string,object,model,http,servlet,response,response,transformer,transformer,copy,model,parameters,model,transformer,copy,output,properties,transformer,configure,indentation,transformer
XsltView -> protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1497250713;Configure the supplied {@link Transformer} instance._<p>The default implementation copies parameters from the model into the_Transformer's {@link Transformer#setParameter parameter set}._This implementation also copies the {@link #setOutputProperties output properties}_into the {@link Transformer} {@link Transformer#setOutputProperty output properties}._Indentation properties are set as well._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer_@see #copyModelParameters(Map, Transformer)_@see #copyOutputProperties(Transformer)_@see #configureIndentation(Transformer);protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		copyModelParameters(model, transformer)__		copyOutputProperties(transformer)__		configureIndentation(transformer)__	};configure,the,supplied,link,transformer,instance,p,the,default,implementation,copies,parameters,from,the,model,into,the,transformer,s,link,transformer,set,parameter,parameter,set,this,implementation,also,copies,the,link,set,output,properties,output,properties,into,the,link,transformer,link,transformer,set,output,property,output,properties,indentation,properties,are,set,as,well,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer,see,copy,model,parameters,map,transformer,see,copy,output,properties,transformer,see,configure,indentation,transformer;protected,void,configure,transformer,map,string,object,model,http,servlet,response,response,transformer,transformer,copy,model,parameters,model,transformer,copy,output,properties,transformer,configure,indentation,transformer
XsltView -> protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1498780456;Configure the supplied {@link Transformer} instance._<p>The default implementation copies parameters from the model into the_Transformer's {@link Transformer#setParameter parameter set}._This implementation also copies the {@link #setOutputProperties output properties}_into the {@link Transformer} {@link Transformer#setOutputProperty output properties}._Indentation properties are set as well._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer_@see #copyModelParameters(Map, Transformer)_@see #copyOutputProperties(Transformer)_@see #configureIndentation(Transformer);protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		copyModelParameters(model, transformer)__		copyOutputProperties(transformer)__		configureIndentation(transformer)__	};configure,the,supplied,link,transformer,instance,p,the,default,implementation,copies,parameters,from,the,model,into,the,transformer,s,link,transformer,set,parameter,parameter,set,this,implementation,also,copies,the,link,set,output,properties,output,properties,into,the,link,transformer,link,transformer,set,output,property,output,properties,indentation,properties,are,set,as,well,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer,see,copy,model,parameters,map,transformer,see,copy,output,properties,transformer,see,configure,indentation,transformer;protected,void,configure,transformer,map,string,object,model,http,servlet,response,response,transformer,transformer,copy,model,parameters,model,transformer,copy,output,properties,transformer,configure,indentation,transformer
XsltView -> public void setErrorListener(@Nullable ErrorListener errorListener);1496837955;Set an implementation of the {@link javax.xml.transform.ErrorListener}_interface for custom handling of transformation errors and warnings._<p>If not set, a default_{@link org.springframework.util.xml.SimpleTransformErrorListener} is_used that simply logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see org.springframework.util.xml.SimpleTransformErrorListener;public void setErrorListener(@Nullable ErrorListener errorListener) {_		this.errorListener = (errorListener != null ? errorListener : new SimpleTransformErrorListener(logger))__	};set,an,implementation,of,the,link,javax,xml,transform,error,listener,interface,for,custom,handling,of,transformation,errors,and,warnings,p,if,not,set,a,default,link,org,springframework,util,xml,simple,transform,error,listener,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,org,springframework,util,xml,simple,transform,error,listener;public,void,set,error,listener,nullable,error,listener,error,listener,this,error,listener,error,listener,null,error,listener,new,simple,transform,error,listener,logger
XsltView -> public void setErrorListener(@Nullable ErrorListener errorListener);1497250713;Set an implementation of the {@link javax.xml.transform.ErrorListener}_interface for custom handling of transformation errors and warnings._<p>If not set, a default_{@link org.springframework.util.xml.SimpleTransformErrorListener} is_used that simply logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see org.springframework.util.xml.SimpleTransformErrorListener;public void setErrorListener(@Nullable ErrorListener errorListener) {_		this.errorListener = (errorListener != null ? errorListener : new SimpleTransformErrorListener(logger))__	};set,an,implementation,of,the,link,javax,xml,transform,error,listener,interface,for,custom,handling,of,transformation,errors,and,warnings,p,if,not,set,a,default,link,org,springframework,util,xml,simple,transform,error,listener,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,org,springframework,util,xml,simple,transform,error,listener;public,void,set,error,listener,nullable,error,listener,error,listener,this,error,listener,error,listener,null,error,listener,new,simple,transform,error,listener,logger
XsltView -> public void setErrorListener(@Nullable ErrorListener errorListener);1498780456;Set an implementation of the {@link javax.xml.transform.ErrorListener}_interface for custom handling of transformation errors and warnings._<p>If not set, a default_{@link org.springframework.util.xml.SimpleTransformErrorListener} is_used that simply logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see org.springframework.util.xml.SimpleTransformErrorListener;public void setErrorListener(@Nullable ErrorListener errorListener) {_		this.errorListener = (errorListener != null ? errorListener : new SimpleTransformErrorListener(logger))__	};set,an,implementation,of,the,link,javax,xml,transform,error,listener,interface,for,custom,handling,of,transformation,errors,and,warnings,p,if,not,set,a,default,link,org,springframework,util,xml,simple,transform,error,listener,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,org,springframework,util,xml,simple,transform,error,listener;public,void,set,error,listener,nullable,error,listener,error,listener,this,error,listener,error,listener,null,error,listener,new,simple,transform,error,listener,logger
XsltView -> public void setErrorListener(@Nullable ErrorListener errorListener);1508532146;Set an implementation of the {@link javax.xml.transform.ErrorListener}_interface for custom handling of transformation errors and warnings._<p>If not set, a default_{@link org.springframework.util.xml.SimpleTransformErrorListener} is_used that simply logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see org.springframework.util.xml.SimpleTransformErrorListener;public void setErrorListener(@Nullable ErrorListener errorListener) {_		this.errorListener = (errorListener != null ? errorListener : new SimpleTransformErrorListener(logger))__	};set,an,implementation,of,the,link,javax,xml,transform,error,listener,interface,for,custom,handling,of,transformation,errors,and,warnings,p,if,not,set,a,default,link,org,springframework,util,xml,simple,transform,error,listener,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,org,springframework,util,xml,simple,transform,error,listener;public,void,set,error,listener,nullable,error,listener,error,listener,this,error,listener,error,listener,null,error,listener,new,simple,transform,error,listener,logger
XsltView -> public void setErrorListener(@Nullable ErrorListener errorListener);1529361191;Set an implementation of the {@link javax.xml.transform.ErrorListener}_interface for custom handling of transformation errors and warnings._<p>If not set, a default_{@link org.springframework.util.xml.SimpleTransformErrorListener} is_used that simply logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see org.springframework.util.xml.SimpleTransformErrorListener;public void setErrorListener(@Nullable ErrorListener errorListener) {_		this.errorListener = (errorListener != null ? errorListener : new SimpleTransformErrorListener(logger))__	};set,an,implementation,of,the,link,javax,xml,transform,error,listener,interface,for,custom,handling,of,transformation,errors,and,warnings,p,if,not,set,a,default,link,org,springframework,util,xml,simple,transform,error,listener,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,org,springframework,util,xml,simple,transform,error,listener;public,void,set,error,listener,nullable,error,listener,error,listener,this,error,listener,error,listener,null,error,listener,new,simple,transform,error,listener,logger
XsltView -> private void closeSourceIfNecessary(Source source);1328020251;Close the underlying resource managed by the supplied {@link Source} if applicable._<p>Only works for {@link StreamSource StreamSources}._@param source the XSLT Source to close (may be <code>null</code>);private void closeSourceIfNecessary(Source source) {_		if (source instanceof StreamSource) {_			StreamSource streamSource = (StreamSource) source__			if (streamSource.getReader() != null) {_				try {_					streamSource.getReader().close()__				}_				catch (IOException ex) {_					_				}_			}_			if (streamSource.getInputStream() != null) {_				try {_					streamSource.getInputStream().close()__				}_				catch (IOException ex) {_					_				}_			}_		}_	};close,the,underlying,resource,managed,by,the,supplied,link,source,if,applicable,p,only,works,for,link,stream,source,stream,sources,param,source,the,xslt,source,to,close,may,be,code,null,code;private,void,close,source,if,necessary,source,source,if,source,instanceof,stream,source,stream,source,stream,source,stream,source,source,if,stream,source,get,reader,null,try,stream,source,get,reader,close,catch,ioexception,ex,if,stream,source,get,input,stream,null,try,stream,source,get,input,stream,close,catch,ioexception,ex
XsltView -> private void closeSourceIfNecessary(Source source);1356735495;Close the underlying resource managed by the supplied {@link Source} if applicable._<p>Only works for {@link StreamSource StreamSources}._@param source the XSLT Source to close (may be {@code null});private void closeSourceIfNecessary(Source source) {_		if (source instanceof StreamSource) {_			StreamSource streamSource = (StreamSource) source__			if (streamSource.getReader() != null) {_				try {_					streamSource.getReader().close()__				}_				catch (IOException ex) {_					_				}_			}_			if (streamSource.getInputStream() != null) {_				try {_					streamSource.getInputStream().close()__				}_				catch (IOException ex) {_					_				}_			}_		}_	};close,the,underlying,resource,managed,by,the,supplied,link,source,if,applicable,p,only,works,for,link,stream,source,stream,sources,param,source,the,xslt,source,to,close,may,be,code,null;private,void,close,source,if,necessary,source,source,if,source,instanceof,stream,source,stream,source,stream,source,stream,source,source,if,stream,source,get,reader,null,try,stream,source,get,reader,close,catch,ioexception,ex,if,stream,source,get,input,stream,null,try,stream,source,get,input,stream,close,catch,ioexception,ex
XsltView -> private void closeSourceIfNecessary(Source source);1385412762;Close the underlying resource managed by the supplied {@link Source} if applicable._<p>Only works for {@link StreamSource StreamSources}._@param source the XSLT Source to close (may be {@code null});private void closeSourceIfNecessary(Source source) {_		if (source instanceof StreamSource) {_			StreamSource streamSource = (StreamSource) source__			if (streamSource.getReader() != null) {_				try {_					streamSource.getReader().close()__				}_				catch (IOException ex) {_					_				}_			}_			if (streamSource.getInputStream() != null) {_				try {_					streamSource.getInputStream().close()__				}_				catch (IOException ex) {_					_				}_			}_		}_	};close,the,underlying,resource,managed,by,the,supplied,link,source,if,applicable,p,only,works,for,link,stream,source,stream,sources,param,source,the,xslt,source,to,close,may,be,code,null;private,void,close,source,if,necessary,source,source,if,source,instanceof,stream,source,stream,source,stream,source,stream,source,source,if,stream,source,get,reader,null,try,stream,source,get,reader,close,catch,ioexception,ex,if,stream,source,get,input,stream,null,try,stream,source,get,input,stream,close,catch,ioexception,ex
XsltView -> private void closeSourceIfNecessary(Source source);1385423968;Close the underlying resource managed by the supplied {@link Source} if applicable._<p>Only works for {@link StreamSource StreamSources}._@param source the XSLT Source to close (may be {@code null});private void closeSourceIfNecessary(Source source) {_		if (source instanceof StreamSource) {_			StreamSource streamSource = (StreamSource) source__			if (streamSource.getReader() != null) {_				try {_					streamSource.getReader().close()__				}_				catch (IOException ex) {_					_				}_			}_			if (streamSource.getInputStream() != null) {_				try {_					streamSource.getInputStream().close()__				}_				catch (IOException ex) {_					_				}_			}_		}_	};close,the,underlying,resource,managed,by,the,supplied,link,source,if,applicable,p,only,works,for,link,stream,source,stream,sources,param,source,the,xslt,source,to,close,may,be,code,null;private,void,close,source,if,necessary,source,source,if,source,instanceof,stream,source,stream,source,stream,source,stream,source,source,if,stream,source,get,reader,null,try,stream,source,get,reader,close,catch,ioexception,ex,if,stream,source,get,input,stream,null,try,stream,source,get,input,stream,close,catch,ioexception,ex
XsltView -> private void closeSourceIfNecessary(Source source);1468948866;Close the underlying resource managed by the supplied {@link Source} if applicable._<p>Only works for {@link StreamSource StreamSources}._@param source the XSLT Source to close (may be {@code null});private void closeSourceIfNecessary(Source source) {_		if (source instanceof StreamSource) {_			StreamSource streamSource = (StreamSource) source__			if (streamSource.getReader() != null) {_				try {_					streamSource.getReader().close()__				}_				catch (IOException ex) {_					_				}_			}_			if (streamSource.getInputStream() != null) {_				try {_					streamSource.getInputStream().close()__				}_				catch (IOException ex) {_					_				}_			}_		}_	};close,the,underlying,resource,managed,by,the,supplied,link,source,if,applicable,p,only,works,for,link,stream,source,stream,sources,param,source,the,xslt,source,to,close,may,be,code,null;private,void,close,source,if,necessary,source,source,if,source,instanceof,stream,source,stream,source,stream,source,stream,source,source,if,stream,source,get,reader,null,try,stream,source,get,reader,close,catch,ioexception,ex,if,stream,source,get,input,stream,null,try,stream,source,get,input,stream,close,catch,ioexception,ex
XsltView -> private void closeSourceIfNecessary(Source source);1469047316;Close the underlying resource managed by the supplied {@link Source} if applicable._<p>Only works for {@link StreamSource StreamSources}._@param source the XSLT Source to close (may be {@code null});private void closeSourceIfNecessary(Source source) {_		if (source instanceof StreamSource) {_			StreamSource streamSource = (StreamSource) source__			if (streamSource.getReader() != null) {_				try {_					streamSource.getReader().close()__				}_				catch (IOException ex) {_					_				}_			}_			if (streamSource.getInputStream() != null) {_				try {_					streamSource.getInputStream().close()__				}_				catch (IOException ex) {_					_				}_			}_		}_	};close,the,underlying,resource,managed,by,the,supplied,link,source,if,applicable,p,only,works,for,link,stream,source,stream,sources,param,source,the,xslt,source,to,close,may,be,code,null;private,void,close,source,if,necessary,source,source,if,source,instanceof,stream,source,stream,source,stream,source,stream,source,source,if,stream,source,get,reader,null,try,stream,source,get,reader,close,catch,ioexception,ex,if,stream,source,get,input,stream,null,try,stream,source,get,input,stream,close,catch,ioexception,ex
XsltView -> private void closeSourceIfNecessary(Source source);1483750478;Close the underlying resource managed by the supplied {@link Source} if applicable._<p>Only works for {@link StreamSource StreamSources}._@param source the XSLT Source to close (may be {@code null});private void closeSourceIfNecessary(Source source) {_		if (source instanceof StreamSource) {_			StreamSource streamSource = (StreamSource) source__			if (streamSource.getReader() != null) {_				try {_					streamSource.getReader().close()__				}_				catch (IOException ex) {_					_				}_			}_			if (streamSource.getInputStream() != null) {_				try {_					streamSource.getInputStream().close()__				}_				catch (IOException ex) {_					_				}_			}_		}_	};close,the,underlying,resource,managed,by,the,supplied,link,source,if,applicable,p,only,works,for,link,stream,source,stream,sources,param,source,the,xslt,source,to,close,may,be,code,null;private,void,close,source,if,necessary,source,source,if,source,instanceof,stream,source,stream,source,stream,source,stream,source,source,if,stream,source,get,reader,null,try,stream,source,get,reader,close,catch,ioexception,ex,if,stream,source,get,input,stream,null,try,stream,source,get,input,stream,close,catch,ioexception,ex
XsltView -> public void setTransformerFactoryClass(Class<? extends TransformerFactory> transformerFactoryClass);1468948866;Specify the XSLT TransformerFactory class to use._<p>The default constructor of the specified class will be called_to build the TransformerFactory for this view.;public void setTransformerFactoryClass(Class<? extends TransformerFactory> transformerFactoryClass) {_		Assert.isAssignable(TransformerFactory.class, transformerFactoryClass)__		this.transformerFactoryClass = transformerFactoryClass__	};specify,the,xslt,transformer,factory,class,to,use,p,the,default,constructor,of,the,specified,class,will,be,called,to,build,the,transformer,factory,for,this,view;public,void,set,transformer,factory,class,class,extends,transformer,factory,transformer,factory,class,assert,is,assignable,transformer,factory,class,transformer,factory,class,this,transformer,factory,class,transformer,factory,class
XsltView -> public void setTransformerFactoryClass(Class<? extends TransformerFactory> transformerFactoryClass);1469047316;Specify the XSLT TransformerFactory class to use._<p>The default constructor of the specified class will be called_to build the TransformerFactory for this view.;public void setTransformerFactoryClass(Class<? extends TransformerFactory> transformerFactoryClass) {_		this.transformerFactoryClass = transformerFactoryClass__	};specify,the,xslt,transformer,factory,class,to,use,p,the,default,constructor,of,the,specified,class,will,be,called,to,build,the,transformer,factory,for,this,view;public,void,set,transformer,factory,class,class,extends,transformer,factory,transformer,factory,class,this,transformer,factory,class,transformer,factory,class
XsltView -> public void setTransformerFactoryClass(Class<? extends TransformerFactory> transformerFactoryClass);1483750478;Specify the XSLT TransformerFactory class to use._<p>The default constructor of the specified class will be called_to build the TransformerFactory for this view.;public void setTransformerFactoryClass(Class<? extends TransformerFactory> transformerFactoryClass) {_		this.transformerFactoryClass = transformerFactoryClass__	};specify,the,xslt,transformer,factory,class,to,use,p,the,default,constructor,of,the,specified,class,will,be,called,to,build,the,transformer,factory,for,this,view;public,void,set,transformer,factory,class,class,extends,transformer,factory,transformer,factory,class,this,transformer,factory,class,transformer,factory,class
XsltView -> public void setTransformerFactoryClass(Class<? extends TransformerFactory> transformerFactoryClass);1495868221;Specify the XSLT TransformerFactory class to use._<p>The default constructor of the specified class will be called_to build the TransformerFactory for this view.;public void setTransformerFactoryClass(Class<? extends TransformerFactory> transformerFactoryClass) {_		this.transformerFactoryClass = transformerFactoryClass__	};specify,the,xslt,transformer,factory,class,to,use,p,the,default,constructor,of,the,specified,class,will,be,called,to,build,the,transformer,factory,for,this,view;public,void,set,transformer,factory,class,class,extends,transformer,factory,transformer,factory,class,this,transformer,factory,class,transformer,factory,class
XsltView -> public void setTransformerFactoryClass(Class<? extends TransformerFactory> transformerFactoryClass);1496837955;Specify the XSLT TransformerFactory class to use._<p>The default constructor of the specified class will be called_to build the TransformerFactory for this view.;public void setTransformerFactoryClass(Class<? extends TransformerFactory> transformerFactoryClass) {_		this.transformerFactoryClass = transformerFactoryClass__	};specify,the,xslt,transformer,factory,class,to,use,p,the,default,constructor,of,the,specified,class,will,be,called,to,build,the,transformer,factory,for,this,view;public,void,set,transformer,factory,class,class,extends,transformer,factory,transformer,factory,class,this,transformer,factory,class,transformer,factory,class
XsltView -> public void setTransformerFactoryClass(Class<? extends TransformerFactory> transformerFactoryClass);1497250713;Specify the XSLT TransformerFactory class to use._<p>The default constructor of the specified class will be called_to build the TransformerFactory for this view.;public void setTransformerFactoryClass(Class<? extends TransformerFactory> transformerFactoryClass) {_		this.transformerFactoryClass = transformerFactoryClass__	};specify,the,xslt,transformer,factory,class,to,use,p,the,default,constructor,of,the,specified,class,will,be,called,to,build,the,transformer,factory,for,this,view;public,void,set,transformer,factory,class,class,extends,transformer,factory,transformer,factory,class,this,transformer,factory,class,transformer,factory,class
XsltView -> public void setTransformerFactoryClass(Class<? extends TransformerFactory> transformerFactoryClass);1498780456;Specify the XSLT TransformerFactory class to use._<p>The default constructor of the specified class will be called_to build the TransformerFactory for this view.;public void setTransformerFactoryClass(Class<? extends TransformerFactory> transformerFactoryClass) {_		this.transformerFactoryClass = transformerFactoryClass__	};specify,the,xslt,transformer,factory,class,to,use,p,the,default,constructor,of,the,specified,class,will,be,called,to,build,the,transformer,factory,for,this,view;public,void,set,transformer,factory,class,class,extends,transformer,factory,transformer,factory,class,this,transformer,factory,class,transformer,factory,class
XsltView -> public void setTransformerFactoryClass(Class<? extends TransformerFactory> transformerFactoryClass);1508532146;Specify the XSLT TransformerFactory class to use._<p>The default constructor of the specified class will be called_to build the TransformerFactory for this view.;public void setTransformerFactoryClass(Class<? extends TransformerFactory> transformerFactoryClass) {_		this.transformerFactoryClass = transformerFactoryClass__	};specify,the,xslt,transformer,factory,class,to,use,p,the,default,constructor,of,the,specified,class,will,be,called,to,build,the,transformer,factory,for,this,view;public,void,set,transformer,factory,class,class,extends,transformer,factory,transformer,factory,class,this,transformer,factory,class,transformer,factory,class
XsltView -> public void setTransformerFactoryClass(Class<? extends TransformerFactory> transformerFactoryClass);1529361191;Specify the XSLT TransformerFactory class to use._<p>The default constructor of the specified class will be called_to build the TransformerFactory for this view.;public void setTransformerFactoryClass(Class<? extends TransformerFactory> transformerFactoryClass) {_		this.transformerFactoryClass = transformerFactoryClass__	};specify,the,xslt,transformer,factory,class,to,use,p,the,default,constructor,of,the,specified,class,will,be,called,to,build,the,transformer,factory,for,this,view;public,void,set,transformer,factory,class,class,extends,transformer,factory,transformer,factory,class,this,transformer,factory,class,transformer,factory,class
XsltView -> private Templates loadTemplates() throws ApplicationContextException;1328020251;Load the {@link Templates} instance for the stylesheet at the configured location.;private Templates loadTemplates() throws ApplicationContextException {_		Source stylesheetSource = getStylesheetSource()__		try {_			Templates templates = this.transformerFactory.newTemplates(stylesheetSource)__			if (logger.isDebugEnabled()) {_				logger.debug("Loading templates '" + templates + "'")__			}_			return templates__		}_		catch (TransformerConfigurationException ex) {_			throw new ApplicationContextException("Can't load stylesheet from '" + getUrl() + "'", ex)__		}_		finally {_			closeSourceIfNecessary(stylesheetSource)__		}_	};load,the,link,templates,instance,for,the,stylesheet,at,the,configured,location;private,templates,load,templates,throws,application,context,exception,source,stylesheet,source,get,stylesheet,source,try,templates,templates,this,transformer,factory,new,templates,stylesheet,source,if,logger,is,debug,enabled,logger,debug,loading,templates,templates,return,templates,catch,transformer,configuration,exception,ex,throw,new,application,context,exception,can,t,load,stylesheet,from,get,url,ex,finally,close,source,if,necessary,stylesheet,source
XsltView -> private Templates loadTemplates() throws ApplicationContextException;1356735495;Load the {@link Templates} instance for the stylesheet at the configured location.;private Templates loadTemplates() throws ApplicationContextException {_		Source stylesheetSource = getStylesheetSource()__		try {_			Templates templates = this.transformerFactory.newTemplates(stylesheetSource)__			if (logger.isDebugEnabled()) {_				logger.debug("Loading templates '" + templates + "'")__			}_			return templates__		}_		catch (TransformerConfigurationException ex) {_			throw new ApplicationContextException("Can't load stylesheet from '" + getUrl() + "'", ex)__		}_		finally {_			closeSourceIfNecessary(stylesheetSource)__		}_	};load,the,link,templates,instance,for,the,stylesheet,at,the,configured,location;private,templates,load,templates,throws,application,context,exception,source,stylesheet,source,get,stylesheet,source,try,templates,templates,this,transformer,factory,new,templates,stylesheet,source,if,logger,is,debug,enabled,logger,debug,loading,templates,templates,return,templates,catch,transformer,configuration,exception,ex,throw,new,application,context,exception,can,t,load,stylesheet,from,get,url,ex,finally,close,source,if,necessary,stylesheet,source
XsltView -> private Templates loadTemplates() throws ApplicationContextException;1385412762;Load the {@link Templates} instance for the stylesheet at the configured location.;private Templates loadTemplates() throws ApplicationContextException {_		Source stylesheetSource = getStylesheetSource()__		try {_			Templates templates = this.transformerFactory.newTemplates(stylesheetSource)__			if (logger.isDebugEnabled()) {_				logger.debug("Loading templates '" + templates + "'")__			}_			return templates__		}_		catch (TransformerConfigurationException ex) {_			throw new ApplicationContextException("Can't load stylesheet from '" + getUrl() + "'", ex)__		}_		finally {_			closeSourceIfNecessary(stylesheetSource)__		}_	};load,the,link,templates,instance,for,the,stylesheet,at,the,configured,location;private,templates,load,templates,throws,application,context,exception,source,stylesheet,source,get,stylesheet,source,try,templates,templates,this,transformer,factory,new,templates,stylesheet,source,if,logger,is,debug,enabled,logger,debug,loading,templates,templates,return,templates,catch,transformer,configuration,exception,ex,throw,new,application,context,exception,can,t,load,stylesheet,from,get,url,ex,finally,close,source,if,necessary,stylesheet,source
XsltView -> private Templates loadTemplates() throws ApplicationContextException;1385423968;Load the {@link Templates} instance for the stylesheet at the configured location.;private Templates loadTemplates() throws ApplicationContextException {_		Source stylesheetSource = getStylesheetSource()__		try {_			Templates templates = this.transformerFactory.newTemplates(stylesheetSource)__			if (logger.isDebugEnabled()) {_				logger.debug("Loading templates '" + templates + "'")__			}_			return templates__		}_		catch (TransformerConfigurationException ex) {_			throw new ApplicationContextException("Can't load stylesheet from '" + getUrl() + "'", ex)__		}_		finally {_			closeSourceIfNecessary(stylesheetSource)__		}_	};load,the,link,templates,instance,for,the,stylesheet,at,the,configured,location;private,templates,load,templates,throws,application,context,exception,source,stylesheet,source,get,stylesheet,source,try,templates,templates,this,transformer,factory,new,templates,stylesheet,source,if,logger,is,debug,enabled,logger,debug,loading,templates,templates,return,templates,catch,transformer,configuration,exception,ex,throw,new,application,context,exception,can,t,load,stylesheet,from,get,url,ex,finally,close,source,if,necessary,stylesheet,source
XsltView -> private Templates loadTemplates() throws ApplicationContextException;1468948866;Load the {@link Templates} instance for the stylesheet at the configured location.;private Templates loadTemplates() throws ApplicationContextException {_		Source stylesheetSource = getStylesheetSource()__		try {_			Templates templates = this.transformerFactory.newTemplates(stylesheetSource)__			if (logger.isDebugEnabled()) {_				logger.debug("Loading templates '" + templates + "'")__			}_			return templates__		}_		catch (TransformerConfigurationException ex) {_			throw new ApplicationContextException("Can't load stylesheet from '" + getUrl() + "'", ex)__		}_		finally {_			closeSourceIfNecessary(stylesheetSource)__		}_	};load,the,link,templates,instance,for,the,stylesheet,at,the,configured,location;private,templates,load,templates,throws,application,context,exception,source,stylesheet,source,get,stylesheet,source,try,templates,templates,this,transformer,factory,new,templates,stylesheet,source,if,logger,is,debug,enabled,logger,debug,loading,templates,templates,return,templates,catch,transformer,configuration,exception,ex,throw,new,application,context,exception,can,t,load,stylesheet,from,get,url,ex,finally,close,source,if,necessary,stylesheet,source
XsltView -> private Templates loadTemplates() throws ApplicationContextException;1469047316;Load the {@link Templates} instance for the stylesheet at the configured location.;private Templates loadTemplates() throws ApplicationContextException {_		Source stylesheetSource = getStylesheetSource()__		try {_			Templates templates = this.transformerFactory.newTemplates(stylesheetSource)__			if (logger.isDebugEnabled()) {_				logger.debug("Loading templates '" + templates + "'")__			}_			return templates__		}_		catch (TransformerConfigurationException ex) {_			throw new ApplicationContextException("Can't load stylesheet from '" + getUrl() + "'", ex)__		}_		finally {_			closeSourceIfNecessary(stylesheetSource)__		}_	};load,the,link,templates,instance,for,the,stylesheet,at,the,configured,location;private,templates,load,templates,throws,application,context,exception,source,stylesheet,source,get,stylesheet,source,try,templates,templates,this,transformer,factory,new,templates,stylesheet,source,if,logger,is,debug,enabled,logger,debug,loading,templates,templates,return,templates,catch,transformer,configuration,exception,ex,throw,new,application,context,exception,can,t,load,stylesheet,from,get,url,ex,finally,close,source,if,necessary,stylesheet,source
XsltView -> private Templates loadTemplates() throws ApplicationContextException;1483750478;Load the {@link Templates} instance for the stylesheet at the configured location.;private Templates loadTemplates() throws ApplicationContextException {_		Source stylesheetSource = getStylesheetSource()__		try {_			Templates templates = this.transformerFactory.newTemplates(stylesheetSource)__			if (logger.isDebugEnabled()) {_				logger.debug("Loading templates '" + templates + "'")__			}_			return templates__		}_		catch (TransformerConfigurationException ex) {_			throw new ApplicationContextException("Can't load stylesheet from '" + getUrl() + "'", ex)__		}_		finally {_			closeSourceIfNecessary(stylesheetSource)__		}_	};load,the,link,templates,instance,for,the,stylesheet,at,the,configured,location;private,templates,load,templates,throws,application,context,exception,source,stylesheet,source,get,stylesheet,source,try,templates,templates,this,transformer,factory,new,templates,stylesheet,source,if,logger,is,debug,enabled,logger,debug,loading,templates,templates,return,templates,catch,transformer,configuration,exception,ex,throw,new,application,context,exception,can,t,load,stylesheet,from,get,url,ex,finally,close,source,if,necessary,stylesheet,source
XsltView -> private Templates loadTemplates() throws ApplicationContextException;1495868221;Load the {@link Templates} instance for the stylesheet at the configured location.;private Templates loadTemplates() throws ApplicationContextException {_		Source stylesheetSource = getStylesheetSource()__		try {_			Templates templates = this.transformerFactory.newTemplates(stylesheetSource)__			if (logger.isDebugEnabled()) {_				logger.debug("Loading templates '" + templates + "'")__			}_			return templates__		}_		catch (TransformerConfigurationException ex) {_			throw new ApplicationContextException("Can't load stylesheet from '" + getUrl() + "'", ex)__		}_		finally {_			closeSourceIfNecessary(stylesheetSource)__		}_	};load,the,link,templates,instance,for,the,stylesheet,at,the,configured,location;private,templates,load,templates,throws,application,context,exception,source,stylesheet,source,get,stylesheet,source,try,templates,templates,this,transformer,factory,new,templates,stylesheet,source,if,logger,is,debug,enabled,logger,debug,loading,templates,templates,return,templates,catch,transformer,configuration,exception,ex,throw,new,application,context,exception,can,t,load,stylesheet,from,get,url,ex,finally,close,source,if,necessary,stylesheet,source
XsltView -> private Templates loadTemplates() throws ApplicationContextException;1496837955;Load the {@link Templates} instance for the stylesheet at the configured location.;private Templates loadTemplates() throws ApplicationContextException {_		Source stylesheetSource = getStylesheetSource()__		try {_			Templates templates = this.transformerFactory.newTemplates(stylesheetSource)__			if (logger.isDebugEnabled()) {_				logger.debug("Loading templates '" + templates + "'")__			}_			return templates__		}_		catch (TransformerConfigurationException ex) {_			throw new ApplicationContextException("Can't load stylesheet from '" + getUrl() + "'", ex)__		}_		finally {_			closeSourceIfNecessary(stylesheetSource)__		}_	};load,the,link,templates,instance,for,the,stylesheet,at,the,configured,location;private,templates,load,templates,throws,application,context,exception,source,stylesheet,source,get,stylesheet,source,try,templates,templates,this,transformer,factory,new,templates,stylesheet,source,if,logger,is,debug,enabled,logger,debug,loading,templates,templates,return,templates,catch,transformer,configuration,exception,ex,throw,new,application,context,exception,can,t,load,stylesheet,from,get,url,ex,finally,close,source,if,necessary,stylesheet,source
XsltView -> private Templates loadTemplates() throws ApplicationContextException;1497250713;Load the {@link Templates} instance for the stylesheet at the configured location.;private Templates loadTemplates() throws ApplicationContextException {_		Source stylesheetSource = getStylesheetSource()__		try {_			Templates templates = this.transformerFactory.newTemplates(stylesheetSource)__			if (logger.isDebugEnabled()) {_				logger.debug("Loading templates '" + templates + "'")__			}_			return templates__		}_		catch (TransformerConfigurationException ex) {_			throw new ApplicationContextException("Can't load stylesheet from '" + getUrl() + "'", ex)__		}_		finally {_			closeSourceIfNecessary(stylesheetSource)__		}_	};load,the,link,templates,instance,for,the,stylesheet,at,the,configured,location;private,templates,load,templates,throws,application,context,exception,source,stylesheet,source,get,stylesheet,source,try,templates,templates,this,transformer,factory,new,templates,stylesheet,source,if,logger,is,debug,enabled,logger,debug,loading,templates,templates,return,templates,catch,transformer,configuration,exception,ex,throw,new,application,context,exception,can,t,load,stylesheet,from,get,url,ex,finally,close,source,if,necessary,stylesheet,source
XsltView -> private Templates loadTemplates() throws ApplicationContextException;1498780456;Load the {@link Templates} instance for the stylesheet at the configured location.;private Templates loadTemplates() throws ApplicationContextException {_		Source stylesheetSource = getStylesheetSource()__		try {_			Templates templates = getTransformerFactory().newTemplates(stylesheetSource)__			if (logger.isDebugEnabled()) {_				logger.debug("Loading templates '" + templates + "'")__			}_			return templates__		}_		catch (TransformerConfigurationException ex) {_			throw new ApplicationContextException("Can't load stylesheet from '" + getUrl() + "'", ex)__		}_		finally {_			closeSourceIfNecessary(stylesheetSource)__		}_	};load,the,link,templates,instance,for,the,stylesheet,at,the,configured,location;private,templates,load,templates,throws,application,context,exception,source,stylesheet,source,get,stylesheet,source,try,templates,templates,get,transformer,factory,new,templates,stylesheet,source,if,logger,is,debug,enabled,logger,debug,loading,templates,templates,return,templates,catch,transformer,configuration,exception,ex,throw,new,application,context,exception,can,t,load,stylesheet,from,get,url,ex,finally,close,source,if,necessary,stylesheet,source
XsltView -> private Templates loadTemplates() throws ApplicationContextException;1508532146;Load the {@link Templates} instance for the stylesheet at the configured location.;private Templates loadTemplates() throws ApplicationContextException {_		Source stylesheetSource = getStylesheetSource()__		try {_			Templates templates = getTransformerFactory().newTemplates(stylesheetSource)__			if (logger.isDebugEnabled()) {_				logger.debug("Loading templates '" + templates + "'")__			}_			return templates__		}_		catch (TransformerConfigurationException ex) {_			throw new ApplicationContextException("Can't load stylesheet from '" + getUrl() + "'", ex)__		}_		finally {_			closeSourceIfNecessary(stylesheetSource)__		}_	};load,the,link,templates,instance,for,the,stylesheet,at,the,configured,location;private,templates,load,templates,throws,application,context,exception,source,stylesheet,source,get,stylesheet,source,try,templates,templates,get,transformer,factory,new,templates,stylesheet,source,if,logger,is,debug,enabled,logger,debug,loading,templates,templates,return,templates,catch,transformer,configuration,exception,ex,throw,new,application,context,exception,can,t,load,stylesheet,from,get,url,ex,finally,close,source,if,necessary,stylesheet,source
XsltView -> private Templates loadTemplates() throws ApplicationContextException;1529361191;Load the {@link Templates} instance for the stylesheet at the configured location.;private Templates loadTemplates() throws ApplicationContextException {_		Source stylesheetSource = getStylesheetSource()__		try {_			Templates templates = getTransformerFactory().newTemplates(stylesheetSource)__			return templates__		}_		catch (TransformerConfigurationException ex) {_			throw new ApplicationContextException("Can't load stylesheet from '" + getUrl() + "'", ex)__		}_		finally {_			closeSourceIfNecessary(stylesheetSource)__		}_	};load,the,link,templates,instance,for,the,stylesheet,at,the,configured,location;private,templates,load,templates,throws,application,context,exception,source,stylesheet,source,get,stylesheet,source,try,templates,templates,get,transformer,factory,new,templates,stylesheet,source,return,templates,catch,transformer,configuration,exception,ex,throw,new,application,context,exception,can,t,load,stylesheet,from,get,url,ex,finally,close,source,if,necessary,stylesheet,source
XsltView -> public void setErrorListener(ErrorListener errorListener);1328020251;Set an implementation of the {@link javax.xml.transform.ErrorListener}_interface for custom handling of transformation errors and warnings._<p>If not set, a default_{@link org.springframework.util.xml.SimpleTransformErrorListener} is_used that simply logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see org.springframework.util.xml.SimpleTransformErrorListener;public void setErrorListener(ErrorListener errorListener) {_		this.errorListener = (errorListener != null ? errorListener : new SimpleTransformErrorListener(logger))__	};set,an,implementation,of,the,link,javax,xml,transform,error,listener,interface,for,custom,handling,of,transformation,errors,and,warnings,p,if,not,set,a,default,link,org,springframework,util,xml,simple,transform,error,listener,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,org,springframework,util,xml,simple,transform,error,listener;public,void,set,error,listener,error,listener,error,listener,this,error,listener,error,listener,null,error,listener,new,simple,transform,error,listener,logger
XsltView -> public void setErrorListener(ErrorListener errorListener);1356735495;Set an implementation of the {@link javax.xml.transform.ErrorListener}_interface for custom handling of transformation errors and warnings._<p>If not set, a default_{@link org.springframework.util.xml.SimpleTransformErrorListener} is_used that simply logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see org.springframework.util.xml.SimpleTransformErrorListener;public void setErrorListener(ErrorListener errorListener) {_		this.errorListener = (errorListener != null ? errorListener : new SimpleTransformErrorListener(logger))__	};set,an,implementation,of,the,link,javax,xml,transform,error,listener,interface,for,custom,handling,of,transformation,errors,and,warnings,p,if,not,set,a,default,link,org,springframework,util,xml,simple,transform,error,listener,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,org,springframework,util,xml,simple,transform,error,listener;public,void,set,error,listener,error,listener,error,listener,this,error,listener,error,listener,null,error,listener,new,simple,transform,error,listener,logger
XsltView -> public void setErrorListener(ErrorListener errorListener);1385412762;Set an implementation of the {@link javax.xml.transform.ErrorListener}_interface for custom handling of transformation errors and warnings._<p>If not set, a default_{@link org.springframework.util.xml.SimpleTransformErrorListener} is_used that simply logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see org.springframework.util.xml.SimpleTransformErrorListener;public void setErrorListener(ErrorListener errorListener) {_		this.errorListener = (errorListener != null ? errorListener : new SimpleTransformErrorListener(logger))__	};set,an,implementation,of,the,link,javax,xml,transform,error,listener,interface,for,custom,handling,of,transformation,errors,and,warnings,p,if,not,set,a,default,link,org,springframework,util,xml,simple,transform,error,listener,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,org,springframework,util,xml,simple,transform,error,listener;public,void,set,error,listener,error,listener,error,listener,this,error,listener,error,listener,null,error,listener,new,simple,transform,error,listener,logger
XsltView -> public void setErrorListener(ErrorListener errorListener);1385423968;Set an implementation of the {@link javax.xml.transform.ErrorListener}_interface for custom handling of transformation errors and warnings._<p>If not set, a default_{@link org.springframework.util.xml.SimpleTransformErrorListener} is_used that simply logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see org.springframework.util.xml.SimpleTransformErrorListener;public void setErrorListener(ErrorListener errorListener) {_		this.errorListener = (errorListener != null ? errorListener : new SimpleTransformErrorListener(logger))__	};set,an,implementation,of,the,link,javax,xml,transform,error,listener,interface,for,custom,handling,of,transformation,errors,and,warnings,p,if,not,set,a,default,link,org,springframework,util,xml,simple,transform,error,listener,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,org,springframework,util,xml,simple,transform,error,listener;public,void,set,error,listener,error,listener,error,listener,this,error,listener,error,listener,null,error,listener,new,simple,transform,error,listener,logger
XsltView -> public void setErrorListener(ErrorListener errorListener);1468948866;Set an implementation of the {@link javax.xml.transform.ErrorListener}_interface for custom handling of transformation errors and warnings._<p>If not set, a default_{@link org.springframework.util.xml.SimpleTransformErrorListener} is_used that simply logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see org.springframework.util.xml.SimpleTransformErrorListener;public void setErrorListener(ErrorListener errorListener) {_		this.errorListener = (errorListener != null ? errorListener : new SimpleTransformErrorListener(logger))__	};set,an,implementation,of,the,link,javax,xml,transform,error,listener,interface,for,custom,handling,of,transformation,errors,and,warnings,p,if,not,set,a,default,link,org,springframework,util,xml,simple,transform,error,listener,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,org,springframework,util,xml,simple,transform,error,listener;public,void,set,error,listener,error,listener,error,listener,this,error,listener,error,listener,null,error,listener,new,simple,transform,error,listener,logger
XsltView -> public void setErrorListener(ErrorListener errorListener);1469047316;Set an implementation of the {@link javax.xml.transform.ErrorListener}_interface for custom handling of transformation errors and warnings._<p>If not set, a default_{@link org.springframework.util.xml.SimpleTransformErrorListener} is_used that simply logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see org.springframework.util.xml.SimpleTransformErrorListener;public void setErrorListener(ErrorListener errorListener) {_		this.errorListener = (errorListener != null ? errorListener : new SimpleTransformErrorListener(logger))__	};set,an,implementation,of,the,link,javax,xml,transform,error,listener,interface,for,custom,handling,of,transformation,errors,and,warnings,p,if,not,set,a,default,link,org,springframework,util,xml,simple,transform,error,listener,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,org,springframework,util,xml,simple,transform,error,listener;public,void,set,error,listener,error,listener,error,listener,this,error,listener,error,listener,null,error,listener,new,simple,transform,error,listener,logger
XsltView -> public void setErrorListener(ErrorListener errorListener);1483750478;Set an implementation of the {@link javax.xml.transform.ErrorListener}_interface for custom handling of transformation errors and warnings._<p>If not set, a default_{@link org.springframework.util.xml.SimpleTransformErrorListener} is_used that simply logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see org.springframework.util.xml.SimpleTransformErrorListener;public void setErrorListener(ErrorListener errorListener) {_		this.errorListener = (errorListener != null ? errorListener : new SimpleTransformErrorListener(logger))__	};set,an,implementation,of,the,link,javax,xml,transform,error,listener,interface,for,custom,handling,of,transformation,errors,and,warnings,p,if,not,set,a,default,link,org,springframework,util,xml,simple,transform,error,listener,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,org,springframework,util,xml,simple,transform,error,listener;public,void,set,error,listener,error,listener,error,listener,this,error,listener,error,listener,null,error,listener,new,simple,transform,error,listener,logger
XsltView -> public void setErrorListener(ErrorListener errorListener);1495868221;Set an implementation of the {@link javax.xml.transform.ErrorListener}_interface for custom handling of transformation errors and warnings._<p>If not set, a default_{@link org.springframework.util.xml.SimpleTransformErrorListener} is_used that simply logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see org.springframework.util.xml.SimpleTransformErrorListener;public void setErrorListener(ErrorListener errorListener) {_		this.errorListener = (errorListener != null ? errorListener : new SimpleTransformErrorListener(logger))__	};set,an,implementation,of,the,link,javax,xml,transform,error,listener,interface,for,custom,handling,of,transformation,errors,and,warnings,p,if,not,set,a,default,link,org,springframework,util,xml,simple,transform,error,listener,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,org,springframework,util,xml,simple,transform,error,listener;public,void,set,error,listener,error,listener,error,listener,this,error,listener,error,listener,null,error,listener,new,simple,transform,error,listener,logger
XsltView -> @Override 	protected void initApplicationContext() throws BeansException;1328020251;Initialize this XsltView's TransformerFactory.;@Override_	protected void initApplicationContext() throws BeansException {_		this.transformerFactory = newTransformerFactory(this.transformerFactoryClass)__		this.transformerFactory.setErrorListener(this.errorListener)__		if (this.uriResolver != null) {_			this.transformerFactory.setURIResolver(this.uriResolver)__		}_		if (this.cacheTemplates) {_			this.cachedTemplates = loadTemplates()__		}_	};initialize,this,xslt,view,s,transformer,factory;override,protected,void,init,application,context,throws,beans,exception,this,transformer,factory,new,transformer,factory,this,transformer,factory,class,this,transformer,factory,set,error,listener,this,error,listener,if,this,uri,resolver,null,this,transformer,factory,set,uriresolver,this,uri,resolver,if,this,cache,templates,this,cached,templates,load,templates
XsltView -> @Override 	protected void initApplicationContext() throws BeansException;1356735495;Initialize this XsltView's TransformerFactory.;@Override_	protected void initApplicationContext() throws BeansException {_		this.transformerFactory = newTransformerFactory(this.transformerFactoryClass)__		this.transformerFactory.setErrorListener(this.errorListener)__		if (this.uriResolver != null) {_			this.transformerFactory.setURIResolver(this.uriResolver)__		}_		if (this.cacheTemplates) {_			this.cachedTemplates = loadTemplates()__		}_	};initialize,this,xslt,view,s,transformer,factory;override,protected,void,init,application,context,throws,beans,exception,this,transformer,factory,new,transformer,factory,this,transformer,factory,class,this,transformer,factory,set,error,listener,this,error,listener,if,this,uri,resolver,null,this,transformer,factory,set,uriresolver,this,uri,resolver,if,this,cache,templates,this,cached,templates,load,templates
XsltView -> @Override 	protected void initApplicationContext() throws BeansException;1385412762;Initialize this XsltView's TransformerFactory.;@Override_	protected void initApplicationContext() throws BeansException {_		this.transformerFactory = newTransformerFactory(this.transformerFactoryClass)__		this.transformerFactory.setErrorListener(this.errorListener)__		if (this.uriResolver != null) {_			this.transformerFactory.setURIResolver(this.uriResolver)__		}_		if (this.cacheTemplates) {_			this.cachedTemplates = loadTemplates()__		}_	};initialize,this,xslt,view,s,transformer,factory;override,protected,void,init,application,context,throws,beans,exception,this,transformer,factory,new,transformer,factory,this,transformer,factory,class,this,transformer,factory,set,error,listener,this,error,listener,if,this,uri,resolver,null,this,transformer,factory,set,uriresolver,this,uri,resolver,if,this,cache,templates,this,cached,templates,load,templates
XsltView -> @Override 	protected void initApplicationContext() throws BeansException;1385423968;Initialize this XsltView's TransformerFactory.;@Override_	protected void initApplicationContext() throws BeansException {_		this.transformerFactory = newTransformerFactory(this.transformerFactoryClass)__		this.transformerFactory.setErrorListener(this.errorListener)__		if (this.uriResolver != null) {_			this.transformerFactory.setURIResolver(this.uriResolver)__		}_		if (this.cacheTemplates) {_			this.cachedTemplates = loadTemplates()__		}_	};initialize,this,xslt,view,s,transformer,factory;override,protected,void,init,application,context,throws,beans,exception,this,transformer,factory,new,transformer,factory,this,transformer,factory,class,this,transformer,factory,set,error,listener,this,error,listener,if,this,uri,resolver,null,this,transformer,factory,set,uriresolver,this,uri,resolver,if,this,cache,templates,this,cached,templates,load,templates
XsltView -> @Override 	protected void initApplicationContext() throws BeansException;1468948866;Initialize this XsltView's TransformerFactory.;@Override_	protected void initApplicationContext() throws BeansException {_		this.transformerFactory = newTransformerFactory(this.transformerFactoryClass)__		this.transformerFactory.setErrorListener(this.errorListener)__		if (this.uriResolver != null) {_			this.transformerFactory.setURIResolver(this.uriResolver)__		}_		if (this.cacheTemplates) {_			this.cachedTemplates = loadTemplates()__		}_	};initialize,this,xslt,view,s,transformer,factory;override,protected,void,init,application,context,throws,beans,exception,this,transformer,factory,new,transformer,factory,this,transformer,factory,class,this,transformer,factory,set,error,listener,this,error,listener,if,this,uri,resolver,null,this,transformer,factory,set,uriresolver,this,uri,resolver,if,this,cache,templates,this,cached,templates,load,templates
XsltView -> @Override 	protected void initApplicationContext() throws BeansException;1469047316;Initialize this XsltView's TransformerFactory.;@Override_	protected void initApplicationContext() throws BeansException {_		this.transformerFactory = newTransformerFactory(this.transformerFactoryClass)__		this.transformerFactory.setErrorListener(this.errorListener)__		if (this.uriResolver != null) {_			this.transformerFactory.setURIResolver(this.uriResolver)__		}_		if (this.cacheTemplates) {_			this.cachedTemplates = loadTemplates()__		}_	};initialize,this,xslt,view,s,transformer,factory;override,protected,void,init,application,context,throws,beans,exception,this,transformer,factory,new,transformer,factory,this,transformer,factory,class,this,transformer,factory,set,error,listener,this,error,listener,if,this,uri,resolver,null,this,transformer,factory,set,uriresolver,this,uri,resolver,if,this,cache,templates,this,cached,templates,load,templates
XsltView -> @Override 	protected void initApplicationContext() throws BeansException;1483750478;Initialize this XsltView's TransformerFactory.;@Override_	protected void initApplicationContext() throws BeansException {_		this.transformerFactory = newTransformerFactory(this.transformerFactoryClass)__		this.transformerFactory.setErrorListener(this.errorListener)__		if (this.uriResolver != null) {_			this.transformerFactory.setURIResolver(this.uriResolver)__		}_		if (this.cacheTemplates) {_			this.cachedTemplates = loadTemplates()__		}_	};initialize,this,xslt,view,s,transformer,factory;override,protected,void,init,application,context,throws,beans,exception,this,transformer,factory,new,transformer,factory,this,transformer,factory,class,this,transformer,factory,set,error,listener,this,error,listener,if,this,uri,resolver,null,this,transformer,factory,set,uriresolver,this,uri,resolver,if,this,cache,templates,this,cached,templates,load,templates
XsltView -> @Override 	protected void initApplicationContext() throws BeansException;1495868221;Initialize this XsltView's TransformerFactory.;@Override_	protected void initApplicationContext() throws BeansException {_		this.transformerFactory = newTransformerFactory(this.transformerFactoryClass)__		this.transformerFactory.setErrorListener(this.errorListener)__		if (this.uriResolver != null) {_			this.transformerFactory.setURIResolver(this.uriResolver)__		}_		if (this.cacheTemplates) {_			this.cachedTemplates = loadTemplates()__		}_	};initialize,this,xslt,view,s,transformer,factory;override,protected,void,init,application,context,throws,beans,exception,this,transformer,factory,new,transformer,factory,this,transformer,factory,class,this,transformer,factory,set,error,listener,this,error,listener,if,this,uri,resolver,null,this,transformer,factory,set,uriresolver,this,uri,resolver,if,this,cache,templates,this,cached,templates,load,templates
XsltView -> @Override 	protected void initApplicationContext() throws BeansException;1496837955;Initialize this XsltView's TransformerFactory.;@Override_	protected void initApplicationContext() throws BeansException {_		this.transformerFactory = newTransformerFactory(this.transformerFactoryClass)__		this.transformerFactory.setErrorListener(this.errorListener)__		if (this.uriResolver != null) {_			this.transformerFactory.setURIResolver(this.uriResolver)__		}_		if (this.cacheTemplates) {_			this.cachedTemplates = loadTemplates()__		}_	};initialize,this,xslt,view,s,transformer,factory;override,protected,void,init,application,context,throws,beans,exception,this,transformer,factory,new,transformer,factory,this,transformer,factory,class,this,transformer,factory,set,error,listener,this,error,listener,if,this,uri,resolver,null,this,transformer,factory,set,uriresolver,this,uri,resolver,if,this,cache,templates,this,cached,templates,load,templates
XsltView -> @Override 	protected void initApplicationContext() throws BeansException;1497250713;Initialize this XsltView's TransformerFactory.;@Override_	protected void initApplicationContext() throws BeansException {_		this.transformerFactory = newTransformerFactory(this.transformerFactoryClass)__		this.transformerFactory.setErrorListener(this.errorListener)__		if (this.uriResolver != null) {_			this.transformerFactory.setURIResolver(this.uriResolver)__		}_		if (this.cacheTemplates) {_			this.cachedTemplates = loadTemplates()__		}_	};initialize,this,xslt,view,s,transformer,factory;override,protected,void,init,application,context,throws,beans,exception,this,transformer,factory,new,transformer,factory,this,transformer,factory,class,this,transformer,factory,set,error,listener,this,error,listener,if,this,uri,resolver,null,this,transformer,factory,set,uriresolver,this,uri,resolver,if,this,cache,templates,this,cached,templates,load,templates
XsltView -> @Override 	protected void initApplicationContext() throws BeansException;1498780456;Initialize this XsltView's TransformerFactory.;@Override_	protected void initApplicationContext() throws BeansException {_		this.transformerFactory = newTransformerFactory(this.transformerFactoryClass)__		this.transformerFactory.setErrorListener(this.errorListener)__		if (this.uriResolver != null) {_			this.transformerFactory.setURIResolver(this.uriResolver)__		}_		if (this.cacheTemplates) {_			this.cachedTemplates = loadTemplates()__		}_	};initialize,this,xslt,view,s,transformer,factory;override,protected,void,init,application,context,throws,beans,exception,this,transformer,factory,new,transformer,factory,this,transformer,factory,class,this,transformer,factory,set,error,listener,this,error,listener,if,this,uri,resolver,null,this,transformer,factory,set,uriresolver,this,uri,resolver,if,this,cache,templates,this,cached,templates,load,templates
XsltView -> @Override 	protected void initApplicationContext() throws BeansException;1508532146;Initialize this XsltView's TransformerFactory.;@Override_	protected void initApplicationContext() throws BeansException {_		this.transformerFactory = newTransformerFactory(this.transformerFactoryClass)__		this.transformerFactory.setErrorListener(this.errorListener)__		if (this.uriResolver != null) {_			this.transformerFactory.setURIResolver(this.uriResolver)__		}_		if (this.cacheTemplates) {_			this.cachedTemplates = loadTemplates()__		}_	};initialize,this,xslt,view,s,transformer,factory;override,protected,void,init,application,context,throws,beans,exception,this,transformer,factory,new,transformer,factory,this,transformer,factory,class,this,transformer,factory,set,error,listener,this,error,listener,if,this,uri,resolver,null,this,transformer,factory,set,uriresolver,this,uri,resolver,if,this,cache,templates,this,cached,templates,load,templates
XsltView -> @Override 	protected void initApplicationContext() throws BeansException;1529361191;Initialize this XsltView's TransformerFactory.;@Override_	protected void initApplicationContext() throws BeansException {_		this.transformerFactory = newTransformerFactory(this.transformerFactoryClass)__		this.transformerFactory.setErrorListener(this.errorListener)__		if (this.uriResolver != null) {_			this.transformerFactory.setURIResolver(this.uriResolver)__		}_		if (this.cacheTemplates) {_			this.cachedTemplates = loadTemplates()__		}_	};initialize,this,xslt,view,s,transformer,factory;override,protected,void,init,application,context,throws,beans,exception,this,transformer,factory,new,transformer,factory,this,transformer,factory,class,this,transformer,factory,set,error,listener,this,error,listener,if,this,uri,resolver,null,this,transformer,factory,set,uriresolver,this,uri,resolver,if,this,cache,templates,this,cached,templates,load,templates
XsltView -> public void setTransformerFactoryClass(Class<?> transformerFactoryClass);1385412762;Specify the XSLT TransformerFactory class to use._<p>The default constructor of the specified class will be called_to build the TransformerFactory for this view.;public void setTransformerFactoryClass(Class<?> transformerFactoryClass) {_		Assert.isAssignable(TransformerFactory.class, transformerFactoryClass)__		this.transformerFactoryClass = transformerFactoryClass__	};specify,the,xslt,transformer,factory,class,to,use,p,the,default,constructor,of,the,specified,class,will,be,called,to,build,the,transformer,factory,for,this,view;public,void,set,transformer,factory,class,class,transformer,factory,class,assert,is,assignable,transformer,factory,class,transformer,factory,class,this,transformer,factory,class,transformer,factory,class
XsltView -> public void setTransformerFactoryClass(Class<?> transformerFactoryClass);1385423968;Specify the XSLT TransformerFactory class to use._<p>The default constructor of the specified class will be called_to build the TransformerFactory for this view.;public void setTransformerFactoryClass(Class<?> transformerFactoryClass) {_		Assert.isAssignable(TransformerFactory.class, transformerFactoryClass)__		this.transformerFactoryClass = transformerFactoryClass__	};specify,the,xslt,transformer,factory,class,to,use,p,the,default,constructor,of,the,specified,class,will,be,called,to,build,the,transformer,factory,for,this,view;public,void,set,transformer,factory,class,class,transformer,factory,class,assert,is,assignable,transformer,factory,class,transformer,factory,class,this,transformer,factory,class,transformer,factory,class
XsltView -> public void setTransformerFactoryClass(Class transformerFactoryClass);1328020251;Specify the XSLT TransformerFactory class to use._<p>The default constructor of the specified class will be called_to build the TransformerFactory for this view.;public void setTransformerFactoryClass(Class transformerFactoryClass) {_		Assert.isAssignable(TransformerFactory.class, transformerFactoryClass)__		this.transformerFactoryClass = transformerFactoryClass__	};specify,the,xslt,transformer,factory,class,to,use,p,the,default,constructor,of,the,specified,class,will,be,called,to,build,the,transformer,factory,for,this,view;public,void,set,transformer,factory,class,class,transformer,factory,class,assert,is,assignable,transformer,factory,class,transformer,factory,class,this,transformer,factory,class,transformer,factory,class
XsltView -> public void setTransformerFactoryClass(Class transformerFactoryClass);1356735495;Specify the XSLT TransformerFactory class to use._<p>The default constructor of the specified class will be called_to build the TransformerFactory for this view.;public void setTransformerFactoryClass(Class transformerFactoryClass) {_		Assert.isAssignable(TransformerFactory.class, transformerFactoryClass)__		this.transformerFactoryClass = transformerFactoryClass__	};specify,the,xslt,transformer,factory,class,to,use,p,the,default,constructor,of,the,specified,class,will,be,called,to,build,the,transformer,factory,for,this,view;public,void,set,transformer,factory,class,class,transformer,factory,class,assert,is,assignable,transformer,factory,class,transformer,factory,class,this,transformer,factory,class,transformer,factory,class
XsltView -> public void setSourceKey(String sourceKey);1328020251;Set the name of the model attribute that represents the XSLT Source._If not specified, the model map will be searched for a matching value type._<p>The following source types are supported out of the box:_{@link Source}, {@link Document}, {@link Node}, {@link Reader},_{@link InputStream} and {@link Resource}._@see #getSourceTypes_@see #convertSource;public void setSourceKey(String sourceKey) {_		this.sourceKey = sourceKey__	};set,the,name,of,the,model,attribute,that,represents,the,xslt,source,if,not,specified,the,model,map,will,be,searched,for,a,matching,value,type,p,the,following,source,types,are,supported,out,of,the,box,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,see,get,source,types,see,convert,source;public,void,set,source,key,string,source,key,this,source,key,source,key
XsltView -> public void setSourceKey(String sourceKey);1356735495;Set the name of the model attribute that represents the XSLT Source._If not specified, the model map will be searched for a matching value type._<p>The following source types are supported out of the box:_{@link Source}, {@link Document}, {@link Node}, {@link Reader},_{@link InputStream} and {@link Resource}._@see #getSourceTypes_@see #convertSource;public void setSourceKey(String sourceKey) {_		this.sourceKey = sourceKey__	};set,the,name,of,the,model,attribute,that,represents,the,xslt,source,if,not,specified,the,model,map,will,be,searched,for,a,matching,value,type,p,the,following,source,types,are,supported,out,of,the,box,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,see,get,source,types,see,convert,source;public,void,set,source,key,string,source,key,this,source,key,source,key
XsltView -> public void setSourceKey(String sourceKey);1385412762;Set the name of the model attribute that represents the XSLT Source._If not specified, the model map will be searched for a matching value type._<p>The following source types are supported out of the box:_{@link Source}, {@link Document}, {@link Node}, {@link Reader},_{@link InputStream} and {@link Resource}._@see #getSourceTypes_@see #convertSource;public void setSourceKey(String sourceKey) {_		this.sourceKey = sourceKey__	};set,the,name,of,the,model,attribute,that,represents,the,xslt,source,if,not,specified,the,model,map,will,be,searched,for,a,matching,value,type,p,the,following,source,types,are,supported,out,of,the,box,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,see,get,source,types,see,convert,source;public,void,set,source,key,string,source,key,this,source,key,source,key
XsltView -> public void setSourceKey(String sourceKey);1385423968;Set the name of the model attribute that represents the XSLT Source._If not specified, the model map will be searched for a matching value type._<p>The following source types are supported out of the box:_{@link Source}, {@link Document}, {@link Node}, {@link Reader},_{@link InputStream} and {@link Resource}._@see #getSourceTypes_@see #convertSource;public void setSourceKey(String sourceKey) {_		this.sourceKey = sourceKey__	};set,the,name,of,the,model,attribute,that,represents,the,xslt,source,if,not,specified,the,model,map,will,be,searched,for,a,matching,value,type,p,the,following,source,types,are,supported,out,of,the,box,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,see,get,source,types,see,convert,source;public,void,set,source,key,string,source,key,this,source,key,source,key
XsltView -> public void setSourceKey(String sourceKey);1468948866;Set the name of the model attribute that represents the XSLT Source._If not specified, the model map will be searched for a matching value type._<p>The following source types are supported out of the box:_{@link Source}, {@link Document}, {@link Node}, {@link Reader},_{@link InputStream} and {@link Resource}._@see #getSourceTypes_@see #convertSource;public void setSourceKey(String sourceKey) {_		this.sourceKey = sourceKey__	};set,the,name,of,the,model,attribute,that,represents,the,xslt,source,if,not,specified,the,model,map,will,be,searched,for,a,matching,value,type,p,the,following,source,types,are,supported,out,of,the,box,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,see,get,source,types,see,convert,source;public,void,set,source,key,string,source,key,this,source,key,source,key
XsltView -> public void setSourceKey(String sourceKey);1469047316;Set the name of the model attribute that represents the XSLT Source._If not specified, the model map will be searched for a matching value type._<p>The following source types are supported out of the box:_{@link Source}, {@link Document}, {@link Node}, {@link Reader},_{@link InputStream} and {@link Resource}._@see #getSourceTypes_@see #convertSource;public void setSourceKey(String sourceKey) {_		this.sourceKey = sourceKey__	};set,the,name,of,the,model,attribute,that,represents,the,xslt,source,if,not,specified,the,model,map,will,be,searched,for,a,matching,value,type,p,the,following,source,types,are,supported,out,of,the,box,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,see,get,source,types,see,convert,source;public,void,set,source,key,string,source,key,this,source,key,source,key
XsltView -> public void setSourceKey(String sourceKey);1483750478;Set the name of the model attribute that represents the XSLT Source._If not specified, the model map will be searched for a matching value type._<p>The following source types are supported out of the box:_{@link Source}, {@link Document}, {@link Node}, {@link Reader},_{@link InputStream} and {@link Resource}._@see #getSourceTypes_@see #convertSource;public void setSourceKey(String sourceKey) {_		this.sourceKey = sourceKey__	};set,the,name,of,the,model,attribute,that,represents,the,xslt,source,if,not,specified,the,model,map,will,be,searched,for,a,matching,value,type,p,the,following,source,types,are,supported,out,of,the,box,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,see,get,source,types,see,convert,source;public,void,set,source,key,string,source,key,this,source,key,source,key
XsltView -> public void setSourceKey(String sourceKey);1495868221;Set the name of the model attribute that represents the XSLT Source._If not specified, the model map will be searched for a matching value type._<p>The following source types are supported out of the box:_{@link Source}, {@link Document}, {@link Node}, {@link Reader},_{@link InputStream} and {@link Resource}._@see #getSourceTypes_@see #convertSource;public void setSourceKey(String sourceKey) {_		this.sourceKey = sourceKey__	};set,the,name,of,the,model,attribute,that,represents,the,xslt,source,if,not,specified,the,model,map,will,be,searched,for,a,matching,value,type,p,the,following,source,types,are,supported,out,of,the,box,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,see,get,source,types,see,convert,source;public,void,set,source,key,string,source,key,this,source,key,source,key
XsltView -> public void setSourceKey(String sourceKey);1496837955;Set the name of the model attribute that represents the XSLT Source._If not specified, the model map will be searched for a matching value type._<p>The following source types are supported out of the box:_{@link Source}, {@link Document}, {@link Node}, {@link Reader},_{@link InputStream} and {@link Resource}._@see #getSourceTypes_@see #convertSource;public void setSourceKey(String sourceKey) {_		this.sourceKey = sourceKey__	};set,the,name,of,the,model,attribute,that,represents,the,xslt,source,if,not,specified,the,model,map,will,be,searched,for,a,matching,value,type,p,the,following,source,types,are,supported,out,of,the,box,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,see,get,source,types,see,convert,source;public,void,set,source,key,string,source,key,this,source,key,source,key
XsltView -> public void setSourceKey(String sourceKey);1497250713;Set the name of the model attribute that represents the XSLT Source._If not specified, the model map will be searched for a matching value type._<p>The following source types are supported out of the box:_{@link Source}, {@link Document}, {@link Node}, {@link Reader},_{@link InputStream} and {@link Resource}._@see #getSourceTypes_@see #convertSource;public void setSourceKey(String sourceKey) {_		this.sourceKey = sourceKey__	};set,the,name,of,the,model,attribute,that,represents,the,xslt,source,if,not,specified,the,model,map,will,be,searched,for,a,matching,value,type,p,the,following,source,types,are,supported,out,of,the,box,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,see,get,source,types,see,convert,source;public,void,set,source,key,string,source,key,this,source,key,source,key
XsltView -> public void setSourceKey(String sourceKey);1498780456;Set the name of the model attribute that represents the XSLT Source._If not specified, the model map will be searched for a matching value type._<p>The following source types are supported out of the box:_{@link Source}, {@link Document}, {@link Node}, {@link Reader},_{@link InputStream} and {@link Resource}._@see #getSourceTypes_@see #convertSource;public void setSourceKey(String sourceKey) {_		this.sourceKey = sourceKey__	};set,the,name,of,the,model,attribute,that,represents,the,xslt,source,if,not,specified,the,model,map,will,be,searched,for,a,matching,value,type,p,the,following,source,types,are,supported,out,of,the,box,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,see,get,source,types,see,convert,source;public,void,set,source,key,string,source,key,this,source,key,source,key
XsltView -> public void setSourceKey(String sourceKey);1508532146;Set the name of the model attribute that represents the XSLT Source._If not specified, the model map will be searched for a matching value type._<p>The following source types are supported out of the box:_{@link Source}, {@link Document}, {@link Node}, {@link Reader},_{@link InputStream} and {@link Resource}._@see #getSourceTypes_@see #convertSource;public void setSourceKey(String sourceKey) {_		this.sourceKey = sourceKey__	};set,the,name,of,the,model,attribute,that,represents,the,xslt,source,if,not,specified,the,model,map,will,be,searched,for,a,matching,value,type,p,the,following,source,types,are,supported,out,of,the,box,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,see,get,source,types,see,convert,source;public,void,set,source,key,string,source,key,this,source,key,source,key
XsltView -> public void setSourceKey(String sourceKey);1529361191;Set the name of the model attribute that represents the XSLT Source._If not specified, the model map will be searched for a matching value type._<p>The following source types are supported out of the box:_{@link Source}, {@link Document}, {@link Node}, {@link Reader},_{@link InputStream} and {@link Resource}._@see #getSourceTypes_@see #convertSource;public void setSourceKey(String sourceKey) {_		this.sourceKey = sourceKey__	};set,the,name,of,the,model,attribute,that,represents,the,xslt,source,if,not,specified,the,model,map,will,be,searched,for,a,matching,value,type,p,the,following,source,types,are,supported,out,of,the,box,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,see,get,source,types,see,convert,source;public,void,set,source,key,string,source,key,this,source,key,source,key
XsltView -> protected TransformerFactory newTransformerFactory(Class<? extends TransformerFactory> transformerFactoryClass);1468948866;Instantiate a new TransformerFactory for this view._<p>The default implementation simply calls_{@link javax.xml.transform.TransformerFactory#newInstance()}._If a {@link #setTransformerFactoryClass "transformerFactoryClass"}_has been specified explicitly, the default constructor of the_specified class will be called instead._<p>Can be overridden in subclasses._@param transformerFactoryClass the specified factory class (if any)_@return the new TransactionFactory instance_@see #setTransformerFactoryClass_@see #getTransformerFactory();protected TransformerFactory newTransformerFactory(Class<? extends TransformerFactory> transformerFactoryClass) {_		if (transformerFactoryClass != null) {_			try {_				return ReflectionUtils.accessibleConstructor(transformerFactoryClass).newInstance()__			}_			catch (Exception ex) {_				throw new TransformerFactoryConfigurationError(ex, "Could not instantiate TransformerFactory")__			}_		}_		else {_			return TransformerFactory.newInstance()__		}_	};instantiate,a,new,transformer,factory,for,this,view,p,the,default,implementation,simply,calls,link,javax,xml,transform,transformer,factory,new,instance,if,a,link,set,transformer,factory,class,transformer,factory,class,has,been,specified,explicitly,the,default,constructor,of,the,specified,class,will,be,called,instead,p,can,be,overridden,in,subclasses,param,transformer,factory,class,the,specified,factory,class,if,any,return,the,new,transaction,factory,instance,see,set,transformer,factory,class,see,get,transformer,factory;protected,transformer,factory,new,transformer,factory,class,extends,transformer,factory,transformer,factory,class,if,transformer,factory,class,null,try,return,reflection,utils,accessible,constructor,transformer,factory,class,new,instance,catch,exception,ex,throw,new,transformer,factory,configuration,error,ex,could,not,instantiate,transformer,factory,else,return,transformer,factory,new,instance
XsltView -> protected TransformerFactory newTransformerFactory(Class<? extends TransformerFactory> transformerFactoryClass);1469047316;Instantiate a new TransformerFactory for this view._<p>The default implementation simply calls_{@link javax.xml.transform.TransformerFactory#newInstance()}._If a {@link #setTransformerFactoryClass "transformerFactoryClass"}_has been specified explicitly, the default constructor of the_specified class will be called instead._<p>Can be overridden in subclasses._@param transformerFactoryClass the specified factory class (if any)_@return the new TransactionFactory instance_@see #setTransformerFactoryClass_@see #getTransformerFactory();protected TransformerFactory newTransformerFactory(Class<? extends TransformerFactory> transformerFactoryClass) {_		if (transformerFactoryClass != null) {_			try {_				return ReflectionUtils.accessibleConstructor(transformerFactoryClass).newInstance()__			}_			catch (Exception ex) {_				throw new TransformerFactoryConfigurationError(ex, "Could not instantiate TransformerFactory")__			}_		}_		else {_			return TransformerFactory.newInstance()__		}_	};instantiate,a,new,transformer,factory,for,this,view,p,the,default,implementation,simply,calls,link,javax,xml,transform,transformer,factory,new,instance,if,a,link,set,transformer,factory,class,transformer,factory,class,has,been,specified,explicitly,the,default,constructor,of,the,specified,class,will,be,called,instead,p,can,be,overridden,in,subclasses,param,transformer,factory,class,the,specified,factory,class,if,any,return,the,new,transaction,factory,instance,see,set,transformer,factory,class,see,get,transformer,factory;protected,transformer,factory,new,transformer,factory,class,extends,transformer,factory,transformer,factory,class,if,transformer,factory,class,null,try,return,reflection,utils,accessible,constructor,transformer,factory,class,new,instance,catch,exception,ex,throw,new,transformer,factory,configuration,error,ex,could,not,instantiate,transformer,factory,else,return,transformer,factory,new,instance
XsltView -> protected TransformerFactory newTransformerFactory(Class<? extends TransformerFactory> transformerFactoryClass);1483750478;Instantiate a new TransformerFactory for this view._<p>The default implementation simply calls_{@link javax.xml.transform.TransformerFactory#newInstance()}._If a {@link #setTransformerFactoryClass "transformerFactoryClass"}_has been specified explicitly, the default constructor of the_specified class will be called instead._<p>Can be overridden in subclasses._@param transformerFactoryClass the specified factory class (if any)_@return the new TransactionFactory instance_@see #setTransformerFactoryClass_@see #getTransformerFactory();protected TransformerFactory newTransformerFactory(Class<? extends TransformerFactory> transformerFactoryClass) {_		if (transformerFactoryClass != null) {_			try {_				return ReflectionUtils.accessibleConstructor(transformerFactoryClass).newInstance()__			}_			catch (Exception ex) {_				throw new TransformerFactoryConfigurationError(ex, "Could not instantiate TransformerFactory")__			}_		}_		else {_			return TransformerFactory.newInstance()__		}_	};instantiate,a,new,transformer,factory,for,this,view,p,the,default,implementation,simply,calls,link,javax,xml,transform,transformer,factory,new,instance,if,a,link,set,transformer,factory,class,transformer,factory,class,has,been,specified,explicitly,the,default,constructor,of,the,specified,class,will,be,called,instead,p,can,be,overridden,in,subclasses,param,transformer,factory,class,the,specified,factory,class,if,any,return,the,new,transaction,factory,instance,see,set,transformer,factory,class,see,get,transformer,factory;protected,transformer,factory,new,transformer,factory,class,extends,transformer,factory,transformer,factory,class,if,transformer,factory,class,null,try,return,reflection,utils,accessible,constructor,transformer,factory,class,new,instance,catch,exception,ex,throw,new,transformer,factory,configuration,error,ex,could,not,instantiate,transformer,factory,else,return,transformer,factory,new,instance
XsltView -> protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException;1328020251;Create the {@link Transformer} instance used to prefer the XSLT transformation._<p>The default implementation simply calls {@link Templates#newTransformer()}, and_configures the {@link Transformer} with the custom {@link URIResolver} if specified._@param templates the XSLT Templates instance to create a Transformer for_@return the Transformer object_@throws TransformerConfigurationException in case of creation failure;protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException {_		Transformer transformer = templates.newTransformer()__		if (this.uriResolver != null) {_			transformer.setURIResolver(this.uriResolver)__		}_		return transformer__	};create,the,link,transformer,instance,used,to,prefer,the,xslt,transformation,p,the,default,implementation,simply,calls,link,templates,new,transformer,and,configures,the,link,transformer,with,the,custom,link,uriresolver,if,specified,param,templates,the,xslt,templates,instance,to,create,a,transformer,for,return,the,transformer,object,throws,transformer,configuration,exception,in,case,of,creation,failure;protected,transformer,create,transformer,templates,templates,throws,transformer,configuration,exception,transformer,transformer,templates,new,transformer,if,this,uri,resolver,null,transformer,set,uriresolver,this,uri,resolver,return,transformer
XsltView -> protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException;1356735495;Create the {@link Transformer} instance used to prefer the XSLT transformation._<p>The default implementation simply calls {@link Templates#newTransformer()}, and_configures the {@link Transformer} with the custom {@link URIResolver} if specified._@param templates the XSLT Templates instance to create a Transformer for_@return the Transformer object_@throws TransformerConfigurationException in case of creation failure;protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException {_		Transformer transformer = templates.newTransformer()__		if (this.uriResolver != null) {_			transformer.setURIResolver(this.uriResolver)__		}_		return transformer__	};create,the,link,transformer,instance,used,to,prefer,the,xslt,transformation,p,the,default,implementation,simply,calls,link,templates,new,transformer,and,configures,the,link,transformer,with,the,custom,link,uriresolver,if,specified,param,templates,the,xslt,templates,instance,to,create,a,transformer,for,return,the,transformer,object,throws,transformer,configuration,exception,in,case,of,creation,failure;protected,transformer,create,transformer,templates,templates,throws,transformer,configuration,exception,transformer,transformer,templates,new,transformer,if,this,uri,resolver,null,transformer,set,uriresolver,this,uri,resolver,return,transformer
XsltView -> protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException;1385412762;Create the {@link Transformer} instance used to prefer the XSLT transformation._<p>The default implementation simply calls {@link Templates#newTransformer()}, and_configures the {@link Transformer} with the custom {@link URIResolver} if specified._@param templates the XSLT Templates instance to create a Transformer for_@return the Transformer object_@throws TransformerConfigurationException in case of creation failure;protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException {_		Transformer transformer = templates.newTransformer()__		if (this.uriResolver != null) {_			transformer.setURIResolver(this.uriResolver)__		}_		return transformer__	};create,the,link,transformer,instance,used,to,prefer,the,xslt,transformation,p,the,default,implementation,simply,calls,link,templates,new,transformer,and,configures,the,link,transformer,with,the,custom,link,uriresolver,if,specified,param,templates,the,xslt,templates,instance,to,create,a,transformer,for,return,the,transformer,object,throws,transformer,configuration,exception,in,case,of,creation,failure;protected,transformer,create,transformer,templates,templates,throws,transformer,configuration,exception,transformer,transformer,templates,new,transformer,if,this,uri,resolver,null,transformer,set,uriresolver,this,uri,resolver,return,transformer
XsltView -> protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException;1385423968;Create the {@link Transformer} instance used to prefer the XSLT transformation._<p>The default implementation simply calls {@link Templates#newTransformer()}, and_configures the {@link Transformer} with the custom {@link URIResolver} if specified._@param templates the XSLT Templates instance to create a Transformer for_@return the Transformer object_@throws TransformerConfigurationException in case of creation failure;protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException {_		Transformer transformer = templates.newTransformer()__		if (this.uriResolver != null) {_			transformer.setURIResolver(this.uriResolver)__		}_		return transformer__	};create,the,link,transformer,instance,used,to,prefer,the,xslt,transformation,p,the,default,implementation,simply,calls,link,templates,new,transformer,and,configures,the,link,transformer,with,the,custom,link,uriresolver,if,specified,param,templates,the,xslt,templates,instance,to,create,a,transformer,for,return,the,transformer,object,throws,transformer,configuration,exception,in,case,of,creation,failure;protected,transformer,create,transformer,templates,templates,throws,transformer,configuration,exception,transformer,transformer,templates,new,transformer,if,this,uri,resolver,null,transformer,set,uriresolver,this,uri,resolver,return,transformer
XsltView -> protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException;1468948866;Create the {@link Transformer} instance used to prefer the XSLT transformation._<p>The default implementation simply calls {@link Templates#newTransformer()}, and_configures the {@link Transformer} with the custom {@link URIResolver} if specified._@param templates the XSLT Templates instance to create a Transformer for_@return the Transformer object_@throws TransformerConfigurationException in case of creation failure;protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException {_		Transformer transformer = templates.newTransformer()__		if (this.uriResolver != null) {_			transformer.setURIResolver(this.uriResolver)__		}_		return transformer__	};create,the,link,transformer,instance,used,to,prefer,the,xslt,transformation,p,the,default,implementation,simply,calls,link,templates,new,transformer,and,configures,the,link,transformer,with,the,custom,link,uriresolver,if,specified,param,templates,the,xslt,templates,instance,to,create,a,transformer,for,return,the,transformer,object,throws,transformer,configuration,exception,in,case,of,creation,failure;protected,transformer,create,transformer,templates,templates,throws,transformer,configuration,exception,transformer,transformer,templates,new,transformer,if,this,uri,resolver,null,transformer,set,uriresolver,this,uri,resolver,return,transformer
XsltView -> protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException;1469047316;Create the {@link Transformer} instance used to prefer the XSLT transformation._<p>The default implementation simply calls {@link Templates#newTransformer()}, and_configures the {@link Transformer} with the custom {@link URIResolver} if specified._@param templates the XSLT Templates instance to create a Transformer for_@return the Transformer object_@throws TransformerConfigurationException in case of creation failure;protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException {_		Transformer transformer = templates.newTransformer()__		if (this.uriResolver != null) {_			transformer.setURIResolver(this.uriResolver)__		}_		return transformer__	};create,the,link,transformer,instance,used,to,prefer,the,xslt,transformation,p,the,default,implementation,simply,calls,link,templates,new,transformer,and,configures,the,link,transformer,with,the,custom,link,uriresolver,if,specified,param,templates,the,xslt,templates,instance,to,create,a,transformer,for,return,the,transformer,object,throws,transformer,configuration,exception,in,case,of,creation,failure;protected,transformer,create,transformer,templates,templates,throws,transformer,configuration,exception,transformer,transformer,templates,new,transformer,if,this,uri,resolver,null,transformer,set,uriresolver,this,uri,resolver,return,transformer
XsltView -> protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException;1483750478;Create the {@link Transformer} instance used to prefer the XSLT transformation._<p>The default implementation simply calls {@link Templates#newTransformer()}, and_configures the {@link Transformer} with the custom {@link URIResolver} if specified._@param templates the XSLT Templates instance to create a Transformer for_@return the Transformer object_@throws TransformerConfigurationException in case of creation failure;protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException {_		Transformer transformer = templates.newTransformer()__		if (this.uriResolver != null) {_			transformer.setURIResolver(this.uriResolver)__		}_		return transformer__	};create,the,link,transformer,instance,used,to,prefer,the,xslt,transformation,p,the,default,implementation,simply,calls,link,templates,new,transformer,and,configures,the,link,transformer,with,the,custom,link,uriresolver,if,specified,param,templates,the,xslt,templates,instance,to,create,a,transformer,for,return,the,transformer,object,throws,transformer,configuration,exception,in,case,of,creation,failure;protected,transformer,create,transformer,templates,templates,throws,transformer,configuration,exception,transformer,transformer,templates,new,transformer,if,this,uri,resolver,null,transformer,set,uriresolver,this,uri,resolver,return,transformer
XsltView -> protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException;1495868221;Create the {@link Transformer} instance used to prefer the XSLT transformation._<p>The default implementation simply calls {@link Templates#newTransformer()}, and_configures the {@link Transformer} with the custom {@link URIResolver} if specified._@param templates the XSLT Templates instance to create a Transformer for_@return the Transformer object_@throws TransformerConfigurationException in case of creation failure;protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException {_		Transformer transformer = templates.newTransformer()__		if (this.uriResolver != null) {_			transformer.setURIResolver(this.uriResolver)__		}_		return transformer__	};create,the,link,transformer,instance,used,to,prefer,the,xslt,transformation,p,the,default,implementation,simply,calls,link,templates,new,transformer,and,configures,the,link,transformer,with,the,custom,link,uriresolver,if,specified,param,templates,the,xslt,templates,instance,to,create,a,transformer,for,return,the,transformer,object,throws,transformer,configuration,exception,in,case,of,creation,failure;protected,transformer,create,transformer,templates,templates,throws,transformer,configuration,exception,transformer,transformer,templates,new,transformer,if,this,uri,resolver,null,transformer,set,uriresolver,this,uri,resolver,return,transformer
XsltView -> protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException;1496837955;Create the {@link Transformer} instance used to prefer the XSLT transformation._<p>The default implementation simply calls {@link Templates#newTransformer()}, and_configures the {@link Transformer} with the custom {@link URIResolver} if specified._@param templates the XSLT Templates instance to create a Transformer for_@return the Transformer object_@throws TransformerConfigurationException in case of creation failure;protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException {_		Transformer transformer = templates.newTransformer()__		if (this.uriResolver != null) {_			transformer.setURIResolver(this.uriResolver)__		}_		return transformer__	};create,the,link,transformer,instance,used,to,prefer,the,xslt,transformation,p,the,default,implementation,simply,calls,link,templates,new,transformer,and,configures,the,link,transformer,with,the,custom,link,uriresolver,if,specified,param,templates,the,xslt,templates,instance,to,create,a,transformer,for,return,the,transformer,object,throws,transformer,configuration,exception,in,case,of,creation,failure;protected,transformer,create,transformer,templates,templates,throws,transformer,configuration,exception,transformer,transformer,templates,new,transformer,if,this,uri,resolver,null,transformer,set,uriresolver,this,uri,resolver,return,transformer
XsltView -> protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException;1497250713;Create the {@link Transformer} instance used to prefer the XSLT transformation._<p>The default implementation simply calls {@link Templates#newTransformer()}, and_configures the {@link Transformer} with the custom {@link URIResolver} if specified._@param templates the XSLT Templates instance to create a Transformer for_@return the Transformer object_@throws TransformerConfigurationException in case of creation failure;protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException {_		Transformer transformer = templates.newTransformer()__		if (this.uriResolver != null) {_			transformer.setURIResolver(this.uriResolver)__		}_		return transformer__	};create,the,link,transformer,instance,used,to,prefer,the,xslt,transformation,p,the,default,implementation,simply,calls,link,templates,new,transformer,and,configures,the,link,transformer,with,the,custom,link,uriresolver,if,specified,param,templates,the,xslt,templates,instance,to,create,a,transformer,for,return,the,transformer,object,throws,transformer,configuration,exception,in,case,of,creation,failure;protected,transformer,create,transformer,templates,templates,throws,transformer,configuration,exception,transformer,transformer,templates,new,transformer,if,this,uri,resolver,null,transformer,set,uriresolver,this,uri,resolver,return,transformer
XsltView -> protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException;1498780456;Create the {@link Transformer} instance used to prefer the XSLT transformation._<p>The default implementation simply calls {@link Templates#newTransformer()}, and_configures the {@link Transformer} with the custom {@link URIResolver} if specified._@param templates the XSLT Templates instance to create a Transformer for_@return the Transformer object_@throws TransformerConfigurationException in case of creation failure;protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException {_		Transformer transformer = templates.newTransformer()__		if (this.uriResolver != null) {_			transformer.setURIResolver(this.uriResolver)__		}_		return transformer__	};create,the,link,transformer,instance,used,to,prefer,the,xslt,transformation,p,the,default,implementation,simply,calls,link,templates,new,transformer,and,configures,the,link,transformer,with,the,custom,link,uriresolver,if,specified,param,templates,the,xslt,templates,instance,to,create,a,transformer,for,return,the,transformer,object,throws,transformer,configuration,exception,in,case,of,creation,failure;protected,transformer,create,transformer,templates,templates,throws,transformer,configuration,exception,transformer,transformer,templates,new,transformer,if,this,uri,resolver,null,transformer,set,uriresolver,this,uri,resolver,return,transformer
XsltView -> protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException;1508532146;Create the {@link Transformer} instance used to prefer the XSLT transformation._<p>The default implementation simply calls {@link Templates#newTransformer()}, and_configures the {@link Transformer} with the custom {@link URIResolver} if specified._@param templates the XSLT Templates instance to create a Transformer for_@return the Transformer object_@throws TransformerConfigurationException in case of creation failure;protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException {_		Transformer transformer = templates.newTransformer()__		if (this.uriResolver != null) {_			transformer.setURIResolver(this.uriResolver)__		}_		return transformer__	};create,the,link,transformer,instance,used,to,prefer,the,xslt,transformation,p,the,default,implementation,simply,calls,link,templates,new,transformer,and,configures,the,link,transformer,with,the,custom,link,uriresolver,if,specified,param,templates,the,xslt,templates,instance,to,create,a,transformer,for,return,the,transformer,object,throws,transformer,configuration,exception,in,case,of,creation,failure;protected,transformer,create,transformer,templates,templates,throws,transformer,configuration,exception,transformer,transformer,templates,new,transformer,if,this,uri,resolver,null,transformer,set,uriresolver,this,uri,resolver,return,transformer
XsltView -> protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException;1529361191;Create the {@link Transformer} instance used to prefer the XSLT transformation._<p>The default implementation simply calls {@link Templates#newTransformer()}, and_configures the {@link Transformer} with the custom {@link URIResolver} if specified._@param templates the XSLT Templates instance to create a Transformer for_@return the Transformer object_@throws TransformerConfigurationException in case of creation failure;protected Transformer createTransformer(Templates templates) throws TransformerConfigurationException {_		Transformer transformer = templates.newTransformer()__		if (this.uriResolver != null) {_			transformer.setURIResolver(this.uriResolver)__		}_		return transformer__	};create,the,link,transformer,instance,used,to,prefer,the,xslt,transformation,p,the,default,implementation,simply,calls,link,templates,new,transformer,and,configures,the,link,transformer,with,the,custom,link,uriresolver,if,specified,param,templates,the,xslt,templates,instance,to,create,a,transformer,for,return,the,transformer,object,throws,transformer,configuration,exception,in,case,of,creation,failure;protected,transformer,create,transformer,templates,templates,throws,transformer,configuration,exception,transformer,transformer,templates,new,transformer,if,this,uri,resolver,null,transformer,set,uriresolver,this,uri,resolver,return,transformer
XsltView -> protected TransformerFactory newTransformerFactory(Class transformerFactoryClass);1328020251;Instantiate a new TransformerFactory for this view._<p>The default implementation simply calls_{@link javax.xml.transform.TransformerFactory#newInstance()}._If a {@link #setTransformerFactoryClass "transformerFactoryClass"}_has been specified explicitly, the default constructor of the_specified class will be called instead._<p>Can be overridden in subclasses._@param transformerFactoryClass the specified factory class (if any)_@return the new TransactionFactory instance_@see #setTransformerFactoryClass_@see #getTransformerFactory();protected TransformerFactory newTransformerFactory(Class transformerFactoryClass) {_		if (transformerFactoryClass != null) {_			try {_				return (TransformerFactory) transformerFactoryClass.newInstance()__			}_			catch (Exception ex) {_				throw new TransformerFactoryConfigurationError(ex, "Could not instantiate TransformerFactory")__			}_		}_		else {_			return TransformerFactory.newInstance()__		}_	};instantiate,a,new,transformer,factory,for,this,view,p,the,default,implementation,simply,calls,link,javax,xml,transform,transformer,factory,new,instance,if,a,link,set,transformer,factory,class,transformer,factory,class,has,been,specified,explicitly,the,default,constructor,of,the,specified,class,will,be,called,instead,p,can,be,overridden,in,subclasses,param,transformer,factory,class,the,specified,factory,class,if,any,return,the,new,transaction,factory,instance,see,set,transformer,factory,class,see,get,transformer,factory;protected,transformer,factory,new,transformer,factory,class,transformer,factory,class,if,transformer,factory,class,null,try,return,transformer,factory,transformer,factory,class,new,instance,catch,exception,ex,throw,new,transformer,factory,configuration,error,ex,could,not,instantiate,transformer,factory,else,return,transformer,factory,new,instance
XsltView -> protected TransformerFactory newTransformerFactory(Class transformerFactoryClass);1356735495;Instantiate a new TransformerFactory for this view._<p>The default implementation simply calls_{@link javax.xml.transform.TransformerFactory#newInstance()}._If a {@link #setTransformerFactoryClass "transformerFactoryClass"}_has been specified explicitly, the default constructor of the_specified class will be called instead._<p>Can be overridden in subclasses._@param transformerFactoryClass the specified factory class (if any)_@return the new TransactionFactory instance_@see #setTransformerFactoryClass_@see #getTransformerFactory();protected TransformerFactory newTransformerFactory(Class transformerFactoryClass) {_		if (transformerFactoryClass != null) {_			try {_				return (TransformerFactory) transformerFactoryClass.newInstance()__			}_			catch (Exception ex) {_				throw new TransformerFactoryConfigurationError(ex, "Could not instantiate TransformerFactory")__			}_		}_		else {_			return TransformerFactory.newInstance()__		}_	};instantiate,a,new,transformer,factory,for,this,view,p,the,default,implementation,simply,calls,link,javax,xml,transform,transformer,factory,new,instance,if,a,link,set,transformer,factory,class,transformer,factory,class,has,been,specified,explicitly,the,default,constructor,of,the,specified,class,will,be,called,instead,p,can,be,overridden,in,subclasses,param,transformer,factory,class,the,specified,factory,class,if,any,return,the,new,transaction,factory,instance,see,set,transformer,factory,class,see,get,transformer,factory;protected,transformer,factory,new,transformer,factory,class,transformer,factory,class,if,transformer,factory,class,null,try,return,transformer,factory,transformer,factory,class,new,instance,catch,exception,ex,throw,new,transformer,factory,configuration,error,ex,could,not,instantiate,transformer,factory,else,return,transformer,factory,new,instance
XsltView -> protected Class[] getSourceTypes();1328020251;Return the array of {@link Class Classes} that are supported when converting to an_XSLT {@link Source}._<p>Currently supports {@link Source}, {@link Document}, {@link Node},_{@link Reader}, {@link InputStream} and {@link Resource}._@return the supported source types;protected Class[] getSourceTypes() {_		return new Class[] {Source.class, Document.class, Node.class, Reader.class, InputStream.class, Resource.class}__	};return,the,array,of,link,class,classes,that,are,supported,when,converting,to,an,xslt,link,source,p,currently,supports,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,return,the,supported,source,types;protected,class,get,source,types,return,new,class,source,class,document,class,node,class,reader,class,input,stream,class,resource,class
XsltView -> protected Class[] getSourceTypes();1356735495;Return the array of {@link Class Classes} that are supported when converting to an_XSLT {@link Source}._<p>Currently supports {@link Source}, {@link Document}, {@link Node},_{@link Reader}, {@link InputStream} and {@link Resource}._@return the supported source types;protected Class[] getSourceTypes() {_		return new Class[] {Source.class, Document.class, Node.class, Reader.class, InputStream.class, Resource.class}__	};return,the,array,of,link,class,classes,that,are,supported,when,converting,to,an,xslt,link,source,p,currently,supports,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,return,the,supported,source,types;protected,class,get,source,types,return,new,class,source,class,document,class,node,class,reader,class,input,stream,class,resource,class
XsltView -> protected Source getStylesheetSource();1328020251;Get the XSLT {@link Source} for the XSLT template under the {@link #setUrl configured URL}._@return the Source object;protected Source getStylesheetSource() {_		String url = getUrl()__		if (logger.isDebugEnabled()) {_			logger.debug("Loading XSLT stylesheet from '" + url + "'")__		}_		try {_			Resource resource = getApplicationContext().getResource(url)__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		catch (IOException ex) {_			throw new ApplicationContextException("Can't load XSLT stylesheet from '" + url + "'", ex)__		}_	};get,the,xslt,link,source,for,the,xslt,template,under,the,link,set,url,configured,url,return,the,source,object;protected,source,get,stylesheet,source,string,url,get,url,if,logger,is,debug,enabled,logger,debug,loading,xslt,stylesheet,from,url,try,resource,resource,get,application,context,get,resource,url,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,catch,ioexception,ex,throw,new,application,context,exception,can,t,load,xslt,stylesheet,from,url,ex
XsltView -> protected Source getStylesheetSource();1356735495;Get the XSLT {@link Source} for the XSLT template under the {@link #setUrl configured URL}._@return the Source object;protected Source getStylesheetSource() {_		String url = getUrl()__		if (logger.isDebugEnabled()) {_			logger.debug("Loading XSLT stylesheet from '" + url + "'")__		}_		try {_			Resource resource = getApplicationContext().getResource(url)__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		catch (IOException ex) {_			throw new ApplicationContextException("Can't load XSLT stylesheet from '" + url + "'", ex)__		}_	};get,the,xslt,link,source,for,the,xslt,template,under,the,link,set,url,configured,url,return,the,source,object;protected,source,get,stylesheet,source,string,url,get,url,if,logger,is,debug,enabled,logger,debug,loading,xslt,stylesheet,from,url,try,resource,resource,get,application,context,get,resource,url,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,catch,ioexception,ex,throw,new,application,context,exception,can,t,load,xslt,stylesheet,from,url,ex
XsltView -> protected Source getStylesheetSource();1385412762;Get the XSLT {@link Source} for the XSLT template under the {@link #setUrl configured URL}._@return the Source object;protected Source getStylesheetSource() {_		String url = getUrl()__		if (logger.isDebugEnabled()) {_			logger.debug("Loading XSLT stylesheet from '" + url + "'")__		}_		try {_			Resource resource = getApplicationContext().getResource(url)__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		catch (IOException ex) {_			throw new ApplicationContextException("Can't load XSLT stylesheet from '" + url + "'", ex)__		}_	};get,the,xslt,link,source,for,the,xslt,template,under,the,link,set,url,configured,url,return,the,source,object;protected,source,get,stylesheet,source,string,url,get,url,if,logger,is,debug,enabled,logger,debug,loading,xslt,stylesheet,from,url,try,resource,resource,get,application,context,get,resource,url,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,catch,ioexception,ex,throw,new,application,context,exception,can,t,load,xslt,stylesheet,from,url,ex
XsltView -> protected Source getStylesheetSource();1385423968;Get the XSLT {@link Source} for the XSLT template under the {@link #setUrl configured URL}._@return the Source object;protected Source getStylesheetSource() {_		String url = getUrl()__		if (logger.isDebugEnabled()) {_			logger.debug("Loading XSLT stylesheet from '" + url + "'")__		}_		try {_			Resource resource = getApplicationContext().getResource(url)__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		catch (IOException ex) {_			throw new ApplicationContextException("Can't load XSLT stylesheet from '" + url + "'", ex)__		}_	};get,the,xslt,link,source,for,the,xslt,template,under,the,link,set,url,configured,url,return,the,source,object;protected,source,get,stylesheet,source,string,url,get,url,if,logger,is,debug,enabled,logger,debug,loading,xslt,stylesheet,from,url,try,resource,resource,get,application,context,get,resource,url,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,catch,ioexception,ex,throw,new,application,context,exception,can,t,load,xslt,stylesheet,from,url,ex
XsltView -> protected Source getStylesheetSource();1468948866;Get the XSLT {@link Source} for the XSLT template under the {@link #setUrl configured URL}._@return the Source object;protected Source getStylesheetSource() {_		String url = getUrl()__		if (logger.isDebugEnabled()) {_			logger.debug("Loading XSLT stylesheet from '" + url + "'")__		}_		try {_			Resource resource = getApplicationContext().getResource(url)__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		catch (IOException ex) {_			throw new ApplicationContextException("Can't load XSLT stylesheet from '" + url + "'", ex)__		}_	};get,the,xslt,link,source,for,the,xslt,template,under,the,link,set,url,configured,url,return,the,source,object;protected,source,get,stylesheet,source,string,url,get,url,if,logger,is,debug,enabled,logger,debug,loading,xslt,stylesheet,from,url,try,resource,resource,get,application,context,get,resource,url,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,catch,ioexception,ex,throw,new,application,context,exception,can,t,load,xslt,stylesheet,from,url,ex
XsltView -> protected Source getStylesheetSource();1469047316;Get the XSLT {@link Source} for the XSLT template under the {@link #setUrl configured URL}._@return the Source object;protected Source getStylesheetSource() {_		String url = getUrl()__		if (logger.isDebugEnabled()) {_			logger.debug("Loading XSLT stylesheet from '" + url + "'")__		}_		try {_			Resource resource = getApplicationContext().getResource(url)__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		catch (IOException ex) {_			throw new ApplicationContextException("Can't load XSLT stylesheet from '" + url + "'", ex)__		}_	};get,the,xslt,link,source,for,the,xslt,template,under,the,link,set,url,configured,url,return,the,source,object;protected,source,get,stylesheet,source,string,url,get,url,if,logger,is,debug,enabled,logger,debug,loading,xslt,stylesheet,from,url,try,resource,resource,get,application,context,get,resource,url,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,catch,ioexception,ex,throw,new,application,context,exception,can,t,load,xslt,stylesheet,from,url,ex
XsltView -> protected Source getStylesheetSource();1483750478;Get the XSLT {@link Source} for the XSLT template under the {@link #setUrl configured URL}._@return the Source object;protected Source getStylesheetSource() {_		String url = getUrl()__		if (logger.isDebugEnabled()) {_			logger.debug("Loading XSLT stylesheet from '" + url + "'")__		}_		try {_			Resource resource = getApplicationContext().getResource(url)__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		catch (IOException ex) {_			throw new ApplicationContextException("Can't load XSLT stylesheet from '" + url + "'", ex)__		}_	};get,the,xslt,link,source,for,the,xslt,template,under,the,link,set,url,configured,url,return,the,source,object;protected,source,get,stylesheet,source,string,url,get,url,if,logger,is,debug,enabled,logger,debug,loading,xslt,stylesheet,from,url,try,resource,resource,get,application,context,get,resource,url,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,catch,ioexception,ex,throw,new,application,context,exception,can,t,load,xslt,stylesheet,from,url,ex
XsltView -> protected Source getStylesheetSource();1495868221;Get the XSLT {@link Source} for the XSLT template under the {@link #setUrl configured URL}._@return the Source object;protected Source getStylesheetSource() {_		String url = getUrl()__		if (logger.isDebugEnabled()) {_			logger.debug("Loading XSLT stylesheet from '" + url + "'")__		}_		try {_			Resource resource = getApplicationContext().getResource(url)__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		catch (IOException ex) {_			throw new ApplicationContextException("Can't load XSLT stylesheet from '" + url + "'", ex)__		}_	};get,the,xslt,link,source,for,the,xslt,template,under,the,link,set,url,configured,url,return,the,source,object;protected,source,get,stylesheet,source,string,url,get,url,if,logger,is,debug,enabled,logger,debug,loading,xslt,stylesheet,from,url,try,resource,resource,get,application,context,get,resource,url,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,catch,ioexception,ex,throw,new,application,context,exception,can,t,load,xslt,stylesheet,from,url,ex
XsltView -> protected Source getStylesheetSource();1496837955;Get the XSLT {@link Source} for the XSLT template under the {@link #setUrl configured URL}._@return the Source object;protected Source getStylesheetSource() {_		String url = getUrl()__		Assert.state(url != null, "'url' not set")___		if (logger.isDebugEnabled()) {_			logger.debug("Loading XSLT stylesheet from '" + url + "'")__		}_		try {_			Resource resource = obtainApplicationContext().getResource(url)__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		catch (IOException ex) {_			throw new ApplicationContextException("Can't load XSLT stylesheet from '" + url + "'", ex)__		}_	};get,the,xslt,link,source,for,the,xslt,template,under,the,link,set,url,configured,url,return,the,source,object;protected,source,get,stylesheet,source,string,url,get,url,assert,state,url,null,url,not,set,if,logger,is,debug,enabled,logger,debug,loading,xslt,stylesheet,from,url,try,resource,resource,obtain,application,context,get,resource,url,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,catch,ioexception,ex,throw,new,application,context,exception,can,t,load,xslt,stylesheet,from,url,ex
XsltView -> protected Source getStylesheetSource();1497250713;Get the XSLT {@link Source} for the XSLT template under the {@link #setUrl configured URL}._@return the Source object;protected Source getStylesheetSource() {_		String url = getUrl()__		Assert.state(url != null, "'url' not set")___		if (logger.isDebugEnabled()) {_			logger.debug("Loading XSLT stylesheet from '" + url + "'")__		}_		try {_			Resource resource = obtainApplicationContext().getResource(url)__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		catch (IOException ex) {_			throw new ApplicationContextException("Can't load XSLT stylesheet from '" + url + "'", ex)__		}_	};get,the,xslt,link,source,for,the,xslt,template,under,the,link,set,url,configured,url,return,the,source,object;protected,source,get,stylesheet,source,string,url,get,url,assert,state,url,null,url,not,set,if,logger,is,debug,enabled,logger,debug,loading,xslt,stylesheet,from,url,try,resource,resource,obtain,application,context,get,resource,url,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,catch,ioexception,ex,throw,new,application,context,exception,can,t,load,xslt,stylesheet,from,url,ex
XsltView -> protected Source getStylesheetSource();1498780456;Get the XSLT {@link Source} for the XSLT template under the {@link #setUrl configured URL}._@return the Source object;protected Source getStylesheetSource() {_		String url = getUrl()__		Assert.state(url != null, "'url' not set")___		if (logger.isDebugEnabled()) {_			logger.debug("Loading XSLT stylesheet from '" + url + "'")__		}_		try {_			Resource resource = obtainApplicationContext().getResource(url)__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		catch (IOException ex) {_			throw new ApplicationContextException("Can't load XSLT stylesheet from '" + url + "'", ex)__		}_	};get,the,xslt,link,source,for,the,xslt,template,under,the,link,set,url,configured,url,return,the,source,object;protected,source,get,stylesheet,source,string,url,get,url,assert,state,url,null,url,not,set,if,logger,is,debug,enabled,logger,debug,loading,xslt,stylesheet,from,url,try,resource,resource,obtain,application,context,get,resource,url,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,catch,ioexception,ex,throw,new,application,context,exception,can,t,load,xslt,stylesheet,from,url,ex
XsltView -> protected Source getStylesheetSource();1508532146;Get the XSLT {@link Source} for the XSLT template under the {@link #setUrl configured URL}._@return the Source object;protected Source getStylesheetSource() {_		String url = getUrl()__		Assert.state(url != null, "'url' not set")___		if (logger.isDebugEnabled()) {_			logger.debug("Loading XSLT stylesheet from '" + url + "'")__		}_		try {_			Resource resource = obtainApplicationContext().getResource(url)__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		catch (IOException ex) {_			throw new ApplicationContextException("Can't load XSLT stylesheet from '" + url + "'", ex)__		}_	};get,the,xslt,link,source,for,the,xslt,template,under,the,link,set,url,configured,url,return,the,source,object;protected,source,get,stylesheet,source,string,url,get,url,assert,state,url,null,url,not,set,if,logger,is,debug,enabled,logger,debug,loading,xslt,stylesheet,from,url,try,resource,resource,obtain,application,context,get,resource,url,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,catch,ioexception,ex,throw,new,application,context,exception,can,t,load,xslt,stylesheet,from,url,ex
XsltView -> protected Source getStylesheetSource();1529361191;Get the XSLT {@link Source} for the XSLT template under the {@link #setUrl configured URL}._@return the Source object;protected Source getStylesheetSource() {_		String url = getUrl()__		Assert.state(url != null, "'url' not set")___		if (logger.isDebugEnabled()) {_			logger.debug("Applying stylesheet [" + url + "]")__		}_		try {_			Resource resource = obtainApplicationContext().getResource(url)__			return new StreamSource(resource.getInputStream(), resource.getURI().toASCIIString())__		}_		catch (IOException ex) {_			throw new ApplicationContextException("Can't load XSLT stylesheet from '" + url + "'", ex)__		}_	};get,the,xslt,link,source,for,the,xslt,template,under,the,link,set,url,configured,url,return,the,source,object;protected,source,get,stylesheet,source,string,url,get,url,assert,state,url,null,url,not,set,if,logger,is,debug,enabled,logger,debug,applying,stylesheet,url,try,resource,resource,obtain,application,context,get,resource,url,return,new,stream,source,resource,get,input,stream,resource,get,uri,to,asciistring,catch,ioexception,ex,throw,new,application,context,exception,can,t,load,xslt,stylesheet,from,url,ex
XsltView -> protected TransformerFactory newTransformerFactory(@Nullable Class<? extends TransformerFactory> transformerFactoryClass);1495868221;Instantiate a new TransformerFactory for this view._<p>The default implementation simply calls_{@link javax.xml.transform.TransformerFactory#newInstance()}._If a {@link #setTransformerFactoryClass "transformerFactoryClass"}_has been specified explicitly, the default constructor of the_specified class will be called instead._<p>Can be overridden in subclasses._@param transformerFactoryClass the specified factory class (if any)_@return the new TransactionFactory instance_@see #setTransformerFactoryClass_@see #getTransformerFactory();protected TransformerFactory newTransformerFactory(@Nullable Class<? extends TransformerFactory> transformerFactoryClass) {_		if (transformerFactoryClass != null) {_			try {_				return ReflectionUtils.accessibleConstructor(transformerFactoryClass).newInstance()__			}_			catch (Exception ex) {_				throw new TransformerFactoryConfigurationError(ex, "Could not instantiate TransformerFactory")__			}_		}_		else {_			return TransformerFactory.newInstance()__		}_	};instantiate,a,new,transformer,factory,for,this,view,p,the,default,implementation,simply,calls,link,javax,xml,transform,transformer,factory,new,instance,if,a,link,set,transformer,factory,class,transformer,factory,class,has,been,specified,explicitly,the,default,constructor,of,the,specified,class,will,be,called,instead,p,can,be,overridden,in,subclasses,param,transformer,factory,class,the,specified,factory,class,if,any,return,the,new,transaction,factory,instance,see,set,transformer,factory,class,see,get,transformer,factory;protected,transformer,factory,new,transformer,factory,nullable,class,extends,transformer,factory,transformer,factory,class,if,transformer,factory,class,null,try,return,reflection,utils,accessible,constructor,transformer,factory,class,new,instance,catch,exception,ex,throw,new,transformer,factory,configuration,error,ex,could,not,instantiate,transformer,factory,else,return,transformer,factory,new,instance
XsltView -> protected TransformerFactory newTransformerFactory(@Nullable Class<? extends TransformerFactory> transformerFactoryClass);1496837955;Instantiate a new TransformerFactory for this view._<p>The default implementation simply calls_{@link javax.xml.transform.TransformerFactory#newInstance()}._If a {@link #setTransformerFactoryClass "transformerFactoryClass"}_has been specified explicitly, the default constructor of the_specified class will be called instead._<p>Can be overridden in subclasses._@param transformerFactoryClass the specified factory class (if any)_@return the new TransactionFactory instance_@see #setTransformerFactoryClass_@see #getTransformerFactory();protected TransformerFactory newTransformerFactory(@Nullable Class<? extends TransformerFactory> transformerFactoryClass) {_		if (transformerFactoryClass != null) {_			try {_				return ReflectionUtils.accessibleConstructor(transformerFactoryClass).newInstance()__			}_			catch (Exception ex) {_				throw new TransformerFactoryConfigurationError(ex, "Could not instantiate TransformerFactory")__			}_		}_		else {_			return TransformerFactory.newInstance()__		}_	};instantiate,a,new,transformer,factory,for,this,view,p,the,default,implementation,simply,calls,link,javax,xml,transform,transformer,factory,new,instance,if,a,link,set,transformer,factory,class,transformer,factory,class,has,been,specified,explicitly,the,default,constructor,of,the,specified,class,will,be,called,instead,p,can,be,overridden,in,subclasses,param,transformer,factory,class,the,specified,factory,class,if,any,return,the,new,transaction,factory,instance,see,set,transformer,factory,class,see,get,transformer,factory;protected,transformer,factory,new,transformer,factory,nullable,class,extends,transformer,factory,transformer,factory,class,if,transformer,factory,class,null,try,return,reflection,utils,accessible,constructor,transformer,factory,class,new,instance,catch,exception,ex,throw,new,transformer,factory,configuration,error,ex,could,not,instantiate,transformer,factory,else,return,transformer,factory,new,instance
XsltView -> protected TransformerFactory newTransformerFactory(@Nullable Class<? extends TransformerFactory> transformerFactoryClass);1497250713;Instantiate a new TransformerFactory for this view._<p>The default implementation simply calls_{@link javax.xml.transform.TransformerFactory#newInstance()}._If a {@link #setTransformerFactoryClass "transformerFactoryClass"}_has been specified explicitly, the default constructor of the_specified class will be called instead._<p>Can be overridden in subclasses._@param transformerFactoryClass the specified factory class (if any)_@return the new TransactionFactory instance_@see #setTransformerFactoryClass_@see #getTransformerFactory();protected TransformerFactory newTransformerFactory(@Nullable Class<? extends TransformerFactory> transformerFactoryClass) {_		if (transformerFactoryClass != null) {_			try {_				return ReflectionUtils.accessibleConstructor(transformerFactoryClass).newInstance()__			}_			catch (Exception ex) {_				throw new TransformerFactoryConfigurationError(ex, "Could not instantiate TransformerFactory")__			}_		}_		else {_			return TransformerFactory.newInstance()__		}_	};instantiate,a,new,transformer,factory,for,this,view,p,the,default,implementation,simply,calls,link,javax,xml,transform,transformer,factory,new,instance,if,a,link,set,transformer,factory,class,transformer,factory,class,has,been,specified,explicitly,the,default,constructor,of,the,specified,class,will,be,called,instead,p,can,be,overridden,in,subclasses,param,transformer,factory,class,the,specified,factory,class,if,any,return,the,new,transaction,factory,instance,see,set,transformer,factory,class,see,get,transformer,factory;protected,transformer,factory,new,transformer,factory,nullable,class,extends,transformer,factory,transformer,factory,class,if,transformer,factory,class,null,try,return,reflection,utils,accessible,constructor,transformer,factory,class,new,instance,catch,exception,ex,throw,new,transformer,factory,configuration,error,ex,could,not,instantiate,transformer,factory,else,return,transformer,factory,new,instance
XsltView -> protected TransformerFactory newTransformerFactory(@Nullable Class<? extends TransformerFactory> transformerFactoryClass);1498780456;Instantiate a new TransformerFactory for this view._<p>The default implementation simply calls_{@link javax.xml.transform.TransformerFactory#newInstance()}._If a {@link #setTransformerFactoryClass "transformerFactoryClass"}_has been specified explicitly, the default constructor of the_specified class will be called instead._<p>Can be overridden in subclasses._@param transformerFactoryClass the specified factory class (if any)_@return the new TransactionFactory instance_@see #setTransformerFactoryClass_@see #getTransformerFactory();protected TransformerFactory newTransformerFactory(@Nullable Class<? extends TransformerFactory> transformerFactoryClass) {_		if (transformerFactoryClass != null) {_			try {_				return ReflectionUtils.accessibleConstructor(transformerFactoryClass).newInstance()__			}_			catch (Exception ex) {_				throw new TransformerFactoryConfigurationError(ex, "Could not instantiate TransformerFactory")__			}_		}_		else {_			return TransformerFactory.newInstance()__		}_	};instantiate,a,new,transformer,factory,for,this,view,p,the,default,implementation,simply,calls,link,javax,xml,transform,transformer,factory,new,instance,if,a,link,set,transformer,factory,class,transformer,factory,class,has,been,specified,explicitly,the,default,constructor,of,the,specified,class,will,be,called,instead,p,can,be,overridden,in,subclasses,param,transformer,factory,class,the,specified,factory,class,if,any,return,the,new,transaction,factory,instance,see,set,transformer,factory,class,see,get,transformer,factory;protected,transformer,factory,new,transformer,factory,nullable,class,extends,transformer,factory,transformer,factory,class,if,transformer,factory,class,null,try,return,reflection,utils,accessible,constructor,transformer,factory,class,new,instance,catch,exception,ex,throw,new,transformer,factory,configuration,error,ex,could,not,instantiate,transformer,factory,else,return,transformer,factory,new,instance
XsltView -> protected final void configureIndentation(Transformer transformer);1328020251;Configure the indentation settings for the supplied {@link Transformer}._@param transformer the target transformer_@see org.springframework.util.xml.TransformerUtils#enableIndenting(javax.xml.transform.Transformer)_@see org.springframework.util.xml.TransformerUtils#disableIndenting(javax.xml.transform.Transformer);protected final void configureIndentation(Transformer transformer) {_		if (this.indent) {_			TransformerUtils.enableIndenting(transformer)__		}_		else {_			TransformerUtils.disableIndenting(transformer)__		}_	};configure,the,indentation,settings,for,the,supplied,link,transformer,param,transformer,the,target,transformer,see,org,springframework,util,xml,transformer,utils,enable,indenting,javax,xml,transform,transformer,see,org,springframework,util,xml,transformer,utils,disable,indenting,javax,xml,transform,transformer;protected,final,void,configure,indentation,transformer,transformer,if,this,indent,transformer,utils,enable,indenting,transformer,else,transformer,utils,disable,indenting,transformer
XsltView -> protected final void configureIndentation(Transformer transformer);1356735495;Configure the indentation settings for the supplied {@link Transformer}._@param transformer the target transformer_@see org.springframework.util.xml.TransformerUtils#enableIndenting(javax.xml.transform.Transformer)_@see org.springframework.util.xml.TransformerUtils#disableIndenting(javax.xml.transform.Transformer);protected final void configureIndentation(Transformer transformer) {_		if (this.indent) {_			TransformerUtils.enableIndenting(transformer)__		}_		else {_			TransformerUtils.disableIndenting(transformer)__		}_	};configure,the,indentation,settings,for,the,supplied,link,transformer,param,transformer,the,target,transformer,see,org,springframework,util,xml,transformer,utils,enable,indenting,javax,xml,transform,transformer,see,org,springframework,util,xml,transformer,utils,disable,indenting,javax,xml,transform,transformer;protected,final,void,configure,indentation,transformer,transformer,if,this,indent,transformer,utils,enable,indenting,transformer,else,transformer,utils,disable,indenting,transformer
XsltView -> protected final void configureIndentation(Transformer transformer);1385412762;Configure the indentation settings for the supplied {@link Transformer}._@param transformer the target transformer_@see org.springframework.util.xml.TransformerUtils#enableIndenting(javax.xml.transform.Transformer)_@see org.springframework.util.xml.TransformerUtils#disableIndenting(javax.xml.transform.Transformer);protected final void configureIndentation(Transformer transformer) {_		if (this.indent) {_			TransformerUtils.enableIndenting(transformer)__		}_		else {_			TransformerUtils.disableIndenting(transformer)__		}_	};configure,the,indentation,settings,for,the,supplied,link,transformer,param,transformer,the,target,transformer,see,org,springframework,util,xml,transformer,utils,enable,indenting,javax,xml,transform,transformer,see,org,springframework,util,xml,transformer,utils,disable,indenting,javax,xml,transform,transformer;protected,final,void,configure,indentation,transformer,transformer,if,this,indent,transformer,utils,enable,indenting,transformer,else,transformer,utils,disable,indenting,transformer
XsltView -> protected final void configureIndentation(Transformer transformer);1385423968;Configure the indentation settings for the supplied {@link Transformer}._@param transformer the target transformer_@see org.springframework.util.xml.TransformerUtils#enableIndenting(javax.xml.transform.Transformer)_@see org.springframework.util.xml.TransformerUtils#disableIndenting(javax.xml.transform.Transformer);protected final void configureIndentation(Transformer transformer) {_		if (this.indent) {_			TransformerUtils.enableIndenting(transformer)__		}_		else {_			TransformerUtils.disableIndenting(transformer)__		}_	};configure,the,indentation,settings,for,the,supplied,link,transformer,param,transformer,the,target,transformer,see,org,springframework,util,xml,transformer,utils,enable,indenting,javax,xml,transform,transformer,see,org,springframework,util,xml,transformer,utils,disable,indenting,javax,xml,transform,transformer;protected,final,void,configure,indentation,transformer,transformer,if,this,indent,transformer,utils,enable,indenting,transformer,else,transformer,utils,disable,indenting,transformer
XsltView -> protected final void configureIndentation(Transformer transformer);1468948866;Configure the indentation settings for the supplied {@link Transformer}._@param transformer the target transformer_@see org.springframework.util.xml.TransformerUtils#enableIndenting(javax.xml.transform.Transformer)_@see org.springframework.util.xml.TransformerUtils#disableIndenting(javax.xml.transform.Transformer);protected final void configureIndentation(Transformer transformer) {_		if (this.indent) {_			TransformerUtils.enableIndenting(transformer)__		}_		else {_			TransformerUtils.disableIndenting(transformer)__		}_	};configure,the,indentation,settings,for,the,supplied,link,transformer,param,transformer,the,target,transformer,see,org,springframework,util,xml,transformer,utils,enable,indenting,javax,xml,transform,transformer,see,org,springframework,util,xml,transformer,utils,disable,indenting,javax,xml,transform,transformer;protected,final,void,configure,indentation,transformer,transformer,if,this,indent,transformer,utils,enable,indenting,transformer,else,transformer,utils,disable,indenting,transformer
XsltView -> protected final void configureIndentation(Transformer transformer);1469047316;Configure the indentation settings for the supplied {@link Transformer}._@param transformer the target transformer_@see org.springframework.util.xml.TransformerUtils#enableIndenting(javax.xml.transform.Transformer)_@see org.springframework.util.xml.TransformerUtils#disableIndenting(javax.xml.transform.Transformer);protected final void configureIndentation(Transformer transformer) {_		if (this.indent) {_			TransformerUtils.enableIndenting(transformer)__		}_		else {_			TransformerUtils.disableIndenting(transformer)__		}_	};configure,the,indentation,settings,for,the,supplied,link,transformer,param,transformer,the,target,transformer,see,org,springframework,util,xml,transformer,utils,enable,indenting,javax,xml,transform,transformer,see,org,springframework,util,xml,transformer,utils,disable,indenting,javax,xml,transform,transformer;protected,final,void,configure,indentation,transformer,transformer,if,this,indent,transformer,utils,enable,indenting,transformer,else,transformer,utils,disable,indenting,transformer
XsltView -> protected final void configureIndentation(Transformer transformer);1483750478;Configure the indentation settings for the supplied {@link Transformer}._@param transformer the target transformer_@see org.springframework.util.xml.TransformerUtils#enableIndenting(javax.xml.transform.Transformer)_@see org.springframework.util.xml.TransformerUtils#disableIndenting(javax.xml.transform.Transformer);protected final void configureIndentation(Transformer transformer) {_		if (this.indent) {_			TransformerUtils.enableIndenting(transformer)__		}_		else {_			TransformerUtils.disableIndenting(transformer)__		}_	};configure,the,indentation,settings,for,the,supplied,link,transformer,param,transformer,the,target,transformer,see,org,springframework,util,xml,transformer,utils,enable,indenting,javax,xml,transform,transformer,see,org,springframework,util,xml,transformer,utils,disable,indenting,javax,xml,transform,transformer;protected,final,void,configure,indentation,transformer,transformer,if,this,indent,transformer,utils,enable,indenting,transformer,else,transformer,utils,disable,indenting,transformer
XsltView -> protected final void configureIndentation(Transformer transformer);1495868221;Configure the indentation settings for the supplied {@link Transformer}._@param transformer the target transformer_@see org.springframework.util.xml.TransformerUtils#enableIndenting(javax.xml.transform.Transformer)_@see org.springframework.util.xml.TransformerUtils#disableIndenting(javax.xml.transform.Transformer);protected final void configureIndentation(Transformer transformer) {_		if (this.indent) {_			TransformerUtils.enableIndenting(transformer)__		}_		else {_			TransformerUtils.disableIndenting(transformer)__		}_	};configure,the,indentation,settings,for,the,supplied,link,transformer,param,transformer,the,target,transformer,see,org,springframework,util,xml,transformer,utils,enable,indenting,javax,xml,transform,transformer,see,org,springframework,util,xml,transformer,utils,disable,indenting,javax,xml,transform,transformer;protected,final,void,configure,indentation,transformer,transformer,if,this,indent,transformer,utils,enable,indenting,transformer,else,transformer,utils,disable,indenting,transformer
XsltView -> protected final void configureIndentation(Transformer transformer);1496837955;Configure the indentation settings for the supplied {@link Transformer}._@param transformer the target transformer_@see org.springframework.util.xml.TransformerUtils#enableIndenting(javax.xml.transform.Transformer)_@see org.springframework.util.xml.TransformerUtils#disableIndenting(javax.xml.transform.Transformer);protected final void configureIndentation(Transformer transformer) {_		if (this.indent) {_			TransformerUtils.enableIndenting(transformer)__		}_		else {_			TransformerUtils.disableIndenting(transformer)__		}_	};configure,the,indentation,settings,for,the,supplied,link,transformer,param,transformer,the,target,transformer,see,org,springframework,util,xml,transformer,utils,enable,indenting,javax,xml,transform,transformer,see,org,springframework,util,xml,transformer,utils,disable,indenting,javax,xml,transform,transformer;protected,final,void,configure,indentation,transformer,transformer,if,this,indent,transformer,utils,enable,indenting,transformer,else,transformer,utils,disable,indenting,transformer
XsltView -> protected final void configureIndentation(Transformer transformer);1497250713;Configure the indentation settings for the supplied {@link Transformer}._@param transformer the target transformer_@see org.springframework.util.xml.TransformerUtils#enableIndenting(javax.xml.transform.Transformer)_@see org.springframework.util.xml.TransformerUtils#disableIndenting(javax.xml.transform.Transformer);protected final void configureIndentation(Transformer transformer) {_		if (this.indent) {_			TransformerUtils.enableIndenting(transformer)__		}_		else {_			TransformerUtils.disableIndenting(transformer)__		}_	};configure,the,indentation,settings,for,the,supplied,link,transformer,param,transformer,the,target,transformer,see,org,springframework,util,xml,transformer,utils,enable,indenting,javax,xml,transform,transformer,see,org,springframework,util,xml,transformer,utils,disable,indenting,javax,xml,transform,transformer;protected,final,void,configure,indentation,transformer,transformer,if,this,indent,transformer,utils,enable,indenting,transformer,else,transformer,utils,disable,indenting,transformer
XsltView -> protected final void configureIndentation(Transformer transformer);1498780456;Configure the indentation settings for the supplied {@link Transformer}._@param transformer the target transformer_@see org.springframework.util.xml.TransformerUtils#enableIndenting(javax.xml.transform.Transformer)_@see org.springframework.util.xml.TransformerUtils#disableIndenting(javax.xml.transform.Transformer);protected final void configureIndentation(Transformer transformer) {_		if (this.indent) {_			TransformerUtils.enableIndenting(transformer)__		}_		else {_			TransformerUtils.disableIndenting(transformer)__		}_	};configure,the,indentation,settings,for,the,supplied,link,transformer,param,transformer,the,target,transformer,see,org,springframework,util,xml,transformer,utils,enable,indenting,javax,xml,transform,transformer,see,org,springframework,util,xml,transformer,utils,disable,indenting,javax,xml,transform,transformer;protected,final,void,configure,indentation,transformer,transformer,if,this,indent,transformer,utils,enable,indenting,transformer,else,transformer,utils,disable,indenting,transformer
XsltView -> protected final void configureIndentation(Transformer transformer);1508532146;Configure the indentation settings for the supplied {@link Transformer}._@param transformer the target transformer_@see org.springframework.util.xml.TransformerUtils#enableIndenting(javax.xml.transform.Transformer)_@see org.springframework.util.xml.TransformerUtils#disableIndenting(javax.xml.transform.Transformer);protected final void configureIndentation(Transformer transformer) {_		if (this.indent) {_			TransformerUtils.enableIndenting(transformer)__		}_		else {_			TransformerUtils.disableIndenting(transformer)__		}_	};configure,the,indentation,settings,for,the,supplied,link,transformer,param,transformer,the,target,transformer,see,org,springframework,util,xml,transformer,utils,enable,indenting,javax,xml,transform,transformer,see,org,springframework,util,xml,transformer,utils,disable,indenting,javax,xml,transform,transformer;protected,final,void,configure,indentation,transformer,transformer,if,this,indent,transformer,utils,enable,indenting,transformer,else,transformer,utils,disable,indenting,transformer
XsltView -> protected final void configureIndentation(Transformer transformer);1529361191;Configure the indentation settings for the supplied {@link Transformer}._@param transformer the target transformer_@see org.springframework.util.xml.TransformerUtils#enableIndenting(javax.xml.transform.Transformer)_@see org.springframework.util.xml.TransformerUtils#disableIndenting(javax.xml.transform.Transformer);protected final void configureIndentation(Transformer transformer) {_		if (this.indent) {_			TransformerUtils.enableIndenting(transformer)__		}_		else {_			TransformerUtils.disableIndenting(transformer)__		}_	};configure,the,indentation,settings,for,the,supplied,link,transformer,param,transformer,the,target,transformer,see,org,springframework,util,xml,transformer,utils,enable,indenting,javax,xml,transform,transformer,see,org,springframework,util,xml,transformer,utils,disable,indenting,javax,xml,transform,transformer;protected,final,void,configure,indentation,transformer,transformer,if,this,indent,transformer,utils,enable,indenting,transformer,else,transformer,utils,disable,indenting,transformer
XsltView -> protected final void copyModelParameters(Map<String, Object> model, Transformer transformer);1328020251;Copy all entries from the supplied Map into the_{@link Transformer#setParameter(String, Object) parameter set}_of the supplied {@link Transformer}._@param model merged output Map (never <code>null</code>)_@param transformer the target transformer;protected final void copyModelParameters(Map<String, Object> model, Transformer transformer) {_		for (Map.Entry<String, Object> entry : model.entrySet()) {_			transformer.setParameter(entry.getKey(), entry.getValue())__		}_	};copy,all,entries,from,the,supplied,map,into,the,link,transformer,set,parameter,string,object,parameter,set,of,the,supplied,link,transformer,param,model,merged,output,map,never,code,null,code,param,transformer,the,target,transformer;protected,final,void,copy,model,parameters,map,string,object,model,transformer,transformer,for,map,entry,string,object,entry,model,entry,set,transformer,set,parameter,entry,get,key,entry,get,value
XsltView -> protected final void copyModelParameters(Map<String, Object> model, Transformer transformer);1356735495;Copy all entries from the supplied Map into the_{@link Transformer#setParameter(String, Object) parameter set}_of the supplied {@link Transformer}._@param model merged output Map (never {@code null})_@param transformer the target transformer;protected final void copyModelParameters(Map<String, Object> model, Transformer transformer) {_		for (Map.Entry<String, Object> entry : model.entrySet()) {_			transformer.setParameter(entry.getKey(), entry.getValue())__		}_	};copy,all,entries,from,the,supplied,map,into,the,link,transformer,set,parameter,string,object,parameter,set,of,the,supplied,link,transformer,param,model,merged,output,map,never,code,null,param,transformer,the,target,transformer;protected,final,void,copy,model,parameters,map,string,object,model,transformer,transformer,for,map,entry,string,object,entry,model,entry,set,transformer,set,parameter,entry,get,key,entry,get,value
XsltView -> protected final void copyModelParameters(Map<String, Object> model, Transformer transformer);1385412762;Copy all entries from the supplied Map into the_{@link Transformer#setParameter(String, Object) parameter set}_of the supplied {@link Transformer}._@param model merged output Map (never {@code null})_@param transformer the target transformer;protected final void copyModelParameters(Map<String, Object> model, Transformer transformer) {_		for (Map.Entry<String, Object> entry : model.entrySet()) {_			transformer.setParameter(entry.getKey(), entry.getValue())__		}_	};copy,all,entries,from,the,supplied,map,into,the,link,transformer,set,parameter,string,object,parameter,set,of,the,supplied,link,transformer,param,model,merged,output,map,never,code,null,param,transformer,the,target,transformer;protected,final,void,copy,model,parameters,map,string,object,model,transformer,transformer,for,map,entry,string,object,entry,model,entry,set,transformer,set,parameter,entry,get,key,entry,get,value
XsltView -> protected final void copyModelParameters(Map<String, Object> model, Transformer transformer);1385423968;Copy all entries from the supplied Map into the_{@link Transformer#setParameter(String, Object) parameter set}_of the supplied {@link Transformer}._@param model merged output Map (never {@code null})_@param transformer the target transformer;protected final void copyModelParameters(Map<String, Object> model, Transformer transformer) {_		for (Map.Entry<String, Object> entry : model.entrySet()) {_			transformer.setParameter(entry.getKey(), entry.getValue())__		}_	};copy,all,entries,from,the,supplied,map,into,the,link,transformer,set,parameter,string,object,parameter,set,of,the,supplied,link,transformer,param,model,merged,output,map,never,code,null,param,transformer,the,target,transformer;protected,final,void,copy,model,parameters,map,string,object,model,transformer,transformer,for,map,entry,string,object,entry,model,entry,set,transformer,set,parameter,entry,get,key,entry,get,value
XsltView -> protected final void copyModelParameters(Map<String, Object> model, Transformer transformer);1468948866;Copy all entries from the supplied Map into the_{@link Transformer#setParameter(String, Object) parameter set}_of the supplied {@link Transformer}._@param model merged output Map (never {@code null})_@param transformer the target transformer;protected final void copyModelParameters(Map<String, Object> model, Transformer transformer) {_		for (Map.Entry<String, Object> entry : model.entrySet()) {_			transformer.setParameter(entry.getKey(), entry.getValue())__		}_	};copy,all,entries,from,the,supplied,map,into,the,link,transformer,set,parameter,string,object,parameter,set,of,the,supplied,link,transformer,param,model,merged,output,map,never,code,null,param,transformer,the,target,transformer;protected,final,void,copy,model,parameters,map,string,object,model,transformer,transformer,for,map,entry,string,object,entry,model,entry,set,transformer,set,parameter,entry,get,key,entry,get,value
XsltView -> protected final void copyModelParameters(Map<String, Object> model, Transformer transformer);1469047316;Copy all entries from the supplied Map into the_{@link Transformer#setParameter(String, Object) parameter set}_of the supplied {@link Transformer}._@param model merged output Map (never {@code null})_@param transformer the target transformer;protected final void copyModelParameters(Map<String, Object> model, Transformer transformer) {_		for (Map.Entry<String, Object> entry : model.entrySet()) {_			transformer.setParameter(entry.getKey(), entry.getValue())__		}_	};copy,all,entries,from,the,supplied,map,into,the,link,transformer,set,parameter,string,object,parameter,set,of,the,supplied,link,transformer,param,model,merged,output,map,never,code,null,param,transformer,the,target,transformer;protected,final,void,copy,model,parameters,map,string,object,model,transformer,transformer,for,map,entry,string,object,entry,model,entry,set,transformer,set,parameter,entry,get,key,entry,get,value
XsltView -> protected final void copyModelParameters(Map<String, Object> model, Transformer transformer);1483750478;Copy all entries from the supplied Map into the_{@link Transformer#setParameter(String, Object) parameter set}_of the supplied {@link Transformer}._@param model merged output Map (never {@code null})_@param transformer the target transformer;protected final void copyModelParameters(Map<String, Object> model, Transformer transformer) {_		for (Map.Entry<String, Object> entry : model.entrySet()) {_			transformer.setParameter(entry.getKey(), entry.getValue())__		}_	};copy,all,entries,from,the,supplied,map,into,the,link,transformer,set,parameter,string,object,parameter,set,of,the,supplied,link,transformer,param,model,merged,output,map,never,code,null,param,transformer,the,target,transformer;protected,final,void,copy,model,parameters,map,string,object,model,transformer,transformer,for,map,entry,string,object,entry,model,entry,set,transformer,set,parameter,entry,get,key,entry,get,value
XsltView -> protected final void copyModelParameters(Map<String, Object> model, Transformer transformer);1495868221;Copy all entries from the supplied Map into the_{@link Transformer#setParameter(String, Object) parameter set}_of the supplied {@link Transformer}._@param model merged output Map (never {@code null})_@param transformer the target transformer;protected final void copyModelParameters(Map<String, Object> model, Transformer transformer) {_		for (Map.Entry<String, Object> entry : model.entrySet()) {_			transformer.setParameter(entry.getKey(), entry.getValue())__		}_	};copy,all,entries,from,the,supplied,map,into,the,link,transformer,set,parameter,string,object,parameter,set,of,the,supplied,link,transformer,param,model,merged,output,map,never,code,null,param,transformer,the,target,transformer;protected,final,void,copy,model,parameters,map,string,object,model,transformer,transformer,for,map,entry,string,object,entry,model,entry,set,transformer,set,parameter,entry,get,key,entry,get,value
XsltView -> protected final void copyModelParameters(Map<String, Object> model, Transformer transformer);1496837955;Copy all entries from the supplied Map into the_{@link Transformer#setParameter(String, Object) parameter set}_of the supplied {@link Transformer}._@param model merged output Map (never {@code null})_@param transformer the target transformer;protected final void copyModelParameters(Map<String, Object> model, Transformer transformer) {_		for (Map.Entry<String, Object> entry : model.entrySet()) {_			transformer.setParameter(entry.getKey(), entry.getValue())__		}_	};copy,all,entries,from,the,supplied,map,into,the,link,transformer,set,parameter,string,object,parameter,set,of,the,supplied,link,transformer,param,model,merged,output,map,never,code,null,param,transformer,the,target,transformer;protected,final,void,copy,model,parameters,map,string,object,model,transformer,transformer,for,map,entry,string,object,entry,model,entry,set,transformer,set,parameter,entry,get,key,entry,get,value
XsltView -> protected final void copyModelParameters(Map<String, Object> model, Transformer transformer);1497250713;Copy all entries from the supplied Map into the_{@link Transformer#setParameter(String, Object) parameter set}_of the supplied {@link Transformer}._@param model merged output Map (never {@code null})_@param transformer the target transformer;protected final void copyModelParameters(Map<String, Object> model, Transformer transformer) {_		model.forEach(transformer::setParameter)__	};copy,all,entries,from,the,supplied,map,into,the,link,transformer,set,parameter,string,object,parameter,set,of,the,supplied,link,transformer,param,model,merged,output,map,never,code,null,param,transformer,the,target,transformer;protected,final,void,copy,model,parameters,map,string,object,model,transformer,transformer,model,for,each,transformer,set,parameter
XsltView -> protected final void copyModelParameters(Map<String, Object> model, Transformer transformer);1498780456;Copy all entries from the supplied Map into the_{@link Transformer#setParameter(String, Object) parameter set}_of the supplied {@link Transformer}._@param model merged output Map (never {@code null})_@param transformer the target transformer;protected final void copyModelParameters(Map<String, Object> model, Transformer transformer) {_		model.forEach(transformer::setParameter)__	};copy,all,entries,from,the,supplied,map,into,the,link,transformer,set,parameter,string,object,parameter,set,of,the,supplied,link,transformer,param,model,merged,output,map,never,code,null,param,transformer,the,target,transformer;protected,final,void,copy,model,parameters,map,string,object,model,transformer,transformer,model,for,each,transformer,set,parameter
XsltView -> protected final void copyModelParameters(Map<String, Object> model, Transformer transformer);1508532146;Copy all entries from the supplied Map into the_{@link Transformer#setParameter(String, Object) parameter set}_of the supplied {@link Transformer}._@param model merged output Map (never {@code null})_@param transformer the target transformer;protected final void copyModelParameters(Map<String, Object> model, Transformer transformer) {_		model.forEach(transformer::setParameter)__	};copy,all,entries,from,the,supplied,map,into,the,link,transformer,set,parameter,string,object,parameter,set,of,the,supplied,link,transformer,param,model,merged,output,map,never,code,null,param,transformer,the,target,transformer;protected,final,void,copy,model,parameters,map,string,object,model,transformer,transformer,model,for,each,transformer,set,parameter
XsltView -> protected final void copyModelParameters(Map<String, Object> model, Transformer transformer);1529361191;Copy all entries from the supplied Map into the_{@link Transformer#setParameter(String, Object) parameter set}_of the supplied {@link Transformer}._@param model merged output Map (never {@code null})_@param transformer the target transformer;protected final void copyModelParameters(Map<String, Object> model, Transformer transformer) {_		model.forEach(transformer::setParameter)__	};copy,all,entries,from,the,supplied,map,into,the,link,transformer,set,parameter,string,object,parameter,set,of,the,supplied,link,transformer,param,model,merged,output,map,never,code,null,param,transformer,the,target,transformer;protected,final,void,copy,model,parameters,map,string,object,model,transformer,transformer,model,for,each,transformer,set,parameter
XsltView -> protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1328020251;Configure the supplied {@link HttpServletResponse}._<p>The default implementation of this method sets the_{@link HttpServletResponse#setContentType content type} and_{@link HttpServletResponse#setCharacterEncoding encoding}_from the "media-type" and "encoding" output properties_specified in the {@link Transformer}._@param model merged output Map (never <code>null</code>)_@param response current HTTP response_@param transformer the target transformer;protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		String contentType = getContentType()__		String mediaType = transformer.getOutputProperty(OutputKeys.MEDIA_TYPE)__		String encoding = transformer.getOutputProperty(OutputKeys.ENCODING)__		if (StringUtils.hasText(mediaType)) {_			contentType = mediaType__		}_		if (StringUtils.hasText(encoding)) {_			_			if (contentType != null && !contentType.toLowerCase().contains(WebUtils.CONTENT_TYPE_CHARSET_PREFIX)) {_				contentType = contentType + WebUtils.CONTENT_TYPE_CHARSET_PREFIX + encoding__			}_		}_		response.setContentType(contentType)__	};configure,the,supplied,link,http,servlet,response,p,the,default,implementation,of,this,method,sets,the,link,http,servlet,response,set,content,type,content,type,and,link,http,servlet,response,set,character,encoding,encoding,from,the,media,type,and,encoding,output,properties,specified,in,the,link,transformer,param,model,merged,output,map,never,code,null,code,param,response,current,http,response,param,transformer,the,target,transformer;protected,void,configure,response,map,string,object,model,http,servlet,response,response,transformer,transformer,string,content,type,get,content,type,string,media,type,transformer,get,output,property,output,keys,string,encoding,transformer,get,output,property,output,keys,encoding,if,string,utils,has,text,media,type,content,type,media,type,if,string,utils,has,text,encoding,if,content,type,null,content,type,to,lower,case,contains,web,utils,content,type,content,type,web,utils,encoding,response,set,content,type,content,type
XsltView -> protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1356735495;Configure the supplied {@link HttpServletResponse}._<p>The default implementation of this method sets the_{@link HttpServletResponse#setContentType content type} and_{@link HttpServletResponse#setCharacterEncoding encoding}_from the "media-type" and "encoding" output properties_specified in the {@link Transformer}._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer;protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		String contentType = getContentType()__		String mediaType = transformer.getOutputProperty(OutputKeys.MEDIA_TYPE)__		String encoding = transformer.getOutputProperty(OutputKeys.ENCODING)__		if (StringUtils.hasText(mediaType)) {_			contentType = mediaType__		}_		if (StringUtils.hasText(encoding)) {_			_			if (contentType != null && !contentType.toLowerCase().contains(WebUtils.CONTENT_TYPE_CHARSET_PREFIX)) {_				contentType = contentType + WebUtils.CONTENT_TYPE_CHARSET_PREFIX + encoding__			}_		}_		response.setContentType(contentType)__	};configure,the,supplied,link,http,servlet,response,p,the,default,implementation,of,this,method,sets,the,link,http,servlet,response,set,content,type,content,type,and,link,http,servlet,response,set,character,encoding,encoding,from,the,media,type,and,encoding,output,properties,specified,in,the,link,transformer,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer;protected,void,configure,response,map,string,object,model,http,servlet,response,response,transformer,transformer,string,content,type,get,content,type,string,media,type,transformer,get,output,property,output,keys,string,encoding,transformer,get,output,property,output,keys,encoding,if,string,utils,has,text,media,type,content,type,media,type,if,string,utils,has,text,encoding,if,content,type,null,content,type,to,lower,case,contains,web,utils,content,type,content,type,web,utils,encoding,response,set,content,type,content,type
XsltView -> protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1385412762;Configure the supplied {@link HttpServletResponse}._<p>The default implementation of this method sets the_{@link HttpServletResponse#setContentType content type} and_{@link HttpServletResponse#setCharacterEncoding encoding}_from the "media-type" and "encoding" output properties_specified in the {@link Transformer}._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer;protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		String contentType = getContentType()__		String mediaType = transformer.getOutputProperty(OutputKeys.MEDIA_TYPE)__		String encoding = transformer.getOutputProperty(OutputKeys.ENCODING)__		if (StringUtils.hasText(mediaType)) {_			contentType = mediaType__		}_		if (StringUtils.hasText(encoding)) {_			_			if (contentType != null && !contentType.toLowerCase().contains(WebUtils.CONTENT_TYPE_CHARSET_PREFIX)) {_				contentType = contentType + WebUtils.CONTENT_TYPE_CHARSET_PREFIX + encoding__			}_		}_		response.setContentType(contentType)__	};configure,the,supplied,link,http,servlet,response,p,the,default,implementation,of,this,method,sets,the,link,http,servlet,response,set,content,type,content,type,and,link,http,servlet,response,set,character,encoding,encoding,from,the,media,type,and,encoding,output,properties,specified,in,the,link,transformer,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer;protected,void,configure,response,map,string,object,model,http,servlet,response,response,transformer,transformer,string,content,type,get,content,type,string,media,type,transformer,get,output,property,output,keys,string,encoding,transformer,get,output,property,output,keys,encoding,if,string,utils,has,text,media,type,content,type,media,type,if,string,utils,has,text,encoding,if,content,type,null,content,type,to,lower,case,contains,web,utils,content,type,content,type,web,utils,encoding,response,set,content,type,content,type
XsltView -> protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1385423968;Configure the supplied {@link HttpServletResponse}._<p>The default implementation of this method sets the_{@link HttpServletResponse#setContentType content type} and_{@link HttpServletResponse#setCharacterEncoding encoding}_from the "media-type" and "encoding" output properties_specified in the {@link Transformer}._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer;protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		String contentType = getContentType()__		String mediaType = transformer.getOutputProperty(OutputKeys.MEDIA_TYPE)__		String encoding = transformer.getOutputProperty(OutputKeys.ENCODING)__		if (StringUtils.hasText(mediaType)) {_			contentType = mediaType__		}_		if (StringUtils.hasText(encoding)) {_			_			if (contentType != null && !contentType.toLowerCase().contains(WebUtils.CONTENT_TYPE_CHARSET_PREFIX)) {_				contentType = contentType + WebUtils.CONTENT_TYPE_CHARSET_PREFIX + encoding__			}_		}_		response.setContentType(contentType)__	};configure,the,supplied,link,http,servlet,response,p,the,default,implementation,of,this,method,sets,the,link,http,servlet,response,set,content,type,content,type,and,link,http,servlet,response,set,character,encoding,encoding,from,the,media,type,and,encoding,output,properties,specified,in,the,link,transformer,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer;protected,void,configure,response,map,string,object,model,http,servlet,response,response,transformer,transformer,string,content,type,get,content,type,string,media,type,transformer,get,output,property,output,keys,string,encoding,transformer,get,output,property,output,keys,encoding,if,string,utils,has,text,media,type,content,type,media,type,if,string,utils,has,text,encoding,if,content,type,null,content,type,to,lower,case,contains,web,utils,content,type,content,type,web,utils,encoding,response,set,content,type,content,type
XsltView -> protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1468948866;Configure the supplied {@link HttpServletResponse}._<p>The default implementation of this method sets the_{@link HttpServletResponse#setContentType content type} and_{@link HttpServletResponse#setCharacterEncoding encoding}_from the "media-type" and "encoding" output properties_specified in the {@link Transformer}._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer;protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		String contentType = getContentType()__		String mediaType = transformer.getOutputProperty(OutputKeys.MEDIA_TYPE)__		String encoding = transformer.getOutputProperty(OutputKeys.ENCODING)__		if (StringUtils.hasText(mediaType)) {_			contentType = mediaType__		}_		if (StringUtils.hasText(encoding)) {_			_			if (contentType != null && !contentType.toLowerCase().contains(WebUtils.CONTENT_TYPE_CHARSET_PREFIX)) {_				contentType = contentType + WebUtils.CONTENT_TYPE_CHARSET_PREFIX + encoding__			}_		}_		response.setContentType(contentType)__	};configure,the,supplied,link,http,servlet,response,p,the,default,implementation,of,this,method,sets,the,link,http,servlet,response,set,content,type,content,type,and,link,http,servlet,response,set,character,encoding,encoding,from,the,media,type,and,encoding,output,properties,specified,in,the,link,transformer,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer;protected,void,configure,response,map,string,object,model,http,servlet,response,response,transformer,transformer,string,content,type,get,content,type,string,media,type,transformer,get,output,property,output,keys,string,encoding,transformer,get,output,property,output,keys,encoding,if,string,utils,has,text,media,type,content,type,media,type,if,string,utils,has,text,encoding,if,content,type,null,content,type,to,lower,case,contains,web,utils,content,type,content,type,web,utils,encoding,response,set,content,type,content,type
XsltView -> protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1469047316;Configure the supplied {@link HttpServletResponse}._<p>The default implementation of this method sets the_{@link HttpServletResponse#setContentType content type} and_{@link HttpServletResponse#setCharacterEncoding encoding}_from the "media-type" and "encoding" output properties_specified in the {@link Transformer}._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer;protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		String contentType = getContentType()__		String mediaType = transformer.getOutputProperty(OutputKeys.MEDIA_TYPE)__		String encoding = transformer.getOutputProperty(OutputKeys.ENCODING)__		if (StringUtils.hasText(mediaType)) {_			contentType = mediaType__		}_		if (StringUtils.hasText(encoding)) {_			_			if (contentType != null && !contentType.toLowerCase().contains(WebUtils.CONTENT_TYPE_CHARSET_PREFIX)) {_				contentType = contentType + WebUtils.CONTENT_TYPE_CHARSET_PREFIX + encoding__			}_		}_		response.setContentType(contentType)__	};configure,the,supplied,link,http,servlet,response,p,the,default,implementation,of,this,method,sets,the,link,http,servlet,response,set,content,type,content,type,and,link,http,servlet,response,set,character,encoding,encoding,from,the,media,type,and,encoding,output,properties,specified,in,the,link,transformer,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer;protected,void,configure,response,map,string,object,model,http,servlet,response,response,transformer,transformer,string,content,type,get,content,type,string,media,type,transformer,get,output,property,output,keys,string,encoding,transformer,get,output,property,output,keys,encoding,if,string,utils,has,text,media,type,content,type,media,type,if,string,utils,has,text,encoding,if,content,type,null,content,type,to,lower,case,contains,web,utils,content,type,content,type,web,utils,encoding,response,set,content,type,content,type
XsltView -> protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1483750478;Configure the supplied {@link HttpServletResponse}._<p>The default implementation of this method sets the_{@link HttpServletResponse#setContentType content type} and_{@link HttpServletResponse#setCharacterEncoding encoding}_from the "media-type" and "encoding" output properties_specified in the {@link Transformer}._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer;protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		String contentType = getContentType()__		String mediaType = transformer.getOutputProperty(OutputKeys.MEDIA_TYPE)__		String encoding = transformer.getOutputProperty(OutputKeys.ENCODING)__		if (StringUtils.hasText(mediaType)) {_			contentType = mediaType__		}_		if (StringUtils.hasText(encoding)) {_			_			if (contentType != null && !contentType.toLowerCase().contains(WebUtils.CONTENT_TYPE_CHARSET_PREFIX)) {_				contentType = contentType + WebUtils.CONTENT_TYPE_CHARSET_PREFIX + encoding__			}_		}_		response.setContentType(contentType)__	};configure,the,supplied,link,http,servlet,response,p,the,default,implementation,of,this,method,sets,the,link,http,servlet,response,set,content,type,content,type,and,link,http,servlet,response,set,character,encoding,encoding,from,the,media,type,and,encoding,output,properties,specified,in,the,link,transformer,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer;protected,void,configure,response,map,string,object,model,http,servlet,response,response,transformer,transformer,string,content,type,get,content,type,string,media,type,transformer,get,output,property,output,keys,string,encoding,transformer,get,output,property,output,keys,encoding,if,string,utils,has,text,media,type,content,type,media,type,if,string,utils,has,text,encoding,if,content,type,null,content,type,to,lower,case,contains,web,utils,content,type,content,type,web,utils,encoding,response,set,content,type,content,type
XsltView -> protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1495868221;Configure the supplied {@link HttpServletResponse}._<p>The default implementation of this method sets the_{@link HttpServletResponse#setContentType content type} and_{@link HttpServletResponse#setCharacterEncoding encoding}_from the "media-type" and "encoding" output properties_specified in the {@link Transformer}._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer;protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		String contentType = getContentType()__		String mediaType = transformer.getOutputProperty(OutputKeys.MEDIA_TYPE)__		String encoding = transformer.getOutputProperty(OutputKeys.ENCODING)__		if (StringUtils.hasText(mediaType)) {_			contentType = mediaType__		}_		if (StringUtils.hasText(encoding)) {_			_			if (contentType != null && !contentType.toLowerCase().contains(WebUtils.CONTENT_TYPE_CHARSET_PREFIX)) {_				contentType = contentType + WebUtils.CONTENT_TYPE_CHARSET_PREFIX + encoding__			}_		}_		response.setContentType(contentType)__	};configure,the,supplied,link,http,servlet,response,p,the,default,implementation,of,this,method,sets,the,link,http,servlet,response,set,content,type,content,type,and,link,http,servlet,response,set,character,encoding,encoding,from,the,media,type,and,encoding,output,properties,specified,in,the,link,transformer,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer;protected,void,configure,response,map,string,object,model,http,servlet,response,response,transformer,transformer,string,content,type,get,content,type,string,media,type,transformer,get,output,property,output,keys,string,encoding,transformer,get,output,property,output,keys,encoding,if,string,utils,has,text,media,type,content,type,media,type,if,string,utils,has,text,encoding,if,content,type,null,content,type,to,lower,case,contains,web,utils,content,type,content,type,web,utils,encoding,response,set,content,type,content,type
XsltView -> protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1496837955;Configure the supplied {@link HttpServletResponse}._<p>The default implementation of this method sets the_{@link HttpServletResponse#setContentType content type} and_{@link HttpServletResponse#setCharacterEncoding encoding}_from the "media-type" and "encoding" output properties_specified in the {@link Transformer}._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer;protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		String contentType = getContentType()__		String mediaType = transformer.getOutputProperty(OutputKeys.MEDIA_TYPE)__		String encoding = transformer.getOutputProperty(OutputKeys.ENCODING)__		if (StringUtils.hasText(mediaType)) {_			contentType = mediaType__		}_		if (StringUtils.hasText(encoding)) {_			_			if (contentType != null && !contentType.toLowerCase().contains(WebUtils.CONTENT_TYPE_CHARSET_PREFIX)) {_				contentType = contentType + WebUtils.CONTENT_TYPE_CHARSET_PREFIX + encoding__			}_		}_		response.setContentType(contentType)__	};configure,the,supplied,link,http,servlet,response,p,the,default,implementation,of,this,method,sets,the,link,http,servlet,response,set,content,type,content,type,and,link,http,servlet,response,set,character,encoding,encoding,from,the,media,type,and,encoding,output,properties,specified,in,the,link,transformer,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer;protected,void,configure,response,map,string,object,model,http,servlet,response,response,transformer,transformer,string,content,type,get,content,type,string,media,type,transformer,get,output,property,output,keys,string,encoding,transformer,get,output,property,output,keys,encoding,if,string,utils,has,text,media,type,content,type,media,type,if,string,utils,has,text,encoding,if,content,type,null,content,type,to,lower,case,contains,web,utils,content,type,content,type,web,utils,encoding,response,set,content,type,content,type
XsltView -> protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1497250713;Configure the supplied {@link HttpServletResponse}._<p>The default implementation of this method sets the_{@link HttpServletResponse#setContentType content type} and_{@link HttpServletResponse#setCharacterEncoding encoding}_from the "media-type" and "encoding" output properties_specified in the {@link Transformer}._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer;protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		String contentType = getContentType()__		String mediaType = transformer.getOutputProperty(OutputKeys.MEDIA_TYPE)__		String encoding = transformer.getOutputProperty(OutputKeys.ENCODING)__		if (StringUtils.hasText(mediaType)) {_			contentType = mediaType__		}_		if (StringUtils.hasText(encoding)) {_			_			if (contentType != null && !contentType.toLowerCase().contains(WebUtils.CONTENT_TYPE_CHARSET_PREFIX)) {_				contentType = contentType + WebUtils.CONTENT_TYPE_CHARSET_PREFIX + encoding__			}_		}_		response.setContentType(contentType)__	};configure,the,supplied,link,http,servlet,response,p,the,default,implementation,of,this,method,sets,the,link,http,servlet,response,set,content,type,content,type,and,link,http,servlet,response,set,character,encoding,encoding,from,the,media,type,and,encoding,output,properties,specified,in,the,link,transformer,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer;protected,void,configure,response,map,string,object,model,http,servlet,response,response,transformer,transformer,string,content,type,get,content,type,string,media,type,transformer,get,output,property,output,keys,string,encoding,transformer,get,output,property,output,keys,encoding,if,string,utils,has,text,media,type,content,type,media,type,if,string,utils,has,text,encoding,if,content,type,null,content,type,to,lower,case,contains,web,utils,content,type,content,type,web,utils,encoding,response,set,content,type,content,type
XsltView -> protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1498780456;Configure the supplied {@link HttpServletResponse}._<p>The default implementation of this method sets the_{@link HttpServletResponse#setContentType content type} and_{@link HttpServletResponse#setCharacterEncoding encoding}_from the "media-type" and "encoding" output properties_specified in the {@link Transformer}._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer;protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		String contentType = getContentType()__		String mediaType = transformer.getOutputProperty(OutputKeys.MEDIA_TYPE)__		String encoding = transformer.getOutputProperty(OutputKeys.ENCODING)__		if (StringUtils.hasText(mediaType)) {_			contentType = mediaType__		}_		if (StringUtils.hasText(encoding)) {_			_			if (contentType != null && !contentType.toLowerCase().contains(WebUtils.CONTENT_TYPE_CHARSET_PREFIX)) {_				contentType = contentType + WebUtils.CONTENT_TYPE_CHARSET_PREFIX + encoding__			}_		}_		response.setContentType(contentType)__	};configure,the,supplied,link,http,servlet,response,p,the,default,implementation,of,this,method,sets,the,link,http,servlet,response,set,content,type,content,type,and,link,http,servlet,response,set,character,encoding,encoding,from,the,media,type,and,encoding,output,properties,specified,in,the,link,transformer,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer;protected,void,configure,response,map,string,object,model,http,servlet,response,response,transformer,transformer,string,content,type,get,content,type,string,media,type,transformer,get,output,property,output,keys,string,encoding,transformer,get,output,property,output,keys,encoding,if,string,utils,has,text,media,type,content,type,media,type,if,string,utils,has,text,encoding,if,content,type,null,content,type,to,lower,case,contains,web,utils,content,type,content,type,web,utils,encoding,response,set,content,type,content,type
XsltView -> protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1508532146;Configure the supplied {@link HttpServletResponse}._<p>The default implementation of this method sets the_{@link HttpServletResponse#setContentType content type} and_{@link HttpServletResponse#setCharacterEncoding encoding}_from the "media-type" and "encoding" output properties_specified in the {@link Transformer}._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer;protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		String contentType = getContentType()__		String mediaType = transformer.getOutputProperty(OutputKeys.MEDIA_TYPE)__		String encoding = transformer.getOutputProperty(OutputKeys.ENCODING)__		if (StringUtils.hasText(mediaType)) {_			contentType = mediaType__		}_		if (StringUtils.hasText(encoding)) {_			_			if (contentType != null && !contentType.toLowerCase().contains(WebUtils.CONTENT_TYPE_CHARSET_PREFIX)) {_				contentType = contentType + WebUtils.CONTENT_TYPE_CHARSET_PREFIX + encoding__			}_		}_		response.setContentType(contentType)__	};configure,the,supplied,link,http,servlet,response,p,the,default,implementation,of,this,method,sets,the,link,http,servlet,response,set,content,type,content,type,and,link,http,servlet,response,set,character,encoding,encoding,from,the,media,type,and,encoding,output,properties,specified,in,the,link,transformer,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer;protected,void,configure,response,map,string,object,model,http,servlet,response,response,transformer,transformer,string,content,type,get,content,type,string,media,type,transformer,get,output,property,output,keys,string,encoding,transformer,get,output,property,output,keys,encoding,if,string,utils,has,text,media,type,content,type,media,type,if,string,utils,has,text,encoding,if,content,type,null,content,type,to,lower,case,contains,web,utils,content,type,content,type,web,utils,encoding,response,set,content,type,content,type
XsltView -> protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer);1529361191;Configure the supplied {@link HttpServletResponse}._<p>The default implementation of this method sets the_{@link HttpServletResponse#setContentType content type} and_{@link HttpServletResponse#setCharacterEncoding encoding}_from the "media-type" and "encoding" output properties_specified in the {@link Transformer}._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer;protected void configureResponse(Map<String, Object> model, HttpServletResponse response, Transformer transformer) {_		String contentType = getContentType()__		String mediaType = transformer.getOutputProperty(OutputKeys.MEDIA_TYPE)__		String encoding = transformer.getOutputProperty(OutputKeys.ENCODING)__		if (StringUtils.hasText(mediaType)) {_			contentType = mediaType__		}_		if (StringUtils.hasText(encoding)) {_			_			if (contentType != null && !contentType.toLowerCase().contains(WebUtils.CONTENT_TYPE_CHARSET_PREFIX)) {_				contentType = contentType + WebUtils.CONTENT_TYPE_CHARSET_PREFIX + encoding__			}_		}_		response.setContentType(contentType)__	};configure,the,supplied,link,http,servlet,response,p,the,default,implementation,of,this,method,sets,the,link,http,servlet,response,set,content,type,content,type,and,link,http,servlet,response,set,character,encoding,encoding,from,the,media,type,and,encoding,output,properties,specified,in,the,link,transformer,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer;protected,void,configure,response,map,string,object,model,http,servlet,response,response,transformer,transformer,string,content,type,get,content,type,string,media,type,transformer,get,output,property,output,keys,string,encoding,transformer,get,output,property,output,keys,encoding,if,string,utils,has,text,media,type,content,type,media,type,if,string,utils,has,text,encoding,if,content,type,null,content,type,to,lower,case,contains,web,utils,content,type,content,type,web,utils,encoding,response,set,content,type,content,type
XsltView -> protected Class<?>[] getSourceTypes();1385412762;Return the array of {@link Class Classes} that are supported when converting to an_XSLT {@link Source}._<p>Currently supports {@link Source}, {@link Document}, {@link Node},_{@link Reader}, {@link InputStream} and {@link Resource}._@return the supported source types;protected Class<?>[] getSourceTypes() {_		return new Class<?>[] {Source.class, Document.class, Node.class, Reader.class, InputStream.class, Resource.class}__	};return,the,array,of,link,class,classes,that,are,supported,when,converting,to,an,xslt,link,source,p,currently,supports,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,return,the,supported,source,types;protected,class,get,source,types,return,new,class,source,class,document,class,node,class,reader,class,input,stream,class,resource,class
XsltView -> protected Class<?>[] getSourceTypes();1385423968;Return the array of {@link Class Classes} that are supported when converting to an_XSLT {@link Source}._<p>Currently supports {@link Source}, {@link Document}, {@link Node},_{@link Reader}, {@link InputStream} and {@link Resource}._@return the supported source types;protected Class<?>[] getSourceTypes() {_		return new Class<?>[] {Source.class, Document.class, Node.class, Reader.class, InputStream.class, Resource.class}__	};return,the,array,of,link,class,classes,that,are,supported,when,converting,to,an,xslt,link,source,p,currently,supports,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,return,the,supported,source,types;protected,class,get,source,types,return,new,class,source,class,document,class,node,class,reader,class,input,stream,class,resource,class
XsltView -> protected Class<?>[] getSourceTypes();1468948866;Return the array of {@link Class Classes} that are supported when converting to an_XSLT {@link Source}._<p>Currently supports {@link Source}, {@link Document}, {@link Node},_{@link Reader}, {@link InputStream} and {@link Resource}._@return the supported source types;protected Class<?>[] getSourceTypes() {_		return new Class<?>[] {Source.class, Document.class, Node.class, Reader.class, InputStream.class, Resource.class}__	};return,the,array,of,link,class,classes,that,are,supported,when,converting,to,an,xslt,link,source,p,currently,supports,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,return,the,supported,source,types;protected,class,get,source,types,return,new,class,source,class,document,class,node,class,reader,class,input,stream,class,resource,class
XsltView -> protected Class<?>[] getSourceTypes();1469047316;Return the array of {@link Class Classes} that are supported when converting to an_XSLT {@link Source}._<p>Currently supports {@link Source}, {@link Document}, {@link Node},_{@link Reader}, {@link InputStream} and {@link Resource}._@return the supported source types;protected Class<?>[] getSourceTypes() {_		return new Class<?>[] {Source.class, Document.class, Node.class, Reader.class, InputStream.class, Resource.class}__	};return,the,array,of,link,class,classes,that,are,supported,when,converting,to,an,xslt,link,source,p,currently,supports,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,return,the,supported,source,types;protected,class,get,source,types,return,new,class,source,class,document,class,node,class,reader,class,input,stream,class,resource,class
XsltView -> protected Class<?>[] getSourceTypes();1483750478;Return the array of {@link Class Classes} that are supported when converting to an_XSLT {@link Source}._<p>Currently supports {@link Source}, {@link Document}, {@link Node},_{@link Reader}, {@link InputStream} and {@link Resource}._@return the supported source types;protected Class<?>[] getSourceTypes() {_		return new Class<?>[] {Source.class, Document.class, Node.class, Reader.class, InputStream.class, Resource.class}__	};return,the,array,of,link,class,classes,that,are,supported,when,converting,to,an,xslt,link,source,p,currently,supports,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,return,the,supported,source,types;protected,class,get,source,types,return,new,class,source,class,document,class,node,class,reader,class,input,stream,class,resource,class
XsltView -> protected Class<?>[] getSourceTypes();1495868221;Return the array of {@link Class Classes} that are supported when converting to an_XSLT {@link Source}._<p>Currently supports {@link Source}, {@link Document}, {@link Node},_{@link Reader}, {@link InputStream} and {@link Resource}._@return the supported source types;protected Class<?>[] getSourceTypes() {_		return new Class<?>[] {Source.class, Document.class, Node.class, Reader.class, InputStream.class, Resource.class}__	};return,the,array,of,link,class,classes,that,are,supported,when,converting,to,an,xslt,link,source,p,currently,supports,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,return,the,supported,source,types;protected,class,get,source,types,return,new,class,source,class,document,class,node,class,reader,class,input,stream,class,resource,class
XsltView -> protected Class<?>[] getSourceTypes();1496837955;Return the array of {@link Class Classes} that are supported when converting to an_XSLT {@link Source}._<p>Currently supports {@link Source}, {@link Document}, {@link Node},_{@link Reader}, {@link InputStream} and {@link Resource}._@return the supported source types;protected Class<?>[] getSourceTypes() {_		return new Class<?>[] {Source.class, Document.class, Node.class, Reader.class, InputStream.class, Resource.class}__	};return,the,array,of,link,class,classes,that,are,supported,when,converting,to,an,xslt,link,source,p,currently,supports,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,return,the,supported,source,types;protected,class,get,source,types,return,new,class,source,class,document,class,node,class,reader,class,input,stream,class,resource,class
XsltView -> protected Class<?>[] getSourceTypes();1497250713;Return the array of {@link Class Classes} that are supported when converting to an_XSLT {@link Source}._<p>Currently supports {@link Source}, {@link Document}, {@link Node},_{@link Reader}, {@link InputStream} and {@link Resource}._@return the supported source types;protected Class<?>[] getSourceTypes() {_		return new Class<?>[] {Source.class, Document.class, Node.class, Reader.class, InputStream.class, Resource.class}__	};return,the,array,of,link,class,classes,that,are,supported,when,converting,to,an,xslt,link,source,p,currently,supports,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,return,the,supported,source,types;protected,class,get,source,types,return,new,class,source,class,document,class,node,class,reader,class,input,stream,class,resource,class
XsltView -> protected Class<?>[] getSourceTypes();1498780456;Return the array of {@link Class Classes} that are supported when converting to an_XSLT {@link Source}._<p>Currently supports {@link Source}, {@link Document}, {@link Node},_{@link Reader}, {@link InputStream} and {@link Resource}._@return the supported source types;protected Class<?>[] getSourceTypes() {_		return new Class<?>[] {Source.class, Document.class, Node.class, Reader.class, InputStream.class, Resource.class}__	};return,the,array,of,link,class,classes,that,are,supported,when,converting,to,an,xslt,link,source,p,currently,supports,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,return,the,supported,source,types;protected,class,get,source,types,return,new,class,source,class,document,class,node,class,reader,class,input,stream,class,resource,class
XsltView -> protected Class<?>[] getSourceTypes();1508532146;Return the array of {@link Class Classes} that are supported when converting to an_XSLT {@link Source}._<p>Currently supports {@link Source}, {@link Document}, {@link Node},_{@link Reader}, {@link InputStream} and {@link Resource}._@return the supported source types;protected Class<?>[] getSourceTypes() {_		return new Class<?>[] {Source.class, Document.class, Node.class, Reader.class, InputStream.class, Resource.class}__	};return,the,array,of,link,class,classes,that,are,supported,when,converting,to,an,xslt,link,source,p,currently,supports,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,return,the,supported,source,types;protected,class,get,source,types,return,new,class,source,class,document,class,node,class,reader,class,input,stream,class,resource,class
XsltView -> protected Class<?>[] getSourceTypes();1529361191;Return the array of {@link Class Classes} that are supported when converting to an_XSLT {@link Source}._<p>Currently supports {@link Source}, {@link Document}, {@link Node},_{@link Reader}, {@link InputStream} and {@link Resource}._@return the supported source types;protected Class<?>[] getSourceTypes() {_		return new Class<?>[] {Source.class, Document.class, Node.class, Reader.class, InputStream.class, Resource.class}__	};return,the,array,of,link,class,classes,that,are,supported,when,converting,to,an,xslt,link,source,p,currently,supports,link,source,link,document,link,node,link,reader,link,input,stream,and,link,resource,return,the,supported,source,types;protected,class,get,source,types,return,new,class,source,class,document,class,node,class,reader,class,input,stream,class,resource,class
XsltView -> protected Source locateSource(Map<String, Object> model) throws Exception;1328020251;<p>Locate the {@link Source} object in the supplied model,_converting objects as required._The default implementation first attempts to look under the configured_{@link #setSourceKey source key}, if any, before attempting to locate_an object of {@link #getSourceTypes() supported type}._@param model the merged model Map_@return the XSLT Source object (or <code>null</code> if none found)_@throws Exception if an error occured during locating the source_@see #setSourceKey_@see #convertSource;protected Source locateSource(Map<String, Object> model) throws Exception {_		if (this.sourceKey != null) {_			return convertSource(model.get(this.sourceKey))__		}_		Object source = CollectionUtils.findValueOfType(model.values(), getSourceTypes())__		return (source != null ? convertSource(source) : null)__	};p,locate,the,link,source,object,in,the,supplied,model,converting,objects,as,required,the,default,implementation,first,attempts,to,look,under,the,configured,link,set,source,key,source,key,if,any,before,attempting,to,locate,an,object,of,link,get,source,types,supported,type,param,model,the,merged,model,map,return,the,xslt,source,object,or,code,null,code,if,none,found,throws,exception,if,an,error,occured,during,locating,the,source,see,set,source,key,see,convert,source;protected,source,locate,source,map,string,object,model,throws,exception,if,this,source,key,null,return,convert,source,model,get,this,source,key,object,source,collection,utils,find,value,of,type,model,values,get,source,types,return,source,null,convert,source,source,null
XsltView -> protected Source locateSource(Map<String, Object> model) throws Exception;1356735495;<p>Locate the {@link Source} object in the supplied model,_converting objects as required._The default implementation first attempts to look under the configured_{@link #setSourceKey source key}, if any, before attempting to locate_an object of {@link #getSourceTypes() supported type}._@param model the merged model Map_@return the XSLT Source object (or {@code null} if none found)_@throws Exception if an error occured during locating the source_@see #setSourceKey_@see #convertSource;protected Source locateSource(Map<String, Object> model) throws Exception {_		if (this.sourceKey != null) {_			return convertSource(model.get(this.sourceKey))__		}_		Object source = CollectionUtils.findValueOfType(model.values(), getSourceTypes())__		return (source != null ? convertSource(source) : null)__	};p,locate,the,link,source,object,in,the,supplied,model,converting,objects,as,required,the,default,implementation,first,attempts,to,look,under,the,configured,link,set,source,key,source,key,if,any,before,attempting,to,locate,an,object,of,link,get,source,types,supported,type,param,model,the,merged,model,map,return,the,xslt,source,object,or,code,null,if,none,found,throws,exception,if,an,error,occured,during,locating,the,source,see,set,source,key,see,convert,source;protected,source,locate,source,map,string,object,model,throws,exception,if,this,source,key,null,return,convert,source,model,get,this,source,key,object,source,collection,utils,find,value,of,type,model,values,get,source,types,return,source,null,convert,source,source,null
XsltView -> protected Source locateSource(Map<String, Object> model) throws Exception;1385412762;<p>Locate the {@link Source} object in the supplied model,_converting objects as required._The default implementation first attempts to look under the configured_{@link #setSourceKey source key}, if any, before attempting to locate_an object of {@link #getSourceTypes() supported type}._@param model the merged model Map_@return the XSLT Source object (or {@code null} if none found)_@throws Exception if an error occured during locating the source_@see #setSourceKey_@see #convertSource;protected Source locateSource(Map<String, Object> model) throws Exception {_		if (this.sourceKey != null) {_			return convertSource(model.get(this.sourceKey))__		}_		Object source = CollectionUtils.findValueOfType(model.values(), getSourceTypes())__		return (source != null ? convertSource(source) : null)__	};p,locate,the,link,source,object,in,the,supplied,model,converting,objects,as,required,the,default,implementation,first,attempts,to,look,under,the,configured,link,set,source,key,source,key,if,any,before,attempting,to,locate,an,object,of,link,get,source,types,supported,type,param,model,the,merged,model,map,return,the,xslt,source,object,or,code,null,if,none,found,throws,exception,if,an,error,occured,during,locating,the,source,see,set,source,key,see,convert,source;protected,source,locate,source,map,string,object,model,throws,exception,if,this,source,key,null,return,convert,source,model,get,this,source,key,object,source,collection,utils,find,value,of,type,model,values,get,source,types,return,source,null,convert,source,source,null
XsltView -> protected Source locateSource(Map<String, Object> model) throws Exception;1385423968;<p>Locate the {@link Source} object in the supplied model,_converting objects as required._The default implementation first attempts to look under the configured_{@link #setSourceKey source key}, if any, before attempting to locate_an object of {@link #getSourceTypes() supported type}._@param model the merged model Map_@return the XSLT Source object (or {@code null} if none found)_@throws Exception if an error occurred during locating the source_@see #setSourceKey_@see #convertSource;protected Source locateSource(Map<String, Object> model) throws Exception {_		if (this.sourceKey != null) {_			return convertSource(model.get(this.sourceKey))__		}_		Object source = CollectionUtils.findValueOfType(model.values(), getSourceTypes())__		return (source != null ? convertSource(source) : null)__	};p,locate,the,link,source,object,in,the,supplied,model,converting,objects,as,required,the,default,implementation,first,attempts,to,look,under,the,configured,link,set,source,key,source,key,if,any,before,attempting,to,locate,an,object,of,link,get,source,types,supported,type,param,model,the,merged,model,map,return,the,xslt,source,object,or,code,null,if,none,found,throws,exception,if,an,error,occurred,during,locating,the,source,see,set,source,key,see,convert,source;protected,source,locate,source,map,string,object,model,throws,exception,if,this,source,key,null,return,convert,source,model,get,this,source,key,object,source,collection,utils,find,value,of,type,model,values,get,source,types,return,source,null,convert,source,source,null
XsltView -> protected Source locateSource(Map<String, Object> model) throws Exception;1468948866;<p>Locate the {@link Source} object in the supplied model,_converting objects as required._The default implementation first attempts to look under the configured_{@link #setSourceKey source key}, if any, before attempting to locate_an object of {@link #getSourceTypes() supported type}._@param model the merged model Map_@return the XSLT Source object (or {@code null} if none found)_@throws Exception if an error occurred during locating the source_@see #setSourceKey_@see #convertSource;protected Source locateSource(Map<String, Object> model) throws Exception {_		if (this.sourceKey != null) {_			return convertSource(model.get(this.sourceKey))__		}_		Object source = CollectionUtils.findValueOfType(model.values(), getSourceTypes())__		return (source != null ? convertSource(source) : null)__	};p,locate,the,link,source,object,in,the,supplied,model,converting,objects,as,required,the,default,implementation,first,attempts,to,look,under,the,configured,link,set,source,key,source,key,if,any,before,attempting,to,locate,an,object,of,link,get,source,types,supported,type,param,model,the,merged,model,map,return,the,xslt,source,object,or,code,null,if,none,found,throws,exception,if,an,error,occurred,during,locating,the,source,see,set,source,key,see,convert,source;protected,source,locate,source,map,string,object,model,throws,exception,if,this,source,key,null,return,convert,source,model,get,this,source,key,object,source,collection,utils,find,value,of,type,model,values,get,source,types,return,source,null,convert,source,source,null
XsltView -> protected Source locateSource(Map<String, Object> model) throws Exception;1469047316;<p>Locate the {@link Source} object in the supplied model,_converting objects as required._The default implementation first attempts to look under the configured_{@link #setSourceKey source key}, if any, before attempting to locate_an object of {@link #getSourceTypes() supported type}._@param model the merged model Map_@return the XSLT Source object (or {@code null} if none found)_@throws Exception if an error occurred during locating the source_@see #setSourceKey_@see #convertSource;protected Source locateSource(Map<String, Object> model) throws Exception {_		if (this.sourceKey != null) {_			return convertSource(model.get(this.sourceKey))__		}_		Object source = CollectionUtils.findValueOfType(model.values(), getSourceTypes())__		return (source != null ? convertSource(source) : null)__	};p,locate,the,link,source,object,in,the,supplied,model,converting,objects,as,required,the,default,implementation,first,attempts,to,look,under,the,configured,link,set,source,key,source,key,if,any,before,attempting,to,locate,an,object,of,link,get,source,types,supported,type,param,model,the,merged,model,map,return,the,xslt,source,object,or,code,null,if,none,found,throws,exception,if,an,error,occurred,during,locating,the,source,see,set,source,key,see,convert,source;protected,source,locate,source,map,string,object,model,throws,exception,if,this,source,key,null,return,convert,source,model,get,this,source,key,object,source,collection,utils,find,value,of,type,model,values,get,source,types,return,source,null,convert,source,source,null
XsltView -> protected Source locateSource(Map<String, Object> model) throws Exception;1483750478;<p>Locate the {@link Source} object in the supplied model,_converting objects as required._The default implementation first attempts to look under the configured_{@link #setSourceKey source key}, if any, before attempting to locate_an object of {@link #getSourceTypes() supported type}._@param model the merged model Map_@return the XSLT Source object (or {@code null} if none found)_@throws Exception if an error occurred during locating the source_@see #setSourceKey_@see #convertSource;protected Source locateSource(Map<String, Object> model) throws Exception {_		if (this.sourceKey != null) {_			return convertSource(model.get(this.sourceKey))__		}_		Object source = CollectionUtils.findValueOfType(model.values(), getSourceTypes())__		return (source != null ? convertSource(source) : null)__	};p,locate,the,link,source,object,in,the,supplied,model,converting,objects,as,required,the,default,implementation,first,attempts,to,look,under,the,configured,link,set,source,key,source,key,if,any,before,attempting,to,locate,an,object,of,link,get,source,types,supported,type,param,model,the,merged,model,map,return,the,xslt,source,object,or,code,null,if,none,found,throws,exception,if,an,error,occurred,during,locating,the,source,see,set,source,key,see,convert,source;protected,source,locate,source,map,string,object,model,throws,exception,if,this,source,key,null,return,convert,source,model,get,this,source,key,object,source,collection,utils,find,value,of,type,model,values,get,source,types,return,source,null,convert,source,source,null
XsltView -> private void closeSourceIfNecessary(@Nullable Source source);1495868221;Close the underlying resource managed by the supplied {@link Source} if applicable._<p>Only works for {@link StreamSource StreamSources}._@param source the XSLT Source to close (may be {@code null});private void closeSourceIfNecessary(@Nullable Source source) {_		if (source instanceof StreamSource) {_			StreamSource streamSource = (StreamSource) source__			if (streamSource.getReader() != null) {_				try {_					streamSource.getReader().close()__				}_				catch (IOException ex) {_					_				}_			}_			if (streamSource.getInputStream() != null) {_				try {_					streamSource.getInputStream().close()__				}_				catch (IOException ex) {_					_				}_			}_		}_	};close,the,underlying,resource,managed,by,the,supplied,link,source,if,applicable,p,only,works,for,link,stream,source,stream,sources,param,source,the,xslt,source,to,close,may,be,code,null;private,void,close,source,if,necessary,nullable,source,source,if,source,instanceof,stream,source,stream,source,stream,source,stream,source,source,if,stream,source,get,reader,null,try,stream,source,get,reader,close,catch,ioexception,ex,if,stream,source,get,input,stream,null,try,stream,source,get,input,stream,close,catch,ioexception,ex
XsltView -> private void closeSourceIfNecessary(@Nullable Source source);1496837955;Close the underlying resource managed by the supplied {@link Source} if applicable._<p>Only works for {@link StreamSource StreamSources}._@param source the XSLT Source to close (may be {@code null});private void closeSourceIfNecessary(@Nullable Source source) {_		if (source instanceof StreamSource) {_			StreamSource streamSource = (StreamSource) source__			if (streamSource.getReader() != null) {_				try {_					streamSource.getReader().close()__				}_				catch (IOException ex) {_					_				}_			}_			if (streamSource.getInputStream() != null) {_				try {_					streamSource.getInputStream().close()__				}_				catch (IOException ex) {_					_				}_			}_		}_	};close,the,underlying,resource,managed,by,the,supplied,link,source,if,applicable,p,only,works,for,link,stream,source,stream,sources,param,source,the,xslt,source,to,close,may,be,code,null;private,void,close,source,if,necessary,nullable,source,source,if,source,instanceof,stream,source,stream,source,stream,source,stream,source,source,if,stream,source,get,reader,null,try,stream,source,get,reader,close,catch,ioexception,ex,if,stream,source,get,input,stream,null,try,stream,source,get,input,stream,close,catch,ioexception,ex
XsltView -> private void closeSourceIfNecessary(@Nullable Source source);1497250713;Close the underlying resource managed by the supplied {@link Source} if applicable._<p>Only works for {@link StreamSource StreamSources}._@param source the XSLT Source to close (may be {@code null});private void closeSourceIfNecessary(@Nullable Source source) {_		if (source instanceof StreamSource) {_			StreamSource streamSource = (StreamSource) source__			if (streamSource.getReader() != null) {_				try {_					streamSource.getReader().close()__				}_				catch (IOException ex) {_					_				}_			}_			if (streamSource.getInputStream() != null) {_				try {_					streamSource.getInputStream().close()__				}_				catch (IOException ex) {_					_				}_			}_		}_	};close,the,underlying,resource,managed,by,the,supplied,link,source,if,applicable,p,only,works,for,link,stream,source,stream,sources,param,source,the,xslt,source,to,close,may,be,code,null;private,void,close,source,if,necessary,nullable,source,source,if,source,instanceof,stream,source,stream,source,stream,source,stream,source,source,if,stream,source,get,reader,null,try,stream,source,get,reader,close,catch,ioexception,ex,if,stream,source,get,input,stream,null,try,stream,source,get,input,stream,close,catch,ioexception,ex
XsltView -> private void closeSourceIfNecessary(@Nullable Source source);1498780456;Close the underlying resource managed by the supplied {@link Source} if applicable._<p>Only works for {@link StreamSource StreamSources}._@param source the XSLT Source to close (may be {@code null});private void closeSourceIfNecessary(@Nullable Source source) {_		if (source instanceof StreamSource) {_			StreamSource streamSource = (StreamSource) source__			if (streamSource.getReader() != null) {_				try {_					streamSource.getReader().close()__				}_				catch (IOException ex) {_					_				}_			}_			if (streamSource.getInputStream() != null) {_				try {_					streamSource.getInputStream().close()__				}_				catch (IOException ex) {_					_				}_			}_		}_	};close,the,underlying,resource,managed,by,the,supplied,link,source,if,applicable,p,only,works,for,link,stream,source,stream,sources,param,source,the,xslt,source,to,close,may,be,code,null;private,void,close,source,if,necessary,nullable,source,source,if,source,instanceof,stream,source,stream,source,stream,source,stream,source,source,if,stream,source,get,reader,null,try,stream,source,get,reader,close,catch,ioexception,ex,if,stream,source,get,input,stream,null,try,stream,source,get,input,stream,close,catch,ioexception,ex
XsltView -> private void closeSourceIfNecessary(@Nullable Source source);1508532146;Close the underlying resource managed by the supplied {@link Source} if applicable._<p>Only works for {@link StreamSource StreamSources}._@param source the XSLT Source to close (may be {@code null});private void closeSourceIfNecessary(@Nullable Source source) {_		if (source instanceof StreamSource) {_			StreamSource streamSource = (StreamSource) source__			if (streamSource.getReader() != null) {_				try {_					streamSource.getReader().close()__				}_				catch (IOException ex) {_					_				}_			}_			if (streamSource.getInputStream() != null) {_				try {_					streamSource.getInputStream().close()__				}_				catch (IOException ex) {_					_				}_			}_		}_	};close,the,underlying,resource,managed,by,the,supplied,link,source,if,applicable,p,only,works,for,link,stream,source,stream,sources,param,source,the,xslt,source,to,close,may,be,code,null;private,void,close,source,if,necessary,nullable,source,source,if,source,instanceof,stream,source,stream,source,stream,source,stream,source,source,if,stream,source,get,reader,null,try,stream,source,get,reader,close,catch,ioexception,ex,if,stream,source,get,input,stream,null,try,stream,source,get,input,stream,close,catch,ioexception,ex
XsltView -> private void closeSourceIfNecessary(@Nullable Source source);1529361191;Close the underlying resource managed by the supplied {@link Source} if applicable._<p>Only works for {@link StreamSource StreamSources}._@param source the XSLT Source to close (may be {@code null});private void closeSourceIfNecessary(@Nullable Source source) {_		if (source instanceof StreamSource) {_			StreamSource streamSource = (StreamSource) source__			if (streamSource.getReader() != null) {_				try {_					streamSource.getReader().close()__				}_				catch (IOException ex) {_					_				}_			}_			if (streamSource.getInputStream() != null) {_				try {_					streamSource.getInputStream().close()__				}_				catch (IOException ex) {_					_				}_			}_		}_	};close,the,underlying,resource,managed,by,the,supplied,link,source,if,applicable,p,only,works,for,link,stream,source,stream,sources,param,source,the,xslt,source,to,close,may,be,code,null;private,void,close,source,if,necessary,nullable,source,source,if,source,instanceof,stream,source,stream,source,stream,source,stream,source,source,if,stream,source,get,reader,null,try,stream,source,get,reader,close,catch,ioexception,ex,if,stream,source,get,input,stream,null,try,stream,source,get,input,stream,close,catch,ioexception,ex
XsltView -> protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, 			Transformer transformer);1508532146;Configure the supplied {@link Transformer} instance._<p>The default implementation copies parameters from the model into the_Transformer's {@link Transformer#setParameter parameter set}._This implementation also copies the {@link #setOutputProperties output properties}_into the {@link Transformer} {@link Transformer#setOutputProperty output properties}._Indentation properties are set as well._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer_@see #copyModelParameters(Map, Transformer)_@see #copyOutputProperties(Transformer)_@see #configureIndentation(Transformer);protected void configureTransformer(Map<String, Object> model, HttpServletResponse response,_			Transformer transformer) {__		copyModelParameters(model, transformer)__		copyOutputProperties(transformer)__		configureIndentation(transformer)__	};configure,the,supplied,link,transformer,instance,p,the,default,implementation,copies,parameters,from,the,model,into,the,transformer,s,link,transformer,set,parameter,parameter,set,this,implementation,also,copies,the,link,set,output,properties,output,properties,into,the,link,transformer,link,transformer,set,output,property,output,properties,indentation,properties,are,set,as,well,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer,see,copy,model,parameters,map,transformer,see,copy,output,properties,transformer,see,configure,indentation,transformer;protected,void,configure,transformer,map,string,object,model,http,servlet,response,response,transformer,transformer,copy,model,parameters,model,transformer,copy,output,properties,transformer,configure,indentation,transformer
XsltView -> protected void configureTransformer(Map<String, Object> model, HttpServletResponse response, 			Transformer transformer);1529361191;Configure the supplied {@link Transformer} instance._<p>The default implementation copies parameters from the model into the_Transformer's {@link Transformer#setParameter parameter set}._This implementation also copies the {@link #setOutputProperties output properties}_into the {@link Transformer} {@link Transformer#setOutputProperty output properties}._Indentation properties are set as well._@param model merged output Map (never {@code null})_@param response current HTTP response_@param transformer the target transformer_@see #copyModelParameters(Map, Transformer)_@see #copyOutputProperties(Transformer)_@see #configureIndentation(Transformer);protected void configureTransformer(Map<String, Object> model, HttpServletResponse response,_			Transformer transformer) {__		copyModelParameters(model, transformer)__		copyOutputProperties(transformer)__		configureIndentation(transformer)__	};configure,the,supplied,link,transformer,instance,p,the,default,implementation,copies,parameters,from,the,model,into,the,transformer,s,link,transformer,set,parameter,parameter,set,this,implementation,also,copies,the,link,set,output,properties,output,properties,into,the,link,transformer,link,transformer,set,output,property,output,properties,indentation,properties,are,set,as,well,param,model,merged,output,map,never,code,null,param,response,current,http,response,param,transformer,the,target,transformer,see,copy,model,parameters,map,transformer,see,copy,output,properties,transformer,see,configure,indentation,transformer;protected,void,configure,transformer,map,string,object,model,http,servlet,response,response,transformer,transformer,copy,model,parameters,model,transformer,copy,output,properties,transformer,configure,indentation,transformer
XsltView -> public void setOutputProperties(Properties outputProperties);1328020251;Set arbitrary transformer output properties to be applied to the stylesheet._<p>Any values specified here will override defaults that this view sets_programmatically._@see javax.xml.transform.Transformer#setOutputProperty;public void setOutputProperties(Properties outputProperties) {_		this.outputProperties = outputProperties__	};set,arbitrary,transformer,output,properties,to,be,applied,to,the,stylesheet,p,any,values,specified,here,will,override,defaults,that,this,view,sets,programmatically,see,javax,xml,transform,transformer,set,output,property;public,void,set,output,properties,properties,output,properties,this,output,properties,output,properties
XsltView -> public void setOutputProperties(Properties outputProperties);1356735495;Set arbitrary transformer output properties to be applied to the stylesheet._<p>Any values specified here will override defaults that this view sets_programmatically._@see javax.xml.transform.Transformer#setOutputProperty;public void setOutputProperties(Properties outputProperties) {_		this.outputProperties = outputProperties__	};set,arbitrary,transformer,output,properties,to,be,applied,to,the,stylesheet,p,any,values,specified,here,will,override,defaults,that,this,view,sets,programmatically,see,javax,xml,transform,transformer,set,output,property;public,void,set,output,properties,properties,output,properties,this,output,properties,output,properties
XsltView -> public void setOutputProperties(Properties outputProperties);1385412762;Set arbitrary transformer output properties to be applied to the stylesheet._<p>Any values specified here will override defaults that this view sets_programmatically._@see javax.xml.transform.Transformer#setOutputProperty;public void setOutputProperties(Properties outputProperties) {_		this.outputProperties = outputProperties__	};set,arbitrary,transformer,output,properties,to,be,applied,to,the,stylesheet,p,any,values,specified,here,will,override,defaults,that,this,view,sets,programmatically,see,javax,xml,transform,transformer,set,output,property;public,void,set,output,properties,properties,output,properties,this,output,properties,output,properties
XsltView -> public void setOutputProperties(Properties outputProperties);1385423968;Set arbitrary transformer output properties to be applied to the stylesheet._<p>Any values specified here will override defaults that this view sets_programmatically._@see javax.xml.transform.Transformer#setOutputProperty;public void setOutputProperties(Properties outputProperties) {_		this.outputProperties = outputProperties__	};set,arbitrary,transformer,output,properties,to,be,applied,to,the,stylesheet,p,any,values,specified,here,will,override,defaults,that,this,view,sets,programmatically,see,javax,xml,transform,transformer,set,output,property;public,void,set,output,properties,properties,output,properties,this,output,properties,output,properties
XsltView -> public void setOutputProperties(Properties outputProperties);1468948866;Set arbitrary transformer output properties to be applied to the stylesheet._<p>Any values specified here will override defaults that this view sets_programmatically._@see javax.xml.transform.Transformer#setOutputProperty;public void setOutputProperties(Properties outputProperties) {_		this.outputProperties = outputProperties__	};set,arbitrary,transformer,output,properties,to,be,applied,to,the,stylesheet,p,any,values,specified,here,will,override,defaults,that,this,view,sets,programmatically,see,javax,xml,transform,transformer,set,output,property;public,void,set,output,properties,properties,output,properties,this,output,properties,output,properties
XsltView -> public void setOutputProperties(Properties outputProperties);1469047316;Set arbitrary transformer output properties to be applied to the stylesheet._<p>Any values specified here will override defaults that this view sets_programmatically._@see javax.xml.transform.Transformer#setOutputProperty;public void setOutputProperties(Properties outputProperties) {_		this.outputProperties = outputProperties__	};set,arbitrary,transformer,output,properties,to,be,applied,to,the,stylesheet,p,any,values,specified,here,will,override,defaults,that,this,view,sets,programmatically,see,javax,xml,transform,transformer,set,output,property;public,void,set,output,properties,properties,output,properties,this,output,properties,output,properties
XsltView -> public void setOutputProperties(Properties outputProperties);1483750478;Set arbitrary transformer output properties to be applied to the stylesheet._<p>Any values specified here will override defaults that this view sets_programmatically._@see javax.xml.transform.Transformer#setOutputProperty;public void setOutputProperties(Properties outputProperties) {_		this.outputProperties = outputProperties__	};set,arbitrary,transformer,output,properties,to,be,applied,to,the,stylesheet,p,any,values,specified,here,will,override,defaults,that,this,view,sets,programmatically,see,javax,xml,transform,transformer,set,output,property;public,void,set,output,properties,properties,output,properties,this,output,properties,output,properties
XsltView -> public void setOutputProperties(Properties outputProperties);1495868221;Set arbitrary transformer output properties to be applied to the stylesheet._<p>Any values specified here will override defaults that this view sets_programmatically._@see javax.xml.transform.Transformer#setOutputProperty;public void setOutputProperties(Properties outputProperties) {_		this.outputProperties = outputProperties__	};set,arbitrary,transformer,output,properties,to,be,applied,to,the,stylesheet,p,any,values,specified,here,will,override,defaults,that,this,view,sets,programmatically,see,javax,xml,transform,transformer,set,output,property;public,void,set,output,properties,properties,output,properties,this,output,properties,output,properties
XsltView -> public void setOutputProperties(Properties outputProperties);1496837955;Set arbitrary transformer output properties to be applied to the stylesheet._<p>Any values specified here will override defaults that this view sets_programmatically._@see javax.xml.transform.Transformer#setOutputProperty;public void setOutputProperties(Properties outputProperties) {_		this.outputProperties = outputProperties__	};set,arbitrary,transformer,output,properties,to,be,applied,to,the,stylesheet,p,any,values,specified,here,will,override,defaults,that,this,view,sets,programmatically,see,javax,xml,transform,transformer,set,output,property;public,void,set,output,properties,properties,output,properties,this,output,properties,output,properties
XsltView -> public void setOutputProperties(Properties outputProperties);1497250713;Set arbitrary transformer output properties to be applied to the stylesheet._<p>Any values specified here will override defaults that this view sets_programmatically._@see javax.xml.transform.Transformer#setOutputProperty;public void setOutputProperties(Properties outputProperties) {_		this.outputProperties = outputProperties__	};set,arbitrary,transformer,output,properties,to,be,applied,to,the,stylesheet,p,any,values,specified,here,will,override,defaults,that,this,view,sets,programmatically,see,javax,xml,transform,transformer,set,output,property;public,void,set,output,properties,properties,output,properties,this,output,properties,output,properties
XsltView -> public void setOutputProperties(Properties outputProperties);1498780456;Set arbitrary transformer output properties to be applied to the stylesheet._<p>Any values specified here will override defaults that this view sets_programmatically._@see javax.xml.transform.Transformer#setOutputProperty;public void setOutputProperties(Properties outputProperties) {_		this.outputProperties = outputProperties__	};set,arbitrary,transformer,output,properties,to,be,applied,to,the,stylesheet,p,any,values,specified,here,will,override,defaults,that,this,view,sets,programmatically,see,javax,xml,transform,transformer,set,output,property;public,void,set,output,properties,properties,output,properties,this,output,properties,output,properties
XsltView -> public void setOutputProperties(Properties outputProperties);1508532146;Set arbitrary transformer output properties to be applied to the stylesheet._<p>Any values specified here will override defaults that this view sets_programmatically._@see javax.xml.transform.Transformer#setOutputProperty;public void setOutputProperties(Properties outputProperties) {_		this.outputProperties = outputProperties__	};set,arbitrary,transformer,output,properties,to,be,applied,to,the,stylesheet,p,any,values,specified,here,will,override,defaults,that,this,view,sets,programmatically,see,javax,xml,transform,transformer,set,output,property;public,void,set,output,properties,properties,output,properties,this,output,properties,output,properties
XsltView -> public void setOutputProperties(Properties outputProperties);1529361191;Set arbitrary transformer output properties to be applied to the stylesheet._<p>Any values specified here will override defaults that this view sets_programmatically._@see javax.xml.transform.Transformer#setOutputProperty;public void setOutputProperties(Properties outputProperties) {_		this.outputProperties = outputProperties__	};set,arbitrary,transformer,output,properties,to,be,applied,to,the,stylesheet,p,any,values,specified,here,will,override,defaults,that,this,view,sets,programmatically,see,javax,xml,transform,transformer,set,output,property;public,void,set,output,properties,properties,output,properties,this,output,properties,output,properties
XsltView -> @Nullable 	protected Source locateSource(Map<String, Object> model) throws Exception;1495868221;<p>Locate the {@link Source} object in the supplied model,_converting objects as required._The default implementation first attempts to look under the configured_{@link #setSourceKey source key}, if any, before attempting to locate_an object of {@link #getSourceTypes() supported type}._@param model the merged model Map_@return the XSLT Source object (or {@code null} if none found)_@throws Exception if an error occurred during locating the source_@see #setSourceKey_@see #convertSource;@Nullable_	protected Source locateSource(Map<String, Object> model) throws Exception {_		if (this.sourceKey != null) {_			return convertSource(model.get(this.sourceKey))__		}_		Object source = CollectionUtils.findValueOfType(model.values(), getSourceTypes())__		return (source != null ? convertSource(source) : null)__	};p,locate,the,link,source,object,in,the,supplied,model,converting,objects,as,required,the,default,implementation,first,attempts,to,look,under,the,configured,link,set,source,key,source,key,if,any,before,attempting,to,locate,an,object,of,link,get,source,types,supported,type,param,model,the,merged,model,map,return,the,xslt,source,object,or,code,null,if,none,found,throws,exception,if,an,error,occurred,during,locating,the,source,see,set,source,key,see,convert,source;nullable,protected,source,locate,source,map,string,object,model,throws,exception,if,this,source,key,null,return,convert,source,model,get,this,source,key,object,source,collection,utils,find,value,of,type,model,values,get,source,types,return,source,null,convert,source,source,null
XsltView -> @Nullable 	protected Source locateSource(Map<String, Object> model) throws Exception;1496837955;<p>Locate the {@link Source} object in the supplied model,_converting objects as required._The default implementation first attempts to look under the configured_{@link #setSourceKey source key}, if any, before attempting to locate_an object of {@link #getSourceTypes() supported type}._@param model the merged model Map_@return the XSLT Source object (or {@code null} if none found)_@throws Exception if an error occurred during locating the source_@see #setSourceKey_@see #convertSource;@Nullable_	protected Source locateSource(Map<String, Object> model) throws Exception {_		if (this.sourceKey != null) {_			return convertSource(model.get(this.sourceKey))__		}_		Object source = CollectionUtils.findValueOfType(model.values(), getSourceTypes())__		return (source != null ? convertSource(source) : null)__	};p,locate,the,link,source,object,in,the,supplied,model,converting,objects,as,required,the,default,implementation,first,attempts,to,look,under,the,configured,link,set,source,key,source,key,if,any,before,attempting,to,locate,an,object,of,link,get,source,types,supported,type,param,model,the,merged,model,map,return,the,xslt,source,object,or,code,null,if,none,found,throws,exception,if,an,error,occurred,during,locating,the,source,see,set,source,key,see,convert,source;nullable,protected,source,locate,source,map,string,object,model,throws,exception,if,this,source,key,null,return,convert,source,model,get,this,source,key,object,source,collection,utils,find,value,of,type,model,values,get,source,types,return,source,null,convert,source,source,null
XsltView -> @Nullable 	protected Source locateSource(Map<String, Object> model) throws Exception;1497250713;<p>Locate the {@link Source} object in the supplied model,_converting objects as required._The default implementation first attempts to look under the configured_{@link #setSourceKey source key}, if any, before attempting to locate_an object of {@link #getSourceTypes() supported type}._@param model the merged model Map_@return the XSLT Source object (or {@code null} if none found)_@throws Exception if an error occurred during locating the source_@see #setSourceKey_@see #convertSource;@Nullable_	protected Source locateSource(Map<String, Object> model) throws Exception {_		if (this.sourceKey != null) {_			return convertSource(model.get(this.sourceKey))__		}_		Object source = CollectionUtils.findValueOfType(model.values(), getSourceTypes())__		return (source != null ? convertSource(source) : null)__	};p,locate,the,link,source,object,in,the,supplied,model,converting,objects,as,required,the,default,implementation,first,attempts,to,look,under,the,configured,link,set,source,key,source,key,if,any,before,attempting,to,locate,an,object,of,link,get,source,types,supported,type,param,model,the,merged,model,map,return,the,xslt,source,object,or,code,null,if,none,found,throws,exception,if,an,error,occurred,during,locating,the,source,see,set,source,key,see,convert,source;nullable,protected,source,locate,source,map,string,object,model,throws,exception,if,this,source,key,null,return,convert,source,model,get,this,source,key,object,source,collection,utils,find,value,of,type,model,values,get,source,types,return,source,null,convert,source,source,null
XsltView -> @Nullable 	protected Source locateSource(Map<String, Object> model) throws Exception;1498780456;<p>Locate the {@link Source} object in the supplied model,_converting objects as required._The default implementation first attempts to look under the configured_{@link #setSourceKey source key}, if any, before attempting to locate_an object of {@link #getSourceTypes() supported type}._@param model the merged model Map_@return the XSLT Source object (or {@code null} if none found)_@throws Exception if an error occurred during locating the source_@see #setSourceKey_@see #convertSource;@Nullable_	protected Source locateSource(Map<String, Object> model) throws Exception {_		if (this.sourceKey != null) {_			return convertSource(model.get(this.sourceKey))__		}_		Object source = CollectionUtils.findValueOfType(model.values(), getSourceTypes())__		return (source != null ? convertSource(source) : null)__	};p,locate,the,link,source,object,in,the,supplied,model,converting,objects,as,required,the,default,implementation,first,attempts,to,look,under,the,configured,link,set,source,key,source,key,if,any,before,attempting,to,locate,an,object,of,link,get,source,types,supported,type,param,model,the,merged,model,map,return,the,xslt,source,object,or,code,null,if,none,found,throws,exception,if,an,error,occurred,during,locating,the,source,see,set,source,key,see,convert,source;nullable,protected,source,locate,source,map,string,object,model,throws,exception,if,this,source,key,null,return,convert,source,model,get,this,source,key,object,source,collection,utils,find,value,of,type,model,values,get,source,types,return,source,null,convert,source,source,null
XsltView -> @Nullable 	protected Source locateSource(Map<String, Object> model) throws Exception;1508532146;<p>Locate the {@link Source} object in the supplied model,_converting objects as required._The default implementation first attempts to look under the configured_{@link #setSourceKey source key}, if any, before attempting to locate_an object of {@link #getSourceTypes() supported type}._@param model the merged model Map_@return the XSLT Source object (or {@code null} if none found)_@throws Exception if an error occurred during locating the source_@see #setSourceKey_@see #convertSource;@Nullable_	protected Source locateSource(Map<String, Object> model) throws Exception {_		if (this.sourceKey != null) {_			return convertSource(model.get(this.sourceKey))__		}_		Object source = CollectionUtils.findValueOfType(model.values(), getSourceTypes())__		return (source != null ? convertSource(source) : null)__	};p,locate,the,link,source,object,in,the,supplied,model,converting,objects,as,required,the,default,implementation,first,attempts,to,look,under,the,configured,link,set,source,key,source,key,if,any,before,attempting,to,locate,an,object,of,link,get,source,types,supported,type,param,model,the,merged,model,map,return,the,xslt,source,object,or,code,null,if,none,found,throws,exception,if,an,error,occurred,during,locating,the,source,see,set,source,key,see,convert,source;nullable,protected,source,locate,source,map,string,object,model,throws,exception,if,this,source,key,null,return,convert,source,model,get,this,source,key,object,source,collection,utils,find,value,of,type,model,values,get,source,types,return,source,null,convert,source,source,null
XsltView -> @Nullable 	protected Source locateSource(Map<String, Object> model) throws Exception;1529361191;<p>Locate the {@link Source} object in the supplied model,_converting objects as required._The default implementation first attempts to look under the configured_{@link #setSourceKey source key}, if any, before attempting to locate_an object of {@link #getSourceTypes() supported type}._@param model the merged model Map_@return the XSLT Source object (or {@code null} if none found)_@throws Exception if an error occurred during locating the source_@see #setSourceKey_@see #convertSource;@Nullable_	protected Source locateSource(Map<String, Object> model) throws Exception {_		if (this.sourceKey != null) {_			return convertSource(model.get(this.sourceKey))__		}_		Object source = CollectionUtils.findValueOfType(model.values(), getSourceTypes())__		return (source != null ? convertSource(source) : null)__	};p,locate,the,link,source,object,in,the,supplied,model,converting,objects,as,required,the,default,implementation,first,attempts,to,look,under,the,configured,link,set,source,key,source,key,if,any,before,attempting,to,locate,an,object,of,link,get,source,types,supported,type,param,model,the,merged,model,map,return,the,xslt,source,object,or,code,null,if,none,found,throws,exception,if,an,error,occurred,during,locating,the,source,see,set,source,key,see,convert,source;nullable,protected,source,locate,source,map,string,object,model,throws,exception,if,this,source,key,null,return,convert,source,model,get,this,source,key,object,source,collection,utils,find,value,of,type,model,values,get,source,types,return,source,null,convert,source,source,null
XsltView -> public void setUriResolver(URIResolver uriResolver);1328020251;Set the URIResolver used in the transform._<p>The URIResolver handles calls to the XSLT <code>document()</code> function.;public void setUriResolver(URIResolver uriResolver) {_		this.uriResolver = uriResolver__	};set,the,uriresolver,used,in,the,transform,p,the,uriresolver,handles,calls,to,the,xslt,code,document,code,function;public,void,set,uri,resolver,uriresolver,uri,resolver,this,uri,resolver,uri,resolver
XsltView -> public void setUriResolver(URIResolver uriResolver);1356735495;Set the URIResolver used in the transform._<p>The URIResolver handles calls to the XSLT {@code document()} function.;public void setUriResolver(URIResolver uriResolver) {_		this.uriResolver = uriResolver__	};set,the,uriresolver,used,in,the,transform,p,the,uriresolver,handles,calls,to,the,xslt,code,document,function;public,void,set,uri,resolver,uriresolver,uri,resolver,this,uri,resolver,uri,resolver
XsltView -> public void setUriResolver(URIResolver uriResolver);1385412762;Set the URIResolver used in the transform._<p>The URIResolver handles calls to the XSLT {@code document()} function.;public void setUriResolver(URIResolver uriResolver) {_		this.uriResolver = uriResolver__	};set,the,uriresolver,used,in,the,transform,p,the,uriresolver,handles,calls,to,the,xslt,code,document,function;public,void,set,uri,resolver,uriresolver,uri,resolver,this,uri,resolver,uri,resolver
XsltView -> public void setUriResolver(URIResolver uriResolver);1385423968;Set the URIResolver used in the transform._<p>The URIResolver handles calls to the XSLT {@code document()} function.;public void setUriResolver(URIResolver uriResolver) {_		this.uriResolver = uriResolver__	};set,the,uriresolver,used,in,the,transform,p,the,uriresolver,handles,calls,to,the,xslt,code,document,function;public,void,set,uri,resolver,uriresolver,uri,resolver,this,uri,resolver,uri,resolver
XsltView -> public void setUriResolver(URIResolver uriResolver);1468948866;Set the URIResolver used in the transform._<p>The URIResolver handles calls to the XSLT {@code document()} function.;public void setUriResolver(URIResolver uriResolver) {_		this.uriResolver = uriResolver__	};set,the,uriresolver,used,in,the,transform,p,the,uriresolver,handles,calls,to,the,xslt,code,document,function;public,void,set,uri,resolver,uriresolver,uri,resolver,this,uri,resolver,uri,resolver
XsltView -> public void setUriResolver(URIResolver uriResolver);1469047316;Set the URIResolver used in the transform._<p>The URIResolver handles calls to the XSLT {@code document()} function.;public void setUriResolver(URIResolver uriResolver) {_		this.uriResolver = uriResolver__	};set,the,uriresolver,used,in,the,transform,p,the,uriresolver,handles,calls,to,the,xslt,code,document,function;public,void,set,uri,resolver,uriresolver,uri,resolver,this,uri,resolver,uri,resolver
XsltView -> public void setUriResolver(URIResolver uriResolver);1483750478;Set the URIResolver used in the transform._<p>The URIResolver handles calls to the XSLT {@code document()} function.;public void setUriResolver(URIResolver uriResolver) {_		this.uriResolver = uriResolver__	};set,the,uriresolver,used,in,the,transform,p,the,uriresolver,handles,calls,to,the,xslt,code,document,function;public,void,set,uri,resolver,uriresolver,uri,resolver,this,uri,resolver,uri,resolver
XsltView -> public void setUriResolver(URIResolver uriResolver);1495868221;Set the URIResolver used in the transform._<p>The URIResolver handles calls to the XSLT {@code document()} function.;public void setUriResolver(URIResolver uriResolver) {_		this.uriResolver = uriResolver__	};set,the,uriresolver,used,in,the,transform,p,the,uriresolver,handles,calls,to,the,xslt,code,document,function;public,void,set,uri,resolver,uriresolver,uri,resolver,this,uri,resolver,uri,resolver
XsltView -> public void setUriResolver(URIResolver uriResolver);1496837955;Set the URIResolver used in the transform._<p>The URIResolver handles calls to the XSLT {@code document()} function.;public void setUriResolver(URIResolver uriResolver) {_		this.uriResolver = uriResolver__	};set,the,uriresolver,used,in,the,transform,p,the,uriresolver,handles,calls,to,the,xslt,code,document,function;public,void,set,uri,resolver,uriresolver,uri,resolver,this,uri,resolver,uri,resolver
XsltView -> public void setUriResolver(URIResolver uriResolver);1497250713;Set the URIResolver used in the transform._<p>The URIResolver handles calls to the XSLT {@code document()} function.;public void setUriResolver(URIResolver uriResolver) {_		this.uriResolver = uriResolver__	};set,the,uriresolver,used,in,the,transform,p,the,uriresolver,handles,calls,to,the,xslt,code,document,function;public,void,set,uri,resolver,uriresolver,uri,resolver,this,uri,resolver,uri,resolver
XsltView -> public void setUriResolver(URIResolver uriResolver);1498780456;Set the URIResolver used in the transform._<p>The URIResolver handles calls to the XSLT {@code document()} function.;public void setUriResolver(URIResolver uriResolver) {_		this.uriResolver = uriResolver__	};set,the,uriresolver,used,in,the,transform,p,the,uriresolver,handles,calls,to,the,xslt,code,document,function;public,void,set,uri,resolver,uriresolver,uri,resolver,this,uri,resolver,uri,resolver
XsltView -> public void setUriResolver(URIResolver uriResolver);1508532146;Set the URIResolver used in the transform._<p>The URIResolver handles calls to the XSLT {@code document()} function.;public void setUriResolver(URIResolver uriResolver) {_		this.uriResolver = uriResolver__	};set,the,uriresolver,used,in,the,transform,p,the,uriresolver,handles,calls,to,the,xslt,code,document,function;public,void,set,uri,resolver,uriresolver,uri,resolver,this,uri,resolver,uri,resolver
XsltView -> public void setUriResolver(URIResolver uriResolver);1529361191;Set the URIResolver used in the transform._<p>The URIResolver handles calls to the XSLT {@code document()} function.;public void setUriResolver(URIResolver uriResolver) {_		this.uriResolver = uriResolver__	};set,the,uriresolver,used,in,the,transform,p,the,uriresolver,handles,calls,to,the,xslt,code,document,function;public,void,set,uri,resolver,uriresolver,uri,resolver,this,uri,resolver,uri,resolver
XsltView -> protected TransformerFactory newTransformerFactory( 			@Nullable Class<? extends TransformerFactory> transformerFactoryClass);1508532146;Instantiate a new TransformerFactory for this view._<p>The default implementation simply calls_{@link javax.xml.transform.TransformerFactory#newInstance()}._If a {@link #setTransformerFactoryClass "transformerFactoryClass"}_has been specified explicitly, the default constructor of the_specified class will be called instead._<p>Can be overridden in subclasses._@param transformerFactoryClass the specified factory class (if any)_@return the new TransactionFactory instance_@see #setTransformerFactoryClass_@see #getTransformerFactory();protected TransformerFactory newTransformerFactory(_			@Nullable Class<? extends TransformerFactory> transformerFactoryClass) {__		if (transformerFactoryClass != null) {_			try {_				return ReflectionUtils.accessibleConstructor(transformerFactoryClass).newInstance()__			}_			catch (Exception ex) {_				throw new TransformerFactoryConfigurationError(ex, "Could not instantiate TransformerFactory")__			}_		}_		else {_			return TransformerFactory.newInstance()__		}_	};instantiate,a,new,transformer,factory,for,this,view,p,the,default,implementation,simply,calls,link,javax,xml,transform,transformer,factory,new,instance,if,a,link,set,transformer,factory,class,transformer,factory,class,has,been,specified,explicitly,the,default,constructor,of,the,specified,class,will,be,called,instead,p,can,be,overridden,in,subclasses,param,transformer,factory,class,the,specified,factory,class,if,any,return,the,new,transaction,factory,instance,see,set,transformer,factory,class,see,get,transformer,factory;protected,transformer,factory,new,transformer,factory,nullable,class,extends,transformer,factory,transformer,factory,class,if,transformer,factory,class,null,try,return,reflection,utils,accessible,constructor,transformer,factory,class,new,instance,catch,exception,ex,throw,new,transformer,factory,configuration,error,ex,could,not,instantiate,transformer,factory,else,return,transformer,factory,new,instance
XsltView -> protected TransformerFactory newTransformerFactory( 			@Nullable Class<? extends TransformerFactory> transformerFactoryClass);1529361191;Instantiate a new TransformerFactory for this view._<p>The default implementation simply calls_{@link javax.xml.transform.TransformerFactory#newInstance()}._If a {@link #setTransformerFactoryClass "transformerFactoryClass"}_has been specified explicitly, the default constructor of the_specified class will be called instead._<p>Can be overridden in subclasses._@param transformerFactoryClass the specified factory class (if any)_@return the new TransactionFactory instance_@see #setTransformerFactoryClass_@see #getTransformerFactory();protected TransformerFactory newTransformerFactory(_			@Nullable Class<? extends TransformerFactory> transformerFactoryClass) {__		if (transformerFactoryClass != null) {_			try {_				return ReflectionUtils.accessibleConstructor(transformerFactoryClass).newInstance()__			}_			catch (Exception ex) {_				throw new TransformerFactoryConfigurationError(ex, "Could not instantiate TransformerFactory")__			}_		}_		else {_			return TransformerFactory.newInstance()__		}_	};instantiate,a,new,transformer,factory,for,this,view,p,the,default,implementation,simply,calls,link,javax,xml,transform,transformer,factory,new,instance,if,a,link,set,transformer,factory,class,transformer,factory,class,has,been,specified,explicitly,the,default,constructor,of,the,specified,class,will,be,called,instead,p,can,be,overridden,in,subclasses,param,transformer,factory,class,the,specified,factory,class,if,any,return,the,new,transaction,factory,instance,see,set,transformer,factory,class,see,get,transformer,factory;protected,transformer,factory,new,transformer,factory,nullable,class,extends,transformer,factory,transformer,factory,class,if,transformer,factory,class,null,try,return,reflection,utils,accessible,constructor,transformer,factory,class,new,instance,catch,exception,ex,throw,new,transformer,factory,configuration,error,ex,could,not,instantiate,transformer,factory,else,return,transformer,factory,new,instance
XsltView -> public void setCacheTemplates(boolean cacheTemplates);1328020251;Turn on/off the caching of the XSLT {@link Templates} instance._<p>The default value is "true". Only set this to "false" in development,_where caching does not seriously impact performance.;public void setCacheTemplates(boolean cacheTemplates) {_		this.cacheTemplates = cacheTemplates__	};turn,on,off,the,caching,of,the,xslt,link,templates,instance,p,the,default,value,is,true,only,set,this,to,false,in,development,where,caching,does,not,seriously,impact,performance;public,void,set,cache,templates,boolean,cache,templates,this,cache,templates,cache,templates
XsltView -> public void setCacheTemplates(boolean cacheTemplates);1356735495;Turn on/off the caching of the XSLT {@link Templates} instance._<p>The default value is "true". Only set this to "false" in development,_where caching does not seriously impact performance.;public void setCacheTemplates(boolean cacheTemplates) {_		this.cacheTemplates = cacheTemplates__	};turn,on,off,the,caching,of,the,xslt,link,templates,instance,p,the,default,value,is,true,only,set,this,to,false,in,development,where,caching,does,not,seriously,impact,performance;public,void,set,cache,templates,boolean,cache,templates,this,cache,templates,cache,templates
XsltView -> public void setCacheTemplates(boolean cacheTemplates);1385412762;Turn on/off the caching of the XSLT {@link Templates} instance._<p>The default value is "true". Only set this to "false" in development,_where caching does not seriously impact performance.;public void setCacheTemplates(boolean cacheTemplates) {_		this.cacheTemplates = cacheTemplates__	};turn,on,off,the,caching,of,the,xslt,link,templates,instance,p,the,default,value,is,true,only,set,this,to,false,in,development,where,caching,does,not,seriously,impact,performance;public,void,set,cache,templates,boolean,cache,templates,this,cache,templates,cache,templates
XsltView -> public void setCacheTemplates(boolean cacheTemplates);1385423968;Turn on/off the caching of the XSLT {@link Templates} instance._<p>The default value is "true". Only set this to "false" in development,_where caching does not seriously impact performance.;public void setCacheTemplates(boolean cacheTemplates) {_		this.cacheTemplates = cacheTemplates__	};turn,on,off,the,caching,of,the,xslt,link,templates,instance,p,the,default,value,is,true,only,set,this,to,false,in,development,where,caching,does,not,seriously,impact,performance;public,void,set,cache,templates,boolean,cache,templates,this,cache,templates,cache,templates
XsltView -> public void setCacheTemplates(boolean cacheTemplates);1468948866;Turn on/off the caching of the XSLT {@link Templates} instance._<p>The default value is "true". Only set this to "false" in development,_where caching does not seriously impact performance.;public void setCacheTemplates(boolean cacheTemplates) {_		this.cacheTemplates = cacheTemplates__	};turn,on,off,the,caching,of,the,xslt,link,templates,instance,p,the,default,value,is,true,only,set,this,to,false,in,development,where,caching,does,not,seriously,impact,performance;public,void,set,cache,templates,boolean,cache,templates,this,cache,templates,cache,templates
XsltView -> public void setCacheTemplates(boolean cacheTemplates);1469047316;Turn on/off the caching of the XSLT {@link Templates} instance._<p>The default value is "true". Only set this to "false" in development,_where caching does not seriously impact performance.;public void setCacheTemplates(boolean cacheTemplates) {_		this.cacheTemplates = cacheTemplates__	};turn,on,off,the,caching,of,the,xslt,link,templates,instance,p,the,default,value,is,true,only,set,this,to,false,in,development,where,caching,does,not,seriously,impact,performance;public,void,set,cache,templates,boolean,cache,templates,this,cache,templates,cache,templates
XsltView -> public void setCacheTemplates(boolean cacheTemplates);1483750478;Turn on/off the caching of the XSLT {@link Templates} instance._<p>The default value is "true". Only set this to "false" in development,_where caching does not seriously impact performance.;public void setCacheTemplates(boolean cacheTemplates) {_		this.cacheTemplates = cacheTemplates__	};turn,on,off,the,caching,of,the,xslt,link,templates,instance,p,the,default,value,is,true,only,set,this,to,false,in,development,where,caching,does,not,seriously,impact,performance;public,void,set,cache,templates,boolean,cache,templates,this,cache,templates,cache,templates
XsltView -> public void setCacheTemplates(boolean cacheTemplates);1495868221;Turn on/off the caching of the XSLT {@link Templates} instance._<p>The default value is "true". Only set this to "false" in development,_where caching does not seriously impact performance.;public void setCacheTemplates(boolean cacheTemplates) {_		this.cacheTemplates = cacheTemplates__	};turn,on,off,the,caching,of,the,xslt,link,templates,instance,p,the,default,value,is,true,only,set,this,to,false,in,development,where,caching,does,not,seriously,impact,performance;public,void,set,cache,templates,boolean,cache,templates,this,cache,templates,cache,templates
XsltView -> public void setCacheTemplates(boolean cacheTemplates);1496837955;Turn on/off the caching of the XSLT {@link Templates} instance._<p>The default value is "true". Only set this to "false" in development,_where caching does not seriously impact performance.;public void setCacheTemplates(boolean cacheTemplates) {_		this.cacheTemplates = cacheTemplates__	};turn,on,off,the,caching,of,the,xslt,link,templates,instance,p,the,default,value,is,true,only,set,this,to,false,in,development,where,caching,does,not,seriously,impact,performance;public,void,set,cache,templates,boolean,cache,templates,this,cache,templates,cache,templates
XsltView -> public void setCacheTemplates(boolean cacheTemplates);1497250713;Turn on/off the caching of the XSLT {@link Templates} instance._<p>The default value is "true". Only set this to "false" in development,_where caching does not seriously impact performance.;public void setCacheTemplates(boolean cacheTemplates) {_		this.cacheTemplates = cacheTemplates__	};turn,on,off,the,caching,of,the,xslt,link,templates,instance,p,the,default,value,is,true,only,set,this,to,false,in,development,where,caching,does,not,seriously,impact,performance;public,void,set,cache,templates,boolean,cache,templates,this,cache,templates,cache,templates
XsltView -> public void setCacheTemplates(boolean cacheTemplates);1498780456;Turn on/off the caching of the XSLT {@link Templates} instance._<p>The default value is "true". Only set this to "false" in development,_where caching does not seriously impact performance.;public void setCacheTemplates(boolean cacheTemplates) {_		this.cacheTemplates = cacheTemplates__	};turn,on,off,the,caching,of,the,xslt,link,templates,instance,p,the,default,value,is,true,only,set,this,to,false,in,development,where,caching,does,not,seriously,impact,performance;public,void,set,cache,templates,boolean,cache,templates,this,cache,templates,cache,templates
XsltView -> public void setCacheTemplates(boolean cacheTemplates);1508532146;Turn on/off the caching of the XSLT {@link Templates} instance._<p>The default value is "true". Only set this to "false" in development,_where caching does not seriously impact performance.;public void setCacheTemplates(boolean cacheTemplates) {_		this.cacheTemplates = cacheTemplates__	};turn,on,off,the,caching,of,the,xslt,link,templates,instance,p,the,default,value,is,true,only,set,this,to,false,in,development,where,caching,does,not,seriously,impact,performance;public,void,set,cache,templates,boolean,cache,templates,this,cache,templates,cache,templates
XsltView -> public void setCacheTemplates(boolean cacheTemplates);1529361191;Turn on/off the caching of the XSLT {@link Templates} instance._<p>The default value is "true". Only set this to "false" in development,_where caching does not seriously impact performance.;public void setCacheTemplates(boolean cacheTemplates) {_		this.cacheTemplates = cacheTemplates__	};turn,on,off,the,caching,of,the,xslt,link,templates,instance,p,the,default,value,is,true,only,set,this,to,false,in,development,where,caching,does,not,seriously,impact,performance;public,void,set,cache,templates,boolean,cache,templates,this,cache,templates,cache,templates
