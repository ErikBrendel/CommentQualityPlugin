commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public boolean supportsParameter(MethodParameter parameter) {     return parameter.hasParameterAnnotation(SessionAttribute.class). }
false;protected;1;6;;@Override protected NamedValueInfo createNamedValueInfo(MethodParameter parameter) {     SessionAttribute ann = parameter.getParameterAnnotation(SessionAttribute.class).     Assert.state(ann != null, "No SessionAttribute annotation").     return new NamedValueInfo(ann.name(), ann.required(), ValueConstants.DEFAULT_NONE). }
false;protected;3;5;;@Override @Nullable protected Object resolveName(String name, MethodParameter parameter, NativeWebRequest request) {     return request.getAttribute(name, RequestAttributes.SCOPE_SESSION). }
false;protected;2;5;;@Override protected void handleMissingValue(String name, MethodParameter parameter) throws ServletException {     throw new ServletRequestBindingException("Missing session attribute '" + name + "' of type " + parameter.getNestedParameterType().getSimpleName()). }
