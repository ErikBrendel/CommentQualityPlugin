commented;modifiers;parameterAmount;loc;comment;code
false;public;2;4;;@Override public boolean supports(MethodParameter returnType, Class<? extends HttpMessageConverter<?>> converterType) {     return AbstractJackson2HttpMessageConverter.class.isAssignableFrom(converterType). }
false;public,final;6;13;;@Override @Nullable public final Object beforeBodyWrite(@Nullable Object body, MethodParameter returnType, MediaType contentType, Class<? extends HttpMessageConverter<?>> converterType, ServerHttpRequest request, ServerHttpResponse response) {     if (body == null) {         return null.     }     MappingJacksonValue container = getOrCreateContainer(body).     beforeBodyWriteInternal(container, contentType, returnType, request, response).     return container. }
true;protected;1;3;/**  * Wrap the body in a {@link MappingJacksonValue} value container (for providing  * additional serialization instructions) or simply cast it if already wrapped.  */ ;/**  * Wrap the body in a {@link MappingJacksonValue} value container (for providing  * additional serialization instructions) or simply cast it if already wrapped.  */ protected MappingJacksonValue getOrCreateContainer(Object body) {     return (body instanceof MappingJacksonValue ? (MappingJacksonValue) body : new MappingJacksonValue(body)). }
true;protected,abstract;5;2;/**  * Invoked only if the converter type is {@code MappingJackson2HttpMessageConverter}.  */ ;/**  * Invoked only if the converter type is {@code MappingJackson2HttpMessageConverter}.  */ protected abstract void beforeBodyWriteInternal(MappingJacksonValue bodyContainer, MediaType contentType, MethodParameter returnType, ServerHttpRequest request, ServerHttpResponse response).
