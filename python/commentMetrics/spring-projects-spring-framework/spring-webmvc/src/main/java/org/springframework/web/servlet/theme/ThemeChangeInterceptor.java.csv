commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * Set the name of the parameter that contains a theme specification  * in a theme change request. Default is "theme".  */ ;/**  * Set the name of the parameter that contains a theme specification  * in a theme change request. Default is "theme".  */ public void setParamName(String paramName) {     this.paramName = paramName. }
true;public;0;3;/**  * Return the name of the parameter that contains a theme specification  * in a theme change request.  */ ;/**  * Return the name of the parameter that contains a theme specification  * in a theme change request.  */ public String getParamName() {     return this.paramName. }
false;public;3;15;;@Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws ServletException {     String newTheme = request.getParameter(this.paramName).     if (newTheme != null) {         ThemeResolver themeResolver = RequestContextUtils.getThemeResolver(request).         if (themeResolver == null) {             throw new IllegalStateException("No ThemeResolver found: not in a DispatcherServlet request?").         }         themeResolver.setThemeName(request, response, newTheme).     }     // Proceed in any case.     return true. }
