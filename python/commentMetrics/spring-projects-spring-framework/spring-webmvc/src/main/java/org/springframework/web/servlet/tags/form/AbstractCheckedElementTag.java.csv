# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractCheckedElementTag -> protected void renderFromValue(Object item, Object value, TagWriter tagWriter) throws JspException;1328020251;Render the '<code>input(checkbox)</code>' with the supplied value, marking the_'<code>input</code>' element as 'checked' if the supplied value matches the_bound value.;protected void renderFromValue(Object item, Object value, TagWriter tagWriter) throws JspException {_		String displayValue = convertToDisplayString(value)__		tagWriter.writeAttribute("value", processFieldValue(getName(), displayValue, getInputType()))__		if (isOptionSelected(value) || (value != item && isOptionSelected(item))) {_			tagWriter.writeAttribute("checked", "checked")__		}_	};render,the,code,input,checkbox,code,with,the,supplied,value,marking,the,code,input,code,element,as,checked,if,the,supplied,value,matches,the,bound,value;protected,void,render,from,value,object,item,object,value,tag,writer,tag,writer,throws,jsp,exception,string,display,value,convert,to,display,string,value,tag,writer,write,attribute,value,process,field,value,get,name,display,value,get,input,type,if,is,option,selected,value,value,item,is,option,selected,item,tag,writer,write,attribute,checked,checked
AbstractCheckedElementTag -> protected void renderFromValue(Object item, Object value, TagWriter tagWriter) throws JspException;1356735495;Render the '{@code input(checkbox)}' with the supplied value, marking the_'{@code input}' element as 'checked' if the supplied value matches the_bound value.;protected void renderFromValue(Object item, Object value, TagWriter tagWriter) throws JspException {_		String displayValue = convertToDisplayString(value)__		tagWriter.writeAttribute("value", processFieldValue(getName(), displayValue, getInputType()))__		if (isOptionSelected(value) || (value != item && isOptionSelected(item))) {_			tagWriter.writeAttribute("checked", "checked")__		}_	};render,the,code,input,checkbox,with,the,supplied,value,marking,the,code,input,element,as,checked,if,the,supplied,value,matches,the,bound,value;protected,void,render,from,value,object,item,object,value,tag,writer,tag,writer,throws,jsp,exception,string,display,value,convert,to,display,string,value,tag,writer,write,attribute,value,process,field,value,get,name,display,value,get,input,type,if,is,option,selected,value,value,item,is,option,selected,item,tag,writer,write,attribute,checked,checked
AbstractCheckedElementTag -> protected void renderFromBoolean(Boolean boundValue, TagWriter tagWriter) throws JspException;1328020251;Render the '<code>input(checkbox)</code>' with the supplied value, marking_the '<code>input</code>' element as 'checked' if the supplied Boolean is_<code>true</code>.;protected void renderFromBoolean(Boolean boundValue, TagWriter tagWriter) throws JspException {_		tagWriter.writeAttribute("value", processFieldValue(getName(), "true", getInputType()))__		if (boundValue) {_			tagWriter.writeAttribute("checked", "checked")__		}_	};render,the,code,input,checkbox,code,with,the,supplied,value,marking,the,code,input,code,element,as,checked,if,the,supplied,boolean,is,code,true,code;protected,void,render,from,boolean,boolean,bound,value,tag,writer,tag,writer,throws,jsp,exception,tag,writer,write,attribute,value,process,field,value,get,name,true,get,input,type,if,bound,value,tag,writer,write,attribute,checked,checked
AbstractCheckedElementTag -> protected void renderFromBoolean(Boolean boundValue, TagWriter tagWriter) throws JspException;1356735495;Render the '{@code input(checkbox)}' with the supplied value, marking_the '{@code input}' element as 'checked' if the supplied Boolean is_{@code true}.;protected void renderFromBoolean(Boolean boundValue, TagWriter tagWriter) throws JspException {_		tagWriter.writeAttribute("value", processFieldValue(getName(), "true", getInputType()))__		if (boundValue) {_			tagWriter.writeAttribute("checked", "checked")__		}_	};render,the,code,input,checkbox,with,the,supplied,value,marking,the,code,input,element,as,checked,if,the,supplied,boolean,is,code,true;protected,void,render,from,boolean,boolean,bound,value,tag,writer,tag,writer,throws,jsp,exception,tag,writer,write,attribute,value,process,field,value,get,name,true,get,input,type,if,bound,value,tag,writer,write,attribute,checked,checked
AbstractCheckedElementTag -> protected void renderFromBoolean(Boolean boundValue, TagWriter tagWriter) throws JspException;1532981291;Render the '{@code input(checkbox)}' with the supplied value, marking_the '{@code input}' element as 'checked' if the supplied Boolean is_{@code true}.;protected void renderFromBoolean(Boolean boundValue, TagWriter tagWriter) throws JspException {_		tagWriter.writeAttribute("value", processFieldValue(getName(), "true", getInputType()))__		if (boundValue) {_			tagWriter.writeAttribute("checked", "checked")__		}_	};render,the,code,input,checkbox,with,the,supplied,value,marking,the,code,input,element,as,checked,if,the,supplied,boolean,is,code,true;protected,void,render,from,boolean,boolean,bound,value,tag,writer,tag,writer,throws,jsp,exception,tag,writer,write,attribute,value,process,field,value,get,name,true,get,input,type,if,bound,value,tag,writer,write,attribute,checked,checked
AbstractCheckedElementTag -> private boolean isOptionSelected(Object value) throws JspException;1328020251;Determines whether the supplied value matched the selected value_through delegating to {@link SelectedValueComparator#isSelected}.;private boolean isOptionSelected(Object value) throws JspException {_		return SelectedValueComparator.isSelected(getBindStatus(), value)__	};determines,whether,the,supplied,value,matched,the,selected,value,through,delegating,to,link,selected,value,comparator,is,selected;private,boolean,is,option,selected,object,value,throws,jsp,exception,return,selected,value,comparator,is,selected,get,bind,status,value
AbstractCheckedElementTag -> private boolean isOptionSelected(Object value) throws JspException;1356735495;Determines whether the supplied value matched the selected value_through delegating to {@link SelectedValueComparator#isSelected}.;private boolean isOptionSelected(Object value) throws JspException {_		return SelectedValueComparator.isSelected(getBindStatus(), value)__	};determines,whether,the,supplied,value,matched,the,selected,value,through,delegating,to,link,selected,value,comparator,is,selected;private,boolean,is,option,selected,object,value,throws,jsp,exception,return,selected,value,comparator,is,selected,get,bind,status,value
AbstractCheckedElementTag -> @Override 	protected abstract int writeTagContent(TagWriter tagWriter) throws JspException_;1328020251;Writes the '<code>input</code>' element to the supplied_{@link org.springframework.web.servlet.tags.form.TagWriter},_marking it as 'checked' if appropriate.;@Override_	protected abstract int writeTagContent(TagWriter tagWriter) throws JspException_;writes,the,code,input,code,element,to,the,supplied,link,org,springframework,web,servlet,tags,form,tag,writer,marking,it,as,checked,if,appropriate;override,protected,abstract,int,write,tag,content,tag,writer,tag,writer,throws,jsp,exception
AbstractCheckedElementTag -> @Override 	protected abstract int writeTagContent(TagWriter tagWriter) throws JspException_;1356735495;Writes the '{@code input}' element to the supplied_{@link TagWriter},_marking it as 'checked' if appropriate.;@Override_	protected abstract int writeTagContent(TagWriter tagWriter) throws JspException_;writes,the,code,input,element,to,the,supplied,link,tag,writer,marking,it,as,checked,if,appropriate;override,protected,abstract,int,write,tag,content,tag,writer,tag,writer,throws,jsp,exception
AbstractCheckedElementTag -> @Override 	protected abstract int writeTagContent(TagWriter tagWriter) throws JspException_;1532981291;Writes the '{@code input}' element to the supplied_{@link TagWriter},_marking it as 'checked' if appropriate.;@Override_	protected abstract int writeTagContent(TagWriter tagWriter) throws JspException_;writes,the,code,input,element,to,the,supplied,link,tag,writer,marking,it,as,checked,if,appropriate;override,protected,abstract,int,write,tag,content,tag,writer,tag,writer,throws,jsp,exception
AbstractCheckedElementTag -> protected abstract String getInputType()_;1328020251;Return the type of the HTML input element to generate:_"checkbox" or "radio".;protected abstract String getInputType()_;return,the,type,of,the,html,input,element,to,generate,checkbox,or,radio;protected,abstract,string,get,input,type
AbstractCheckedElementTag -> protected abstract String getInputType()_;1356735495;Return the type of the HTML input element to generate:_"checkbox" or "radio".;protected abstract String getInputType()_;return,the,type,of,the,html,input,element,to,generate,checkbox,or,radio;protected,abstract,string,get,input,type
AbstractCheckedElementTag -> protected abstract String getInputType()_;1532981291;Return the type of the HTML input element to generate:_"checkbox" or "radio".;protected abstract String getInputType()_;return,the,type,of,the,html,input,element,to,generate,checkbox,or,radio;protected,abstract,string,get,input,type
AbstractCheckedElementTag -> @Override 	protected boolean isValidDynamicAttribute(String localName, Object value);1328020251;Flags "type" as an illegal dynamic attribute.;@Override_	protected boolean isValidDynamicAttribute(String localName, Object value) {_		return !"type".equals(localName)__	};flags,type,as,an,illegal,dynamic,attribute;override,protected,boolean,is,valid,dynamic,attribute,string,local,name,object,value,return,type,equals,local,name
AbstractCheckedElementTag -> @Override 	protected boolean isValidDynamicAttribute(String localName, Object value);1356735495;Flags "type" as an illegal dynamic attribute.;@Override_	protected boolean isValidDynamicAttribute(String localName, Object value) {_		return !"type".equals(localName)__	};flags,type,as,an,illegal,dynamic,attribute;override,protected,boolean,is,valid,dynamic,attribute,string,local,name,object,value,return,type,equals,local,name
AbstractCheckedElementTag -> @Override 	protected boolean isValidDynamicAttribute(String localName, Object value);1532981291;Flags "type" as an illegal dynamic attribute.;@Override_	protected boolean isValidDynamicAttribute(String localName, Object value) {_		return !"type".equals(localName)__	};flags,type,as,an,illegal,dynamic,attribute;override,protected,boolean,is,valid,dynamic,attribute,string,local,name,object,value,return,type,equals,local,name
AbstractCheckedElementTag -> protected void renderFromValue(Object value, TagWriter tagWriter) throws JspException;1328020251;Render the '<code>input(checkbox)</code>' with the supplied value, marking the_'<code>input</code>' element as 'checked' if the supplied value matches the_bound value.;protected void renderFromValue(Object value, TagWriter tagWriter) throws JspException {_		renderFromValue(value, value, tagWriter)__	};render,the,code,input,checkbox,code,with,the,supplied,value,marking,the,code,input,code,element,as,checked,if,the,supplied,value,matches,the,bound,value;protected,void,render,from,value,object,value,tag,writer,tag,writer,throws,jsp,exception,render,from,value,value,value,tag,writer
AbstractCheckedElementTag -> protected void renderFromValue(Object value, TagWriter tagWriter) throws JspException;1356735495;Render the '{@code input(checkbox)}' with the supplied value, marking the_'{@code input}' element as 'checked' if the supplied value matches the_bound value.;protected void renderFromValue(Object value, TagWriter tagWriter) throws JspException {_		renderFromValue(value, value, tagWriter)__	};render,the,code,input,checkbox,with,the,supplied,value,marking,the,code,input,element,as,checked,if,the,supplied,value,matches,the,bound,value;protected,void,render,from,value,object,value,tag,writer,tag,writer,throws,jsp,exception,render,from,value,value,value,tag,writer
AbstractCheckedElementTag -> @Override 	protected String autogenerateId() throws JspException;1328020251;Return a unique ID for the bound name within the current PageContext.;@Override_	protected String autogenerateId() throws JspException {_		return TagIdGenerator.nextId(super.autogenerateId(), this.pageContext)__	};return,a,unique,id,for,the,bound,name,within,the,current,page,context;override,protected,string,autogenerate,id,throws,jsp,exception,return,tag,id,generator,next,id,super,autogenerate,id,this,page,context
AbstractCheckedElementTag -> @Override 	protected String autogenerateId() throws JspException;1356735495;Return a unique ID for the bound name within the current PageContext.;@Override_	protected String autogenerateId() throws JspException {_		return TagIdGenerator.nextId(super.autogenerateId(), this.pageContext)__	};return,a,unique,id,for,the,bound,name,within,the,current,page,context;override,protected,string,autogenerate,id,throws,jsp,exception,return,tag,id,generator,next,id,super,autogenerate,id,this,page,context
