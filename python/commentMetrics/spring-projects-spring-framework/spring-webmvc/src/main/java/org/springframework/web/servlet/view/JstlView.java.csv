commented;modifiers;parameterAmount;loc;comment;code
true;protected;1;7;/**  * Wraps the MessageSource with a JSTL-aware MessageSource that is aware  * of JSTL's {@code javax.servlet.jsp.jstl.fmt.localizationContext}  * context-param.  * @see JstlUtils#getJstlAwareMessageSource  */ ;/**  * Wraps the MessageSource with a JSTL-aware MessageSource that is aware  * of JSTL's {@code javax.servlet.jsp.jstl.fmt.localizationContext}  * context-param.  * @see JstlUtils#getJstlAwareMessageSource  */ @Override protected void initServletContext(ServletContext servletContext) {     if (this.messageSource != null) {         this.messageSource = JstlUtils.getJstlAwareMessageSource(servletContext, this.messageSource).     }     super.initServletContext(servletContext). }
true;protected;1;9;/**  * Exposes a JSTL LocalizationContext for Spring's locale and MessageSource.  * @see JstlUtils#exposeLocalizationContext  */ ;/**  * Exposes a JSTL LocalizationContext for Spring's locale and MessageSource.  * @see JstlUtils#exposeLocalizationContext  */ @Override protected void exposeHelpers(HttpServletRequest request) throws Exception {     if (this.messageSource != null) {         JstlUtils.exposeLocalizationContext(request, this.messageSource).     } else {         JstlUtils.exposeLocalizationContext(new RequestContext(request, getServletContext())).     } }
