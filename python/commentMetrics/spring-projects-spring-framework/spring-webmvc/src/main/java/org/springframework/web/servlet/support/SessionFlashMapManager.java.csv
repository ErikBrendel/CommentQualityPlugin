commented;modifiers;parameterAmount;loc;comment;code
true;protected;1;7;/**  * Retrieves saved FlashMap instances from the HTTP session, if any.  */ ;/**  * Retrieves saved FlashMap instances from the HTTP session, if any.  */ @Override @SuppressWarnings("unchecked") @Nullable protected List<FlashMap> retrieveFlashMaps(HttpServletRequest request) {     HttpSession session = request.getSession(false).     return (session != null ? (List<FlashMap>) session.getAttribute(FLASH_MAPS_SESSION_ATTRIBUTE) : null). }
true;protected;3;4;/**  * Saves the given FlashMap instances in the HTTP session.  */ ;/**  * Saves the given FlashMap instances in the HTTP session.  */ @Override protected void updateFlashMaps(List<FlashMap> flashMaps, HttpServletRequest request, HttpServletResponse response) {     WebUtils.setSessionAttribute(request, FLASH_MAPS_SESSION_ATTRIBUTE, (!flashMaps.isEmpty() ? flashMaps : null)). }
true;protected;1;4;/**  * Exposes the best available session mutex.  * @see org.springframework.web.util.WebUtils#getSessionMutex  * @see org.springframework.web.util.HttpSessionMutexListener  */ ;/**  * Exposes the best available session mutex.  * @see org.springframework.web.util.WebUtils#getSessionMutex  * @see org.springframework.web.util.HttpSessionMutexListener  */ @Override protected Object getFlashMapsMutex(HttpServletRequest request) {     return WebUtils.getSessionMutex(request.getSession()). }
