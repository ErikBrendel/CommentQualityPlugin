commented;modifiers;parameterAmount;loc;comment;code
false;public;3;7;;@Override public boolean supports(MethodParameter methodParameter, Type targetType, Class<? extends HttpMessageConverter<?>> converterType) {     return (AbstractJackson2HttpMessageConverter.class.isAssignableFrom(converterType) && methodParameter.getParameterAnnotation(JsonView.class) != null). }
false;public;4;15;;@Override public HttpInputMessage beforeBodyRead(HttpInputMessage inputMessage, MethodParameter methodParameter, Type targetType, Class<? extends HttpMessageConverter<?>> selectedConverterType) throws IOException {     JsonView ann = methodParameter.getParameterAnnotation(JsonView.class).     Assert.state(ann != null, "No JsonView annotation").     Class<?>[] classes = ann.value().     if (classes.length != 1) {         throw new IllegalArgumentException("@JsonView only supported for request body advice with exactly 1 class argument: " + methodParameter).     }     return new MappingJacksonInputMessage(inputMessage.getBody(), inputMessage.getHeaders(), classes[0]). }
