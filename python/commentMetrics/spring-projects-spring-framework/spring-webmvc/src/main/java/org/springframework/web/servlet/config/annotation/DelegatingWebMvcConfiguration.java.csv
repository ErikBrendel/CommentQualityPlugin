commented;modifiers;parameterAmount;loc;comment;code
false;public;1;6;;@Autowired(required = false) public void setConfigurers(List<WebMvcConfigurer> configurers) {     if (!CollectionUtils.isEmpty(configurers)) {         this.configurers.addWebMvcConfigurers(configurers).     } }
false;protected;1;4;;@Override protected void configurePathMatch(PathMatchConfigurer configurer) {     this.configurers.configurePathMatch(configurer). }
false;protected;1;4;;@Override protected void configureContentNegotiation(ContentNegotiationConfigurer configurer) {     this.configurers.configureContentNegotiation(configurer). }
false;protected;1;4;;@Override protected void configureAsyncSupport(AsyncSupportConfigurer configurer) {     this.configurers.configureAsyncSupport(configurer). }
false;protected;1;4;;@Override protected void configureDefaultServletHandling(DefaultServletHandlerConfigurer configurer) {     this.configurers.configureDefaultServletHandling(configurer). }
false;protected;1;4;;@Override protected void addFormatters(FormatterRegistry registry) {     this.configurers.addFormatters(registry). }
false;protected;1;4;;@Override protected void addInterceptors(InterceptorRegistry registry) {     this.configurers.addInterceptors(registry). }
false;protected;1;4;;@Override protected void addResourceHandlers(ResourceHandlerRegistry registry) {     this.configurers.addResourceHandlers(registry). }
false;protected;1;4;;@Override protected void addCorsMappings(CorsRegistry registry) {     this.configurers.addCorsMappings(registry). }
false;protected;1;4;;@Override protected void addViewControllers(ViewControllerRegistry registry) {     this.configurers.addViewControllers(registry). }
false;protected;1;4;;@Override protected void configureViewResolvers(ViewResolverRegistry registry) {     this.configurers.configureViewResolvers(registry). }
false;protected;1;4;;@Override protected void addArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {     this.configurers.addArgumentResolvers(argumentResolvers). }
false;protected;1;4;;@Override protected void addReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {     this.configurers.addReturnValueHandlers(returnValueHandlers). }
false;protected;1;4;;@Override protected void configureMessageConverters(List<HttpMessageConverter<?>> converters) {     this.configurers.configureMessageConverters(converters). }
false;protected;1;4;;@Override protected void extendMessageConverters(List<HttpMessageConverter<?>> converters) {     this.configurers.extendMessageConverters(converters). }
false;protected;1;4;;@Override protected void configureHandlerExceptionResolvers(List<HandlerExceptionResolver> exceptionResolvers) {     this.configurers.configureHandlerExceptionResolvers(exceptionResolvers). }
false;protected;1;4;;@Override protected void extendHandlerExceptionResolvers(List<HandlerExceptionResolver> exceptionResolvers) {     this.configurers.extendHandlerExceptionResolvers(exceptionResolvers). }
false;protected;0;5;;@Override @Nullable protected Validator getValidator() {     return this.configurers.getValidator(). }
false;protected;0;5;;@Override @Nullable protected MessageCodesResolver getMessageCodesResolver() {     return this.configurers.getMessageCodesResolver(). }
