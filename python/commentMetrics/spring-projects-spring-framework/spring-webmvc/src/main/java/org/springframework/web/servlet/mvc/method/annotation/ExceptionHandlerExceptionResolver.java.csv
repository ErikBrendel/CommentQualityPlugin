# id;timestamp;commentText;codeText;commentWords;codeWords
ExceptionHandlerExceptionResolver -> public ExceptionHandlerExceptionResolver();1328020251;Default constructor.;public ExceptionHandlerExceptionResolver() {_		_		StringHttpMessageConverter stringHttpMessageConverter = new StringHttpMessageConverter()__		stringHttpMessageConverter.setWriteAcceptCharset(false)_ _		_		this.messageConverters = new ArrayList<HttpMessageConverter<?>>()__		this.messageConverters.add(new ByteArrayHttpMessageConverter())__		this.messageConverters.add(stringHttpMessageConverter)__		this.messageConverters.add(new SourceHttpMessageConverter<Source>())__		this.messageConverters.add(new XmlAwareFormHttpMessageConverter())__	};default,constructor;public,exception,handler,exception,resolver,string,http,message,converter,string,http,message,converter,new,string,http,message,converter,string,http,message,converter,set,write,accept,charset,false,this,message,converters,new,array,list,http,message,converter,this,message,converters,add,new,byte,array,http,message,converter,this,message,converters,add,string,http,message,converter,this,message,converters,add,new,source,http,message,converter,source,this,message,converters,add,new,xml,aware,form,http,message,converter
ExceptionHandlerExceptionResolver -> public ExceptionHandlerExceptionResolver();1333735583;Default constructor.;public ExceptionHandlerExceptionResolver() {__		StringHttpMessageConverter stringHttpMessageConverter = new StringHttpMessageConverter()__		stringHttpMessageConverter.setWriteAcceptCharset(false)_ __		this.messageConverters = new ArrayList<HttpMessageConverter<?>>()__		this.messageConverters.add(new ByteArrayHttpMessageConverter())__		this.messageConverters.add(stringHttpMessageConverter)__		this.messageConverters.add(new SourceHttpMessageConverter<Source>())__		this.messageConverters.add(new XmlAwareFormHttpMessageConverter())__	};default,constructor;public,exception,handler,exception,resolver,string,http,message,converter,string,http,message,converter,new,string,http,message,converter,string,http,message,converter,set,write,accept,charset,false,this,message,converters,new,array,list,http,message,converter,this,message,converters,add,new,byte,array,http,message,converter,this,message,converters,add,string,http,message,converter,this,message,converters,add,new,source,http,message,converter,source,this,message,converters,add,new,xml,aware,form,http,message,converter
ExceptionHandlerExceptionResolver -> public ExceptionHandlerExceptionResolver();1333745422;Default constructor.;public ExceptionHandlerExceptionResolver() {__		StringHttpMessageConverter stringHttpMessageConverter = new StringHttpMessageConverter()__		stringHttpMessageConverter.setWriteAcceptCharset(false)_ __		this.messageConverters = new ArrayList<HttpMessageConverter<?>>()__		this.messageConverters.add(new ByteArrayHttpMessageConverter())__		this.messageConverters.add(stringHttpMessageConverter)__		this.messageConverters.add(new SourceHttpMessageConverter<Source>())__		this.messageConverters.add(new XmlAwareFormHttpMessageConverter())__	};default,constructor;public,exception,handler,exception,resolver,string,http,message,converter,string,http,message,converter,new,string,http,message,converter,string,http,message,converter,set,write,accept,charset,false,this,message,converters,new,array,list,http,message,converter,this,message,converters,add,new,byte,array,http,message,converter,this,message,converters,add,string,http,message,converter,this,message,converters,add,new,source,http,message,converter,source,this,message,converters,add,new,xml,aware,form,http,message,converter
ExceptionHandlerExceptionResolver -> public ExceptionHandlerExceptionResolver();1340380546;Default constructor.;public ExceptionHandlerExceptionResolver() {__		StringHttpMessageConverter stringHttpMessageConverter = new StringHttpMessageConverter()__		stringHttpMessageConverter.setWriteAcceptCharset(false)_ __		this.messageConverters = new ArrayList<HttpMessageConverter<?>>()__		this.messageConverters.add(new ByteArrayHttpMessageConverter())__		this.messageConverters.add(stringHttpMessageConverter)__		this.messageConverters.add(new SourceHttpMessageConverter<Source>())__		this.messageConverters.add(new XmlAwareFormHttpMessageConverter())__	};default,constructor;public,exception,handler,exception,resolver,string,http,message,converter,string,http,message,converter,new,string,http,message,converter,string,http,message,converter,set,write,accept,charset,false,this,message,converters,new,array,list,http,message,converter,this,message,converters,add,new,byte,array,http,message,converter,this,message,converters,add,string,http,message,converter,this,message,converters,add,new,source,http,message,converter,source,this,message,converters,add,new,xml,aware,form,http,message,converter
ExceptionHandlerExceptionResolver -> public ExceptionHandlerExceptionResolver();1341869223;Default constructor.;public ExceptionHandlerExceptionResolver() {__		StringHttpMessageConverter stringHttpMessageConverter = new StringHttpMessageConverter()__		stringHttpMessageConverter.setWriteAcceptCharset(false)_ __		this.messageConverters = new ArrayList<HttpMessageConverter<?>>()__		this.messageConverters.add(new ByteArrayHttpMessageConverter())__		this.messageConverters.add(stringHttpMessageConverter)__		this.messageConverters.add(new SourceHttpMessageConverter<Source>())__		this.messageConverters.add(new XmlAwareFormHttpMessageConverter())__	};default,constructor;public,exception,handler,exception,resolver,string,http,message,converter,string,http,message,converter,new,string,http,message,converter,string,http,message,converter,set,write,accept,charset,false,this,message,converters,new,array,list,http,message,converter,this,message,converters,add,new,byte,array,http,message,converter,this,message,converters,add,string,http,message,converter,this,message,converters,add,new,source,http,message,converter,source,this,message,converters,add,new,xml,aware,form,http,message,converter
ExceptionHandlerExceptionResolver -> public ExceptionHandlerExceptionResolver();1341880445;Default constructor.;public ExceptionHandlerExceptionResolver() {__		StringHttpMessageConverter stringHttpMessageConverter = new StringHttpMessageConverter()__		stringHttpMessageConverter.setWriteAcceptCharset(false)_ __		this.messageConverters = new ArrayList<HttpMessageConverter<?>>()__		this.messageConverters.add(new ByteArrayHttpMessageConverter())__		this.messageConverters.add(stringHttpMessageConverter)__		this.messageConverters.add(new SourceHttpMessageConverter<Source>())__		this.messageConverters.add(new XmlAwareFormHttpMessageConverter())__	};default,constructor;public,exception,handler,exception,resolver,string,http,message,converter,string,http,message,converter,new,string,http,message,converter,string,http,message,converter,set,write,accept,charset,false,this,message,converters,new,array,list,http,message,converter,this,message,converters,add,new,byte,array,http,message,converter,this,message,converters,add,string,http,message,converter,this,message,converters,add,new,source,http,message,converter,source,this,message,converters,add,new,xml,aware,form,http,message,converter
ExceptionHandlerExceptionResolver -> public ExceptionHandlerExceptionResolver();1344976537;Default constructor.;public ExceptionHandlerExceptionResolver() {__		StringHttpMessageConverter stringHttpMessageConverter = new StringHttpMessageConverter()__		stringHttpMessageConverter.setWriteAcceptCharset(false)_ __		this.messageConverters = new ArrayList<HttpMessageConverter<?>>()__		this.messageConverters.add(new ByteArrayHttpMessageConverter())__		this.messageConverters.add(stringHttpMessageConverter)__		this.messageConverters.add(new SourceHttpMessageConverter<Source>())__		this.messageConverters.add(new XmlAwareFormHttpMessageConverter())__	};default,constructor;public,exception,handler,exception,resolver,string,http,message,converter,string,http,message,converter,new,string,http,message,converter,string,http,message,converter,set,write,accept,charset,false,this,message,converters,new,array,list,http,message,converter,this,message,converters,add,new,byte,array,http,message,converter,this,message,converters,add,string,http,message,converter,this,message,converters,add,new,source,http,message,converter,source,this,message,converters,add,new,xml,aware,form,http,message,converter
ExceptionHandlerExceptionResolver -> public ExceptionHandlerExceptionResolver();1347070489;Default constructor.;public ExceptionHandlerExceptionResolver() {__		StringHttpMessageConverter stringHttpMessageConverter = new StringHttpMessageConverter()__		stringHttpMessageConverter.setWriteAcceptCharset(false)_ __		this.messageConverters = new ArrayList<HttpMessageConverter<?>>()__		this.messageConverters.add(new ByteArrayHttpMessageConverter())__		this.messageConverters.add(stringHttpMessageConverter)__		this.messageConverters.add(new SourceHttpMessageConverter<Source>())__		this.messageConverters.add(new XmlAwareFormHttpMessageConverter())__	};default,constructor;public,exception,handler,exception,resolver,string,http,message,converter,string,http,message,converter,new,string,http,message,converter,string,http,message,converter,set,write,accept,charset,false,this,message,converters,new,array,list,http,message,converter,this,message,converters,add,new,byte,array,http,message,converter,this,message,converters,add,string,http,message,converter,this,message,converters,add,new,source,http,message,converter,source,this,message,converters,add,new,xml,aware,form,http,message,converter
ExceptionHandlerExceptionResolver -> public ExceptionHandlerExceptionResolver();1354921931;Default constructor.;public ExceptionHandlerExceptionResolver() {__		StringHttpMessageConverter stringHttpMessageConverter = new StringHttpMessageConverter()__		stringHttpMessageConverter.setWriteAcceptCharset(false)_ __		this.messageConverters = new ArrayList<HttpMessageConverter<?>>()__		this.messageConverters.add(new ByteArrayHttpMessageConverter())__		this.messageConverters.add(stringHttpMessageConverter)__		this.messageConverters.add(new SourceHttpMessageConverter<Source>())__		this.messageConverters.add(new AllEncompassingFormHttpMessageConverter())__	};default,constructor;public,exception,handler,exception,resolver,string,http,message,converter,string,http,message,converter,new,string,http,message,converter,string,http,message,converter,set,write,accept,charset,false,this,message,converters,new,array,list,http,message,converter,this,message,converters,add,new,byte,array,http,message,converter,this,message,converters,add,string,http,message,converter,this,message,converters,add,new,source,http,message,converter,source,this,message,converters,add,new,all,encompassing,form,http,message,converter
ExceptionHandlerExceptionResolver -> public ExceptionHandlerExceptionResolver();1355352386;Default constructor.;public ExceptionHandlerExceptionResolver() {__		StringHttpMessageConverter stringHttpMessageConverter = new StringHttpMessageConverter()__		stringHttpMessageConverter.setWriteAcceptCharset(false)_ __		this.messageConverters = new ArrayList<HttpMessageConverter<?>>()__		this.messageConverters.add(new ByteArrayHttpMessageConverter())__		this.messageConverters.add(stringHttpMessageConverter)__		this.messageConverters.add(new SourceHttpMessageConverter<Source>())__		this.messageConverters.add(new AllEncompassingFormHttpMessageConverter())__	};default,constructor;public,exception,handler,exception,resolver,string,http,message,converter,string,http,message,converter,new,string,http,message,converter,string,http,message,converter,set,write,accept,charset,false,this,message,converters,new,array,list,http,message,converter,this,message,converters,add,new,byte,array,http,message,converter,this,message,converters,add,string,http,message,converter,this,message,converters,add,new,source,http,message,converter,source,this,message,converters,add,new,all,encompassing,form,http,message,converter
ExceptionHandlerExceptionResolver -> public ExceptionHandlerExceptionResolver();1356735495;Default constructor.;public ExceptionHandlerExceptionResolver() {__		StringHttpMessageConverter stringHttpMessageConverter = new StringHttpMessageConverter()__		stringHttpMessageConverter.setWriteAcceptCharset(false)_ __		this.messageConverters = new ArrayList<HttpMessageConverter<?>>()__		this.messageConverters.add(new ByteArrayHttpMessageConverter())__		this.messageConverters.add(stringHttpMessageConverter)__		this.messageConverters.add(new SourceHttpMessageConverter<Source>())__		this.messageConverters.add(new AllEncompassingFormHttpMessageConverter())__	};default,constructor;public,exception,handler,exception,resolver,string,http,message,converter,string,http,message,converter,new,string,http,message,converter,string,http,message,converter,set,write,accept,charset,false,this,message,converters,new,array,list,http,message,converter,this,message,converters,add,new,byte,array,http,message,converter,this,message,converters,add,string,http,message,converter,this,message,converters,add,new,source,http,message,converter,source,this,message,converters,add,new,all,encompassing,form,http,message,converter
ExceptionHandlerExceptionResolver -> public ExceptionHandlerExceptionResolver();1357119239;Default constructor.;public ExceptionHandlerExceptionResolver() {__		StringHttpMessageConverter stringHttpMessageConverter = new StringHttpMessageConverter()__		stringHttpMessageConverter.setWriteAcceptCharset(false)_ __		this.messageConverters = new ArrayList<HttpMessageConverter<?>>()__		this.messageConverters.add(new ByteArrayHttpMessageConverter())__		this.messageConverters.add(stringHttpMessageConverter)__		this.messageConverters.add(new SourceHttpMessageConverter<Source>())__		this.messageConverters.add(new AllEncompassingFormHttpMessageConverter())__	};default,constructor;public,exception,handler,exception,resolver,string,http,message,converter,string,http,message,converter,new,string,http,message,converter,string,http,message,converter,set,write,accept,charset,false,this,message,converters,new,array,list,http,message,converter,this,message,converters,add,new,byte,array,http,message,converter,this,message,converters,add,string,http,message,converter,this,message,converters,add,new,source,http,message,converter,source,this,message,converters,add,new,all,encompassing,form,http,message,converter
ExceptionHandlerExceptionResolver -> public ExceptionHandlerExceptionResolver();1368482696;Default constructor.;public ExceptionHandlerExceptionResolver() {__		StringHttpMessageConverter stringHttpMessageConverter = new StringHttpMessageConverter()__		stringHttpMessageConverter.setWriteAcceptCharset(false)_ __		this.messageConverters = new ArrayList<HttpMessageConverter<?>>()__		this.messageConverters.add(new ByteArrayHttpMessageConverter())__		this.messageConverters.add(stringHttpMessageConverter)__		this.messageConverters.add(new SourceHttpMessageConverter<Source>())__		this.messageConverters.add(new AllEncompassingFormHttpMessageConverter())__	};default,constructor;public,exception,handler,exception,resolver,string,http,message,converter,string,http,message,converter,new,string,http,message,converter,string,http,message,converter,set,write,accept,charset,false,this,message,converters,new,array,list,http,message,converter,this,message,converters,add,new,byte,array,http,message,converter,this,message,converters,add,string,http,message,converter,this,message,converters,add,new,source,http,message,converter,source,this,message,converters,add,new,all,encompassing,form,http,message,converter
ExceptionHandlerExceptionResolver -> public ExceptionHandlerExceptionResolver();1382113594;Default constructor.;public ExceptionHandlerExceptionResolver() {__		StringHttpMessageConverter stringHttpMessageConverter = new StringHttpMessageConverter()__		stringHttpMessageConverter.setWriteAcceptCharset(false)_ __		this.messageConverters = new ArrayList<HttpMessageConverter<?>>()__		this.messageConverters.add(new ByteArrayHttpMessageConverter())__		this.messageConverters.add(stringHttpMessageConverter)__		this.messageConverters.add(new SourceHttpMessageConverter<Source>())__		this.messageConverters.add(new AllEncompassingFormHttpMessageConverter())__	};default,constructor;public,exception,handler,exception,resolver,string,http,message,converter,string,http,message,converter,new,string,http,message,converter,string,http,message,converter,set,write,accept,charset,false,this,message,converters,new,array,list,http,message,converter,this,message,converters,add,new,byte,array,http,message,converter,this,message,converters,add,string,http,message,converter,this,message,converters,add,new,source,http,message,converter,source,this,message,converters,add,new,all,encompassing,form,http,message,converter
ExceptionHandlerExceptionResolver -> public ExceptionHandlerExceptionResolver();1386595157;Default constructor.;public ExceptionHandlerExceptionResolver() {__		StringHttpMessageConverter stringHttpMessageConverter = new StringHttpMessageConverter()__		stringHttpMessageConverter.setWriteAcceptCharset(false)_ __		this.messageConverters = new ArrayList<HttpMessageConverter<?>>()__		this.messageConverters.add(new ByteArrayHttpMessageConverter())__		this.messageConverters.add(stringHttpMessageConverter)__		this.messageConverters.add(new SourceHttpMessageConverter<Source>())__		this.messageConverters.add(new AllEncompassingFormHttpMessageConverter())__	};default,constructor;public,exception,handler,exception,resolver,string,http,message,converter,string,http,message,converter,new,string,http,message,converter,string,http,message,converter,set,write,accept,charset,false,this,message,converters,new,array,list,http,message,converter,this,message,converters,add,new,byte,array,http,message,converter,this,message,converters,add,string,http,message,converter,this,message,converters,add,new,source,http,message,converter,source,this,message,converters,add,new,all,encompassing,form,http,message,converter
ExceptionHandlerExceptionResolver -> public ExceptionHandlerExceptionResolver();1400528836;Default constructor.;public ExceptionHandlerExceptionResolver() {__		StringHttpMessageConverter stringHttpMessageConverter = new StringHttpMessageConverter()__		stringHttpMessageConverter.setWriteAcceptCharset(false)_ __		this.messageConverters = new ArrayList<HttpMessageConverter<?>>()__		this.messageConverters.add(new ByteArrayHttpMessageConverter())__		this.messageConverters.add(stringHttpMessageConverter)__		this.messageConverters.add(new SourceHttpMessageConverter<Source>())__		this.messageConverters.add(new AllEncompassingFormHttpMessageConverter())__	};default,constructor;public,exception,handler,exception,resolver,string,http,message,converter,string,http,message,converter,new,string,http,message,converter,string,http,message,converter,set,write,accept,charset,false,this,message,converters,new,array,list,http,message,converter,this,message,converters,add,new,byte,array,http,message,converter,this,message,converters,add,string,http,message,converter,this,message,converters,add,new,source,http,message,converter,source,this,message,converters,add,new,all,encompassing,form,http,message,converter
ExceptionHandlerExceptionResolver -> public ExceptionHandlerExceptionResolver();1401483748;Default constructor.;public ExceptionHandlerExceptionResolver() {__		StringHttpMessageConverter stringHttpMessageConverter = new StringHttpMessageConverter()__		stringHttpMessageConverter.setWriteAcceptCharset(false)_ __		this.messageConverters = new ArrayList<HttpMessageConverter<?>>()__		this.messageConverters.add(new ByteArrayHttpMessageConverter())__		this.messageConverters.add(stringHttpMessageConverter)__		this.messageConverters.add(new SourceHttpMessageConverter<Source>())__		this.messageConverters.add(new AllEncompassingFormHttpMessageConverter())__	};default,constructor;public,exception,handler,exception,resolver,string,http,message,converter,string,http,message,converter,new,string,http,message,converter,string,http,message,converter,set,write,accept,charset,false,this,message,converters,new,array,list,http,message,converter,this,message,converters,add,new,byte,array,http,message,converter,this,message,converters,add,string,http,message,converter,this,message,converters,add,new,source,http,message,converter,source,this,message,converters,add,new,all,encompassing,form,http,message,converter
ExceptionHandlerExceptionResolver -> public ExceptionHandlerExceptionResolver();1401483748;Default constructor.;public ExceptionHandlerExceptionResolver() {__		StringHttpMessageConverter stringHttpMessageConverter = new StringHttpMessageConverter()__		stringHttpMessageConverter.setWriteAcceptCharset(false)_ __		this.messageConverters = new ArrayList<HttpMessageConverter<?>>()__		this.messageConverters.add(new ByteArrayHttpMessageConverter())__		this.messageConverters.add(stringHttpMessageConverter)__		this.messageConverters.add(new SourceHttpMessageConverter<Source>())__		this.messageConverters.add(new AllEncompassingFormHttpMessageConverter())__	};default,constructor;public,exception,handler,exception,resolver,string,http,message,converter,string,http,message,converter,new,string,http,message,converter,string,http,message,converter,set,write,accept,charset,false,this,message,converters,new,array,list,http,message,converter,this,message,converters,add,new,byte,array,http,message,converter,this,message,converters,add,string,http,message,converter,this,message,converters,add,new,source,http,message,converter,source,this,message,converters,add,new,all,encompassing,form,http,message,converter
ExceptionHandlerExceptionResolver -> public ExceptionHandlerExceptionResolver();1405696918;Default constructor.;public ExceptionHandlerExceptionResolver() {__		StringHttpMessageConverter stringHttpMessageConverter = new StringHttpMessageConverter()__		stringHttpMessageConverter.setWriteAcceptCharset(false)_ __		this.messageConverters = new ArrayList<HttpMessageConverter<?>>()__		this.messageConverters.add(new ByteArrayHttpMessageConverter())__		this.messageConverters.add(stringHttpMessageConverter)__		this.messageConverters.add(new SourceHttpMessageConverter<Source>())__		this.messageConverters.add(new AllEncompassingFormHttpMessageConverter())__	};default,constructor;public,exception,handler,exception,resolver,string,http,message,converter,string,http,message,converter,new,string,http,message,converter,string,http,message,converter,set,write,accept,charset,false,this,message,converters,new,array,list,http,message,converter,this,message,converters,add,new,byte,array,http,message,converter,this,message,converters,add,string,http,message,converter,this,message,converters,add,new,source,http,message,converter,source,this,message,converters,add,new,all,encompassing,form,http,message,converter
ExceptionHandlerExceptionResolver -> @Nullable 	protected ServletInvocableHandlerMethod getExceptionHandlerMethod(@Nullable HandlerMethod handlerMethod, Exception exception);1495868221;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null};@Nullable_	protected ServletInvocableHandlerMethod getExceptionHandlerMethod(@Nullable HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null ? handlerMethod.getBeanType() : null)___		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}__		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if (entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;nullable,protected,servlet,invocable,handler,method,get,exception,handler,method,nullable,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> @Nullable 	protected ServletInvocableHandlerMethod getExceptionHandlerMethod(@Nullable HandlerMethod handlerMethod, Exception exception);1496242568;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null};@Nullable_	protected ServletInvocableHandlerMethod getExceptionHandlerMethod(@Nullable HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null ? handlerMethod.getBeanType() : null)___		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}__		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if (entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;nullable,protected,servlet,invocable,handler,method,get,exception,handler,method,nullable,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> @Nullable 	protected ServletInvocableHandlerMethod getExceptionHandlerMethod(@Nullable HandlerMethod handlerMethod, Exception exception);1496837955;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null};@Nullable_	protected ServletInvocableHandlerMethod getExceptionHandlerMethod(@Nullable HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null ? handlerMethod.getBeanType() : null)___		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}__		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if (entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;nullable,protected,servlet,invocable,handler,method,get,exception,handler,method,nullable,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> @Nullable 	protected ServletInvocableHandlerMethod getExceptionHandlerMethod(@Nullable HandlerMethod handlerMethod, Exception exception);1498780456;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null};@Nullable_	protected ServletInvocableHandlerMethod getExceptionHandlerMethod(@Nullable HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null ? handlerMethod.getBeanType() : null)___		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}__		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if (entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;nullable,protected,servlet,invocable,handler,method,get,exception,handler,method,nullable,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> @Nullable 	protected ServletInvocableHandlerMethod getExceptionHandlerMethod(@Nullable HandlerMethod handlerMethod, Exception exception);1500448076;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null};@Nullable_	protected ServletInvocableHandlerMethod getExceptionHandlerMethod(@Nullable HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null ? handlerMethod.getBeanType() : null)___		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}__		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if (entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;nullable,protected,servlet,invocable,handler,method,get,exception,handler,method,nullable,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1495868221;Return the custom return value handlers, or {@code null}.;@Nullable_	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;nullable,public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1496242568;Return the custom return value handlers, or {@code null}.;@Nullable_	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;nullable,public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1496837955;Return the custom return value handlers, or {@code null}.;@Nullable_	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;nullable,public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1498780456;Return the custom return value handlers, or {@code null}.;@Nullable_	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;nullable,public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1500448076;Return the custom return value handlers, or {@code null}.;@Nullable_	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;nullable,public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1518615676;Return the custom return value handlers, or {@code null}.;@Nullable_	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;nullable,public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1522103912;Return the custom return value handlers, or {@code null}.;@Nullable_	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;nullable,public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1529361191;Return the custom return value handlers, or {@code null}.;@Nullable_	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;nullable,public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1532335166;Return the custom return value handlers, or {@code null}.;@Nullable_	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;nullable,public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1539917387;Return the custom return value handlers, or {@code null}.;@Nullable_	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;nullable,public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1540223162;Return the custom return value handlers, or {@code null}.;@Nullable_	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;nullable,public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1551080576;Return the custom return value handlers, or {@code null}.;@Nullable_	public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;nullable,public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1333735583;Find an @{@link ExceptionHandler} method and invoke it to handle the_raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception)__		}_		catch (Exception invocationEx) {_			logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,link,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,catch,exception,invocation,ex,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1333745422;Find an @{@link ExceptionHandler} method and invoke it to handle the_raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception)__		}_		catch (Exception invocationEx) {_			logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,link,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,catch,exception,invocation,ex,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1340380546;Find an @{@link ExceptionHandler} method and invoke it to handle the_raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception)__		}_		catch (Exception invocationEx) {_			logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,link,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,catch,exception,invocation,ex,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1341869223;Find an @{@link ExceptionHandler} method and invoke it to handle the_raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception)__		}_		catch (Exception invocationEx) {_			logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,link,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,catch,exception,invocation,ex,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1341880445;Find an @{@link ExceptionHandler} method and invoke it to handle the_raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception)__		}_		catch (Exception invocationEx) {_			logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,link,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,catch,exception,invocation,ex,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1344976537;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception)__		}_		catch (Exception invocationEx) {_			logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,catch,exception,invocation,ex,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1347070489;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception)__		}_		catch (Exception invocationEx) {_			logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,catch,exception,invocation,ex,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1354921931;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception)__		}_		catch (Exception invocationEx) {_			logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,catch,exception,invocation,ex,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1355352386;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception)__		}_		catch (Exception invocationEx) {_			logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,catch,exception,invocation,ex,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1356735495;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception)__		}_		catch (Exception invocationEx) {_			logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,catch,exception,invocation,ex,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1357119239;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception)__		}_		catch (Exception invocationEx) {_			logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,catch,exception,invocation,ex,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1368482696;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception)__		}_		catch (Exception invocationEx) {_			logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,catch,exception,invocation,ex,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1382113594;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception)__		}_		catch (Exception invocationEx) {_			logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,catch,exception,invocation,ex,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1386595157;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception)__		}_		catch (Exception invocationEx) {_			logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,catch,exception,invocation,ex,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1400528836;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception)__		}_		catch (Exception invocationEx) {_			logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,catch,exception,invocation,ex,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1401483748;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception)__		}_		catch (Exception invocationEx) {_			logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,catch,exception,invocation,ex,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1401483748;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception)__		}_		catch (Exception invocationEx) {_			logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,catch,exception,invocation,ex,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1405696918;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception)__		}_		catch (Exception invocationEx) {_			logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,catch,exception,invocation,ex,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1406626957;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception)__		}_		catch (Exception invocationEx) {_			if (logger.isErrorEnabled()) {_				logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,catch,exception,invocation,ex,if,logger,is,error,enabled,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1406635879;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception)__		}_		catch (Exception invocationEx) {_			if (logger.isErrorEnabled()) {_				logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,catch,exception,invocation,ex,if,logger,is,error,enabled,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1421880880;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__		}_		catch (Exception invocationEx) {_			if (logger.isErrorEnabled()) {_				logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,exception,invocation,ex,if,logger,is,error,enabled,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1426267113;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__		}_		catch (Exception invocationEx) {_			if (logger.isErrorEnabled()) {_				logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,exception,invocation,ex,if,logger,is,error,enabled,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1444241166;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__		}_		catch (Exception invocationEx) {_			if (logger.isErrorEnabled()) {_				logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,exception,invocation,ex,if,logger,is,error,enabled,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1453844264;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__		}_		catch (Exception invocationEx) {_			if (logger.isErrorEnabled()) {_				logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,exception,invocation,ex,if,logger,is,error,enabled,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1453844270;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__		}_		catch (Exception invocationEx) {_			if (logger.isErrorEnabled()) {_				logger.error("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,exception,invocation,ex,if,logger,is,error,enabled,logger,error,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1455040622;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__		}_		catch (Exception invocationEx) {_			if (logger.isDebugEnabled()) {_				logger.debug("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,exception,invocation,ex,if,logger,is,debug,enabled,logger,debug,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1459417956;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			if (exception.getCause() != null) {_				_				exceptionHandlerMethod.invokeAndHandle(_						webRequest, mavContainer, exception, exception.getCause(), handlerMethod)__			}_			else {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__			}_		}_		catch (Exception invocationEx) {_			if (logger.isDebugEnabled()) {_				logger.debug("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,if,exception,get,cause,null,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,exception,get,cause,handler,method,else,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,exception,invocation,ex,if,logger,is,debug,enabled,logger,debug,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1465327321;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			Throwable cause = exception.getCause()__			if (cause != null) {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, cause, handlerMethod)__			}_			else {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__			}_		}_		catch (Exception invocationEx) {_			if (logger.isDebugEnabled()) {_				logger.debug("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,throwable,cause,exception,get,cause,if,cause,null,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,cause,handler,method,else,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,exception,invocation,ex,if,logger,is,debug,enabled,logger,debug,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1467208426;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			Throwable cause = exception.getCause()__			if (cause != null) {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, cause, handlerMethod)__			}_			else {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__			}_		}_		catch (Exception invocationEx) {_			if (logger.isDebugEnabled()) {_				logger.debug("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,throwable,cause,exception,get,cause,if,cause,null,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,cause,handler,method,else,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,exception,invocation,ex,if,logger,is,debug,enabled,logger,debug,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1467730834;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			Throwable cause = exception.getCause()__			if (cause != null) {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, cause, handlerMethod)__			}_			else {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__			}_		}_		catch (Exception invocationEx) {_			if (logger.isDebugEnabled()) {_				logger.debug("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelAndView mav = new ModelAndView().addAllObjects(mavContainer.getModel())__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,throwable,cause,exception,get,cause,if,cause,null,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,cause,handler,method,else,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,exception,invocation,ex,if,logger,is,debug,enabled,logger,debug,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,and,view,mav,new,model,and,view,add,all,objects,mav,container,get,model,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1477321489;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			Throwable cause = exception.getCause()__			if (cause != null) {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, cause, handlerMethod)__			}_			else {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__			}_		}_		catch (Exception invocationEx) {_			if (logger.isDebugEnabled()) {_				logger.debug("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelMap model = mavContainer.getModel()__			HttpStatus status = mavContainer.getStatus()__			ModelAndView mav = new ModelAndView(mavContainer.getViewName(), model, status)__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,throwable,cause,exception,get,cause,if,cause,null,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,cause,handler,method,else,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,exception,invocation,ex,if,logger,is,debug,enabled,logger,debug,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,map,model,mav,container,get,model,http,status,status,mav,container,get,status,model,and,view,mav,new,model,and,view,mav,container,get,view,name,model,status,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1477860020;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			Throwable cause = exception.getCause()__			if (cause != null) {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, cause, handlerMethod)__			}_			else {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__			}_		}_		catch (Throwable invocationEx) {_			if (logger.isWarnEnabled()) {_				logger.warn("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelMap model = mavContainer.getModel()__			HttpStatus status = mavContainer.getStatus()__			ModelAndView mav = new ModelAndView(mavContainer.getViewName(), model, status)__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,throwable,cause,exception,get,cause,if,cause,null,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,cause,handler,method,else,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,throwable,invocation,ex,if,logger,is,warn,enabled,logger,warn,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,map,model,mav,container,get,model,http,status,status,mav,container,get,status,model,and,view,mav,new,model,and,view,mav,container,get,view,name,model,status,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1479826823;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			Throwable cause = exception.getCause()__			if (cause != null) {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, cause, handlerMethod)__			}_			else {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__			}_		}_		catch (Throwable invocationEx) {_			_			_			if (invocationEx != exception && logger.isWarnEnabled()) {_				logger.warn("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelMap model = mavContainer.getModel()__			HttpStatus status = mavContainer.getStatus()__			ModelAndView mav = new ModelAndView(mavContainer.getViewName(), model, status)__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,throwable,cause,exception,get,cause,if,cause,null,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,cause,handler,method,else,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,throwable,invocation,ex,if,invocation,ex,exception,logger,is,warn,enabled,logger,warn,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,map,model,mav,container,get,model,http,status,status,mav,container,get,status,model,and,view,mav,new,model,and,view,mav,container,get,view,name,model,status,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1481323282;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			Throwable cause = exception.getCause()__			if (cause != null) {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, cause, handlerMethod)__			}_			else {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__			}_		}_		catch (Throwable invocationEx) {_			_			_			if (invocationEx != exception && logger.isWarnEnabled()) {_				logger.warn("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelMap model = mavContainer.getModel()__			HttpStatus status = mavContainer.getStatus()__			ModelAndView mav = new ModelAndView(mavContainer.getViewName(), model, status)__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			if (model instanceof RedirectAttributes) {_				Map<String, ?> flashAttributes = ((RedirectAttributes) model).getFlashAttributes()__				request = webRequest.getNativeRequest(HttpServletRequest.class)__				RequestContextUtils.getOutputFlashMap(request).putAll(flashAttributes)__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,throwable,cause,exception,get,cause,if,cause,null,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,cause,handler,method,else,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,throwable,invocation,ex,if,invocation,ex,exception,logger,is,warn,enabled,logger,warn,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,map,model,mav,container,get,model,http,status,status,mav,container,get,status,model,and,view,mav,new,model,and,view,mav,container,get,view,name,model,status,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,if,model,instanceof,redirect,attributes,map,string,flash,attributes,redirect,attributes,model,get,flash,attributes,request,web,request,get,native,request,http,servlet,request,class,request,context,utils,get,output,flash,map,request,put,all,flash,attributes,return,mav
ExceptionHandlerExceptionResolver -> @Override 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception);1495868221;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			Throwable cause = exception.getCause()__			if (cause != null) {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, cause, handlerMethod)__			}_			else {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__			}_		}_		catch (Throwable invocationEx) {_			_			_			if (invocationEx != exception && logger.isWarnEnabled()) {_				logger.warn("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelMap model = mavContainer.getModel()__			HttpStatus status = mavContainer.getStatus()__			ModelAndView mav = new ModelAndView(mavContainer.getViewName(), model, status)__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			if (model instanceof RedirectAttributes) {_				Map<String, ?> flashAttributes = ((RedirectAttributes) model).getFlashAttributes()__				request = webRequest.getNativeRequest(HttpServletRequest.class)__				RequestContextUtils.getOutputFlashMap(request).putAll(flashAttributes)__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,throwable,cause,exception,get,cause,if,cause,null,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,cause,handler,method,else,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,throwable,invocation,ex,if,invocation,ex,exception,logger,is,warn,enabled,logger,warn,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,map,model,mav,container,get,model,http,status,status,mav,container,get,status,model,and,view,mav,new,model,and,view,mav,container,get,view,name,model,status,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,if,model,instanceof,redirect,attributes,map,string,flash,attributes,redirect,attributes,model,get,flash,attributes,request,web,request,get,native,request,http,servlet,request,class,request,context,utils,get,output,flash,map,request,put,all,flash,attributes,return,mav
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(@Nullable List<ResponseBodyAdvice<?>> responseBodyAdvice);1496837955;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(@Nullable List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,nullable,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(@Nullable List<ResponseBodyAdvice<?>> responseBodyAdvice);1498780456;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(@Nullable List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,nullable,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(@Nullable List<ResponseBodyAdvice<?>> responseBodyAdvice);1500448076;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(@Nullable List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,nullable,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(@Nullable List<ResponseBodyAdvice<?>> responseBodyAdvice);1518615676;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(@Nullable List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,nullable,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(@Nullable List<ResponseBodyAdvice<?>> responseBodyAdvice);1522103912;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(@Nullable List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,nullable,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(@Nullable List<ResponseBodyAdvice<?>> responseBodyAdvice);1529361191;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(@Nullable List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,nullable,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(@Nullable List<ResponseBodyAdvice<?>> responseBodyAdvice);1532335166;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(@Nullable List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,nullable,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(@Nullable List<ResponseBodyAdvice<?>> responseBodyAdvice);1539917387;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(@Nullable List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,nullable,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(@Nullable List<ResponseBodyAdvice<?>> responseBodyAdvice);1540223162;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(@Nullable List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,nullable,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(@Nullable List<ResponseBodyAdvice<?>> responseBodyAdvice);1551080576;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(@Nullable List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,nullable,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> @Override 	@Nullable 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, @Nullable HandlerMethod handlerMethod, Exception exception);1496242568;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	@Nullable_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, @Nullable HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			Throwable cause = exception.getCause()__			if (cause != null) {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, cause, handlerMethod)__			}_			else {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__			}_		}_		catch (Throwable invocationEx) {_			_			_			if (invocationEx != exception && logger.isWarnEnabled()) {_				logger.warn("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelMap model = mavContainer.getModel()__			HttpStatus status = mavContainer.getStatus()__			ModelAndView mav = new ModelAndView(mavContainer.getViewName(), model, status)__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			if (model instanceof RedirectAttributes) {_				Map<String, ?> flashAttributes = ((RedirectAttributes) model).getFlashAttributes()__				request = webRequest.getNativeRequest(HttpServletRequest.class)__				RequestContextUtils.getOutputFlashMap(request).putAll(flashAttributes)__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,nullable,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,nullable,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,throwable,cause,exception,get,cause,if,cause,null,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,cause,handler,method,else,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,throwable,invocation,ex,if,invocation,ex,exception,logger,is,warn,enabled,logger,warn,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,map,model,mav,container,get,model,http,status,status,mav,container,get,status,model,and,view,mav,new,model,and,view,mav,container,get,view,name,model,status,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,if,model,instanceof,redirect,attributes,map,string,flash,attributes,redirect,attributes,model,get,flash,attributes,request,web,request,get,native,request,http,servlet,request,class,request,context,utils,get,output,flash,map,request,put,all,flash,attributes,return,mav
ExceptionHandlerExceptionResolver -> @Override 	@Nullable 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, @Nullable HandlerMethod handlerMethod, Exception exception);1496837955;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	@Nullable_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, @Nullable HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)___		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			Throwable cause = exception.getCause()__			if (cause != null) {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, cause, handlerMethod)__			}_			else {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__			}_		}_		catch (Throwable invocationEx) {_			_			_			if (invocationEx != exception && logger.isWarnEnabled()) {_				logger.warn("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelMap model = mavContainer.getModel()__			HttpStatus status = mavContainer.getStatus()__			ModelAndView mav = new ModelAndView(mavContainer.getViewName(), model, status)__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			if (model instanceof RedirectAttributes) {_				Map<String, ?> flashAttributes = ((RedirectAttributes) model).getFlashAttributes()__				RequestContextUtils.getOutputFlashMap(request).putAll(flashAttributes)__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,nullable,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,nullable,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,throwable,cause,exception,get,cause,if,cause,null,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,cause,handler,method,else,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,throwable,invocation,ex,if,invocation,ex,exception,logger,is,warn,enabled,logger,warn,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,map,model,mav,container,get,model,http,status,status,mav,container,get,status,model,and,view,mav,new,model,and,view,mav,container,get,view,name,model,status,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,if,model,instanceof,redirect,attributes,map,string,flash,attributes,redirect,attributes,model,get,flash,attributes,request,context,utils,get,output,flash,map,request,put,all,flash,attributes,return,mav
ExceptionHandlerExceptionResolver -> @Override 	@Nullable 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, @Nullable HandlerMethod handlerMethod, Exception exception);1498780456;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	@Nullable_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, @Nullable HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		if (this.argumentResolvers != null) {_			exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		}_		if (this.returnValueHandlers != null) {_			exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)__		}__		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			Throwable cause = exception.getCause()__			if (cause != null) {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, cause, handlerMethod)__			}_			else {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__			}_		}_		catch (Throwable invocationEx) {_			_			_			if (invocationEx != exception && logger.isWarnEnabled()) {_				logger.warn("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelMap model = mavContainer.getModel()__			HttpStatus status = mavContainer.getStatus()__			ModelAndView mav = new ModelAndView(mavContainer.getViewName(), model, status)__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			if (model instanceof RedirectAttributes) {_				Map<String, ?> flashAttributes = ((RedirectAttributes) model).getFlashAttributes()__				RequestContextUtils.getOutputFlashMap(request).putAll(flashAttributes)__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,nullable,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,nullable,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,if,this,argument,resolvers,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,if,this,return,value,handlers,null,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,throwable,cause,exception,get,cause,if,cause,null,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,cause,handler,method,else,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,throwable,invocation,ex,if,invocation,ex,exception,logger,is,warn,enabled,logger,warn,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,map,model,mav,container,get,model,http,status,status,mav,container,get,status,model,and,view,mav,new,model,and,view,mav,container,get,view,name,model,status,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,if,model,instanceof,redirect,attributes,map,string,flash,attributes,redirect,attributes,model,get,flash,attributes,request,context,utils,get,output,flash,map,request,put,all,flash,attributes,return,mav
ExceptionHandlerExceptionResolver -> @Override 	@Nullable 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, @Nullable HandlerMethod handlerMethod, Exception exception);1500448076;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	@Nullable_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, @Nullable HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		if (this.argumentResolvers != null) {_			exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		}_		if (this.returnValueHandlers != null) {_			exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)__		}__		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			Throwable cause = exception.getCause()__			if (cause != null) {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, cause, handlerMethod)__			}_			else {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__			}_		}_		catch (Throwable invocationEx) {_			_			_			if (invocationEx != exception && logger.isWarnEnabled()) {_				logger.warn("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelMap model = mavContainer.getModel()__			HttpStatus status = mavContainer.getStatus()__			ModelAndView mav = new ModelAndView(mavContainer.getViewName(), model, status)__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			if (model instanceof RedirectAttributes) {_				Map<String, ?> flashAttributes = ((RedirectAttributes) model).getFlashAttributes()__				RequestContextUtils.getOutputFlashMap(request).putAll(flashAttributes)__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,nullable,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,nullable,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,if,this,argument,resolvers,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,if,this,return,value,handlers,null,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,throwable,cause,exception,get,cause,if,cause,null,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,cause,handler,method,else,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,throwable,invocation,ex,if,invocation,ex,exception,logger,is,warn,enabled,logger,warn,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,map,model,mav,container,get,model,http,status,status,mav,container,get,status,model,and,view,mav,new,model,and,view,mav,container,get,view,name,model,status,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,if,model,instanceof,redirect,attributes,map,string,flash,attributes,redirect,attributes,model,get,flash,attributes,request,context,utils,get,output,flash,map,request,put,all,flash,attributes,return,mav
ExceptionHandlerExceptionResolver -> @Override 	@Nullable 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, @Nullable HandlerMethod handlerMethod, Exception exception);1518615676;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	@Nullable_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, @Nullable HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		if (this.argumentResolvers != null) {_			exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		}_		if (this.returnValueHandlers != null) {_			exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)__		}__		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			Throwable cause = exception.getCause()__			if (cause != null) {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, cause, handlerMethod)__			}_			else {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__			}_		}_		catch (Throwable invocationEx) {_			_			_			if (invocationEx != exception && logger.isWarnEnabled()) {_				logger.warn("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelMap model = mavContainer.getModel()__			HttpStatus status = mavContainer.getStatus()__			ModelAndView mav = new ModelAndView(mavContainer.getViewName(), model, status)__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			if (model instanceof RedirectAttributes) {_				Map<String, ?> flashAttributes = ((RedirectAttributes) model).getFlashAttributes()__				RequestContextUtils.getOutputFlashMap(request).putAll(flashAttributes)__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,nullable,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,nullable,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,if,this,argument,resolvers,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,if,this,return,value,handlers,null,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,throwable,cause,exception,get,cause,if,cause,null,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,cause,handler,method,else,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,throwable,invocation,ex,if,invocation,ex,exception,logger,is,warn,enabled,logger,warn,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,map,model,mav,container,get,model,http,status,status,mav,container,get,status,model,and,view,mav,new,model,and,view,mav,container,get,view,name,model,status,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,if,model,instanceof,redirect,attributes,map,string,flash,attributes,redirect,attributes,model,get,flash,attributes,request,context,utils,get,output,flash,map,request,put,all,flash,attributes,return,mav
ExceptionHandlerExceptionResolver -> @Override 	@Nullable 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, @Nullable HandlerMethod handlerMethod, Exception exception);1522103912;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	@Nullable_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, @Nullable HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		if (this.argumentResolvers != null) {_			exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		}_		if (this.returnValueHandlers != null) {_			exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)__		}__		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Invoking @ExceptionHandler method: " + exceptionHandlerMethod)__			}_			Throwable cause = exception.getCause()__			if (cause != null) {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, cause, handlerMethod)__			}_			else {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__			}_		}_		catch (Throwable invocationEx) {_			_			_			if (invocationEx != exception && logger.isWarnEnabled()) {_				logger.warn("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx)__			}_			_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelMap model = mavContainer.getModel()__			HttpStatus status = mavContainer.getStatus()__			ModelAndView mav = new ModelAndView(mavContainer.getViewName(), model, status)__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			if (model instanceof RedirectAttributes) {_				Map<String, ?> flashAttributes = ((RedirectAttributes) model).getFlashAttributes()__				RequestContextUtils.getOutputFlashMap(request).putAll(flashAttributes)__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,nullable,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,nullable,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,if,this,argument,resolvers,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,if,this,return,value,handlers,null,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,invoking,exception,handler,method,exception,handler,method,throwable,cause,exception,get,cause,if,cause,null,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,cause,handler,method,else,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,throwable,invocation,ex,if,invocation,ex,exception,logger,is,warn,enabled,logger,warn,failed,to,invoke,exception,handler,method,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,map,model,mav,container,get,model,http,status,status,mav,container,get,status,model,and,view,mav,new,model,and,view,mav,container,get,view,name,model,status,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,if,model,instanceof,redirect,attributes,map,string,flash,attributes,redirect,attributes,model,get,flash,attributes,request,context,utils,get,output,flash,map,request,put,all,flash,attributes,return,mav
ExceptionHandlerExceptionResolver -> @Override 	@Nullable 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, @Nullable HandlerMethod handlerMethod, Exception exception);1529361191;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	@Nullable_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, @Nullable HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		if (this.argumentResolvers != null) {_			exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		}_		if (this.returnValueHandlers != null) {_			exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)__		}__		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Using @ExceptionHandler " + exceptionHandlerMethod)__			}_			Throwable cause = exception.getCause()__			if (cause != null) {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, cause, handlerMethod)__			}_			else {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__			}_		}_		catch (Throwable invocationEx) {_			_			_			if (invocationEx != exception && logger.isWarnEnabled()) {_				logger.warn("Failure in @ExceptionHandler " + exceptionHandlerMethod, invocationEx)__			}_			_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelMap model = mavContainer.getModel()__			HttpStatus status = mavContainer.getStatus()__			ModelAndView mav = new ModelAndView(mavContainer.getViewName(), model, status)__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			if (model instanceof RedirectAttributes) {_				Map<String, ?> flashAttributes = ((RedirectAttributes) model).getFlashAttributes()__				RequestContextUtils.getOutputFlashMap(request).putAll(flashAttributes)__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,nullable,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,nullable,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,if,this,argument,resolvers,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,if,this,return,value,handlers,null,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,using,exception,handler,exception,handler,method,throwable,cause,exception,get,cause,if,cause,null,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,cause,handler,method,else,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,throwable,invocation,ex,if,invocation,ex,exception,logger,is,warn,enabled,logger,warn,failure,in,exception,handler,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,map,model,mav,container,get,model,http,status,status,mav,container,get,status,model,and,view,mav,new,model,and,view,mav,container,get,view,name,model,status,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,if,model,instanceof,redirect,attributes,map,string,flash,attributes,redirect,attributes,model,get,flash,attributes,request,context,utils,get,output,flash,map,request,put,all,flash,attributes,return,mav
ExceptionHandlerExceptionResolver -> @Override 	@Nullable 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, @Nullable HandlerMethod handlerMethod, Exception exception);1532335166;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	@Nullable_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, @Nullable HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		if (this.argumentResolvers != null) {_			exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		}_		if (this.returnValueHandlers != null) {_			exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)__		}__		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Using @ExceptionHandler " + exceptionHandlerMethod)__			}_			Throwable cause = exception.getCause()__			if (cause != null) {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, cause, handlerMethod)__			}_			else {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__			}_		}_		catch (Throwable invocationEx) {_			_			_			if (invocationEx != exception && logger.isWarnEnabled()) {_				logger.warn("Failure in @ExceptionHandler " + exceptionHandlerMethod, invocationEx)__			}_			_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelMap model = mavContainer.getModel()__			HttpStatus status = mavContainer.getStatus()__			ModelAndView mav = new ModelAndView(mavContainer.getViewName(), model, status)__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			if (model instanceof RedirectAttributes) {_				Map<String, ?> flashAttributes = ((RedirectAttributes) model).getFlashAttributes()__				RequestContextUtils.getOutputFlashMap(request).putAll(flashAttributes)__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,nullable,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,nullable,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,if,this,argument,resolvers,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,if,this,return,value,handlers,null,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,using,exception,handler,exception,handler,method,throwable,cause,exception,get,cause,if,cause,null,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,cause,handler,method,else,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,throwable,invocation,ex,if,invocation,ex,exception,logger,is,warn,enabled,logger,warn,failure,in,exception,handler,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,map,model,mav,container,get,model,http,status,status,mav,container,get,status,model,and,view,mav,new,model,and,view,mav,container,get,view,name,model,status,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,if,model,instanceof,redirect,attributes,map,string,flash,attributes,redirect,attributes,model,get,flash,attributes,request,context,utils,get,output,flash,map,request,put,all,flash,attributes,return,mav
ExceptionHandlerExceptionResolver -> @Override 	@Nullable 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, @Nullable HandlerMethod handlerMethod, Exception exception);1539917387;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	@Nullable_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, @Nullable HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		if (this.argumentResolvers != null) {_			exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		}_		if (this.returnValueHandlers != null) {_			exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)__		}__		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Using @ExceptionHandler " + exceptionHandlerMethod)__			}_			Throwable cause = exception.getCause()__			if (cause != null) {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, cause, handlerMethod)__			}_			else {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__			}_		}_		catch (Throwable invocationEx) {_			_			_			if (invocationEx != exception && logger.isWarnEnabled()) {_				logger.warn("Failure in @ExceptionHandler " + exceptionHandlerMethod, invocationEx)__			}_			_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelMap model = mavContainer.getModel()__			HttpStatus status = mavContainer.getStatus()__			ModelAndView mav = new ModelAndView(mavContainer.getViewName(), model, status)__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			if (model instanceof RedirectAttributes) {_				Map<String, ?> flashAttributes = ((RedirectAttributes) model).getFlashAttributes()__				RequestContextUtils.getOutputFlashMap(request).putAll(flashAttributes)__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,nullable,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,nullable,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,if,this,argument,resolvers,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,if,this,return,value,handlers,null,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,using,exception,handler,exception,handler,method,throwable,cause,exception,get,cause,if,cause,null,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,cause,handler,method,else,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,throwable,invocation,ex,if,invocation,ex,exception,logger,is,warn,enabled,logger,warn,failure,in,exception,handler,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,map,model,mav,container,get,model,http,status,status,mav,container,get,status,model,and,view,mav,new,model,and,view,mav,container,get,view,name,model,status,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,if,model,instanceof,redirect,attributes,map,string,flash,attributes,redirect,attributes,model,get,flash,attributes,request,context,utils,get,output,flash,map,request,put,all,flash,attributes,return,mav
ExceptionHandlerExceptionResolver -> @Override 	@Nullable 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, @Nullable HandlerMethod handlerMethod, Exception exception);1540223162;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	@Nullable_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, @Nullable HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		if (this.argumentResolvers != null) {_			exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		}_		if (this.returnValueHandlers != null) {_			exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)__		}__		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Using @ExceptionHandler " + exceptionHandlerMethod)__			}_			Throwable cause = exception.getCause()__			if (cause != null) {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, cause, handlerMethod)__			}_			else {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__			}_		}_		catch (Throwable invocationEx) {_			_			_			if (invocationEx != exception && logger.isWarnEnabled()) {_				logger.warn("Failure in @ExceptionHandler " + exceptionHandlerMethod, invocationEx)__			}_			_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelMap model = mavContainer.getModel()__			HttpStatus status = mavContainer.getStatus()__			ModelAndView mav = new ModelAndView(mavContainer.getViewName(), model, status)__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			if (model instanceof RedirectAttributes) {_				Map<String, ?> flashAttributes = ((RedirectAttributes) model).getFlashAttributes()__				RequestContextUtils.getOutputFlashMap(request).putAll(flashAttributes)__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,nullable,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,nullable,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,if,this,argument,resolvers,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,if,this,return,value,handlers,null,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,using,exception,handler,exception,handler,method,throwable,cause,exception,get,cause,if,cause,null,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,cause,handler,method,else,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,throwable,invocation,ex,if,invocation,ex,exception,logger,is,warn,enabled,logger,warn,failure,in,exception,handler,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,map,model,mav,container,get,model,http,status,status,mav,container,get,status,model,and,view,mav,new,model,and,view,mav,container,get,view,name,model,status,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,if,model,instanceof,redirect,attributes,map,string,flash,attributes,redirect,attributes,model,get,flash,attributes,request,context,utils,get,output,flash,map,request,put,all,flash,attributes,return,mav
ExceptionHandlerExceptionResolver -> @Override 	@Nullable 	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request, 			HttpServletResponse response, @Nullable HandlerMethod handlerMethod, Exception exception);1551080576;Find an {@code @ExceptionHandler} method and invoke it to handle the raised exception.;@Override_	@Nullable_	protected ModelAndView doResolveHandlerMethodException(HttpServletRequest request,_			HttpServletResponse response, @Nullable HandlerMethod handlerMethod, Exception exception) {__		ServletInvocableHandlerMethod exceptionHandlerMethod = getExceptionHandlerMethod(handlerMethod, exception)__		if (exceptionHandlerMethod == null) {_			return null__		}__		if (this.argumentResolvers != null) {_			exceptionHandlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers)__		}_		if (this.returnValueHandlers != null) {_			exceptionHandlerMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers)__		}__		ServletWebRequest webRequest = new ServletWebRequest(request, response)__		ModelAndViewContainer mavContainer = new ModelAndViewContainer()___		try {_			if (logger.isDebugEnabled()) {_				logger.debug("Using @ExceptionHandler " + exceptionHandlerMethod)__			}_			Throwable cause = exception.getCause()__			if (cause != null) {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, cause, handlerMethod)__			}_			else {_				_				exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod)__			}_		}_		catch (Throwable invocationEx) {_			_			_			if (invocationEx != exception && logger.isWarnEnabled()) {_				logger.warn("Failure in @ExceptionHandler " + exceptionHandlerMethod, invocationEx)__			}_			_			return null__		}__		if (mavContainer.isRequestHandled()) {_			return new ModelAndView()__		}_		else {_			ModelMap model = mavContainer.getModel()__			HttpStatus status = mavContainer.getStatus()__			ModelAndView mav = new ModelAndView(mavContainer.getViewName(), model, status)__			mav.setViewName(mavContainer.getViewName())__			if (!mavContainer.isViewReference()) {_				mav.setView((View) mavContainer.getView())__			}_			if (model instanceof RedirectAttributes) {_				Map<String, ?> flashAttributes = ((RedirectAttributes) model).getFlashAttributes()__				RequestContextUtils.getOutputFlashMap(request).putAll(flashAttributes)__			}_			return mav__		}_	};find,an,code,exception,handler,method,and,invoke,it,to,handle,the,raised,exception;override,nullable,protected,model,and,view,do,resolve,handler,method,exception,http,servlet,request,request,http,servlet,response,response,nullable,handler,method,handler,method,exception,exception,servlet,invocable,handler,method,exception,handler,method,get,exception,handler,method,handler,method,exception,if,exception,handler,method,null,return,null,if,this,argument,resolvers,null,exception,handler,method,set,handler,method,argument,resolvers,this,argument,resolvers,if,this,return,value,handlers,null,exception,handler,method,set,handler,method,return,value,handlers,this,return,value,handlers,servlet,web,request,web,request,new,servlet,web,request,request,response,model,and,view,container,mav,container,new,model,and,view,container,try,if,logger,is,debug,enabled,logger,debug,using,exception,handler,exception,handler,method,throwable,cause,exception,get,cause,if,cause,null,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,cause,handler,method,else,exception,handler,method,invoke,and,handle,web,request,mav,container,exception,handler,method,catch,throwable,invocation,ex,if,invocation,ex,exception,logger,is,warn,enabled,logger,warn,failure,in,exception,handler,exception,handler,method,invocation,ex,return,null,if,mav,container,is,request,handled,return,new,model,and,view,else,model,map,model,mav,container,get,model,http,status,status,mav,container,get,status,model,and,view,mav,new,model,and,view,mav,container,get,view,name,model,status,mav,set,view,name,mav,container,get,view,name,if,mav,container,is,view,reference,mav,set,view,view,mav,container,get,view,if,model,instanceof,redirect,attributes,map,string,flash,attributes,redirect,attributes,model,get,flash,attributes,request,context,utils,get,output,flash,map,request,put,all,flash,attributes,return,mav
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1328020251;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1333735583;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1333745422;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1340380546;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1341869223;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1341880445;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1344976537;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1347070489;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1354921931;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1355352386;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1356735495;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1357119239;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1368482696;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1382113594;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1386595157;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1400528836;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1401483748;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1401483748;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1405696918;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1406626957;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1406635879;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1421880880;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1426267113;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1444241166;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1453844264;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1453844270;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1455040622;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1459417956;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1465327321;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1467208426;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1467730834;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1477321489;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1477860020;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1479826823;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> public HandlerMethodArgumentResolverComposite getArgumentResolvers();1481323282;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1495868221;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1496242568;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1496837955;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1498780456;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1500448076;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1518615676;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1522103912;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1529361191;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1532335166;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1539917387;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1540223162;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1551080576;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1328020251;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1333735583;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1333745422;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1340380546;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1341869223;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1341880445;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1344976537;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1347070489;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1354921931;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1355352386;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1356735495;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1357119239;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1368482696;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1382113594;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1386595157;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1400528836;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1401483748;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1401483748;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1405696918;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1406626957;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1406635879;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1421880880;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1426267113;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1444241166;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1453844264;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1453844270;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1455040622;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1459417956;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1465327321;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1467208426;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1467730834;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1477321489;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1477860020;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1479826823;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1481323282;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1495868221;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1496242568;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1496837955;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1498780456;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1495868221;Return the custom argument resolvers, or {@code null}.;@Nullable_	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;nullable,public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1496242568;Return the custom argument resolvers, or {@code null}.;@Nullable_	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;nullable,public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1496837955;Return the custom argument resolvers, or {@code null}.;@Nullable_	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;nullable,public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1498780456;Return the custom argument resolvers, or {@code null}.;@Nullable_	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;nullable,public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1500448076;Return the custom argument resolvers, or {@code null}.;@Nullable_	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;nullable,public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1518615676;Return the custom argument resolvers, or {@code null}.;@Nullable_	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;nullable,public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1522103912;Return the custom argument resolvers, or {@code null}.;@Nullable_	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;nullable,public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1529361191;Return the custom argument resolvers, or {@code null}.;@Nullable_	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;nullable,public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1532335166;Return the custom argument resolvers, or {@code null}.;@Nullable_	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;nullable,public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1539917387;Return the custom argument resolvers, or {@code null}.;@Nullable_	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;nullable,public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1540223162;Return the custom argument resolvers, or {@code null}.;@Nullable_	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;nullable,public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1551080576;Return the custom argument resolvers, or {@code null}.;@Nullable_	public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;nullable,public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers);1496837955;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,nullable,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers);1498780456;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,nullable,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers);1500448076;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,nullable,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers);1518615676;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,nullable,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers);1522103912;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,nullable,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers);1529361191;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,nullable,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers);1532335166;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,nullable,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers);1539917387;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,nullable,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers);1540223162;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,nullable,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers);1551080576;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,nullable,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1328020251;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1333735583;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1333745422;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1340380546;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1341869223;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1341880445;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1344976537;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1347070489;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1354921931;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1355352386;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1356735495;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1357119239;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1368482696;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1382113594;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1386595157;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1400528836;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1401483748;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1401483748;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1405696918;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1406626957;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1406635879;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1421880880;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1426267113;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1444241166;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1453844264;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1453844270;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1455040622;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1459417956;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1465327321;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1467208426;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1467730834;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1477321489;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1477860020;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1479826823;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers();1481323282;Return the custom argument resolvers, or {@code null}.;public List<HandlerMethodArgumentResolver> getCustomArgumentResolvers() {_		return this.customArgumentResolvers__	};return,the,custom,argument,resolvers,or,code,null;public,list,handler,method,argument,resolver,get,custom,argument,resolvers,return,this,custom,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1328020251;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1333735583;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1333745422;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1340380546;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1341869223;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1341880445;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1344976537;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1347070489;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1354921931;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1355352386;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1356735495;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1357119239;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1368482696;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1382113594;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1386595157;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1400528836;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1401483748;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1401483748;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1405696918;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1406626957;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1406635879;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1421880880;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1426267113;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1444241166;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1453844264;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1453844270;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1455040622;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1459417956;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1465327321;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1467208426;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1467730834;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1477321489;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1477860020;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1479826823;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers();1481323282;Return the custom return value handlers, or {@code null}.;public List<HandlerMethodReturnValueHandler> getCustomReturnValueHandlers() {_		return this.customReturnValueHandlers__	};return,the,custom,return,value,handlers,or,code,null;public,list,handler,method,return,value,handler,get,custom,return,value,handlers,return,this,custom,return,value,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1328020251;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()__		_		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		_		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1333735583;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1333745422;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1340380546;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1341869223;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1341880445;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1344976537;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1347070489;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1354921931;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1355352386;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1356735495;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1357119239;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1368482696;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1382113594;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1386595157;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1400528836;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1401483748;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1401483748;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1405696918;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1406626957;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1406635879;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1421880880;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1426267113;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1444241166;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1453844264;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1453844270;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())__		resolvers.add(new RequestAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,request,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1455040622;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())__		resolvers.add(new RequestAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,request,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1459417956;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())__		resolvers.add(new RequestAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,request,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1465327321;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())__		resolvers.add(new RequestAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,request,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1467208426;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<HandlerMethodArgumentResolver>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())__		resolvers.add(new RequestAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,handler,method,argument,resolver,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,request,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1467730834;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())__		resolvers.add(new RequestAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,request,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1477321489;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())__		resolvers.add(new RequestAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,request,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1477860020;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())__		resolvers.add(new RequestAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,request,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1479826823;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())__		resolvers.add(new RequestAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,request,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1481323282;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())__		resolvers.add(new RequestAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new RedirectAttributesMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,request,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,redirect,attributes,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1495868221;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())__		resolvers.add(new RequestAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new RedirectAttributesMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,request,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,redirect,attributes,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1496242568;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())__		resolvers.add(new RequestAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new RedirectAttributesMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,request,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,redirect,attributes,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1496837955;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())__		resolvers.add(new RequestAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new RedirectAttributesMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,request,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,redirect,attributes,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1498780456;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())__		resolvers.add(new RequestAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new RedirectAttributesMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,request,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,redirect,attributes,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1500448076;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())__		resolvers.add(new RequestAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new RedirectAttributesMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,request,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,redirect,attributes,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1518615676;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())__		resolvers.add(new RequestAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new RedirectAttributesMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,request,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,redirect,attributes,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1522103912;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())__		resolvers.add(new RequestAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new RedirectAttributesMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,request,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,redirect,attributes,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1529361191;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())__		resolvers.add(new RequestAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new RedirectAttributesMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,request,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,redirect,attributes,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1532335166;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())__		resolvers.add(new RequestAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new RedirectAttributesMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,request,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,redirect,attributes,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1539917387;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())__		resolvers.add(new RequestAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new RedirectAttributesMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,request,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,redirect,attributes,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1540223162;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())__		resolvers.add(new RequestAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new RedirectAttributesMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,request,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,redirect,attributes,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers();1551080576;Return the list of argument resolvers to use including built-in resolvers_and custom resolvers provided via {@link #setCustomArgumentResolvers}.;protected List<HandlerMethodArgumentResolver> getDefaultArgumentResolvers() {_		List<HandlerMethodArgumentResolver> resolvers = new ArrayList<>()___		_		resolvers.add(new SessionAttributeMethodArgumentResolver())__		resolvers.add(new RequestAttributeMethodArgumentResolver())___		_		resolvers.add(new ServletRequestMethodArgumentResolver())__		resolvers.add(new ServletResponseMethodArgumentResolver())__		resolvers.add(new RedirectAttributesMethodArgumentResolver())__		resolvers.add(new ModelMethodProcessor())___		_		if (getCustomArgumentResolvers() != null) {_			resolvers.addAll(getCustomArgumentResolvers())__		}__		return resolvers__	};return,the,list,of,argument,resolvers,to,use,including,built,in,resolvers,and,custom,resolvers,provided,via,link,set,custom,argument,resolvers;protected,list,handler,method,argument,resolver,get,default,argument,resolvers,list,handler,method,argument,resolver,resolvers,new,array,list,resolvers,add,new,session,attribute,method,argument,resolver,resolvers,add,new,request,attribute,method,argument,resolver,resolvers,add,new,servlet,request,method,argument,resolver,resolvers,add,new,servlet,response,method,argument,resolver,resolvers,add,new,redirect,attributes,method,argument,resolver,resolvers,add,new,model,method,processor,if,get,custom,argument,resolvers,null,resolvers,add,all,get,custom,argument,resolvers,return,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers);1496837955;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,nullable,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers);1498780456;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,nullable,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers);1500448076;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,nullable,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers);1518615676;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,nullable,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers);1522103912;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,nullable,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers);1529361191;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,nullable,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers);1532335166;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,nullable,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers);1539917387;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,nullable,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers);1540223162;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,nullable,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers);1551080576;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,nullable,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1328020251;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1333735583;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1333745422;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1340380546;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1341869223;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1341880445;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1344976537;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1347070489;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1354921931;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1355352386;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1356735495;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1357119239;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1368482696;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1382113594;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1386595157;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1400528836;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1401483748;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1401483748;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1405696918;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1406626957;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1406635879;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1421880880;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1426267113;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1444241166;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1453844264;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1453844270;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1455040622;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1459417956;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1465327321;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1467208426;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1467730834;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1477321489;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1477860020;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1479826823;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1481323282;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1495868221;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1496242568;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1496837955;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1498780456;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1500448076;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1518615676;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1522103912;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1529361191;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1532335166;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1539917387;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1540223162;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public List<HttpMessageConverter<?>> getMessageConverters();1551080576;Return the configured message body converters.;public List<HttpMessageConverter<?>> getMessageConverters() {_		return this.messageConverters__	};return,the,configured,message,body,converters;public,list,http,message,converter,get,message,converters,return,this,message,converters
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers);1500448076;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,nullable,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers);1518615676;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,nullable,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers);1522103912;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,nullable,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers);1529361191;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,nullable,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers);1532335166;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,nullable,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers);1539917387;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,nullable,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers);1540223162;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,nullable,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setCustomReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers);1551080576;Provide handlers for custom return value types. Custom handlers are_ordered after built-in ones. To override the built-in support for_return value handling use {@link #setReturnValueHandlers}.;public void setCustomReturnValueHandlers(@Nullable List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		this.customReturnValueHandlers = returnValueHandlers__	};provide,handlers,for,custom,return,value,types,custom,handlers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,return,value,handling,use,link,set,return,value,handlers;public,void,set,custom,return,value,handlers,nullable,list,handler,method,return,value,handler,return,value,handlers,this,custom,return,value,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1328020251;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1333735583;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1333745422;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1340380546;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1341869223;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1341880445;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1344976537;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1347070489;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1354921931;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1355352386;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1356735495;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1357119239;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1368482696;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1382113594;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1386595157;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1400528836;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1401483748;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1401483748;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1405696918;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1406626957;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1406635879;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1421880880;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1426267113;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1444241166;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1453844264;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1453844270;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1455040622;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1459417956;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1465327321;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1467208426;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1467730834;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1477321489;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1477860020;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1479826823;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1481323282;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1495868221;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers);1496242568;Configure the complete list of supported return value types thus_overriding handlers that would otherwise be configured by default.;public void setReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {_		if (returnValueHandlers == null) {_			this.returnValueHandlers = null__		}_		else {_			this.returnValueHandlers = new HandlerMethodReturnValueHandlerComposite()__			this.returnValueHandlers.addHandlers(returnValueHandlers)__		}_	};configure,the,complete,list,of,supported,return,value,types,thus,overriding,handlers,that,would,otherwise,be,configured,by,default;public,void,set,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers,if,return,value,handlers,null,this,return,value,handlers,null,else,this,return,value,handlers,new,handler,method,return,value,handler,composite,this,return,value,handlers,add,handlers,return,value,handlers
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice);1401483748;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice);1405696918;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice);1406626957;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice);1406635879;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice);1421880880;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice);1426267113;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice);1444241166;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice);1453844264;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice);1453844270;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice);1455040622;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice);1459417956;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice);1465327321;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice);1467208426;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice);1467730834;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice);1477321489;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice);1477860020;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice);1479826823;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice);1481323282;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice);1495868221;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice);1496242568;Add one or more components to be invoked after the execution of a controller_method annotated with {@code @ResponseBody} or returning {@code ResponseEntity}_but before the body is written to the response with the selected_{@code HttpMessageConverter}.;public void setResponseBodyAdvice(List<ResponseBodyAdvice<?>> responseBodyAdvice) {_		this.responseBodyAdvice.clear()__		if (responseBodyAdvice != null) {_			this.responseBodyAdvice.addAll(responseBodyAdvice)__		}_	};add,one,or,more,components,to,be,invoked,after,the,execution,of,a,controller,method,annotated,with,code,response,body,or,returning,code,response,entity,but,before,the,body,is,written,to,the,response,with,the,selected,code,http,message,converter;public,void,set,response,body,advice,list,response,body,advice,response,body,advice,this,response,body,advice,clear,if,response,body,advice,null,this,response,body,advice,add,all,response,body,advice
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodArgumentResolverComposite getArgumentResolvers();1495868221;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodArgumentResolverComposite getArgumentResolvers();1496242568;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodArgumentResolverComposite getArgumentResolvers();1496837955;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodArgumentResolverComposite getArgumentResolvers();1498780456;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodArgumentResolverComposite getArgumentResolvers();1500448076;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodArgumentResolverComposite getArgumentResolvers();1518615676;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodArgumentResolverComposite getArgumentResolvers();1522103912;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodArgumentResolverComposite getArgumentResolvers();1529361191;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodArgumentResolverComposite getArgumentResolvers();1532335166;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodArgumentResolverComposite getArgumentResolvers();1539917387;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodArgumentResolverComposite getArgumentResolvers();1540223162;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	public HandlerMethodArgumentResolverComposite getArgumentResolvers();1551080576;Return the configured argument resolvers, or possibly {@code null} if_not initialized yet via {@link #afterPropertiesSet()}.;@Nullable_	public HandlerMethodArgumentResolverComposite getArgumentResolvers() {_		return this.argumentResolvers__	};return,the,configured,argument,resolvers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;nullable,public,handler,method,argument,resolver,composite,get,argument,resolvers,return,this,argument,resolvers
ExceptionHandlerExceptionResolver -> @Nullable 	protected ServletInvocableHandlerMethod getExceptionHandlerMethod( 			@Nullable HandlerMethod handlerMethod, Exception exception);1518615676;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null} if none;@Nullable_	protected ServletInvocableHandlerMethod getExceptionHandlerMethod(_			@Nullable HandlerMethod handlerMethod, Exception exception) {__		Class<?> handlerType = null___		if (handlerMethod != null) {_			_			_			handlerType = handlerMethod.getBeanType()__			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_			_			_			if (Proxy.isProxyClass(handlerType)) {_				handlerType = AopUtils.getTargetClass(handlerMethod.getBean())__			}_		}__		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			ControllerAdviceBean advice = entry.getKey()__			if (advice.isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(advice.resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null,if,none;nullable,protected,servlet,invocable,handler,method,get,exception,handler,method,nullable,handler,method,handler,method,exception,exception,class,handler,type,null,if,handler,method,null,handler,type,handler,method,get,bean,type,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,if,proxy,is,proxy,class,handler,type,handler,type,aop,utils,get,target,class,handler,method,get,bean,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,controller,advice,bean,advice,entry,get,key,if,advice,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,advice,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> @Nullable 	protected ServletInvocableHandlerMethod getExceptionHandlerMethod( 			@Nullable HandlerMethod handlerMethod, Exception exception);1522103912;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null} if none;@Nullable_	protected ServletInvocableHandlerMethod getExceptionHandlerMethod(_			@Nullable HandlerMethod handlerMethod, Exception exception) {__		Class<?> handlerType = null___		if (handlerMethod != null) {_			_			_			handlerType = handlerMethod.getBeanType()__			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_			_			_			if (Proxy.isProxyClass(handlerType)) {_				handlerType = AopUtils.getTargetClass(handlerMethod.getBean())__			}_		}__		for (Map.Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			ControllerAdviceBean advice = entry.getKey()__			if (advice.isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(advice.resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null,if,none;nullable,protected,servlet,invocable,handler,method,get,exception,handler,method,nullable,handler,method,handler,method,exception,exception,class,handler,type,null,if,handler,method,null,handler,type,handler,method,get,bean,type,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,if,proxy,is,proxy,class,handler,type,handler,type,aop,utils,get,target,class,handler,method,get,bean,for,map,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,controller,advice,bean,advice,entry,get,key,if,advice,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,advice,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> @Nullable 	protected ServletInvocableHandlerMethod getExceptionHandlerMethod( 			@Nullable HandlerMethod handlerMethod, Exception exception);1529361191;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null} if none;@Nullable_	protected ServletInvocableHandlerMethod getExceptionHandlerMethod(_			@Nullable HandlerMethod handlerMethod, Exception exception) {__		Class<?> handlerType = null___		if (handlerMethod != null) {_			_			_			handlerType = handlerMethod.getBeanType()__			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_			_			_			if (Proxy.isProxyClass(handlerType)) {_				handlerType = AopUtils.getTargetClass(handlerMethod.getBean())__			}_		}__		for (Map.Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			ControllerAdviceBean advice = entry.getKey()__			if (advice.isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(advice.resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null,if,none;nullable,protected,servlet,invocable,handler,method,get,exception,handler,method,nullable,handler,method,handler,method,exception,exception,class,handler,type,null,if,handler,method,null,handler,type,handler,method,get,bean,type,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,if,proxy,is,proxy,class,handler,type,handler,type,aop,utils,get,target,class,handler,method,get,bean,for,map,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,controller,advice,bean,advice,entry,get,key,if,advice,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,advice,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> @Nullable 	protected ServletInvocableHandlerMethod getExceptionHandlerMethod( 			@Nullable HandlerMethod handlerMethod, Exception exception);1532335166;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null} if none;@Nullable_	protected ServletInvocableHandlerMethod getExceptionHandlerMethod(_			@Nullable HandlerMethod handlerMethod, Exception exception) {__		Class<?> handlerType = null___		if (handlerMethod != null) {_			_			_			handlerType = handlerMethod.getBeanType()__			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_			_			_			if (Proxy.isProxyClass(handlerType)) {_				handlerType = AopUtils.getTargetClass(handlerMethod.getBean())__			}_		}__		for (Map.Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			ControllerAdviceBean advice = entry.getKey()__			if (advice.isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(advice.resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null,if,none;nullable,protected,servlet,invocable,handler,method,get,exception,handler,method,nullable,handler,method,handler,method,exception,exception,class,handler,type,null,if,handler,method,null,handler,type,handler,method,get,bean,type,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,if,proxy,is,proxy,class,handler,type,handler,type,aop,utils,get,target,class,handler,method,get,bean,for,map,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,controller,advice,bean,advice,entry,get,key,if,advice,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,advice,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> @Nullable 	protected ServletInvocableHandlerMethod getExceptionHandlerMethod( 			@Nullable HandlerMethod handlerMethod, Exception exception);1539917387;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null} if none;@Nullable_	protected ServletInvocableHandlerMethod getExceptionHandlerMethod(_			@Nullable HandlerMethod handlerMethod, Exception exception) {__		Class<?> handlerType = null___		if (handlerMethod != null) {_			_			_			handlerType = handlerMethod.getBeanType()__			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_			_			_			if (Proxy.isProxyClass(handlerType)) {_				handlerType = AopUtils.getTargetClass(handlerMethod.getBean())__			}_		}__		for (Map.Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			ControllerAdviceBean advice = entry.getKey()__			if (advice.isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(advice.resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null,if,none;nullable,protected,servlet,invocable,handler,method,get,exception,handler,method,nullable,handler,method,handler,method,exception,exception,class,handler,type,null,if,handler,method,null,handler,type,handler,method,get,bean,type,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,if,proxy,is,proxy,class,handler,type,handler,type,aop,utils,get,target,class,handler,method,get,bean,for,map,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,controller,advice,bean,advice,entry,get,key,if,advice,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,advice,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> @Nullable 	protected ServletInvocableHandlerMethod getExceptionHandlerMethod( 			@Nullable HandlerMethod handlerMethod, Exception exception);1540223162;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null} if none;@Nullable_	protected ServletInvocableHandlerMethod getExceptionHandlerMethod(_			@Nullable HandlerMethod handlerMethod, Exception exception) {__		Class<?> handlerType = null___		if (handlerMethod != null) {_			_			_			handlerType = handlerMethod.getBeanType()__			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_			_			_			if (Proxy.isProxyClass(handlerType)) {_				handlerType = AopUtils.getTargetClass(handlerMethod.getBean())__			}_		}__		for (Map.Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			ControllerAdviceBean advice = entry.getKey()__			if (advice.isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(advice.resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null,if,none;nullable,protected,servlet,invocable,handler,method,get,exception,handler,method,nullable,handler,method,handler,method,exception,exception,class,handler,type,null,if,handler,method,null,handler,type,handler,method,get,bean,type,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,if,proxy,is,proxy,class,handler,type,handler,type,aop,utils,get,target,class,handler,method,get,bean,for,map,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,controller,advice,bean,advice,entry,get,key,if,advice,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,advice,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> @Nullable 	protected ServletInvocableHandlerMethod getExceptionHandlerMethod( 			@Nullable HandlerMethod handlerMethod, Exception exception);1551080576;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null} if none;@Nullable_	protected ServletInvocableHandlerMethod getExceptionHandlerMethod(_			@Nullable HandlerMethod handlerMethod, Exception exception) {__		Class<?> handlerType = null___		if (handlerMethod != null) {_			_			_			handlerType = handlerMethod.getBeanType()__			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_			_			_			if (Proxy.isProxyClass(handlerType)) {_				handlerType = AopUtils.getTargetClass(handlerMethod.getBean())__			}_		}__		for (Map.Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			ControllerAdviceBean advice = entry.getKey()__			if (advice.isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(advice.resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null,if,none;nullable,protected,servlet,invocable,handler,method,get,exception,handler,method,nullable,handler,method,handler,method,exception,exception,class,handler,type,null,if,handler,method,null,handler,type,handler,method,get,bean,type,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,if,proxy,is,proxy,class,handler,type,handler,type,aop,utils,get,target,class,handler,method,get,bean,for,map,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,controller,advice,bean,advice,entry,get,key,if,advice,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,advice,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers);1500448076;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,nullable,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers);1518615676;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,nullable,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers);1522103912;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,nullable,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers);1529361191;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,nullable,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers);1532335166;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,nullable,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers);1539917387;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,nullable,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers);1540223162;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,nullable,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers);1551080576;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(@Nullable List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers = argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,nullable,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1386595157;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1400528836;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1401483748;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1401483748;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1405696918;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1406626957;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1406635879;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1421880880;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1426267113;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1444241166;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1453844264;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1453844270;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1455040622;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1459417956;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1465327321;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1467208426;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1467730834;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1477321489;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1477860020;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1479826823;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1481323282;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1495868221;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1496242568;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1496837955;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1498780456;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1500448076;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1518615676;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1522103912;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1529361191;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1532335166;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1539917387;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1540223162;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache();1551080576;Return an unmodifiable Map with the {@link ControllerAdvice @ControllerAdvice}_beans discovered in the ApplicationContext. The returned map will be empty if_the method is invoked before the bean has been initialized via_{@link #afterPropertiesSet()}.;public Map<ControllerAdviceBean, ExceptionHandlerMethodResolver> getExceptionHandlerAdviceCache() {_		return Collections.unmodifiableMap(this.exceptionHandlerAdviceCache)__	};return,an,unmodifiable,map,with,the,link,controller,advice,controller,advice,beans,discovered,in,the,application,context,the,returned,map,will,be,empty,if,the,method,is,invoked,before,the,bean,has,been,initialized,via,link,after,properties,set;public,map,controller,advice,bean,exception,handler,method,resolver,get,exception,handler,advice,cache,return,collections,unmodifiable,map,this,exception,handler,advice,cache
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1328020251;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1333735583;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1333745422;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1340380546;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1341869223;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1341880445;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1344976537;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1347070489;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1354921931;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1355352386;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1356735495;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1357119239;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1368482696;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1382113594;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1386595157;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1400528836;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1401483748;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1401483748;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1405696918;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1406626957;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1406635879;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1421880880;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1426267113;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1444241166;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1453844264;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1453844270;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1455040622;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1459417956;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1465327321;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1467208426;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1467730834;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1477321489;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1477860020;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1479826823;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers();1481323282;Return the configured handlers, or possibly {@code null} if not_initialized yet via {@link #afterPropertiesSet()}.;public HandlerMethodReturnValueHandlerComposite getReturnValueHandlers() {_		return this.returnValueHandlers__	};return,the,configured,handlers,or,possibly,code,null,if,not,initialized,yet,via,link,after,properties,set;public,handler,method,return,value,handler,composite,get,return,value,handlers,return,this,return,value,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1328020251;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()__		_		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(getMessageConverters()))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(getMessageConverters()))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))__		_		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1333735583;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(getMessageConverters()))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(getMessageConverters()))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1333745422;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(getMessageConverters()))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(getMessageConverters()))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1340380546;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1341869223;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1341880445;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1344976537;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1347070489;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1354921931;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1355352386;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1356735495;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1357119239;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1368482696;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1382113594;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1386595157;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(getMessageConverters(), this.contentNegotiationManager))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1400528836;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyInterceptors))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyInterceptors))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,interceptors,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,interceptors,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1401483748;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyInterceptors))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyInterceptors))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,interceptors,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,interceptors,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1401483748;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1405696918;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1406626957;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1406635879;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1421880880;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1426267113;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1444241166;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1453844264;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1453844270;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1455040622;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1459417956;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1465327321;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1467208426;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handler,method,return,value,handler,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1467730834;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1477321489;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1477860020;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1479826823;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1481323282;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1495868221;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1496242568;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1496837955;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1498780456;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1500448076;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1518615676;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1522103912;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1529361191;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1532335166;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1539917387;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1540223162;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers();1551080576;Return the list of return value handlers to use including built-in and_custom handlers provided via {@link #setReturnValueHandlers}.;protected List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {_		List<HandlerMethodReturnValueHandler> handlers = new ArrayList<>()___		_		handlers.add(new ModelAndViewMethodReturnValueHandler())__		handlers.add(new ModelMethodProcessor())__		handlers.add(new ViewMethodReturnValueHandler())__		handlers.add(new HttpEntityMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ModelAttributeMethodProcessor(false))__		handlers.add(new RequestResponseBodyMethodProcessor(_				getMessageConverters(), this.contentNegotiationManager, this.responseBodyAdvice))___		_		handlers.add(new ViewNameMethodReturnValueHandler())__		handlers.add(new MapMethodProcessor())___		_		if (getCustomReturnValueHandlers() != null) {_			handlers.addAll(getCustomReturnValueHandlers())__		}__		_		handlers.add(new ModelAttributeMethodProcessor(true))___		return handlers__	};return,the,list,of,return,value,handlers,to,use,including,built,in,and,custom,handlers,provided,via,link,set,return,value,handlers;protected,list,handler,method,return,value,handler,get,default,return,value,handlers,list,handler,method,return,value,handler,handlers,new,array,list,handlers,add,new,model,and,view,method,return,value,handler,handlers,add,new,model,method,processor,handlers,add,new,view,method,return,value,handler,handlers,add,new,http,entity,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,model,attribute,method,processor,false,handlers,add,new,request,response,body,method,processor,get,message,converters,this,content,negotiation,manager,this,response,body,advice,handlers,add,new,view,name,method,return,value,handler,handlers,add,new,map,method,processor,if,get,custom,return,value,handlers,null,handlers,add,all,get,custom,return,value,handlers,handlers,add,new,model,attribute,method,processor,true,return,handlers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1328020251;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1333735583;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1333745422;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1340380546;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1341869223;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1341880445;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1344976537;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1347070489;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1354921931;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1355352386;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1356735495;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1357119239;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1368482696;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1382113594;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1386595157;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1400528836;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1401483748;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1401483748;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1405696918;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1406626957;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1406635879;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1421880880;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1426267113;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1444241166;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1453844264;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1453844270;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1455040622;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1459417956;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1465327321;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1467208426;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1467730834;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1477321489;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1477860020;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1479826823;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1481323282;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1495868221;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1496242568;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1496837955;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1498780456;Provide resolvers for custom argument types. Custom resolvers are ordered_after built-in ones. To override the built-in support for argument_resolution use {@link #setArgumentResolvers} instead.;public void setCustomArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		this.customArgumentResolvers= argumentResolvers__	};provide,resolvers,for,custom,argument,types,custom,resolvers,are,ordered,after,built,in,ones,to,override,the,built,in,support,for,argument,resolution,use,link,set,argument,resolvers,instead;public,void,set,custom,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,this,custom,argument,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1328020251;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1333735583;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1333745422;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1340380546;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1341869223;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1341880445;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1344976537;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1347070489;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1354921931;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1355352386;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1356735495;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1357119239;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1368482696;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1382113594;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1386595157;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1400528836;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1401483748;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1401483748;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1405696918;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1406626957;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1406635879;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1421880880;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1426267113;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1444241166;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1453844264;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1453844270;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1455040622;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1459417956;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1465327321;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1467208426;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1467730834;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1477321489;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1477860020;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1479826823;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1481323282;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1495868221;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers);1496242568;Configure the complete list of supported argument types thus overriding_the resolvers that would otherwise be configured by default.;public void setArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {_		if (argumentResolvers == null) {_			this.argumentResolvers = null__		}_		else {_			this.argumentResolvers = new HandlerMethodArgumentResolverComposite()__			this.argumentResolvers.addResolvers(argumentResolvers)__		}_	};configure,the,complete,list,of,supported,argument,types,thus,overriding,the,resolvers,that,would,otherwise,be,configured,by,default;public,void,set,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers,if,argument,resolvers,null,this,argument,resolvers,null,else,this,argument,resolvers,new,handler,method,argument,resolver,composite,this,argument,resolvers,add,resolvers,argument,resolvers
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1328020251;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1333735583;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1333745422;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1340380546;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1341869223;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1341880445;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1344976537;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1347070489;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1354921931;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1355352386;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1356735495;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1357119239;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1368482696;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1382113594;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1386595157;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1400528836;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1401483748;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1401483748;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1405696918;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1406626957;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1406635879;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1421880880;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1426267113;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1444241166;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1453844264;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1453844270;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1455040622;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1459417956;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1465327321;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1467208426;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1467730834;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1477321489;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1477860020;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1479826823;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1481323282;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1495868221;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1496242568;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1496837955;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1498780456;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1500448076;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1518615676;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1522103912;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1529361191;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1532335166;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1539917387;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1540223162;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters);1551080576;Set the message body converters to use._<p>These converters are used to convert from and to HTTP requests and responses.;public void setMessageConverters(List<HttpMessageConverter<?>> messageConverters) {_		this.messageConverters = messageConverters__	};set,the,message,body,converters,to,use,p,these,converters,are,used,to,convert,from,and,to,http,requests,and,responses;public,void,set,message,converters,list,http,message,converter,message,converters,this,message,converters,message,converters
ExceptionHandlerExceptionResolver -> private ExceptionHandlerMethodResolver getExceptionHandlerMethodResolver(Class<?> handlerType);1328020251;Return a method resolver for the given handler type, never {@code null}.;private ExceptionHandlerMethodResolver getExceptionHandlerMethodResolver(Class<?> handlerType) {_		ExceptionHandlerMethodResolver resolver = this.exceptionHandlerMethodResolvers.get(handlerType)__		if (resolver == null) {_			resolver = new ExceptionHandlerMethodResolver(handlerType)__			this.exceptionHandlerMethodResolvers.put(handlerType, resolver)__		}_		return resolver__	};return,a,method,resolver,for,the,given,handler,type,never,code,null;private,exception,handler,method,resolver,get,exception,handler,method,resolver,class,handler,type,exception,handler,method,resolver,resolver,this,exception,handler,method,resolvers,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,method,resolvers,put,handler,type,resolver,return,resolver
ExceptionHandlerExceptionResolver -> private ExceptionHandlerMethodResolver getExceptionHandlerMethodResolver(Class<?> handlerType);1333735583;Return a method resolver for the given handler type, never {@code null}.;private ExceptionHandlerMethodResolver getExceptionHandlerMethodResolver(Class<?> handlerType) {_		ExceptionHandlerMethodResolver resolver = this.exceptionHandlerMethodResolvers.get(handlerType)__		if (resolver == null) {_			resolver = new ExceptionHandlerMethodResolver(handlerType)__			this.exceptionHandlerMethodResolvers.put(handlerType, resolver)__		}_		return resolver__	};return,a,method,resolver,for,the,given,handler,type,never,code,null;private,exception,handler,method,resolver,get,exception,handler,method,resolver,class,handler,type,exception,handler,method,resolver,resolver,this,exception,handler,method,resolvers,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,method,resolvers,put,handler,type,resolver,return,resolver
ExceptionHandlerExceptionResolver -> private ExceptionHandlerMethodResolver getExceptionHandlerMethodResolver(Class<?> handlerType);1333745422;Return a method resolver for the given handler type, never {@code null}.;private ExceptionHandlerMethodResolver getExceptionHandlerMethodResolver(Class<?> handlerType) {_		ExceptionHandlerMethodResolver resolver = this.exceptionHandlerMethodResolvers.get(handlerType)__		if (resolver == null) {_			resolver = new ExceptionHandlerMethodResolver(handlerType)__			this.exceptionHandlerMethodResolvers.put(handlerType, resolver)__		}_		return resolver__	};return,a,method,resolver,for,the,given,handler,type,never,code,null;private,exception,handler,method,resolver,get,exception,handler,method,resolver,class,handler,type,exception,handler,method,resolver,resolver,this,exception,handler,method,resolvers,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,method,resolvers,put,handler,type,resolver,return,resolver
ExceptionHandlerExceptionResolver -> private ExceptionHandlerMethodResolver getExceptionHandlerMethodResolver(Class<?> handlerType);1340380546;Return a method resolver for the given handler type, never {@code null}.;private ExceptionHandlerMethodResolver getExceptionHandlerMethodResolver(Class<?> handlerType) {_		ExceptionHandlerMethodResolver resolver = this.exceptionHandlerMethodResolvers.get(handlerType)__		if (resolver == null) {_			resolver = new ExceptionHandlerMethodResolver(handlerType)__			this.exceptionHandlerMethodResolvers.put(handlerType, resolver)__		}_		return resolver__	};return,a,method,resolver,for,the,given,handler,type,never,code,null;private,exception,handler,method,resolver,get,exception,handler,method,resolver,class,handler,type,exception,handler,method,resolver,resolver,this,exception,handler,method,resolvers,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,method,resolvers,put,handler,type,resolver,return,resolver
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1386595157;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1400528836;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1401483748;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1401483748;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1405696918;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1406626957;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1406635879;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1421880880;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1426267113;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1444241166;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1453844264;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1453844270;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1455040622;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1459417956;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1465327321;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1467208426;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1467730834;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1477321489;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1477860020;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1479826823;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1481323282;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1495868221;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1496242568;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1496837955;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1498780456;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1500448076;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1518615676;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1522103912;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1529361191;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1532335166;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1539917387;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1540223162;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public ContentNegotiationManager getContentNegotiationManager();1551080576;Return the configured {@link ContentNegotiationManager}.;public ContentNegotiationManager getContentNegotiationManager() {_		return this.contentNegotiationManager__	};return,the,configured,link,content,negotiation,manager;public,content,negotiation,manager,get,content,negotiation,manager,return,this,content,negotiation,manager
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1328020251;Find the @{@link ExceptionHandler} method for the given exception._The default implementation searches @{@link ExceptionHandler} methods_in the class hierarchy of the method that raised the exception._@param handlerMethod the method where the exception was raised_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = handlerMethod.getBeanType()__		Method method = getExceptionHandlerMethodResolver(handlerType).resolveMethod(exception)__		return (method != null ? new ServletInvocableHandlerMethod(handlerMethod.getBean(), method) : null)__	};find,the,link,exception,handler,method,for,the,given,exception,the,default,implementation,searches,link,exception,handler,methods,in,the,class,hierarchy,of,the,method,that,raised,the,exception,param,handler,method,the,method,where,the,exception,was,raised,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,get,bean,type,method,method,get,exception,handler,method,resolver,handler,type,resolve,method,exception,return,method,null,new,servlet,invocable,handler,method,handler,method,get,bean,method,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1333735583;Find the @{@link ExceptionHandler} method for the given exception._The default implementation searches @{@link ExceptionHandler} methods_in the class hierarchy of the method that raised the exception._@param handlerMethod the method where the exception was raised, possibly {@code null}_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		if (handlerMethod == null) {_			return null__		}_		Class<?> handlerType = handlerMethod.getBeanType()__		Method method = getExceptionHandlerMethodResolver(handlerType).resolveMethod(exception)__		return (method != null ? new ServletInvocableHandlerMethod(handlerMethod.getBean(), method) : null)__	};find,the,link,exception,handler,method,for,the,given,exception,the,default,implementation,searches,link,exception,handler,methods,in,the,class,hierarchy,of,the,method,that,raised,the,exception,param,handler,method,the,method,where,the,exception,was,raised,possibly,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,if,handler,method,null,return,null,class,handler,type,handler,method,get,bean,type,method,method,get,exception,handler,method,resolver,handler,type,resolve,method,exception,return,method,null,new,servlet,invocable,handler,method,handler,method,get,bean,method,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1333745422;Find the @{@link ExceptionHandler} method for the given exception._The default implementation searches @{@link ExceptionHandler} methods_in the class hierarchy of the method that raised the exception._@param handlerMethod the method where the exception was raised, possibly {@code null}_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		if (handlerMethod == null) {_			return null__		}_		Class<?> handlerType = handlerMethod.getBeanType()__		Method method = getExceptionHandlerMethodResolver(handlerType).resolveMethod(exception)__		return (method != null ? new ServletInvocableHandlerMethod(handlerMethod.getBean(), method) : null)__	};find,the,link,exception,handler,method,for,the,given,exception,the,default,implementation,searches,link,exception,handler,methods,in,the,class,hierarchy,of,the,method,that,raised,the,exception,param,handler,method,the,method,where,the,exception,was,raised,possibly,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,if,handler,method,null,return,null,class,handler,type,handler,method,get,bean,type,method,method,get,exception,handler,method,resolver,handler,type,resolve,method,exception,return,method,null,new,servlet,invocable,handler,method,handler,method,get,bean,method,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1340380546;Find the @{@link ExceptionHandler} method for the given exception._The default implementation searches @{@link ExceptionHandler} methods_in the class hierarchy of the method that raised the exception._@param handlerMethod the method where the exception was raised, possibly {@code null}_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		if (handlerMethod == null) {_			return null__		}_		Class<?> handlerType = handlerMethod.getBeanType()__		Method method = getExceptionHandlerMethodResolver(handlerType).resolveMethod(exception)__		return (method != null ? new ServletInvocableHandlerMethod(handlerMethod.getBean(), method) : null)__	};find,the,link,exception,handler,method,for,the,given,exception,the,default,implementation,searches,link,exception,handler,methods,in,the,class,hierarchy,of,the,method,that,raised,the,exception,param,handler,method,the,method,where,the,exception,was,raised,possibly,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,if,handler,method,null,return,null,class,handler,type,handler,method,get,bean,type,method,method,get,exception,handler,method,resolver,handler,type,resolve,method,exception,return,method,null,new,servlet,invocable,handler,method,handler,method,get,bean,method,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1341869223;Find the @{@link ExceptionHandler} method for the given exception._The default implementation searches @{@link ExceptionHandler} methods_in the class hierarchy of the method that raised the exception._@param handlerMethod the method where the exception was raised, possibly {@code null}_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		if (handlerMethod != null) {_			Class<?> handlerType = handlerMethod.getBeanType()__			ExceptionHandlerMethodResolver resolver = this.exceptionHandlersByType.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlersByType.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}_		return getGlobalExceptionHandlerMethod(exception)__	};find,the,link,exception,handler,method,for,the,given,exception,the,default,implementation,searches,link,exception,handler,methods,in,the,class,hierarchy,of,the,method,that,raised,the,exception,param,handler,method,the,method,where,the,exception,was,raised,possibly,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,if,handler,method,null,class,handler,type,handler,method,get,bean,type,exception,handler,method,resolver,resolver,this,exception,handlers,by,type,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handlers,by,type,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,return,get,global,exception,handler,method,exception
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1341880445;Find the @{@link ExceptionHandler} method for the given exception._The default implementation searches @{@link ExceptionHandler} methods_in the class hierarchy of the method that raised the exception._@param handlerMethod the method where the exception was raised, possibly {@code null}_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		if (handlerMethod != null) {_			Class<?> handlerType = handlerMethod.getBeanType()__			ExceptionHandlerMethodResolver resolver = this.exceptionHandlersByType.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlersByType.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}_		return getGlobalExceptionHandlerMethod(exception)__	};find,the,link,exception,handler,method,for,the,given,exception,the,default,implementation,searches,link,exception,handler,methods,in,the,class,hierarchy,of,the,method,that,raised,the,exception,param,handler,method,the,method,where,the,exception,was,raised,possibly,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,if,handler,method,null,class,handler,type,handler,method,get,bean,type,exception,handler,method,resolver,resolver,this,exception,handlers,by,type,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handlers,by,type,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,return,get,global,exception,handler,method,exception
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1344976537;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised, possibly {@code null}_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		if (handlerMethod != null) {_			Class<?> handlerType = handlerMethod.getBeanType()__			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}_		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			Method method = entry.getValue().resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__			}_		}_		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,possibly,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,if,handler,method,null,class,handler,type,handler,method,get,bean,type,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,method,method,entry,get,value,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1347070489;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised, possibly {@code null}_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		if (handlerMethod != null) {_			Class<?> handlerType = handlerMethod.getBeanType()__			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}_		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			Method method = entry.getValue().resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__			}_		}_		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,possibly,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,if,handler,method,null,class,handler,type,handler,method,get,bean,type,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,method,method,entry,get,value,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1354921931;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised, possibly {@code null}_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		if (handlerMethod != null) {_			Class<?> handlerType = handlerMethod.getBeanType()__			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}_		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			Method method = entry.getValue().resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__			}_		}_		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,possibly,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,if,handler,method,null,class,handler,type,handler,method,get,bean,type,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,method,method,entry,get,value,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1355352386;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised, possibly {@code null}_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		if (handlerMethod != null) {_			Class<?> handlerType = handlerMethod.getBeanType()__			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}_		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			Method method = entry.getValue().resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__			}_		}_		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,possibly,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,if,handler,method,null,class,handler,type,handler,method,get,bean,type,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,method,method,entry,get,value,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1356735495;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised, possibly {@code null}_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		if (handlerMethod != null) {_			Class<?> handlerType = handlerMethod.getBeanType()__			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}_		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			Method method = entry.getValue().resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__			}_		}_		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,possibly,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,if,handler,method,null,class,handler,type,handler,method,get,bean,type,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,method,method,entry,get,value,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1357119239;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised, possibly {@code null}_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		if (handlerMethod != null) {_			Class<?> handlerType = handlerMethod.getBeanType()__			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}_		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			Method method = entry.getValue().resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__			}_		}_		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,possibly,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,if,handler,method,null,class,handler,type,handler,method,get,bean,type,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,method,method,entry,get,value,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1368482696;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised, possibly {@code null}_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		if (handlerMethod != null) {_			Class<?> handlerType = handlerMethod.getBeanType()__			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}_		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			Method method = entry.getValue().resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__			}_		}_		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,possibly,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,if,handler,method,null,class,handler,type,handler,method,get,bean,type,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,method,method,entry,get,value,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1382113594;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised, possibly {@code null}_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null) ? handlerMethod.getBeanType() : null__		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}_		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if(entry.getKey().isApplicableToBeanType(handlerType)) {_				Method method = entry.getValue().resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}_		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,possibly,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,method,method,entry,get,value,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1386595157;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised, possibly {@code null}_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null) ? handlerMethod.getBeanType() : null__		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}_		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if(entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}_		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,possibly,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1400528836;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised, possibly {@code null}_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null) ? handlerMethod.getBeanType() : null__		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}_		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if(entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}_		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,possibly,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1401483748;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised, possibly {@code null}_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null) ? handlerMethod.getBeanType() : null__		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}_		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if(entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}_		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,possibly,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1401483748;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised, possibly {@code null}_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null) ? handlerMethod.getBeanType() : null__		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}_		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if(entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}_		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,possibly,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1405696918;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised, possibly {@code null}_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null) ? handlerMethod.getBeanType() : null__		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}_		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if (entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}_		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,possibly,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1406626957;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null ? handlerMethod.getBeanType() : null)___		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}__		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if (entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1406635879;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null ? handlerMethod.getBeanType() : null)___		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}__		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if (entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1421880880;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null ? handlerMethod.getBeanType() : null)___		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}__		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if (entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1426267113;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null ? handlerMethod.getBeanType() : null)___		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}__		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if (entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1444241166;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null ? handlerMethod.getBeanType() : null)___		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}__		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if (entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1453844264;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null ? handlerMethod.getBeanType() : null)___		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}__		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if (entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1453844270;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null ? handlerMethod.getBeanType() : null)___		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}__		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if (entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1455040622;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null ? handlerMethod.getBeanType() : null)___		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}__		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if (entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1459417956;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null ? handlerMethod.getBeanType() : null)___		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}__		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if (entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1465327321;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null ? handlerMethod.getBeanType() : null)___		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}__		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if (entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1467208426;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null ? handlerMethod.getBeanType() : null)___		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}__		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if (entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1467730834;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null ? handlerMethod.getBeanType() : null)___		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}__		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if (entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1477321489;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null ? handlerMethod.getBeanType() : null)___		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}__		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if (entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1477860020;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null ? handlerMethod.getBeanType() : null)___		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}__		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if (entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1479826823;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null ? handlerMethod.getBeanType() : null)___		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}__		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if (entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception);1481323282;Find an {@code @ExceptionHandler} method for the given exception. The default_implementation searches methods in the class hierarchy of the controller first_and if not found, it continues searching for additional {@code @ExceptionHandler}_methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}_Spring-managed beans were detected._@param handlerMethod the method where the exception was raised (may be {@code null})_@param exception the raised exception_@return a method to handle the exception, or {@code null};protected ServletInvocableHandlerMethod getExceptionHandlerMethod(HandlerMethod handlerMethod, Exception exception) {_		Class<?> handlerType = (handlerMethod != null ? handlerMethod.getBeanType() : null)___		if (handlerMethod != null) {_			ExceptionHandlerMethodResolver resolver = this.exceptionHandlerCache.get(handlerType)__			if (resolver == null) {_				resolver = new ExceptionHandlerMethodResolver(handlerType)__				this.exceptionHandlerCache.put(handlerType, resolver)__			}_			Method method = resolver.resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(handlerMethod.getBean(), method)__			}_		}__		for (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {_			if (entry.getKey().isApplicableToBeanType(handlerType)) {_				ExceptionHandlerMethodResolver resolver = entry.getValue()__				Method method = resolver.resolveMethod(exception)__				if (method != null) {_					return new ServletInvocableHandlerMethod(entry.getKey().resolveBean(), method)__				}_			}_		}__		return null__	};find,an,code,exception,handler,method,for,the,given,exception,the,default,implementation,searches,methods,in,the,class,hierarchy,of,the,controller,first,and,if,not,found,it,continues,searching,for,additional,code,exception,handler,methods,assuming,some,linkplain,controller,advice,controller,advice,spring,managed,beans,were,detected,param,handler,method,the,method,where,the,exception,was,raised,may,be,code,null,param,exception,the,raised,exception,return,a,method,to,handle,the,exception,or,code,null;protected,servlet,invocable,handler,method,get,exception,handler,method,handler,method,handler,method,exception,exception,class,handler,type,handler,method,null,handler,method,get,bean,type,null,if,handler,method,null,exception,handler,method,resolver,resolver,this,exception,handler,cache,get,handler,type,if,resolver,null,resolver,new,exception,handler,method,resolver,handler,type,this,exception,handler,cache,put,handler,type,resolver,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,handler,method,get,bean,method,for,entry,controller,advice,bean,exception,handler,method,resolver,entry,this,exception,handler,advice,cache,entry,set,if,entry,get,key,is,applicable,to,bean,type,handler,type,exception,handler,method,resolver,resolver,entry,get,value,method,method,resolver,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,resolve,bean,method,return,null
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1340380546;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1341869223;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1341880445;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1344976537;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1347070489;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1354921931;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1355352386;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1356735495;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1357119239;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1368482696;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1382113594;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1386595157;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1400528836;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1401483748;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1401483748;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1405696918;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1406626957;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1406635879;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1421880880;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1426267113;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1444241166;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1453844264;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1453844270;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1455040622;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1459417956;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1465327321;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1467208426;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1467730834;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1477321489;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1477860020;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1479826823;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1481323282;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1495868221;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1496242568;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1496837955;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1498780456;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1500448076;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1518615676;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1522103912;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1529361191;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1532335166;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1539917387;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1540223162;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager);1551080576;Set the {@link ContentNegotiationManager} to use to determine requested media types._If not set, the default constructor is used.;public void setContentNegotiationManager(ContentNegotiationManager contentNegotiationManager) {_		this.contentNegotiationManager = contentNegotiationManager__	};set,the,link,content,negotiation,manager,to,use,to,determine,requested,media,types,if,not,set,the,default,constructor,is,used;public,void,set,content,negotiation,manager,content,negotiation,manager,content,negotiation,manager,this,content,negotiation,manager,content,negotiation,manager
ExceptionHandlerExceptionResolver -> public void setGlobalExceptionHandlers(Object... handlers);1341869223;Provide instances of objects with {@link ExceptionHandler @ExceptionHandler}_methods to apply globally, i.e. regardless of the selected controller._<p>{@code @ExceptionHandler} methods in the controller are always looked_up before {@code @ExceptionHandler} methods in global handlers.;public void setGlobalExceptionHandlers(Object... handlers) {_		for (Object handler : handlers) {_			this.globalExceptionHandlers.put(handler, new ExceptionHandlerMethodResolver(handler.getClass()))__		}_	};provide,instances,of,objects,with,link,exception,handler,exception,handler,methods,to,apply,globally,i,e,regardless,of,the,selected,controller,p,code,exception,handler,methods,in,the,controller,are,always,looked,up,before,code,exception,handler,methods,in,global,handlers;public,void,set,global,exception,handlers,object,handlers,for,object,handler,handlers,this,global,exception,handlers,put,handler,new,exception,handler,method,resolver,handler,get,class
ExceptionHandlerExceptionResolver -> public void setGlobalExceptionHandlers(Object... handlers);1341880445;Provide instances of objects with {@link ExceptionHandler @ExceptionHandler}_methods to apply globally, i.e. regardless of the selected controller._<p>{@code @ExceptionHandler} methods in the controller are always looked_up before {@code @ExceptionHandler} methods in global handlers.;public void setGlobalExceptionHandlers(Object... handlers) {_		for (Object handler : handlers) {_			this.globalExceptionHandlers.put(handler, new ExceptionHandlerMethodResolver(handler.getClass()))__		}_	};provide,instances,of,objects,with,link,exception,handler,exception,handler,methods,to,apply,globally,i,e,regardless,of,the,selected,controller,p,code,exception,handler,methods,in,the,controller,are,always,looked,up,before,code,exception,handler,methods,in,global,handlers;public,void,set,global,exception,handlers,object,handlers,for,object,handler,handlers,this,global,exception,handlers,put,handler,new,exception,handler,method,resolver,handler,get,class
ExceptionHandlerExceptionResolver -> private ServletInvocableHandlerMethod getGlobalExceptionHandlerMethod(Exception exception);1341869223;Return a global {@code @ExceptionHandler} method for the given exception or {@code null}.;private ServletInvocableHandlerMethod getGlobalExceptionHandlerMethod(Exception exception) {_		for (Entry<Object, ExceptionHandlerMethodResolver> entry : this.globalExceptionHandlers.entrySet()) {_			Method method = entry.getValue().resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(entry.getKey(), method)__			}_		}_		return null__	};return,a,global,code,exception,handler,method,for,the,given,exception,or,code,null;private,servlet,invocable,handler,method,get,global,exception,handler,method,exception,exception,for,entry,object,exception,handler,method,resolver,entry,this,global,exception,handlers,entry,set,method,method,entry,get,value,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,method,return,null
ExceptionHandlerExceptionResolver -> private ServletInvocableHandlerMethod getGlobalExceptionHandlerMethod(Exception exception);1341880445;Return a global {@code @ExceptionHandler} method for the given exception or {@code null}.;private ServletInvocableHandlerMethod getGlobalExceptionHandlerMethod(Exception exception) {_		for (Entry<Object, ExceptionHandlerMethodResolver> entry : this.globalExceptionHandlers.entrySet()) {_			Method method = entry.getValue().resolveMethod(exception)__			if (method != null) {_				return new ServletInvocableHandlerMethod(entry.getKey(), method)__			}_		}_		return null__	};return,a,global,code,exception,handler,method,for,the,given,exception,or,code,null;private,servlet,invocable,handler,method,get,global,exception,handler,method,exception,exception,for,entry,object,exception,handler,method,resolver,entry,this,global,exception,handlers,entry,set,method,method,entry,get,value,resolve,method,exception,if,method,null,return,new,servlet,invocable,handler,method,entry,get,key,method,return,null
