# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractFlashMapManager -> protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request);1328092788;Whether the given FlashMap matches the current request._The default implementation uses the target request path and query params_saved in the FlashMap.;protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request) {_		if (flashMap.getTargetRequestPath() != null) {_			String requestUri = this.urlPathHelper.getOriginatingRequestUri(request)__			if (!requestUri.equals(flashMap.getTargetRequestPath())_					&& !requestUri.equals(flashMap.getTargetRequestPath() + "/")) {_				return false__			}_		}_		MultiValueMap<String, String> targetParams = flashMap.getTargetRequestParams()__		for (String paramName : targetParams.keySet()) {_			for (String targetValue : targetParams.get(paramName)) {_				if (!ObjectUtils.containsElement(request.getParameterValues(paramName), targetValue)) {_					return false__				}_			}_		}_		return true__	};whether,the,given,flash,map,matches,the,current,request,the,default,implementation,uses,the,target,request,path,and,query,params,saved,in,the,flash,map;protected,boolean,is,flash,map,for,request,flash,map,flash,map,http,servlet,request,request,if,flash,map,get,target,request,path,null,string,request,uri,this,url,path,helper,get,originating,request,uri,request,if,request,uri,equals,flash,map,get,target,request,path,request,uri,equals,flash,map,get,target,request,path,return,false,multi,value,map,string,string,target,params,flash,map,get,target,request,params,for,string,param,name,target,params,key,set,for,string,target,value,target,params,get,param,name,if,object,utils,contains,element,request,get,parameter,values,param,name,target,value,return,false,return,true
AbstractFlashMapManager -> protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request);1329142650;Whether the given FlashMap matches the current request._The default implementation uses the target request path and query_parameters saved in the FlashMap.;protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request) {_		if (flashMap.getTargetRequestPath() != null) {_			String requestUri = this.urlPathHelper.getOriginatingRequestUri(request)__			if (!requestUri.equals(flashMap.getTargetRequestPath())_					&& !requestUri.equals(flashMap.getTargetRequestPath() + "/")) {_				return false__			}_		}_		MultiValueMap<String, String> targetParams = flashMap.getTargetRequestParams()__		for (String paramName : targetParams.keySet()) {_			for (String targetValue : targetParams.get(paramName)) {_				if (!ObjectUtils.containsElement(request.getParameterValues(paramName), targetValue)) {_					return false__				}_			}_		}_		return true__	};whether,the,given,flash,map,matches,the,current,request,the,default,implementation,uses,the,target,request,path,and,query,parameters,saved,in,the,flash,map;protected,boolean,is,flash,map,for,request,flash,map,flash,map,http,servlet,request,request,if,flash,map,get,target,request,path,null,string,request,uri,this,url,path,helper,get,originating,request,uri,request,if,request,uri,equals,flash,map,get,target,request,path,request,uri,equals,flash,map,get,target,request,path,return,false,multi,value,map,string,string,target,params,flash,map,get,target,request,params,for,string,param,name,target,params,key,set,for,string,target,value,target,params,get,param,name,if,object,utils,contains,element,request,get,parameter,values,param,name,target,value,return,false,return,true
AbstractFlashMapManager -> protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request);1345577241;Whether the given FlashMap matches the current request._The default implementation uses the target request path and query_parameters saved in the FlashMap.;protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request) {_		if (flashMap.getTargetRequestPath() != null) {_			String requestUri = this.urlPathHelper.getOriginatingRequestUri(request)__			if (!requestUri.equals(flashMap.getTargetRequestPath())_					&& !requestUri.equals(flashMap.getTargetRequestPath() + "/")) {_				return false__			}_		}_		MultiValueMap<String, String> targetParams = flashMap.getTargetRequestParams()__		for (String paramName : targetParams.keySet()) {_			for (String targetValue : targetParams.get(paramName)) {_				if (!ObjectUtils.containsElement(request.getParameterValues(paramName), targetValue)) {_					return false__				}_			}_		}_		return true__	};whether,the,given,flash,map,matches,the,current,request,the,default,implementation,uses,the,target,request,path,and,query,parameters,saved,in,the,flash,map;protected,boolean,is,flash,map,for,request,flash,map,flash,map,http,servlet,request,request,if,flash,map,get,target,request,path,null,string,request,uri,this,url,path,helper,get,originating,request,uri,request,if,request,uri,equals,flash,map,get,target,request,path,request,uri,equals,flash,map,get,target,request,path,return,false,multi,value,map,string,string,target,params,flash,map,get,target,request,params,for,string,param,name,target,params,key,set,for,string,target,value,target,params,get,param,name,if,object,utils,contains,element,request,get,parameter,values,param,name,target,value,return,false,return,true
AbstractFlashMapManager -> protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request);1356735495;Whether the given FlashMap matches the current request._The default implementation uses the target request path and query_parameters saved in the FlashMap.;protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request) {_		if (flashMap.getTargetRequestPath() != null) {_			String requestUri = this.urlPathHelper.getOriginatingRequestUri(request)__			if (!requestUri.equals(flashMap.getTargetRequestPath())_					&& !requestUri.equals(flashMap.getTargetRequestPath() + "/")) {_				return false__			}_		}_		MultiValueMap<String, String> targetParams = flashMap.getTargetRequestParams()__		for (String paramName : targetParams.keySet()) {_			for (String targetValue : targetParams.get(paramName)) {_				if (!ObjectUtils.containsElement(request.getParameterValues(paramName), targetValue)) {_					return false__				}_			}_		}_		return true__	};whether,the,given,flash,map,matches,the,current,request,the,default,implementation,uses,the,target,request,path,and,query,parameters,saved,in,the,flash,map;protected,boolean,is,flash,map,for,request,flash,map,flash,map,http,servlet,request,request,if,flash,map,get,target,request,path,null,string,request,uri,this,url,path,helper,get,originating,request,uri,request,if,request,uri,equals,flash,map,get,target,request,path,request,uri,equals,flash,map,get,target,request,path,return,false,multi,value,map,string,string,target,params,flash,map,get,target,request,params,for,string,param,name,target,params,key,set,for,string,target,value,target,params,get,param,name,if,object,utils,contains,element,request,get,parameter,values,param,name,target,value,return,false,return,true
AbstractFlashMapManager -> protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request);1357119239;Whether the given FlashMap matches the current request._The default implementation uses the target request path and query_parameters saved in the FlashMap.;protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request) {_		if (flashMap.getTargetRequestPath() != null) {_			String requestUri = this.urlPathHelper.getOriginatingRequestUri(request)__			if (!requestUri.equals(flashMap.getTargetRequestPath())_					&& !requestUri.equals(flashMap.getTargetRequestPath() + "/")) {_				return false__			}_		}_		MultiValueMap<String, String> targetParams = flashMap.getTargetRequestParams()__		for (String paramName : targetParams.keySet()) {_			for (String targetValue : targetParams.get(paramName)) {_				if (!ObjectUtils.containsElement(request.getParameterValues(paramName), targetValue)) {_					return false__				}_			}_		}_		return true__	};whether,the,given,flash,map,matches,the,current,request,the,default,implementation,uses,the,target,request,path,and,query,parameters,saved,in,the,flash,map;protected,boolean,is,flash,map,for,request,flash,map,flash,map,http,servlet,request,request,if,flash,map,get,target,request,path,null,string,request,uri,this,url,path,helper,get,originating,request,uri,request,if,request,uri,equals,flash,map,get,target,request,path,request,uri,equals,flash,map,get,target,request,path,return,false,multi,value,map,string,string,target,params,flash,map,get,target,request,params,for,string,param,name,target,params,key,set,for,string,target,value,target,params,get,param,name,if,object,utils,contains,element,request,get,parameter,values,param,name,target,value,return,false,return,true
AbstractFlashMapManager -> protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request);1368482696;Whether the given FlashMap matches the current request._The default implementation uses the target request path and query_parameters saved in the FlashMap.;protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request) {_		if (flashMap.getTargetRequestPath() != null) {_			String requestUri = this.urlPathHelper.getOriginatingRequestUri(request)__			if (!requestUri.equals(flashMap.getTargetRequestPath())_					&& !requestUri.equals(flashMap.getTargetRequestPath() + "/")) {_				return false__			}_		}_		MultiValueMap<String, String> targetParams = flashMap.getTargetRequestParams()__		for (String paramName : targetParams.keySet()) {_			for (String targetValue : targetParams.get(paramName)) {_				if (!ObjectUtils.containsElement(request.getParameterValues(paramName), targetValue)) {_					return false__				}_			}_		}_		return true__	};whether,the,given,flash,map,matches,the,current,request,the,default,implementation,uses,the,target,request,path,and,query,parameters,saved,in,the,flash,map;protected,boolean,is,flash,map,for,request,flash,map,flash,map,http,servlet,request,request,if,flash,map,get,target,request,path,null,string,request,uri,this,url,path,helper,get,originating,request,uri,request,if,request,uri,equals,flash,map,get,target,request,path,request,uri,equals,flash,map,get,target,request,path,return,false,multi,value,map,string,string,target,params,flash,map,get,target,request,params,for,string,param,name,target,params,key,set,for,string,target,value,target,params,get,param,name,if,object,utils,contains,element,request,get,parameter,values,param,name,target,value,return,false,return,true
AbstractFlashMapManager -> protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request);1394126962;Whether the given FlashMap matches the current request._Uses the expected request path and query parameters saved in the FlashMap.;protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request) {_		String expectedPath = flashMap.getTargetRequestPath()__		if (expectedPath != null) {_			String requestUri = this.urlPathHelper.getOriginatingRequestUri(request)__			if (!requestUri.equals(expectedPath)_					&& !requestUri.equals(expectedPath + "/")) {_				return false__			}_		}_		MultiValueMap<String, String> targetParams = flashMap.getTargetRequestParams()__		for (String expectedName : targetParams.keySet()) {_			for (String expectedValue : targetParams.get(expectedName)) {_				if (!ObjectUtils.containsElement(request.getParameterValues(expectedName), expectedValue)) {_					return false__				}_			}_		}_		return true__	};whether,the,given,flash,map,matches,the,current,request,uses,the,expected,request,path,and,query,parameters,saved,in,the,flash,map;protected,boolean,is,flash,map,for,request,flash,map,flash,map,http,servlet,request,request,string,expected,path,flash,map,get,target,request,path,if,expected,path,null,string,request,uri,this,url,path,helper,get,originating,request,uri,request,if,request,uri,equals,expected,path,request,uri,equals,expected,path,return,false,multi,value,map,string,string,target,params,flash,map,get,target,request,params,for,string,expected,name,target,params,key,set,for,string,expected,value,target,params,get,expected,name,if,object,utils,contains,element,request,get,parameter,values,expected,name,expected,value,return,false,return,true
AbstractFlashMapManager -> protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request);1394572186;Whether the given FlashMap matches the current request._Uses the expected request path and query parameters saved in the FlashMap.;protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request) {_		String expectedPath = flashMap.getTargetRequestPath()__		if (expectedPath != null) {_			String requestUri = this.urlPathHelper.getOriginatingRequestUri(request)__			if (!requestUri.equals(expectedPath) && !requestUri.equals(expectedPath + "/")) {_				return false__			}_		}_		MultiValueMap<String, String> targetParams = flashMap.getTargetRequestParams()__		for (String expectedName : targetParams.keySet()) {_			for (String expectedValue : targetParams.get(expectedName)) {_				if (!ObjectUtils.containsElement(request.getParameterValues(expectedName), expectedValue)) {_					return false__				}_			}_		}_		return true__	};whether,the,given,flash,map,matches,the,current,request,uses,the,expected,request,path,and,query,parameters,saved,in,the,flash,map;protected,boolean,is,flash,map,for,request,flash,map,flash,map,http,servlet,request,request,string,expected,path,flash,map,get,target,request,path,if,expected,path,null,string,request,uri,this,url,path,helper,get,originating,request,uri,request,if,request,uri,equals,expected,path,request,uri,equals,expected,path,return,false,multi,value,map,string,string,target,params,flash,map,get,target,request,params,for,string,expected,name,target,params,key,set,for,string,expected,value,target,params,get,expected,name,if,object,utils,contains,element,request,get,parameter,values,expected,name,expected,value,return,false,return,true
AbstractFlashMapManager -> protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request);1395656216;Whether the given FlashMap matches the current request._Uses the expected request path and query parameters saved in the FlashMap.;protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request) {_		String expectedPath = flashMap.getTargetRequestPath()__		if (expectedPath != null) {_			String requestUri = getUrlPathHelper().getOriginatingRequestUri(request)__			if (!requestUri.equals(expectedPath) && !requestUri.equals(expectedPath + "/")) {_				return false__			}_		}_		MultiValueMap<String, String> targetParams = flashMap.getTargetRequestParams()__		for (String expectedName : targetParams.keySet()) {_			for (String expectedValue : targetParams.get(expectedName)) {_				if (!ObjectUtils.containsElement(request.getParameterValues(expectedName), expectedValue)) {_					return false__				}_			}_		}_		return true__	};whether,the,given,flash,map,matches,the,current,request,uses,the,expected,request,path,and,query,parameters,saved,in,the,flash,map;protected,boolean,is,flash,map,for,request,flash,map,flash,map,http,servlet,request,request,string,expected,path,flash,map,get,target,request,path,if,expected,path,null,string,request,uri,get,url,path,helper,get,originating,request,uri,request,if,request,uri,equals,expected,path,request,uri,equals,expected,path,return,false,multi,value,map,string,string,target,params,flash,map,get,target,request,params,for,string,expected,name,target,params,key,set,for,string,expected,value,target,params,get,expected,name,if,object,utils,contains,element,request,get,parameter,values,expected,name,expected,value,return,false,return,true
AbstractFlashMapManager -> protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request);1426798646;Whether the given FlashMap matches the current request._Uses the expected request path and query parameters saved in the FlashMap.;protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request) {_		String expectedPath = flashMap.getTargetRequestPath()__		if (expectedPath != null) {_			String requestUri = getUrlPathHelper().getOriginatingRequestUri(request)__			if (!requestUri.equals(expectedPath) && !requestUri.equals(expectedPath + "/")) {_				return false__			}_		}_		UriComponents uriComponents = ServletUriComponentsBuilder.fromRequest(request).build()__		MultiValueMap<String, String> actualParams = uriComponents.getQueryParams()__		MultiValueMap<String, String> expectedParams = flashMap.getTargetRequestParams()__		for (String expectedName : expectedParams.keySet()) {_			List<String> actualValues = actualParams.get(expectedName)__			if (actualValues == null) {_				return false__			}_			for (String expectedValue : expectedParams.get(expectedName)) {_				if (!actualValues.contains(expectedValue)) {_					return false__				}_			}_		}_		return true__	};whether,the,given,flash,map,matches,the,current,request,uses,the,expected,request,path,and,query,parameters,saved,in,the,flash,map;protected,boolean,is,flash,map,for,request,flash,map,flash,map,http,servlet,request,request,string,expected,path,flash,map,get,target,request,path,if,expected,path,null,string,request,uri,get,url,path,helper,get,originating,request,uri,request,if,request,uri,equals,expected,path,request,uri,equals,expected,path,return,false,uri,components,uri,components,servlet,uri,components,builder,from,request,request,build,multi,value,map,string,string,actual,params,uri,components,get,query,params,multi,value,map,string,string,expected,params,flash,map,get,target,request,params,for,string,expected,name,expected,params,key,set,list,string,actual,values,actual,params,get,expected,name,if,actual,values,null,return,false,for,string,expected,value,expected,params,get,expected,name,if,actual,values,contains,expected,value,return,false,return,true
AbstractFlashMapManager -> protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request);1467730834;Whether the given FlashMap matches the current request._Uses the expected request path and query parameters saved in the FlashMap.;protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request) {_		String expectedPath = flashMap.getTargetRequestPath()__		if (expectedPath != null) {_			String requestUri = getUrlPathHelper().getOriginatingRequestUri(request)__			if (!requestUri.equals(expectedPath) && !requestUri.equals(expectedPath + "/")) {_				return false__			}_		}_		UriComponents uriComponents = ServletUriComponentsBuilder.fromRequest(request).build()__		MultiValueMap<String, String> actualParams = uriComponents.getQueryParams()__		MultiValueMap<String, String> expectedParams = flashMap.getTargetRequestParams()__		for (String expectedName : expectedParams.keySet()) {_			List<String> actualValues = actualParams.get(expectedName)__			if (actualValues == null) {_				return false__			}_			for (String expectedValue : expectedParams.get(expectedName)) {_				if (!actualValues.contains(expectedValue)) {_					return false__				}_			}_		}_		return true__	};whether,the,given,flash,map,matches,the,current,request,uses,the,expected,request,path,and,query,parameters,saved,in,the,flash,map;protected,boolean,is,flash,map,for,request,flash,map,flash,map,http,servlet,request,request,string,expected,path,flash,map,get,target,request,path,if,expected,path,null,string,request,uri,get,url,path,helper,get,originating,request,uri,request,if,request,uri,equals,expected,path,request,uri,equals,expected,path,return,false,uri,components,uri,components,servlet,uri,components,builder,from,request,request,build,multi,value,map,string,string,actual,params,uri,components,get,query,params,multi,value,map,string,string,expected,params,flash,map,get,target,request,params,for,string,expected,name,expected,params,key,set,list,string,actual,values,actual,params,get,expected,name,if,actual,values,null,return,false,for,string,expected,value,expected,params,get,expected,name,if,actual,values,contains,expected,value,return,false,return,true
AbstractFlashMapManager -> protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request);1495227616;Whether the given FlashMap matches the current request._Uses the expected request path and query parameters saved in the FlashMap.;protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request) {_		String expectedPath = flashMap.getTargetRequestPath()__		if (expectedPath != null) {_			String requestUri = getUrlPathHelper().getOriginatingRequestUri(request)__			if (!requestUri.equals(expectedPath) && !requestUri.equals(expectedPath + "/")) {_				return false__			}_		}_		MultiValueMap<String, String> actualParams = getOriginatingRequestParams(request)__		MultiValueMap<String, String> expectedParams = flashMap.getTargetRequestParams()__		for (String expectedName : expectedParams.keySet()) {_			List<String> actualValues = actualParams.get(expectedName)__			if (actualValues == null) {_				return false__			}_			for (String expectedValue : expectedParams.get(expectedName)) {_				if (!actualValues.contains(expectedValue)) {_					return false__				}_			}_		}_		return true__	};whether,the,given,flash,map,matches,the,current,request,uses,the,expected,request,path,and,query,parameters,saved,in,the,flash,map;protected,boolean,is,flash,map,for,request,flash,map,flash,map,http,servlet,request,request,string,expected,path,flash,map,get,target,request,path,if,expected,path,null,string,request,uri,get,url,path,helper,get,originating,request,uri,request,if,request,uri,equals,expected,path,request,uri,equals,expected,path,return,false,multi,value,map,string,string,actual,params,get,originating,request,params,request,multi,value,map,string,string,expected,params,flash,map,get,target,request,params,for,string,expected,name,expected,params,key,set,list,string,actual,values,actual,params,get,expected,name,if,actual,values,null,return,false,for,string,expected,value,expected,params,get,expected,name,if,actual,values,contains,expected,value,return,false,return,true
AbstractFlashMapManager -> protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request);1495868221;Whether the given FlashMap matches the current request._Uses the expected request path and query parameters saved in the FlashMap.;protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request) {_		String expectedPath = flashMap.getTargetRequestPath()__		if (expectedPath != null) {_			String requestUri = getUrlPathHelper().getOriginatingRequestUri(request)__			if (!requestUri.equals(expectedPath) && !requestUri.equals(expectedPath + "/")) {_				return false__			}_		}_		MultiValueMap<String, String> actualParams = getOriginatingRequestParams(request)__		MultiValueMap<String, String> expectedParams = flashMap.getTargetRequestParams()__		for (String expectedName : expectedParams.keySet()) {_			List<String> actualValues = actualParams.get(expectedName)__			if (actualValues == null) {_				return false__			}_			for (String expectedValue : expectedParams.get(expectedName)) {_				if (!actualValues.contains(expectedValue)) {_					return false__				}_			}_		}_		return true__	};whether,the,given,flash,map,matches,the,current,request,uses,the,expected,request,path,and,query,parameters,saved,in,the,flash,map;protected,boolean,is,flash,map,for,request,flash,map,flash,map,http,servlet,request,request,string,expected,path,flash,map,get,target,request,path,if,expected,path,null,string,request,uri,get,url,path,helper,get,originating,request,uri,request,if,request,uri,equals,expected,path,request,uri,equals,expected,path,return,false,multi,value,map,string,string,actual,params,get,originating,request,params,request,multi,value,map,string,string,expected,params,flash,map,get,target,request,params,for,string,expected,name,expected,params,key,set,list,string,actual,values,actual,params,get,expected,name,if,actual,values,null,return,false,for,string,expected,value,expected,params,get,expected,name,if,actual,values,contains,expected,value,return,false,return,true
AbstractFlashMapManager -> protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request);1496837955;Whether the given FlashMap matches the current request._Uses the expected request path and query parameters saved in the FlashMap.;protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request) {_		String expectedPath = flashMap.getTargetRequestPath()__		if (expectedPath != null) {_			String requestUri = getUrlPathHelper().getOriginatingRequestUri(request)__			if (!requestUri.equals(expectedPath) && !requestUri.equals(expectedPath + "/")) {_				return false__			}_		}_		MultiValueMap<String, String> actualParams = getOriginatingRequestParams(request)__		MultiValueMap<String, String> expectedParams = flashMap.getTargetRequestParams()__		for (String expectedName : expectedParams.keySet()) {_			List<String> actualValues = actualParams.get(expectedName)__			if (actualValues == null) {_				return false__			}_			for (String expectedValue : expectedParams.get(expectedName)) {_				if (!actualValues.contains(expectedValue)) {_					return false__				}_			}_		}_		return true__	};whether,the,given,flash,map,matches,the,current,request,uses,the,expected,request,path,and,query,parameters,saved,in,the,flash,map;protected,boolean,is,flash,map,for,request,flash,map,flash,map,http,servlet,request,request,string,expected,path,flash,map,get,target,request,path,if,expected,path,null,string,request,uri,get,url,path,helper,get,originating,request,uri,request,if,request,uri,equals,expected,path,request,uri,equals,expected,path,return,false,multi,value,map,string,string,actual,params,get,originating,request,params,request,multi,value,map,string,string,expected,params,flash,map,get,target,request,params,for,string,expected,name,expected,params,key,set,list,string,actual,values,actual,params,get,expected,name,if,actual,values,null,return,false,for,string,expected,value,expected,params,get,expected,name,if,actual,values,contains,expected,value,return,false,return,true
AbstractFlashMapManager -> protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request);1502974979;Whether the given FlashMap matches the current request._Uses the expected request path and query parameters saved in the FlashMap.;protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request) {_		String expectedPath = flashMap.getTargetRequestPath()__		if (expectedPath != null) {_			String requestUri = getUrlPathHelper().getOriginatingRequestUri(request)__			if (!requestUri.equals(expectedPath) && !requestUri.equals(expectedPath + "/")) {_				return false__			}_		}_		MultiValueMap<String, String> actualParams = getOriginatingRequestParams(request)__		MultiValueMap<String, String> expectedParams = flashMap.getTargetRequestParams()__		for (String expectedName : expectedParams.keySet()) {_			List<String> actualValues = actualParams.get(expectedName)__			if (actualValues == null) {_				return false__			}_			for (String expectedValue : expectedParams.get(expectedName)) {_				if (!actualValues.contains(expectedValue)) {_					return false__				}_			}_		}_		return true__	};whether,the,given,flash,map,matches,the,current,request,uses,the,expected,request,path,and,query,parameters,saved,in,the,flash,map;protected,boolean,is,flash,map,for,request,flash,map,flash,map,http,servlet,request,request,string,expected,path,flash,map,get,target,request,path,if,expected,path,null,string,request,uri,get,url,path,helper,get,originating,request,uri,request,if,request,uri,equals,expected,path,request,uri,equals,expected,path,return,false,multi,value,map,string,string,actual,params,get,originating,request,params,request,multi,value,map,string,string,expected,params,flash,map,get,target,request,params,for,string,expected,name,expected,params,key,set,list,string,actual,values,actual,params,get,expected,name,if,actual,values,null,return,false,for,string,expected,value,expected,params,get,expected,name,if,actual,values,contains,expected,value,return,false,return,true
AbstractFlashMapManager -> protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request);1529361191;Whether the given FlashMap matches the current request._Uses the expected request path and query parameters saved in the FlashMap.;protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request) {_		String expectedPath = flashMap.getTargetRequestPath()__		if (expectedPath != null) {_			String requestUri = getUrlPathHelper().getOriginatingRequestUri(request)__			if (!requestUri.equals(expectedPath) && !requestUri.equals(expectedPath + "/")) {_				return false__			}_		}_		MultiValueMap<String, String> actualParams = getOriginatingRequestParams(request)__		MultiValueMap<String, String> expectedParams = flashMap.getTargetRequestParams()__		for (String expectedName : expectedParams.keySet()) {_			List<String> actualValues = actualParams.get(expectedName)__			if (actualValues == null) {_				return false__			}_			for (String expectedValue : expectedParams.get(expectedName)) {_				if (!actualValues.contains(expectedValue)) {_					return false__				}_			}_		}_		return true__	};whether,the,given,flash,map,matches,the,current,request,uses,the,expected,request,path,and,query,parameters,saved,in,the,flash,map;protected,boolean,is,flash,map,for,request,flash,map,flash,map,http,servlet,request,request,string,expected,path,flash,map,get,target,request,path,if,expected,path,null,string,request,uri,get,url,path,helper,get,originating,request,uri,request,if,request,uri,equals,expected,path,request,uri,equals,expected,path,return,false,multi,value,map,string,string,actual,params,get,originating,request,params,request,multi,value,map,string,string,expected,params,flash,map,get,target,request,params,for,string,expected,name,expected,params,key,set,list,string,actual,values,actual,params,get,expected,name,if,actual,values,null,return,false,for,string,expected,value,expected,params,get,expected,name,if,actual,values,contains,expected,value,return,false,return,true
AbstractFlashMapManager -> protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request);1530174524;Whether the given FlashMap matches the current request._Uses the expected request path and query parameters saved in the FlashMap.;protected boolean isFlashMapForRequest(FlashMap flashMap, HttpServletRequest request) {_		String expectedPath = flashMap.getTargetRequestPath()__		if (expectedPath != null) {_			String requestUri = getUrlPathHelper().getOriginatingRequestUri(request)__			if (!requestUri.equals(expectedPath) && !requestUri.equals(expectedPath + "/")) {_				return false__			}_		}_		MultiValueMap<String, String> actualParams = getOriginatingRequestParams(request)__		MultiValueMap<String, String> expectedParams = flashMap.getTargetRequestParams()__		for (String expectedName : expectedParams.keySet()) {_			List<String> actualValues = actualParams.get(expectedName)__			if (actualValues == null) {_				return false__			}_			for (String expectedValue : expectedParams.get(expectedName)) {_				if (!actualValues.contains(expectedValue)) {_					return false__				}_			}_		}_		return true__	};whether,the,given,flash,map,matches,the,current,request,uses,the,expected,request,path,and,query,parameters,saved,in,the,flash,map;protected,boolean,is,flash,map,for,request,flash,map,flash,map,http,servlet,request,request,string,expected,path,flash,map,get,target,request,path,if,expected,path,null,string,request,uri,get,url,path,helper,get,originating,request,uri,request,if,request,uri,equals,expected,path,request,uri,equals,expected,path,return,false,multi,value,map,string,string,actual,params,get,originating,request,params,request,multi,value,map,string,string,expected,params,flash,map,get,target,request,params,for,string,expected,name,expected,params,key,set,list,string,actual,values,actual,params,get,expected,name,if,actual,values,null,return,false,for,string,expected,value,expected,params,get,expected,name,if,actual,values,contains,expected,value,return,false,return,true
AbstractFlashMapManager -> private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request);1329142650;Return a FlashMap contained in the given list that matches the request._@return a matching FlashMap or {@code null};private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request) {_		List<FlashMap> result = new ArrayList<FlashMap>()__		for (FlashMap flashMap : allMaps) {_			if (isFlashMapForRequest(flashMap, request)) {_				result.add(flashMap)__			}_		}_		if (!result.isEmpty()) {_			Collections.sort(result)__			if (logger.isDebugEnabled()) {_				logger.debug("Found matching FlashMap(s): " + result)__			}_			return result.get(0)__		}_		return null__	};return,a,flash,map,contained,in,the,given,list,that,matches,the,request,return,a,matching,flash,map,or,code,null;private,flash,map,get,matching,flash,map,list,flash,map,all,maps,http,servlet,request,request,list,flash,map,result,new,array,list,flash,map,for,flash,map,flash,map,all,maps,if,is,flash,map,for,request,flash,map,request,result,add,flash,map,if,result,is,empty,collections,sort,result,if,logger,is,debug,enabled,logger,debug,found,matching,flash,map,s,result,return,result,get,0,return,null
AbstractFlashMapManager -> private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request);1345577241;Return a FlashMap contained in the given list that matches the request._@return a matching FlashMap or {@code null};private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request) {_		List<FlashMap> result = new ArrayList<FlashMap>()__		for (FlashMap flashMap : allMaps) {_			if (isFlashMapForRequest(flashMap, request)) {_				result.add(flashMap)__			}_		}_		if (!result.isEmpty()) {_			Collections.sort(result)__			if (logger.isDebugEnabled()) {_				logger.debug("Found matching FlashMap(s): " + result)__			}_			return result.get(0)__		}_		return null__	};return,a,flash,map,contained,in,the,given,list,that,matches,the,request,return,a,matching,flash,map,or,code,null;private,flash,map,get,matching,flash,map,list,flash,map,all,maps,http,servlet,request,request,list,flash,map,result,new,array,list,flash,map,for,flash,map,flash,map,all,maps,if,is,flash,map,for,request,flash,map,request,result,add,flash,map,if,result,is,empty,collections,sort,result,if,logger,is,debug,enabled,logger,debug,found,matching,flash,map,s,result,return,result,get,0,return,null
AbstractFlashMapManager -> private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request);1356735495;Return a FlashMap contained in the given list that matches the request._@return a matching FlashMap or {@code null};private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request) {_		List<FlashMap> result = new ArrayList<FlashMap>()__		for (FlashMap flashMap : allMaps) {_			if (isFlashMapForRequest(flashMap, request)) {_				result.add(flashMap)__			}_		}_		if (!result.isEmpty()) {_			Collections.sort(result)__			if (logger.isDebugEnabled()) {_				logger.debug("Found matching FlashMap(s): " + result)__			}_			return result.get(0)__		}_		return null__	};return,a,flash,map,contained,in,the,given,list,that,matches,the,request,return,a,matching,flash,map,or,code,null;private,flash,map,get,matching,flash,map,list,flash,map,all,maps,http,servlet,request,request,list,flash,map,result,new,array,list,flash,map,for,flash,map,flash,map,all,maps,if,is,flash,map,for,request,flash,map,request,result,add,flash,map,if,result,is,empty,collections,sort,result,if,logger,is,debug,enabled,logger,debug,found,matching,flash,map,s,result,return,result,get,0,return,null
AbstractFlashMapManager -> private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request);1357119239;Return a FlashMap contained in the given list that matches the request._@return a matching FlashMap or {@code null};private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request) {_		List<FlashMap> result = new ArrayList<FlashMap>()__		for (FlashMap flashMap : allMaps) {_			if (isFlashMapForRequest(flashMap, request)) {_				result.add(flashMap)__			}_		}_		if (!result.isEmpty()) {_			Collections.sort(result)__			if (logger.isDebugEnabled()) {_				logger.debug("Found matching FlashMap(s): " + result)__			}_			return result.get(0)__		}_		return null__	};return,a,flash,map,contained,in,the,given,list,that,matches,the,request,return,a,matching,flash,map,or,code,null;private,flash,map,get,matching,flash,map,list,flash,map,all,maps,http,servlet,request,request,list,flash,map,result,new,array,list,flash,map,for,flash,map,flash,map,all,maps,if,is,flash,map,for,request,flash,map,request,result,add,flash,map,if,result,is,empty,collections,sort,result,if,logger,is,debug,enabled,logger,debug,found,matching,flash,map,s,result,return,result,get,0,return,null
AbstractFlashMapManager -> private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request);1368482696;Return a FlashMap contained in the given list that matches the request._@return a matching FlashMap or {@code null};private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request) {_		List<FlashMap> result = new ArrayList<FlashMap>()__		for (FlashMap flashMap : allMaps) {_			if (isFlashMapForRequest(flashMap, request)) {_				result.add(flashMap)__			}_		}_		if (!result.isEmpty()) {_			Collections.sort(result)__			if (logger.isDebugEnabled()) {_				logger.debug("Found matching FlashMap(s): " + result)__			}_			return result.get(0)__		}_		return null__	};return,a,flash,map,contained,in,the,given,list,that,matches,the,request,return,a,matching,flash,map,or,code,null;private,flash,map,get,matching,flash,map,list,flash,map,all,maps,http,servlet,request,request,list,flash,map,result,new,array,list,flash,map,for,flash,map,flash,map,all,maps,if,is,flash,map,for,request,flash,map,request,result,add,flash,map,if,result,is,empty,collections,sort,result,if,logger,is,debug,enabled,logger,debug,found,matching,flash,map,s,result,return,result,get,0,return,null
AbstractFlashMapManager -> private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request);1394126962;Return a FlashMap contained in the given list that matches the request._@return a matching FlashMap or {@code null};private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request) {_		List<FlashMap> result = new ArrayList<FlashMap>()__		for (FlashMap flashMap : allMaps) {_			if (isFlashMapForRequest(flashMap, request)) {_				result.add(flashMap)__			}_		}_		if (!result.isEmpty()) {_			Collections.sort(result)__			if (logger.isDebugEnabled()) {_				logger.debug("Found matching FlashMap(s): " + result)__			}_			return result.get(0)__		}_		return null__	};return,a,flash,map,contained,in,the,given,list,that,matches,the,request,return,a,matching,flash,map,or,code,null;private,flash,map,get,matching,flash,map,list,flash,map,all,maps,http,servlet,request,request,list,flash,map,result,new,array,list,flash,map,for,flash,map,flash,map,all,maps,if,is,flash,map,for,request,flash,map,request,result,add,flash,map,if,result,is,empty,collections,sort,result,if,logger,is,debug,enabled,logger,debug,found,matching,flash,map,s,result,return,result,get,0,return,null
AbstractFlashMapManager -> private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request);1394572186;Return a FlashMap contained in the given list that matches the request._@return a matching FlashMap or {@code null};private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request) {_		List<FlashMap> result = new ArrayList<FlashMap>()__		for (FlashMap flashMap : allMaps) {_			if (isFlashMapForRequest(flashMap, request)) {_				result.add(flashMap)__			}_		}_		if (!result.isEmpty()) {_			Collections.sort(result)__			if (logger.isDebugEnabled()) {_				logger.debug("Found matching FlashMap(s): " + result)__			}_			return result.get(0)__		}_		return null__	};return,a,flash,map,contained,in,the,given,list,that,matches,the,request,return,a,matching,flash,map,or,code,null;private,flash,map,get,matching,flash,map,list,flash,map,all,maps,http,servlet,request,request,list,flash,map,result,new,array,list,flash,map,for,flash,map,flash,map,all,maps,if,is,flash,map,for,request,flash,map,request,result,add,flash,map,if,result,is,empty,collections,sort,result,if,logger,is,debug,enabled,logger,debug,found,matching,flash,map,s,result,return,result,get,0,return,null
AbstractFlashMapManager -> private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request);1395656216;Return a FlashMap contained in the given list that matches the request._@return a matching FlashMap or {@code null};private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request) {_		List<FlashMap> result = new LinkedList<FlashMap>()__		for (FlashMap flashMap : allMaps) {_			if (isFlashMapForRequest(flashMap, request)) {_				result.add(flashMap)__			}_		}_		if (!result.isEmpty()) {_			Collections.sort(result)__			if (logger.isDebugEnabled()) {_				logger.debug("Found matching FlashMap(s): " + result)__			}_			return result.get(0)__		}_		return null__	};return,a,flash,map,contained,in,the,given,list,that,matches,the,request,return,a,matching,flash,map,or,code,null;private,flash,map,get,matching,flash,map,list,flash,map,all,maps,http,servlet,request,request,list,flash,map,result,new,linked,list,flash,map,for,flash,map,flash,map,all,maps,if,is,flash,map,for,request,flash,map,request,result,add,flash,map,if,result,is,empty,collections,sort,result,if,logger,is,debug,enabled,logger,debug,found,matching,flash,map,s,result,return,result,get,0,return,null
AbstractFlashMapManager -> private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request);1426798646;Return a FlashMap contained in the given list that matches the request._@return a matching FlashMap or {@code null};private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request) {_		List<FlashMap> result = new LinkedList<FlashMap>()__		for (FlashMap flashMap : allMaps) {_			if (isFlashMapForRequest(flashMap, request)) {_				result.add(flashMap)__			}_		}_		if (!result.isEmpty()) {_			Collections.sort(result)__			if (logger.isDebugEnabled()) {_				logger.debug("Found matching FlashMap(s): " + result)__			}_			return result.get(0)__		}_		return null__	};return,a,flash,map,contained,in,the,given,list,that,matches,the,request,return,a,matching,flash,map,or,code,null;private,flash,map,get,matching,flash,map,list,flash,map,all,maps,http,servlet,request,request,list,flash,map,result,new,linked,list,flash,map,for,flash,map,flash,map,all,maps,if,is,flash,map,for,request,flash,map,request,result,add,flash,map,if,result,is,empty,collections,sort,result,if,logger,is,debug,enabled,logger,debug,found,matching,flash,map,s,result,return,result,get,0,return,null
AbstractFlashMapManager -> private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request);1467730834;Return a FlashMap contained in the given list that matches the request._@return a matching FlashMap or {@code null};private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request) {_		List<FlashMap> result = new LinkedList<>()__		for (FlashMap flashMap : allMaps) {_			if (isFlashMapForRequest(flashMap, request)) {_				result.add(flashMap)__			}_		}_		if (!result.isEmpty()) {_			Collections.sort(result)__			if (logger.isDebugEnabled()) {_				logger.debug("Found matching FlashMap(s): " + result)__			}_			return result.get(0)__		}_		return null__	};return,a,flash,map,contained,in,the,given,list,that,matches,the,request,return,a,matching,flash,map,or,code,null;private,flash,map,get,matching,flash,map,list,flash,map,all,maps,http,servlet,request,request,list,flash,map,result,new,linked,list,for,flash,map,flash,map,all,maps,if,is,flash,map,for,request,flash,map,request,result,add,flash,map,if,result,is,empty,collections,sort,result,if,logger,is,debug,enabled,logger,debug,found,matching,flash,map,s,result,return,result,get,0,return,null
AbstractFlashMapManager -> private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request);1495227616;Return a FlashMap contained in the given list that matches the request._@return a matching FlashMap or {@code null};private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request) {_		List<FlashMap> result = new LinkedList<>()__		for (FlashMap flashMap : allMaps) {_			if (isFlashMapForRequest(flashMap, request)) {_				result.add(flashMap)__			}_		}_		if (!result.isEmpty()) {_			Collections.sort(result)__			if (logger.isDebugEnabled()) {_				logger.debug("Found matching FlashMap(s): " + result)__			}_			return result.get(0)__		}_		return null__	};return,a,flash,map,contained,in,the,given,list,that,matches,the,request,return,a,matching,flash,map,or,code,null;private,flash,map,get,matching,flash,map,list,flash,map,all,maps,http,servlet,request,request,list,flash,map,result,new,linked,list,for,flash,map,flash,map,all,maps,if,is,flash,map,for,request,flash,map,request,result,add,flash,map,if,result,is,empty,collections,sort,result,if,logger,is,debug,enabled,logger,debug,found,matching,flash,map,s,result,return,result,get,0,return,null
AbstractFlashMapManager -> @Nullable 	protected Object getFlashMapsMutex(HttpServletRequest request);1495868221;Obtain a mutex for modifying the FlashMap List as handled by_{@link #retrieveFlashMaps} and {@link #updateFlashMaps},_<p>The default implementation returns a shared static mutex._Subclasses are encouraged to return a more specific mutex, or_{@code null} to indicate that no synchronization is necessary._@param request the current request_@return the mutex to use (may be {@code null} if none applicable)_@since 4.0.3;@Nullable_	protected Object getFlashMapsMutex(HttpServletRequest request) {_		return DEFAULT_FLASH_MAPS_MUTEX__	};obtain,a,mutex,for,modifying,the,flash,map,list,as,handled,by,link,retrieve,flash,maps,and,link,update,flash,maps,p,the,default,implementation,returns,a,shared,static,mutex,subclasses,are,encouraged,to,return,a,more,specific,mutex,or,code,null,to,indicate,that,no,synchronization,is,necessary,param,request,the,current,request,return,the,mutex,to,use,may,be,code,null,if,none,applicable,since,4,0,3;nullable,protected,object,get,flash,maps,mutex,http,servlet,request,request,return
AbstractFlashMapManager -> @Nullable 	protected Object getFlashMapsMutex(HttpServletRequest request);1496837955;Obtain a mutex for modifying the FlashMap List as handled by_{@link #retrieveFlashMaps} and {@link #updateFlashMaps},_<p>The default implementation returns a shared static mutex._Subclasses are encouraged to return a more specific mutex, or_{@code null} to indicate that no synchronization is necessary._@param request the current request_@return the mutex to use (may be {@code null} if none applicable)_@since 4.0.3;@Nullable_	protected Object getFlashMapsMutex(HttpServletRequest request) {_		return DEFAULT_FLASH_MAPS_MUTEX__	};obtain,a,mutex,for,modifying,the,flash,map,list,as,handled,by,link,retrieve,flash,maps,and,link,update,flash,maps,p,the,default,implementation,returns,a,shared,static,mutex,subclasses,are,encouraged,to,return,a,more,specific,mutex,or,code,null,to,indicate,that,no,synchronization,is,necessary,param,request,the,current,request,return,the,mutex,to,use,may,be,code,null,if,none,applicable,since,4,0,3;nullable,protected,object,get,flash,maps,mutex,http,servlet,request,request,return
AbstractFlashMapManager -> @Nullable 	protected Object getFlashMapsMutex(HttpServletRequest request);1502974979;Obtain a mutex for modifying the FlashMap List as handled by_{@link #retrieveFlashMaps} and {@link #updateFlashMaps},_<p>The default implementation returns a shared static mutex._Subclasses are encouraged to return a more specific mutex, or_{@code null} to indicate that no synchronization is necessary._@param request the current request_@return the mutex to use (may be {@code null} if none applicable)_@since 4.0.3;@Nullable_	protected Object getFlashMapsMutex(HttpServletRequest request) {_		return DEFAULT_FLASH_MAPS_MUTEX__	};obtain,a,mutex,for,modifying,the,flash,map,list,as,handled,by,link,retrieve,flash,maps,and,link,update,flash,maps,p,the,default,implementation,returns,a,shared,static,mutex,subclasses,are,encouraged,to,return,a,more,specific,mutex,or,code,null,to,indicate,that,no,synchronization,is,necessary,param,request,the,current,request,return,the,mutex,to,use,may,be,code,null,if,none,applicable,since,4,0,3;nullable,protected,object,get,flash,maps,mutex,http,servlet,request,request,return
AbstractFlashMapManager -> @Nullable 	protected Object getFlashMapsMutex(HttpServletRequest request);1529361191;Obtain a mutex for modifying the FlashMap List as handled by_{@link #retrieveFlashMaps} and {@link #updateFlashMaps},_<p>The default implementation returns a shared static mutex._Subclasses are encouraged to return a more specific mutex, or_{@code null} to indicate that no synchronization is necessary._@param request the current request_@return the mutex to use (may be {@code null} if none applicable)_@since 4.0.3;@Nullable_	protected Object getFlashMapsMutex(HttpServletRequest request) {_		return DEFAULT_FLASH_MAPS_MUTEX__	};obtain,a,mutex,for,modifying,the,flash,map,list,as,handled,by,link,retrieve,flash,maps,and,link,update,flash,maps,p,the,default,implementation,returns,a,shared,static,mutex,subclasses,are,encouraged,to,return,a,more,specific,mutex,or,code,null,to,indicate,that,no,synchronization,is,necessary,param,request,the,current,request,return,the,mutex,to,use,may,be,code,null,if,none,applicable,since,4,0,3;nullable,protected,object,get,flash,maps,mutex,http,servlet,request,request,return
AbstractFlashMapManager -> @Nullable 	protected Object getFlashMapsMutex(HttpServletRequest request);1530174524;Obtain a mutex for modifying the FlashMap List as handled by_{@link #retrieveFlashMaps} and {@link #updateFlashMaps},_<p>The default implementation returns a shared static mutex._Subclasses are encouraged to return a more specific mutex, or_{@code null} to indicate that no synchronization is necessary._@param request the current request_@return the mutex to use (may be {@code null} if none applicable)_@since 4.0.3;@Nullable_	protected Object getFlashMapsMutex(HttpServletRequest request) {_		return DEFAULT_FLASH_MAPS_MUTEX__	};obtain,a,mutex,for,modifying,the,flash,map,list,as,handled,by,link,retrieve,flash,maps,and,link,update,flash,maps,p,the,default,implementation,returns,a,shared,static,mutex,subclasses,are,encouraged,to,return,a,more,specific,mutex,or,code,null,to,indicate,that,no,synchronization,is,necessary,param,request,the,current,request,return,the,mutex,to,use,may,be,code,null,if,none,applicable,since,4,0,3;nullable,protected,object,get,flash,maps,mutex,http,servlet,request,request,return
AbstractFlashMapManager -> protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;1328092788;Retrieve saved FlashMap instances from underlying storage._@param request the current request_@return a List with FlashMap instances or {@code null};protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;retrieve,saved,flash,map,instances,from,underlying,storage,param,request,the,current,request,return,a,list,with,flash,map,instances,or,code,null;protected,abstract,list,flash,map,retrieve,flash,maps,http,servlet,request,request
AbstractFlashMapManager -> protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;1329142650;Retrieve saved FlashMap instances from underlying storage._@param request the current request_@return a List with FlashMap instances or {@code null};protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;retrieve,saved,flash,map,instances,from,underlying,storage,param,request,the,current,request,return,a,list,with,flash,map,instances,or,code,null;protected,abstract,list,flash,map,retrieve,flash,maps,http,servlet,request,request
AbstractFlashMapManager -> protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;1345577241;Retrieve saved FlashMap instances from underlying storage._@param request the current request_@return a List with FlashMap instances or {@code null};protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;retrieve,saved,flash,map,instances,from,underlying,storage,param,request,the,current,request,return,a,list,with,flash,map,instances,or,code,null;protected,abstract,list,flash,map,retrieve,flash,maps,http,servlet,request,request
AbstractFlashMapManager -> protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;1356735495;Retrieve saved FlashMap instances from underlying storage._@param request the current request_@return a List with FlashMap instances or {@code null};protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;retrieve,saved,flash,map,instances,from,underlying,storage,param,request,the,current,request,return,a,list,with,flash,map,instances,or,code,null;protected,abstract,list,flash,map,retrieve,flash,maps,http,servlet,request,request
AbstractFlashMapManager -> protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;1357119239;Retrieve saved FlashMap instances from underlying storage._@param request the current request_@return a List with FlashMap instances or {@code null};protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;retrieve,saved,flash,map,instances,from,underlying,storage,param,request,the,current,request,return,a,list,with,flash,map,instances,or,code,null;protected,abstract,list,flash,map,retrieve,flash,maps,http,servlet,request,request
AbstractFlashMapManager -> protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;1368482696;Retrieve saved FlashMap instances from underlying storage._@param request the current request_@return a List with FlashMap instances or {@code null};protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;retrieve,saved,flash,map,instances,from,underlying,storage,param,request,the,current,request,return,a,list,with,flash,map,instances,or,code,null;protected,abstract,list,flash,map,retrieve,flash,maps,http,servlet,request,request
AbstractFlashMapManager -> protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;1394126962;Retrieve saved FlashMap instances from underlying storage._@param request the current request_@return a List with FlashMap instances or {@code null};protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;retrieve,saved,flash,map,instances,from,underlying,storage,param,request,the,current,request,return,a,list,with,flash,map,instances,or,code,null;protected,abstract,list,flash,map,retrieve,flash,maps,http,servlet,request,request
AbstractFlashMapManager -> protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;1394572186;Retrieve saved FlashMap instances from underlying storage._@param request the current request_@return a List with FlashMap instances or {@code null};protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;retrieve,saved,flash,map,instances,from,underlying,storage,param,request,the,current,request,return,a,list,with,flash,map,instances,or,code,null;protected,abstract,list,flash,map,retrieve,flash,maps,http,servlet,request,request
AbstractFlashMapManager -> protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;1395656216;Retrieve saved FlashMap instances from the underlying storage._@param request the current request_@return a List with FlashMap instances, or {@code null} if none found;protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;retrieve,saved,flash,map,instances,from,the,underlying,storage,param,request,the,current,request,return,a,list,with,flash,map,instances,or,code,null,if,none,found;protected,abstract,list,flash,map,retrieve,flash,maps,http,servlet,request,request
AbstractFlashMapManager -> protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;1426798646;Retrieve saved FlashMap instances from the underlying storage._@param request the current request_@return a List with FlashMap instances, or {@code null} if none found;protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;retrieve,saved,flash,map,instances,from,the,underlying,storage,param,request,the,current,request,return,a,list,with,flash,map,instances,or,code,null,if,none,found;protected,abstract,list,flash,map,retrieve,flash,maps,http,servlet,request,request
AbstractFlashMapManager -> protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;1467730834;Retrieve saved FlashMap instances from the underlying storage._@param request the current request_@return a List with FlashMap instances, or {@code null} if none found;protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;retrieve,saved,flash,map,instances,from,the,underlying,storage,param,request,the,current,request,return,a,list,with,flash,map,instances,or,code,null,if,none,found;protected,abstract,list,flash,map,retrieve,flash,maps,http,servlet,request,request
AbstractFlashMapManager -> protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;1495227616;Retrieve saved FlashMap instances from the underlying storage._@param request the current request_@return a List with FlashMap instances, or {@code null} if none found;protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;retrieve,saved,flash,map,instances,from,the,underlying,storage,param,request,the,current,request,return,a,list,with,flash,map,instances,or,code,null,if,none,found;protected,abstract,list,flash,map,retrieve,flash,maps,http,servlet,request,request
AbstractFlashMapManager -> public UrlPathHelper getUrlPathHelper();1328092788;Return the UrlPathHelper implementation to use.;public UrlPathHelper getUrlPathHelper() {_		return this.urlPathHelper__	};return,the,url,path,helper,implementation,to,use;public,url,path,helper,get,url,path,helper,return,this,url,path,helper
AbstractFlashMapManager -> public UrlPathHelper getUrlPathHelper();1329142650;Return the UrlPathHelper implementation to use.;public UrlPathHelper getUrlPathHelper() {_		return this.urlPathHelper__	};return,the,url,path,helper,implementation,to,use;public,url,path,helper,get,url,path,helper,return,this,url,path,helper
AbstractFlashMapManager -> public UrlPathHelper getUrlPathHelper();1345577241;Return the UrlPathHelper implementation to use.;public UrlPathHelper getUrlPathHelper() {_		return this.urlPathHelper__	};return,the,url,path,helper,implementation,to,use;public,url,path,helper,get,url,path,helper,return,this,url,path,helper
AbstractFlashMapManager -> public UrlPathHelper getUrlPathHelper();1356735495;Return the UrlPathHelper implementation to use.;public UrlPathHelper getUrlPathHelper() {_		return this.urlPathHelper__	};return,the,url,path,helper,implementation,to,use;public,url,path,helper,get,url,path,helper,return,this,url,path,helper
AbstractFlashMapManager -> public UrlPathHelper getUrlPathHelper();1357119239;Return the UrlPathHelper implementation to use.;public UrlPathHelper getUrlPathHelper() {_		return this.urlPathHelper__	};return,the,url,path,helper,implementation,to,use;public,url,path,helper,get,url,path,helper,return,this,url,path,helper
AbstractFlashMapManager -> public UrlPathHelper getUrlPathHelper();1368482696;Return the UrlPathHelper implementation to use.;public UrlPathHelper getUrlPathHelper() {_		return this.urlPathHelper__	};return,the,url,path,helper,implementation,to,use;public,url,path,helper,get,url,path,helper,return,this,url,path,helper
AbstractFlashMapManager -> public UrlPathHelper getUrlPathHelper();1394126962;Return the UrlPathHelper implementation to use.;public UrlPathHelper getUrlPathHelper() {_		return this.urlPathHelper__	};return,the,url,path,helper,implementation,to,use;public,url,path,helper,get,url,path,helper,return,this,url,path,helper
AbstractFlashMapManager -> public UrlPathHelper getUrlPathHelper();1394572186;Return the UrlPathHelper implementation to use.;public UrlPathHelper getUrlPathHelper() {_		return this.urlPathHelper__	};return,the,url,path,helper,implementation,to,use;public,url,path,helper,get,url,path,helper,return,this,url,path,helper
AbstractFlashMapManager -> public UrlPathHelper getUrlPathHelper();1395656216;Return the UrlPathHelper implementation to use.;public UrlPathHelper getUrlPathHelper() {_		return this.urlPathHelper__	};return,the,url,path,helper,implementation,to,use;public,url,path,helper,get,url,path,helper,return,this,url,path,helper
AbstractFlashMapManager -> public UrlPathHelper getUrlPathHelper();1426798646;Return the UrlPathHelper implementation to use.;public UrlPathHelper getUrlPathHelper() {_		return this.urlPathHelper__	};return,the,url,path,helper,implementation,to,use;public,url,path,helper,get,url,path,helper,return,this,url,path,helper
AbstractFlashMapManager -> public UrlPathHelper getUrlPathHelper();1467730834;Return the UrlPathHelper implementation to use.;public UrlPathHelper getUrlPathHelper() {_		return this.urlPathHelper__	};return,the,url,path,helper,implementation,to,use;public,url,path,helper,get,url,path,helper,return,this,url,path,helper
AbstractFlashMapManager -> public UrlPathHelper getUrlPathHelper();1495227616;Return the UrlPathHelper implementation to use.;public UrlPathHelper getUrlPathHelper() {_		return this.urlPathHelper__	};return,the,url,path,helper,implementation,to,use;public,url,path,helper,get,url,path,helper,return,this,url,path,helper
AbstractFlashMapManager -> public UrlPathHelper getUrlPathHelper();1495868221;Return the UrlPathHelper implementation to use.;public UrlPathHelper getUrlPathHelper() {_		return this.urlPathHelper__	};return,the,url,path,helper,implementation,to,use;public,url,path,helper,get,url,path,helper,return,this,url,path,helper
AbstractFlashMapManager -> public UrlPathHelper getUrlPathHelper();1496837955;Return the UrlPathHelper implementation to use.;public UrlPathHelper getUrlPathHelper() {_		return this.urlPathHelper__	};return,the,url,path,helper,implementation,to,use;public,url,path,helper,get,url,path,helper,return,this,url,path,helper
AbstractFlashMapManager -> public UrlPathHelper getUrlPathHelper();1502974979;Return the UrlPathHelper implementation to use.;public UrlPathHelper getUrlPathHelper() {_		return this.urlPathHelper__	};return,the,url,path,helper,implementation,to,use;public,url,path,helper,get,url,path,helper,return,this,url,path,helper
AbstractFlashMapManager -> public UrlPathHelper getUrlPathHelper();1529361191;Return the UrlPathHelper implementation to use.;public UrlPathHelper getUrlPathHelper() {_		return this.urlPathHelper__	};return,the,url,path,helper,implementation,to,use;public,url,path,helper,get,url,path,helper,return,this,url,path,helper
AbstractFlashMapManager -> public UrlPathHelper getUrlPathHelper();1530174524;Return the UrlPathHelper implementation to use.;public UrlPathHelper getUrlPathHelper() {_		return this.urlPathHelper__	};return,the,url,path,helper,implementation,to,use;public,url,path,helper,get,url,path,helper,return,this,url,path,helper
AbstractFlashMapManager -> @Nullable 	protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;1495868221;Retrieve saved FlashMap instances from the underlying storage._@param request the current request_@return a List with FlashMap instances, or {@code null} if none found;@Nullable_	protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;retrieve,saved,flash,map,instances,from,the,underlying,storage,param,request,the,current,request,return,a,list,with,flash,map,instances,or,code,null,if,none,found;nullable,protected,abstract,list,flash,map,retrieve,flash,maps,http,servlet,request,request
AbstractFlashMapManager -> @Nullable 	protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;1496837955;Retrieve saved FlashMap instances from the underlying storage._@param request the current request_@return a List with FlashMap instances, or {@code null} if none found;@Nullable_	protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;retrieve,saved,flash,map,instances,from,the,underlying,storage,param,request,the,current,request,return,a,list,with,flash,map,instances,or,code,null,if,none,found;nullable,protected,abstract,list,flash,map,retrieve,flash,maps,http,servlet,request,request
AbstractFlashMapManager -> @Nullable 	protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;1502974979;Retrieve saved FlashMap instances from the underlying storage._@param request the current request_@return a List with FlashMap instances, or {@code null} if none found;@Nullable_	protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;retrieve,saved,flash,map,instances,from,the,underlying,storage,param,request,the,current,request,return,a,list,with,flash,map,instances,or,code,null,if,none,found;nullable,protected,abstract,list,flash,map,retrieve,flash,maps,http,servlet,request,request
AbstractFlashMapManager -> @Nullable 	protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;1529361191;Retrieve saved FlashMap instances from the underlying storage._@param request the current request_@return a List with FlashMap instances, or {@code null} if none found;@Nullable_	protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;retrieve,saved,flash,map,instances,from,the,underlying,storage,param,request,the,current,request,return,a,list,with,flash,map,instances,or,code,null,if,none,found;nullable,protected,abstract,list,flash,map,retrieve,flash,maps,http,servlet,request,request
AbstractFlashMapManager -> @Nullable 	protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;1530174524;Retrieve saved FlashMap instances from the underlying storage._@param request the current request_@return a List with FlashMap instances, or {@code null} if none found;@Nullable_	protected abstract List<FlashMap> retrieveFlashMaps(HttpServletRequest request)_;retrieve,saved,flash,map,instances,from,the,underlying,storage,param,request,the,current,request,return,a,list,with,flash,map,instances,or,code,null,if,none,found;nullable,protected,abstract,list,flash,map,retrieve,flash,maps,http,servlet,request,request
AbstractFlashMapManager -> public int getFlashMapTimeout();1328092788;Return the amount of time in seconds before a FlashMap expires.;public int getFlashMapTimeout() {_		return this.flashMapTimeout__	};return,the,amount,of,time,in,seconds,before,a,flash,map,expires;public,int,get,flash,map,timeout,return,this,flash,map,timeout
AbstractFlashMapManager -> public int getFlashMapTimeout();1329142650;Return the amount of time in seconds before a FlashMap expires.;public int getFlashMapTimeout() {_		return this.flashMapTimeout__	};return,the,amount,of,time,in,seconds,before,a,flash,map,expires;public,int,get,flash,map,timeout,return,this,flash,map,timeout
AbstractFlashMapManager -> public int getFlashMapTimeout();1345577241;Return the amount of time in seconds before a FlashMap expires.;public int getFlashMapTimeout() {_		return this.flashMapTimeout__	};return,the,amount,of,time,in,seconds,before,a,flash,map,expires;public,int,get,flash,map,timeout,return,this,flash,map,timeout
AbstractFlashMapManager -> public int getFlashMapTimeout();1356735495;Return the amount of time in seconds before a FlashMap expires.;public int getFlashMapTimeout() {_		return this.flashMapTimeout__	};return,the,amount,of,time,in,seconds,before,a,flash,map,expires;public,int,get,flash,map,timeout,return,this,flash,map,timeout
AbstractFlashMapManager -> public int getFlashMapTimeout();1357119239;Return the amount of time in seconds before a FlashMap expires.;public int getFlashMapTimeout() {_		return this.flashMapTimeout__	};return,the,amount,of,time,in,seconds,before,a,flash,map,expires;public,int,get,flash,map,timeout,return,this,flash,map,timeout
AbstractFlashMapManager -> public int getFlashMapTimeout();1368482696;Return the amount of time in seconds before a FlashMap expires.;public int getFlashMapTimeout() {_		return this.flashMapTimeout__	};return,the,amount,of,time,in,seconds,before,a,flash,map,expires;public,int,get,flash,map,timeout,return,this,flash,map,timeout
AbstractFlashMapManager -> public int getFlashMapTimeout();1394126962;Return the amount of time in seconds before a FlashMap expires.;public int getFlashMapTimeout() {_		return this.flashMapTimeout__	};return,the,amount,of,time,in,seconds,before,a,flash,map,expires;public,int,get,flash,map,timeout,return,this,flash,map,timeout
AbstractFlashMapManager -> public int getFlashMapTimeout();1394572186;Return the amount of time in seconds before a FlashMap expires.;public int getFlashMapTimeout() {_		return this.flashMapTimeout__	};return,the,amount,of,time,in,seconds,before,a,flash,map,expires;public,int,get,flash,map,timeout,return,this,flash,map,timeout
AbstractFlashMapManager -> public int getFlashMapTimeout();1395656216;Return the amount of time in seconds before a FlashMap expires.;public int getFlashMapTimeout() {_		return this.flashMapTimeout__	};return,the,amount,of,time,in,seconds,before,a,flash,map,expires;public,int,get,flash,map,timeout,return,this,flash,map,timeout
AbstractFlashMapManager -> public int getFlashMapTimeout();1426798646;Return the amount of time in seconds before a FlashMap expires.;public int getFlashMapTimeout() {_		return this.flashMapTimeout__	};return,the,amount,of,time,in,seconds,before,a,flash,map,expires;public,int,get,flash,map,timeout,return,this,flash,map,timeout
AbstractFlashMapManager -> public int getFlashMapTimeout();1467730834;Return the amount of time in seconds before a FlashMap expires.;public int getFlashMapTimeout() {_		return this.flashMapTimeout__	};return,the,amount,of,time,in,seconds,before,a,flash,map,expires;public,int,get,flash,map,timeout,return,this,flash,map,timeout
AbstractFlashMapManager -> public int getFlashMapTimeout();1495227616;Return the amount of time in seconds before a FlashMap expires.;public int getFlashMapTimeout() {_		return this.flashMapTimeout__	};return,the,amount,of,time,in,seconds,before,a,flash,map,expires;public,int,get,flash,map,timeout,return,this,flash,map,timeout
AbstractFlashMapManager -> public int getFlashMapTimeout();1495868221;Return the amount of time in seconds before a FlashMap expires.;public int getFlashMapTimeout() {_		return this.flashMapTimeout__	};return,the,amount,of,time,in,seconds,before,a,flash,map,expires;public,int,get,flash,map,timeout,return,this,flash,map,timeout
AbstractFlashMapManager -> public int getFlashMapTimeout();1496837955;Return the amount of time in seconds before a FlashMap expires.;public int getFlashMapTimeout() {_		return this.flashMapTimeout__	};return,the,amount,of,time,in,seconds,before,a,flash,map,expires;public,int,get,flash,map,timeout,return,this,flash,map,timeout
AbstractFlashMapManager -> public int getFlashMapTimeout();1502974979;Return the amount of time in seconds before a FlashMap expires.;public int getFlashMapTimeout() {_		return this.flashMapTimeout__	};return,the,amount,of,time,in,seconds,before,a,flash,map,expires;public,int,get,flash,map,timeout,return,this,flash,map,timeout
AbstractFlashMapManager -> public int getFlashMapTimeout();1529361191;Return the amount of time in seconds before a FlashMap expires.;public int getFlashMapTimeout() {_		return this.flashMapTimeout__	};return,the,amount,of,time,in,seconds,before,a,flash,map,expires;public,int,get,flash,map,timeout,return,this,flash,map,timeout
AbstractFlashMapManager -> public int getFlashMapTimeout();1530174524;Return the amount of time in seconds before a FlashMap expires.;public int getFlashMapTimeout() {_		return this.flashMapTimeout__	};return,the,amount,of,time,in,seconds,before,a,flash,map,expires;public,int,get,flash,map,timeout,return,this,flash,map,timeout
AbstractFlashMapManager -> private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps);1329142650;Return a list of expired FlashMap instances contained in the given list.;private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps) {_		List<FlashMap> result = new ArrayList<FlashMap>()__		for (FlashMap map : allMaps) {_			if (map.isExpired()) {_				result.add(map)__			}_		}_		return result__	};return,a,list,of,expired,flash,map,instances,contained,in,the,given,list;private,list,flash,map,get,expired,flash,maps,list,flash,map,all,maps,list,flash,map,result,new,array,list,flash,map,for,flash,map,map,all,maps,if,map,is,expired,result,add,map,return,result
AbstractFlashMapManager -> private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps);1345577241;Return a list of expired FlashMap instances contained in the given list.;private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps) {_		List<FlashMap> result = new ArrayList<FlashMap>()__		for (FlashMap map : allMaps) {_			if (map.isExpired()) {_				result.add(map)__			}_		}_		return result__	};return,a,list,of,expired,flash,map,instances,contained,in,the,given,list;private,list,flash,map,get,expired,flash,maps,list,flash,map,all,maps,list,flash,map,result,new,array,list,flash,map,for,flash,map,map,all,maps,if,map,is,expired,result,add,map,return,result
AbstractFlashMapManager -> private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps);1356735495;Return a list of expired FlashMap instances contained in the given list.;private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps) {_		List<FlashMap> result = new ArrayList<FlashMap>()__		for (FlashMap map : allMaps) {_			if (map.isExpired()) {_				result.add(map)__			}_		}_		return result__	};return,a,list,of,expired,flash,map,instances,contained,in,the,given,list;private,list,flash,map,get,expired,flash,maps,list,flash,map,all,maps,list,flash,map,result,new,array,list,flash,map,for,flash,map,map,all,maps,if,map,is,expired,result,add,map,return,result
AbstractFlashMapManager -> private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps);1357119239;Return a list of expired FlashMap instances contained in the given list.;private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps) {_		List<FlashMap> result = new ArrayList<FlashMap>()__		for (FlashMap map : allMaps) {_			if (map.isExpired()) {_				result.add(map)__			}_		}_		return result__	};return,a,list,of,expired,flash,map,instances,contained,in,the,given,list;private,list,flash,map,get,expired,flash,maps,list,flash,map,all,maps,list,flash,map,result,new,array,list,flash,map,for,flash,map,map,all,maps,if,map,is,expired,result,add,map,return,result
AbstractFlashMapManager -> private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps);1368482696;Return a list of expired FlashMap instances contained in the given list.;private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps) {_		List<FlashMap> result = new ArrayList<FlashMap>()__		for (FlashMap map : allMaps) {_			if (map.isExpired()) {_				result.add(map)__			}_		}_		return result__	};return,a,list,of,expired,flash,map,instances,contained,in,the,given,list;private,list,flash,map,get,expired,flash,maps,list,flash,map,all,maps,list,flash,map,result,new,array,list,flash,map,for,flash,map,map,all,maps,if,map,is,expired,result,add,map,return,result
AbstractFlashMapManager -> private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps);1394126962;Return a list of expired FlashMap instances contained in the given list.;private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps) {_		List<FlashMap> result = new ArrayList<FlashMap>()__		for (FlashMap map : allMaps) {_			if (map.isExpired()) {_				result.add(map)__			}_		}_		return result__	};return,a,list,of,expired,flash,map,instances,contained,in,the,given,list;private,list,flash,map,get,expired,flash,maps,list,flash,map,all,maps,list,flash,map,result,new,array,list,flash,map,for,flash,map,map,all,maps,if,map,is,expired,result,add,map,return,result
AbstractFlashMapManager -> private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps);1394572186;Return a list of expired FlashMap instances contained in the given list.;private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps) {_		List<FlashMap> result = new ArrayList<FlashMap>()__		for (FlashMap map : allMaps) {_			if (map.isExpired()) {_				result.add(map)__			}_		}_		return result__	};return,a,list,of,expired,flash,map,instances,contained,in,the,given,list;private,list,flash,map,get,expired,flash,maps,list,flash,map,all,maps,list,flash,map,result,new,array,list,flash,map,for,flash,map,map,all,maps,if,map,is,expired,result,add,map,return,result
AbstractFlashMapManager -> private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps);1395656216;Return a list of expired FlashMap instances contained in the given list.;private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps) {_		List<FlashMap> result = new LinkedList<FlashMap>()__		for (FlashMap map : allMaps) {_			if (map.isExpired()) {_				result.add(map)__			}_		}_		return result__	};return,a,list,of,expired,flash,map,instances,contained,in,the,given,list;private,list,flash,map,get,expired,flash,maps,list,flash,map,all,maps,list,flash,map,result,new,linked,list,flash,map,for,flash,map,map,all,maps,if,map,is,expired,result,add,map,return,result
AbstractFlashMapManager -> private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps);1426798646;Return a list of expired FlashMap instances contained in the given list.;private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps) {_		List<FlashMap> result = new LinkedList<FlashMap>()__		for (FlashMap map : allMaps) {_			if (map.isExpired()) {_				result.add(map)__			}_		}_		return result__	};return,a,list,of,expired,flash,map,instances,contained,in,the,given,list;private,list,flash,map,get,expired,flash,maps,list,flash,map,all,maps,list,flash,map,result,new,linked,list,flash,map,for,flash,map,map,all,maps,if,map,is,expired,result,add,map,return,result
AbstractFlashMapManager -> private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps);1467730834;Return a list of expired FlashMap instances contained in the given list.;private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps) {_		List<FlashMap> result = new LinkedList<>()__		for (FlashMap map : allMaps) {_			if (map.isExpired()) {_				result.add(map)__			}_		}_		return result__	};return,a,list,of,expired,flash,map,instances,contained,in,the,given,list;private,list,flash,map,get,expired,flash,maps,list,flash,map,all,maps,list,flash,map,result,new,linked,list,for,flash,map,map,all,maps,if,map,is,expired,result,add,map,return,result
AbstractFlashMapManager -> private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps);1495227616;Return a list of expired FlashMap instances contained in the given list.;private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps) {_		List<FlashMap> result = new LinkedList<>()__		for (FlashMap map : allMaps) {_			if (map.isExpired()) {_				result.add(map)__			}_		}_		return result__	};return,a,list,of,expired,flash,map,instances,contained,in,the,given,list;private,list,flash,map,get,expired,flash,maps,list,flash,map,all,maps,list,flash,map,result,new,linked,list,for,flash,map,map,all,maps,if,map,is,expired,result,add,map,return,result
AbstractFlashMapManager -> private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps);1495868221;Return a list of expired FlashMap instances contained in the given list.;private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps) {_		List<FlashMap> result = new LinkedList<>()__		for (FlashMap map : allMaps) {_			if (map.isExpired()) {_				result.add(map)__			}_		}_		return result__	};return,a,list,of,expired,flash,map,instances,contained,in,the,given,list;private,list,flash,map,get,expired,flash,maps,list,flash,map,all,maps,list,flash,map,result,new,linked,list,for,flash,map,map,all,maps,if,map,is,expired,result,add,map,return,result
AbstractFlashMapManager -> private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps);1496837955;Return a list of expired FlashMap instances contained in the given list.;private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps) {_		List<FlashMap> result = new LinkedList<>()__		for (FlashMap map : allMaps) {_			if (map.isExpired()) {_				result.add(map)__			}_		}_		return result__	};return,a,list,of,expired,flash,map,instances,contained,in,the,given,list;private,list,flash,map,get,expired,flash,maps,list,flash,map,all,maps,list,flash,map,result,new,linked,list,for,flash,map,map,all,maps,if,map,is,expired,result,add,map,return,result
AbstractFlashMapManager -> private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps);1502974979;Return a list of expired FlashMap instances contained in the given list.;private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps) {_		List<FlashMap> result = new LinkedList<>()__		for (FlashMap map : allMaps) {_			if (map.isExpired()) {_				result.add(map)__			}_		}_		return result__	};return,a,list,of,expired,flash,map,instances,contained,in,the,given,list;private,list,flash,map,get,expired,flash,maps,list,flash,map,all,maps,list,flash,map,result,new,linked,list,for,flash,map,map,all,maps,if,map,is,expired,result,add,map,return,result
AbstractFlashMapManager -> private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps);1529361191;Return a list of expired FlashMap instances contained in the given list.;private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps) {_		List<FlashMap> result = new LinkedList<>()__		for (FlashMap map : allMaps) {_			if (map.isExpired()) {_				result.add(map)__			}_		}_		return result__	};return,a,list,of,expired,flash,map,instances,contained,in,the,given,list;private,list,flash,map,get,expired,flash,maps,list,flash,map,all,maps,list,flash,map,result,new,linked,list,for,flash,map,map,all,maps,if,map,is,expired,result,add,map,return,result
AbstractFlashMapManager -> private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps);1530174524;Return a list of expired FlashMap instances contained in the given list.;private List<FlashMap> getExpiredFlashMaps(List<FlashMap> allMaps) {_		List<FlashMap> result = new LinkedList<>()__		for (FlashMap map : allMaps) {_			if (map.isExpired()) {_				result.add(map)__			}_		}_		return result__	};return,a,list,of,expired,flash,map,instances,contained,in,the,given,list;private,list,flash,map,get,expired,flash,maps,list,flash,map,all,maps,list,flash,map,result,new,linked,list,for,flash,map,map,all,maps,if,map,is,expired,result,add,map,return,result
AbstractFlashMapManager -> protected abstract void updateFlashMaps(List<FlashMap> flashMaps, HttpServletRequest request, 			HttpServletResponse response)_;1328092788;Update the FlashMap instances in some underlying storage._@param flashMaps a non-empty list of FlashMap instances to save_@param request the current request_@param response the current response;protected abstract void updateFlashMaps(List<FlashMap> flashMaps, HttpServletRequest request,_			HttpServletResponse response)_;update,the,flash,map,instances,in,some,underlying,storage,param,flash,maps,a,non,empty,list,of,flash,map,instances,to,save,param,request,the,current,request,param,response,the,current,response;protected,abstract,void,update,flash,maps,list,flash,map,flash,maps,http,servlet,request,request,http,servlet,response,response
AbstractFlashMapManager -> protected abstract void updateFlashMaps(List<FlashMap> flashMaps, HttpServletRequest request, 			HttpServletResponse response)_;1329142650;Update the FlashMap instances in some underlying storage._@param flashMaps a non-empty list of FlashMap instances to save_@param request the current request_@param response the current response;protected abstract void updateFlashMaps(List<FlashMap> flashMaps, HttpServletRequest request,_			HttpServletResponse response)_;update,the,flash,map,instances,in,some,underlying,storage,param,flash,maps,a,non,empty,list,of,flash,map,instances,to,save,param,request,the,current,request,param,response,the,current,response;protected,abstract,void,update,flash,maps,list,flash,map,flash,maps,http,servlet,request,request,http,servlet,response,response
AbstractFlashMapManager -> protected abstract void updateFlashMaps(List<FlashMap> flashMaps, HttpServletRequest request, 			HttpServletResponse response)_;1345577241;Update the FlashMap instances in some underlying storage._@param flashMaps a non-empty list of FlashMap instances to save_@param request the current request_@param response the current response;protected abstract void updateFlashMaps(List<FlashMap> flashMaps, HttpServletRequest request,_			HttpServletResponse response)_;update,the,flash,map,instances,in,some,underlying,storage,param,flash,maps,a,non,empty,list,of,flash,map,instances,to,save,param,request,the,current,request,param,response,the,current,response;protected,abstract,void,update,flash,maps,list,flash,map,flash,maps,http,servlet,request,request,http,servlet,response,response
AbstractFlashMapManager -> protected abstract void updateFlashMaps(List<FlashMap> flashMaps, HttpServletRequest request, 			HttpServletResponse response)_;1356735495;Update the FlashMap instances in some underlying storage._@param flashMaps a non-empty list of FlashMap instances to save_@param request the current request_@param response the current response;protected abstract void updateFlashMaps(List<FlashMap> flashMaps, HttpServletRequest request,_			HttpServletResponse response)_;update,the,flash,map,instances,in,some,underlying,storage,param,flash,maps,a,non,empty,list,of,flash,map,instances,to,save,param,request,the,current,request,param,response,the,current,response;protected,abstract,void,update,flash,maps,list,flash,map,flash,maps,http,servlet,request,request,http,servlet,response,response
AbstractFlashMapManager -> protected abstract void updateFlashMaps(List<FlashMap> flashMaps, HttpServletRequest request, 			HttpServletResponse response)_;1357119239;Update the FlashMap instances in some underlying storage._@param flashMaps a non-empty list of FlashMap instances to save_@param request the current request_@param response the current response;protected abstract void updateFlashMaps(List<FlashMap> flashMaps, HttpServletRequest request,_			HttpServletResponse response)_;update,the,flash,map,instances,in,some,underlying,storage,param,flash,maps,a,non,empty,list,of,flash,map,instances,to,save,param,request,the,current,request,param,response,the,current,response;protected,abstract,void,update,flash,maps,list,flash,map,flash,maps,http,servlet,request,request,http,servlet,response,response
AbstractFlashMapManager -> protected abstract void updateFlashMaps(List<FlashMap> flashMaps, HttpServletRequest request, 			HttpServletResponse response)_;1368482696;Update the FlashMap instances in some underlying storage._@param flashMaps a non-empty list of FlashMap instances to save_@param request the current request_@param response the current response;protected abstract void updateFlashMaps(List<FlashMap> flashMaps, HttpServletRequest request,_			HttpServletResponse response)_;update,the,flash,map,instances,in,some,underlying,storage,param,flash,maps,a,non,empty,list,of,flash,map,instances,to,save,param,request,the,current,request,param,response,the,current,response;protected,abstract,void,update,flash,maps,list,flash,map,flash,maps,http,servlet,request,request,http,servlet,response,response
AbstractFlashMapManager -> protected abstract void updateFlashMaps(List<FlashMap> flashMaps, HttpServletRequest request, 			HttpServletResponse response)_;1394126962;Update the FlashMap instances in some underlying storage._@param flashMaps a non-empty list of FlashMap instances to save_@param request the current request_@param response the current response;protected abstract void updateFlashMaps(List<FlashMap> flashMaps, HttpServletRequest request,_			HttpServletResponse response)_;update,the,flash,map,instances,in,some,underlying,storage,param,flash,maps,a,non,empty,list,of,flash,map,instances,to,save,param,request,the,current,request,param,response,the,current,response;protected,abstract,void,update,flash,maps,list,flash,map,flash,maps,http,servlet,request,request,http,servlet,response,response
AbstractFlashMapManager -> public void setFlashMapTimeout(int flashMapTimeout);1328092788;Set the amount of time in seconds after a {@link FlashMap} is saved_(at request completion) and before it expires._<p>The default value is 180 seconds.;public void setFlashMapTimeout(int flashMapTimeout) {_		this.flashMapTimeout = flashMapTimeout__	};set,the,amount,of,time,in,seconds,after,a,link,flash,map,is,saved,at,request,completion,and,before,it,expires,p,the,default,value,is,180,seconds;public,void,set,flash,map,timeout,int,flash,map,timeout,this,flash,map,timeout,flash,map,timeout
AbstractFlashMapManager -> public void setFlashMapTimeout(int flashMapTimeout);1329142650;Set the amount of time in seconds after a {@link FlashMap} is saved_(at request completion) and before it expires._<p>The default value is 180 seconds.;public void setFlashMapTimeout(int flashMapTimeout) {_		this.flashMapTimeout = flashMapTimeout__	};set,the,amount,of,time,in,seconds,after,a,link,flash,map,is,saved,at,request,completion,and,before,it,expires,p,the,default,value,is,180,seconds;public,void,set,flash,map,timeout,int,flash,map,timeout,this,flash,map,timeout,flash,map,timeout
AbstractFlashMapManager -> public void setFlashMapTimeout(int flashMapTimeout);1345577241;Set the amount of time in seconds after a {@link FlashMap} is saved_(at request completion) and before it expires._<p>The default value is 180 seconds.;public void setFlashMapTimeout(int flashMapTimeout) {_		this.flashMapTimeout = flashMapTimeout__	};set,the,amount,of,time,in,seconds,after,a,link,flash,map,is,saved,at,request,completion,and,before,it,expires,p,the,default,value,is,180,seconds;public,void,set,flash,map,timeout,int,flash,map,timeout,this,flash,map,timeout,flash,map,timeout
AbstractFlashMapManager -> public void setFlashMapTimeout(int flashMapTimeout);1356735495;Set the amount of time in seconds after a {@link FlashMap} is saved_(at request completion) and before it expires._<p>The default value is 180 seconds.;public void setFlashMapTimeout(int flashMapTimeout) {_		this.flashMapTimeout = flashMapTimeout__	};set,the,amount,of,time,in,seconds,after,a,link,flash,map,is,saved,at,request,completion,and,before,it,expires,p,the,default,value,is,180,seconds;public,void,set,flash,map,timeout,int,flash,map,timeout,this,flash,map,timeout,flash,map,timeout
AbstractFlashMapManager -> public void setFlashMapTimeout(int flashMapTimeout);1357119239;Set the amount of time in seconds after a {@link FlashMap} is saved_(at request completion) and before it expires._<p>The default value is 180 seconds.;public void setFlashMapTimeout(int flashMapTimeout) {_		this.flashMapTimeout = flashMapTimeout__	};set,the,amount,of,time,in,seconds,after,a,link,flash,map,is,saved,at,request,completion,and,before,it,expires,p,the,default,value,is,180,seconds;public,void,set,flash,map,timeout,int,flash,map,timeout,this,flash,map,timeout,flash,map,timeout
AbstractFlashMapManager -> public void setFlashMapTimeout(int flashMapTimeout);1368482696;Set the amount of time in seconds after a {@link FlashMap} is saved_(at request completion) and before it expires._<p>The default value is 180 seconds.;public void setFlashMapTimeout(int flashMapTimeout) {_		this.flashMapTimeout = flashMapTimeout__	};set,the,amount,of,time,in,seconds,after,a,link,flash,map,is,saved,at,request,completion,and,before,it,expires,p,the,default,value,is,180,seconds;public,void,set,flash,map,timeout,int,flash,map,timeout,this,flash,map,timeout,flash,map,timeout
AbstractFlashMapManager -> public void setFlashMapTimeout(int flashMapTimeout);1394126962;Set the amount of time in seconds after a {@link FlashMap} is saved_(at request completion) and before it expires._<p>The default value is 180 seconds.;public void setFlashMapTimeout(int flashMapTimeout) {_		this.flashMapTimeout = flashMapTimeout__	};set,the,amount,of,time,in,seconds,after,a,link,flash,map,is,saved,at,request,completion,and,before,it,expires,p,the,default,value,is,180,seconds;public,void,set,flash,map,timeout,int,flash,map,timeout,this,flash,map,timeout,flash,map,timeout
AbstractFlashMapManager -> public void setFlashMapTimeout(int flashMapTimeout);1394572186;Set the amount of time in seconds after a {@link FlashMap} is saved_(at request completion) and before it expires._<p>The default value is 180 seconds.;public void setFlashMapTimeout(int flashMapTimeout) {_		this.flashMapTimeout = flashMapTimeout__	};set,the,amount,of,time,in,seconds,after,a,link,flash,map,is,saved,at,request,completion,and,before,it,expires,p,the,default,value,is,180,seconds;public,void,set,flash,map,timeout,int,flash,map,timeout,this,flash,map,timeout,flash,map,timeout
AbstractFlashMapManager -> public void setFlashMapTimeout(int flashMapTimeout);1395656216;Set the amount of time in seconds after a {@link FlashMap} is saved_(at request completion) and before it expires._<p>The default value is 180 seconds.;public void setFlashMapTimeout(int flashMapTimeout) {_		this.flashMapTimeout = flashMapTimeout__	};set,the,amount,of,time,in,seconds,after,a,link,flash,map,is,saved,at,request,completion,and,before,it,expires,p,the,default,value,is,180,seconds;public,void,set,flash,map,timeout,int,flash,map,timeout,this,flash,map,timeout,flash,map,timeout
AbstractFlashMapManager -> public void setFlashMapTimeout(int flashMapTimeout);1426798646;Set the amount of time in seconds after a {@link FlashMap} is saved_(at request completion) and before it expires._<p>The default value is 180 seconds.;public void setFlashMapTimeout(int flashMapTimeout) {_		this.flashMapTimeout = flashMapTimeout__	};set,the,amount,of,time,in,seconds,after,a,link,flash,map,is,saved,at,request,completion,and,before,it,expires,p,the,default,value,is,180,seconds;public,void,set,flash,map,timeout,int,flash,map,timeout,this,flash,map,timeout,flash,map,timeout
AbstractFlashMapManager -> public void setFlashMapTimeout(int flashMapTimeout);1467730834;Set the amount of time in seconds after a {@link FlashMap} is saved_(at request completion) and before it expires._<p>The default value is 180 seconds.;public void setFlashMapTimeout(int flashMapTimeout) {_		this.flashMapTimeout = flashMapTimeout__	};set,the,amount,of,time,in,seconds,after,a,link,flash,map,is,saved,at,request,completion,and,before,it,expires,p,the,default,value,is,180,seconds;public,void,set,flash,map,timeout,int,flash,map,timeout,this,flash,map,timeout,flash,map,timeout
AbstractFlashMapManager -> public void setFlashMapTimeout(int flashMapTimeout);1495227616;Set the amount of time in seconds after a {@link FlashMap} is saved_(at request completion) and before it expires._<p>The default value is 180 seconds.;public void setFlashMapTimeout(int flashMapTimeout) {_		this.flashMapTimeout = flashMapTimeout__	};set,the,amount,of,time,in,seconds,after,a,link,flash,map,is,saved,at,request,completion,and,before,it,expires,p,the,default,value,is,180,seconds;public,void,set,flash,map,timeout,int,flash,map,timeout,this,flash,map,timeout,flash,map,timeout
AbstractFlashMapManager -> public void setFlashMapTimeout(int flashMapTimeout);1495868221;Set the amount of time in seconds after a {@link FlashMap} is saved_(at request completion) and before it expires._<p>The default value is 180 seconds.;public void setFlashMapTimeout(int flashMapTimeout) {_		this.flashMapTimeout = flashMapTimeout__	};set,the,amount,of,time,in,seconds,after,a,link,flash,map,is,saved,at,request,completion,and,before,it,expires,p,the,default,value,is,180,seconds;public,void,set,flash,map,timeout,int,flash,map,timeout,this,flash,map,timeout,flash,map,timeout
AbstractFlashMapManager -> public void setFlashMapTimeout(int flashMapTimeout);1496837955;Set the amount of time in seconds after a {@link FlashMap} is saved_(at request completion) and before it expires._<p>The default value is 180 seconds.;public void setFlashMapTimeout(int flashMapTimeout) {_		this.flashMapTimeout = flashMapTimeout__	};set,the,amount,of,time,in,seconds,after,a,link,flash,map,is,saved,at,request,completion,and,before,it,expires,p,the,default,value,is,180,seconds;public,void,set,flash,map,timeout,int,flash,map,timeout,this,flash,map,timeout,flash,map,timeout
AbstractFlashMapManager -> public void setFlashMapTimeout(int flashMapTimeout);1502974979;Set the amount of time in seconds after a {@link FlashMap} is saved_(at request completion) and before it expires._<p>The default value is 180 seconds.;public void setFlashMapTimeout(int flashMapTimeout) {_		this.flashMapTimeout = flashMapTimeout__	};set,the,amount,of,time,in,seconds,after,a,link,flash,map,is,saved,at,request,completion,and,before,it,expires,p,the,default,value,is,180,seconds;public,void,set,flash,map,timeout,int,flash,map,timeout,this,flash,map,timeout,flash,map,timeout
AbstractFlashMapManager -> public void setFlashMapTimeout(int flashMapTimeout);1529361191;Set the amount of time in seconds after a {@link FlashMap} is saved_(at request completion) and before it expires._<p>The default value is 180 seconds.;public void setFlashMapTimeout(int flashMapTimeout) {_		this.flashMapTimeout = flashMapTimeout__	};set,the,amount,of,time,in,seconds,after,a,link,flash,map,is,saved,at,request,completion,and,before,it,expires,p,the,default,value,is,180,seconds;public,void,set,flash,map,timeout,int,flash,map,timeout,this,flash,map,timeout,flash,map,timeout
AbstractFlashMapManager -> public void setFlashMapTimeout(int flashMapTimeout);1530174524;Set the amount of time in seconds after a {@link FlashMap} is saved_(at request completion) and before it expires._<p>The default value is 180 seconds.;public void setFlashMapTimeout(int flashMapTimeout) {_		this.flashMapTimeout = flashMapTimeout__	};set,the,amount,of,time,in,seconds,after,a,link,flash,map,is,saved,at,request,completion,and,before,it,expires,p,the,default,value,is,180,seconds;public,void,set,flash,map,timeout,int,flash,map,timeout,this,flash,map,timeout,flash,map,timeout
AbstractFlashMapManager -> protected abstract void updateFlashMaps( 			List<FlashMap> flashMaps, HttpServletRequest request, HttpServletResponse response)_;1394572186;Update the FlashMap instances in some underlying storage._@param flashMaps a non-empty list of FlashMap instances to save_@param request the current request_@param response the current response;protected abstract void updateFlashMaps(_			List<FlashMap> flashMaps, HttpServletRequest request, HttpServletResponse response)_;update,the,flash,map,instances,in,some,underlying,storage,param,flash,maps,a,non,empty,list,of,flash,map,instances,to,save,param,request,the,current,request,param,response,the,current,response;protected,abstract,void,update,flash,maps,list,flash,map,flash,maps,http,servlet,request,request,http,servlet,response,response
AbstractFlashMapManager -> protected abstract void updateFlashMaps( 			List<FlashMap> flashMaps, HttpServletRequest request, HttpServletResponse response)_;1395656216;Update the FlashMap instances in the underlying storage._@param flashMaps a (potentially empty) list of FlashMap instances to save_@param request the current request_@param response the current response;protected abstract void updateFlashMaps(_			List<FlashMap> flashMaps, HttpServletRequest request, HttpServletResponse response)_;update,the,flash,map,instances,in,the,underlying,storage,param,flash,maps,a,potentially,empty,list,of,flash,map,instances,to,save,param,request,the,current,request,param,response,the,current,response;protected,abstract,void,update,flash,maps,list,flash,map,flash,maps,http,servlet,request,request,http,servlet,response,response
AbstractFlashMapManager -> protected abstract void updateFlashMaps( 			List<FlashMap> flashMaps, HttpServletRequest request, HttpServletResponse response)_;1426798646;Update the FlashMap instances in the underlying storage._@param flashMaps a (potentially empty) list of FlashMap instances to save_@param request the current request_@param response the current response;protected abstract void updateFlashMaps(_			List<FlashMap> flashMaps, HttpServletRequest request, HttpServletResponse response)_;update,the,flash,map,instances,in,the,underlying,storage,param,flash,maps,a,potentially,empty,list,of,flash,map,instances,to,save,param,request,the,current,request,param,response,the,current,response;protected,abstract,void,update,flash,maps,list,flash,map,flash,maps,http,servlet,request,request,http,servlet,response,response
AbstractFlashMapManager -> protected abstract void updateFlashMaps( 			List<FlashMap> flashMaps, HttpServletRequest request, HttpServletResponse response)_;1467730834;Update the FlashMap instances in the underlying storage._@param flashMaps a (potentially empty) list of FlashMap instances to save_@param request the current request_@param response the current response;protected abstract void updateFlashMaps(_			List<FlashMap> flashMaps, HttpServletRequest request, HttpServletResponse response)_;update,the,flash,map,instances,in,the,underlying,storage,param,flash,maps,a,potentially,empty,list,of,flash,map,instances,to,save,param,request,the,current,request,param,response,the,current,response;protected,abstract,void,update,flash,maps,list,flash,map,flash,maps,http,servlet,request,request,http,servlet,response,response
AbstractFlashMapManager -> protected abstract void updateFlashMaps( 			List<FlashMap> flashMaps, HttpServletRequest request, HttpServletResponse response)_;1495227616;Update the FlashMap instances in the underlying storage._@param flashMaps a (potentially empty) list of FlashMap instances to save_@param request the current request_@param response the current response;protected abstract void updateFlashMaps(_			List<FlashMap> flashMaps, HttpServletRequest request, HttpServletResponse response)_;update,the,flash,map,instances,in,the,underlying,storage,param,flash,maps,a,potentially,empty,list,of,flash,map,instances,to,save,param,request,the,current,request,param,response,the,current,response;protected,abstract,void,update,flash,maps,list,flash,map,flash,maps,http,servlet,request,request,http,servlet,response,response
AbstractFlashMapManager -> protected abstract void updateFlashMaps( 			List<FlashMap> flashMaps, HttpServletRequest request, HttpServletResponse response)_;1495868221;Update the FlashMap instances in the underlying storage._@param flashMaps a (potentially empty) list of FlashMap instances to save_@param request the current request_@param response the current response;protected abstract void updateFlashMaps(_			List<FlashMap> flashMaps, HttpServletRequest request, HttpServletResponse response)_;update,the,flash,map,instances,in,the,underlying,storage,param,flash,maps,a,potentially,empty,list,of,flash,map,instances,to,save,param,request,the,current,request,param,response,the,current,response;protected,abstract,void,update,flash,maps,list,flash,map,flash,maps,http,servlet,request,request,http,servlet,response,response
AbstractFlashMapManager -> protected abstract void updateFlashMaps( 			List<FlashMap> flashMaps, HttpServletRequest request, HttpServletResponse response)_;1496837955;Update the FlashMap instances in the underlying storage._@param flashMaps a (potentially empty) list of FlashMap instances to save_@param request the current request_@param response the current response;protected abstract void updateFlashMaps(_			List<FlashMap> flashMaps, HttpServletRequest request, HttpServletResponse response)_;update,the,flash,map,instances,in,the,underlying,storage,param,flash,maps,a,potentially,empty,list,of,flash,map,instances,to,save,param,request,the,current,request,param,response,the,current,response;protected,abstract,void,update,flash,maps,list,flash,map,flash,maps,http,servlet,request,request,http,servlet,response,response
AbstractFlashMapManager -> protected abstract void updateFlashMaps( 			List<FlashMap> flashMaps, HttpServletRequest request, HttpServletResponse response)_;1502974979;Update the FlashMap instances in the underlying storage._@param flashMaps a (potentially empty) list of FlashMap instances to save_@param request the current request_@param response the current response;protected abstract void updateFlashMaps(_			List<FlashMap> flashMaps, HttpServletRequest request, HttpServletResponse response)_;update,the,flash,map,instances,in,the,underlying,storage,param,flash,maps,a,potentially,empty,list,of,flash,map,instances,to,save,param,request,the,current,request,param,response,the,current,response;protected,abstract,void,update,flash,maps,list,flash,map,flash,maps,http,servlet,request,request,http,servlet,response,response
AbstractFlashMapManager -> protected abstract void updateFlashMaps( 			List<FlashMap> flashMaps, HttpServletRequest request, HttpServletResponse response)_;1529361191;Update the FlashMap instances in the underlying storage._@param flashMaps a (potentially empty) list of FlashMap instances to save_@param request the current request_@param response the current response;protected abstract void updateFlashMaps(_			List<FlashMap> flashMaps, HttpServletRequest request, HttpServletResponse response)_;update,the,flash,map,instances,in,the,underlying,storage,param,flash,maps,a,potentially,empty,list,of,flash,map,instances,to,save,param,request,the,current,request,param,response,the,current,response;protected,abstract,void,update,flash,maps,list,flash,map,flash,maps,http,servlet,request,request,http,servlet,response,response
AbstractFlashMapManager -> protected abstract void updateFlashMaps( 			List<FlashMap> flashMaps, HttpServletRequest request, HttpServletResponse response)_;1530174524;Update the FlashMap instances in the underlying storage._@param flashMaps a (potentially empty) list of FlashMap instances to save_@param request the current request_@param response the current response;protected abstract void updateFlashMaps(_			List<FlashMap> flashMaps, HttpServletRequest request, HttpServletResponse response)_;update,the,flash,map,instances,in,the,underlying,storage,param,flash,maps,a,potentially,empty,list,of,flash,map,instances,to,save,param,request,the,current,request,param,response,the,current,response;protected,abstract,void,update,flash,maps,list,flash,map,flash,maps,http,servlet,request,request,http,servlet,response,response
AbstractFlashMapManager -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1328092788;Set the UrlPathHelper to use to match FlashMap instances to requests.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,to,match,flash,map,instances,to,requests;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractFlashMapManager -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1329142650;Set the UrlPathHelper to use to match FlashMap instances to requests.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,to,match,flash,map,instances,to,requests;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractFlashMapManager -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1345577241;Set the UrlPathHelper to use to match FlashMap instances to requests.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,to,match,flash,map,instances,to,requests;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractFlashMapManager -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1356735495;Set the UrlPathHelper to use to match FlashMap instances to requests.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,to,match,flash,map,instances,to,requests;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractFlashMapManager -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1357119239;Set the UrlPathHelper to use to match FlashMap instances to requests.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,to,match,flash,map,instances,to,requests;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractFlashMapManager -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1368482696;Set the UrlPathHelper to use to match FlashMap instances to requests.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,to,match,flash,map,instances,to,requests;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractFlashMapManager -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1394126962;Set the UrlPathHelper to use to match FlashMap instances to requests.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,to,match,flash,map,instances,to,requests;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractFlashMapManager -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1394572186;Set the UrlPathHelper to use to match FlashMap instances to requests.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,to,match,flash,map,instances,to,requests;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractFlashMapManager -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1395656216;Set the UrlPathHelper to use to match FlashMap instances to requests.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,to,match,flash,map,instances,to,requests;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractFlashMapManager -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1426798646;Set the UrlPathHelper to use to match FlashMap instances to requests.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,to,match,flash,map,instances,to,requests;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractFlashMapManager -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1467730834;Set the UrlPathHelper to use to match FlashMap instances to requests.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,to,match,flash,map,instances,to,requests;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractFlashMapManager -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1495227616;Set the UrlPathHelper to use to match FlashMap instances to requests.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,to,match,flash,map,instances,to,requests;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractFlashMapManager -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1495868221;Set the UrlPathHelper to use to match FlashMap instances to requests.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,to,match,flash,map,instances,to,requests;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractFlashMapManager -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1496837955;Set the UrlPathHelper to use to match FlashMap instances to requests.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,to,match,flash,map,instances,to,requests;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractFlashMapManager -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1502974979;Set the UrlPathHelper to use to match FlashMap instances to requests.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,to,match,flash,map,instances,to,requests;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractFlashMapManager -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1529361191;Set the UrlPathHelper to use to match FlashMap instances to requests.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,to,match,flash,map,instances,to,requests;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractFlashMapManager -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1530174524;Set the UrlPathHelper to use to match FlashMap instances to requests.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,url,path,helper,to,use,to,match,flash,map,instances,to,requests;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
AbstractFlashMapManager -> protected Object getFlashMapsMutex(HttpServletRequest request);1395656216;Obtain a mutex for modifying the FlashMap List as handled by_{@link #retrieveFlashMaps} and {@link #updateFlashMaps},_<p>The default implementation returns a shared static mutex._Subclasses are encouraged to return a more specific mutex, or_{@code null} to indicate that no synchronization is necessary._@param request the current request_@return the mutex to use (may be {@code null} if none applicable)_@since 4.0.3;protected Object getFlashMapsMutex(HttpServletRequest request) {_		return DEFAULT_FLASH_MAPS_MUTEX__	};obtain,a,mutex,for,modifying,the,flash,map,list,as,handled,by,link,retrieve,flash,maps,and,link,update,flash,maps,p,the,default,implementation,returns,a,shared,static,mutex,subclasses,are,encouraged,to,return,a,more,specific,mutex,or,code,null,to,indicate,that,no,synchronization,is,necessary,param,request,the,current,request,return,the,mutex,to,use,may,be,code,null,if,none,applicable,since,4,0,3;protected,object,get,flash,maps,mutex,http,servlet,request,request,return
AbstractFlashMapManager -> protected Object getFlashMapsMutex(HttpServletRequest request);1426798646;Obtain a mutex for modifying the FlashMap List as handled by_{@link #retrieveFlashMaps} and {@link #updateFlashMaps},_<p>The default implementation returns a shared static mutex._Subclasses are encouraged to return a more specific mutex, or_{@code null} to indicate that no synchronization is necessary._@param request the current request_@return the mutex to use (may be {@code null} if none applicable)_@since 4.0.3;protected Object getFlashMapsMutex(HttpServletRequest request) {_		return DEFAULT_FLASH_MAPS_MUTEX__	};obtain,a,mutex,for,modifying,the,flash,map,list,as,handled,by,link,retrieve,flash,maps,and,link,update,flash,maps,p,the,default,implementation,returns,a,shared,static,mutex,subclasses,are,encouraged,to,return,a,more,specific,mutex,or,code,null,to,indicate,that,no,synchronization,is,necessary,param,request,the,current,request,return,the,mutex,to,use,may,be,code,null,if,none,applicable,since,4,0,3;protected,object,get,flash,maps,mutex,http,servlet,request,request,return
AbstractFlashMapManager -> protected Object getFlashMapsMutex(HttpServletRequest request);1467730834;Obtain a mutex for modifying the FlashMap List as handled by_{@link #retrieveFlashMaps} and {@link #updateFlashMaps},_<p>The default implementation returns a shared static mutex._Subclasses are encouraged to return a more specific mutex, or_{@code null} to indicate that no synchronization is necessary._@param request the current request_@return the mutex to use (may be {@code null} if none applicable)_@since 4.0.3;protected Object getFlashMapsMutex(HttpServletRequest request) {_		return DEFAULT_FLASH_MAPS_MUTEX__	};obtain,a,mutex,for,modifying,the,flash,map,list,as,handled,by,link,retrieve,flash,maps,and,link,update,flash,maps,p,the,default,implementation,returns,a,shared,static,mutex,subclasses,are,encouraged,to,return,a,more,specific,mutex,or,code,null,to,indicate,that,no,synchronization,is,necessary,param,request,the,current,request,return,the,mutex,to,use,may,be,code,null,if,none,applicable,since,4,0,3;protected,object,get,flash,maps,mutex,http,servlet,request,request,return
AbstractFlashMapManager -> protected Object getFlashMapsMutex(HttpServletRequest request);1495227616;Obtain a mutex for modifying the FlashMap List as handled by_{@link #retrieveFlashMaps} and {@link #updateFlashMaps},_<p>The default implementation returns a shared static mutex._Subclasses are encouraged to return a more specific mutex, or_{@code null} to indicate that no synchronization is necessary._@param request the current request_@return the mutex to use (may be {@code null} if none applicable)_@since 4.0.3;protected Object getFlashMapsMutex(HttpServletRequest request) {_		return DEFAULT_FLASH_MAPS_MUTEX__	};obtain,a,mutex,for,modifying,the,flash,map,list,as,handled,by,link,retrieve,flash,maps,and,link,update,flash,maps,p,the,default,implementation,returns,a,shared,static,mutex,subclasses,are,encouraged,to,return,a,more,specific,mutex,or,code,null,to,indicate,that,no,synchronization,is,necessary,param,request,the,current,request,return,the,mutex,to,use,may,be,code,null,if,none,applicable,since,4,0,3;protected,object,get,flash,maps,mutex,http,servlet,request,request,return
AbstractFlashMapManager -> @Nullable 	private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request);1495868221;Return a FlashMap contained in the given list that matches the request._@return a matching FlashMap or {@code null};@Nullable_	private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request) {_		List<FlashMap> result = new LinkedList<>()__		for (FlashMap flashMap : allMaps) {_			if (isFlashMapForRequest(flashMap, request)) {_				result.add(flashMap)__			}_		}_		if (!result.isEmpty()) {_			Collections.sort(result)__			if (logger.isDebugEnabled()) {_				logger.debug("Found matching FlashMap(s): " + result)__			}_			return result.get(0)__		}_		return null__	};return,a,flash,map,contained,in,the,given,list,that,matches,the,request,return,a,matching,flash,map,or,code,null;nullable,private,flash,map,get,matching,flash,map,list,flash,map,all,maps,http,servlet,request,request,list,flash,map,result,new,linked,list,for,flash,map,flash,map,all,maps,if,is,flash,map,for,request,flash,map,request,result,add,flash,map,if,result,is,empty,collections,sort,result,if,logger,is,debug,enabled,logger,debug,found,matching,flash,map,s,result,return,result,get,0,return,null
AbstractFlashMapManager -> @Nullable 	private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request);1496837955;Return a FlashMap contained in the given list that matches the request._@return a matching FlashMap or {@code null};@Nullable_	private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request) {_		List<FlashMap> result = new LinkedList<>()__		for (FlashMap flashMap : allMaps) {_			if (isFlashMapForRequest(flashMap, request)) {_				result.add(flashMap)__			}_		}_		if (!result.isEmpty()) {_			Collections.sort(result)__			if (logger.isDebugEnabled()) {_				logger.debug("Found matching FlashMap(s): " + result)__			}_			return result.get(0)__		}_		return null__	};return,a,flash,map,contained,in,the,given,list,that,matches,the,request,return,a,matching,flash,map,or,code,null;nullable,private,flash,map,get,matching,flash,map,list,flash,map,all,maps,http,servlet,request,request,list,flash,map,result,new,linked,list,for,flash,map,flash,map,all,maps,if,is,flash,map,for,request,flash,map,request,result,add,flash,map,if,result,is,empty,collections,sort,result,if,logger,is,debug,enabled,logger,debug,found,matching,flash,map,s,result,return,result,get,0,return,null
AbstractFlashMapManager -> @Nullable 	private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request);1502974979;Return a FlashMap contained in the given list that matches the request._@return a matching FlashMap or {@code null};@Nullable_	private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request) {_		List<FlashMap> result = new LinkedList<>()__		for (FlashMap flashMap : allMaps) {_			if (isFlashMapForRequest(flashMap, request)) {_				result.add(flashMap)__			}_		}_		if (!result.isEmpty()) {_			Collections.sort(result)__			if (logger.isDebugEnabled()) {_				logger.debug("Found matching FlashMap(s): " + result)__			}_			return result.get(0)__		}_		return null__	};return,a,flash,map,contained,in,the,given,list,that,matches,the,request,return,a,matching,flash,map,or,code,null;nullable,private,flash,map,get,matching,flash,map,list,flash,map,all,maps,http,servlet,request,request,list,flash,map,result,new,linked,list,for,flash,map,flash,map,all,maps,if,is,flash,map,for,request,flash,map,request,result,add,flash,map,if,result,is,empty,collections,sort,result,if,logger,is,debug,enabled,logger,debug,found,matching,flash,map,s,result,return,result,get,0,return,null
AbstractFlashMapManager -> @Nullable 	private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request);1529361191;Return a FlashMap contained in the given list that matches the request._@return a matching FlashMap or {@code null};@Nullable_	private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request) {_		List<FlashMap> result = new LinkedList<>()__		for (FlashMap flashMap : allMaps) {_			if (isFlashMapForRequest(flashMap, request)) {_				result.add(flashMap)__			}_		}_		if (!result.isEmpty()) {_			Collections.sort(result)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + result.get(0))__			}_			return result.get(0)__		}_		return null__	};return,a,flash,map,contained,in,the,given,list,that,matches,the,request,return,a,matching,flash,map,or,code,null;nullable,private,flash,map,get,matching,flash,map,list,flash,map,all,maps,http,servlet,request,request,list,flash,map,result,new,linked,list,for,flash,map,flash,map,all,maps,if,is,flash,map,for,request,flash,map,request,result,add,flash,map,if,result,is,empty,collections,sort,result,if,logger,is,trace,enabled,logger,trace,found,result,get,0,return,result,get,0,return,null
AbstractFlashMapManager -> @Nullable 	private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request);1530174524;Return a FlashMap contained in the given list that matches the request._@return a matching FlashMap or {@code null};@Nullable_	private FlashMap getMatchingFlashMap(List<FlashMap> allMaps, HttpServletRequest request) {_		List<FlashMap> result = new LinkedList<>()__		for (FlashMap flashMap : allMaps) {_			if (isFlashMapForRequest(flashMap, request)) {_				result.add(flashMap)__			}_		}_		if (!result.isEmpty()) {_			Collections.sort(result)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + result.get(0))__			}_			return result.get(0)__		}_		return null__	};return,a,flash,map,contained,in,the,given,list,that,matches,the,request,return,a,matching,flash,map,or,code,null;nullable,private,flash,map,get,matching,flash,map,list,flash,map,all,maps,http,servlet,request,request,list,flash,map,result,new,linked,list,for,flash,map,flash,map,all,maps,if,is,flash,map,for,request,flash,map,request,result,add,flash,map,if,result,is,empty,collections,sort,result,if,logger,is,trace,enabled,logger,trace,found,result,get,0,return,result,get,0,return,null
