commented;modifiers;parameterAmount;loc;comment;code
true;public;1;6;/**  * Set the list of view viewResolvers to delegate to.  */ ;/**  * Set the list of view viewResolvers to delegate to.  */ public void setViewResolvers(List<ViewResolver> viewResolvers) {     this.viewResolvers.clear().     if (!CollectionUtils.isEmpty(viewResolvers)) {         this.viewResolvers.addAll(viewResolvers).     } }
true;public;0;3;/**  * Return the list of view viewResolvers to delegate to.  */ ;/**  * Return the list of view viewResolvers to delegate to.  */ public List<ViewResolver> getViewResolvers() {     return Collections.unmodifiableList(this.viewResolvers). }
false;public;1;3;;public void setOrder(int order) {     this.order = order. }
false;public;0;4;;@Override public int getOrder() {     return this.order. }
false;public;1;8;;@Override public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {     for (ViewResolver viewResolver : this.viewResolvers) {         if (viewResolver instanceof ApplicationContextAware) {             ((ApplicationContextAware) viewResolver).setApplicationContext(applicationContext).         }     } }
false;public;1;8;;@Override public void setServletContext(ServletContext servletContext) {     for (ViewResolver viewResolver : this.viewResolvers) {         if (viewResolver instanceof ServletContextAware) {             ((ServletContextAware) viewResolver).setServletContext(servletContext).         }     } }
false;public;0;8;;@Override public void afterPropertiesSet() throws Exception {     for (ViewResolver viewResolver : this.viewResolvers) {         if (viewResolver instanceof InitializingBean) {             ((InitializingBean) viewResolver).afterPropertiesSet().         }     } }
false;public;2;11;;@Override @Nullable public View resolveViewName(String viewName, Locale locale) throws Exception {     for (ViewResolver viewResolver : this.viewResolvers) {         View view = viewResolver.resolveViewName(viewName, locale).         if (view != null) {             return view.         }     }     return null. }
