# id;timestamp;commentText;codeText;commentWords;codeWords
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1346090766;Customize the response for MethodArgumentNotValidException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1347316003;Customize the response for MethodArgumentNotValidException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1380132768;Customize the response for MethodArgumentNotValidException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1413848647;Customize the response for MethodArgumentNotValidException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1434398959;Customize the response for MethodArgumentNotValidException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1444145445;Customize the response for MethodArgumentNotValidException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452799530;Customize the response for MethodArgumentNotValidException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452851471;Customize the response for MethodArgumentNotValidException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1458944925;Customize the response for MethodArgumentNotValidException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1460021854;Customize the response for MethodArgumentNotValidException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467726769;Customize the response for MethodArgumentNotValidException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467730834;Customize the response for MethodArgumentNotValidException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473903270;Customize the response for MethodArgumentNotValidException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473922457;Customize the response for MethodArgumentNotValidException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1476211212;Customize the response for MethodArgumentNotValidException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1477665930;Customize the response for MethodArgumentNotValidException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1486062666;Customize the response for MethodArgumentNotValidException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1490350007;Customize the response for MethodArgumentNotValidException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1495868221;Customize the response for MethodArgumentNotValidException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496259743;Customize the response for MethodArgumentNotValidException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496837955;Customize the response for MethodArgumentNotValidException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1519937579;Customize the response for MethodArgumentNotValidException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1346090766;Customize the response for HttpMediaTypeNotSupportedException._This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1347316003;Customize the response for HttpMediaTypeNotSupportedException._This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1380132768;Customize the response for HttpMediaTypeNotSupportedException._This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1413848647;Customize the response for HttpMediaTypeNotSupportedException._This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1434398959;Customize the response for HttpMediaTypeNotSupportedException._This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1444145445;Customize the response for HttpMediaTypeNotSupportedException._<p>This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,p,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452799530;Customize the response for HttpMediaTypeNotSupportedException._<p>This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,p,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452851471;Customize the response for HttpMediaTypeNotSupportedException._<p>This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,p,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1458944925;Customize the response for HttpMediaTypeNotSupportedException._<p>This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,p,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1460021854;Customize the response for HttpMediaTypeNotSupportedException._<p>This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,p,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467726769;Customize the response for HttpMediaTypeNotSupportedException._<p>This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,p,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467730834;Customize the response for HttpMediaTypeNotSupportedException._<p>This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,p,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473903270;Customize the response for HttpMediaTypeNotSupportedException._<p>This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,p,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473922457;Customize the response for HttpMediaTypeNotSupportedException._<p>This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,p,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1476211212;Customize the response for HttpMediaTypeNotSupportedException._<p>This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,p,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1477665930;Customize the response for HttpMediaTypeNotSupportedException._<p>This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,p,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1486062666;Customize the response for HttpMediaTypeNotSupportedException._<p>This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,p,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1490350007;Customize the response for HttpMediaTypeNotSupportedException._<p>This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,p,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1495868221;Customize the response for HttpMediaTypeNotSupportedException._<p>This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,p,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496259743;Customize the response for HttpMediaTypeNotSupportedException._<p>This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,p,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496837955;Customize the response for HttpMediaTypeNotSupportedException._<p>This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,p,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1519937579;Customize the response for HttpMediaTypeNotSupportedException._<p>This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,p,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid( 			MethodArgumentNotValidException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1525517218;Customize the response for MethodArgumentNotValidException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(_			MethodArgumentNotValidException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMethodArgumentNotValid( 			MethodArgumentNotValidException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1529361191;Customize the response for MethodArgumentNotValidException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMethodArgumentNotValid(_			MethodArgumentNotValidException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,method,argument,not,valid,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch( 			TypeMismatchException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1525517218;Customize the response for TypeMismatchException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(_			TypeMismatchException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch( 			TypeMismatchException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1529361191;Customize the response for TypeMismatchException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(_			TypeMismatchException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException( 			BindException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1525517218;Customize the response for BindException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(_			BindException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException( 			BindException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1529361191;Customize the response for BindException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(_			BindException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingPathVariable( 			MissingPathVariableException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1525517218;Customize the response for MissingPathVariableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2;protected ResponseEntity<Object> handleMissingPathVariable(_			MissingPathVariableException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,path,variable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2;protected,response,entity,object,handle,missing,path,variable,missing,path,variable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingPathVariable( 			MissingPathVariableException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1529361191;Customize the response for MissingPathVariableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2;protected ResponseEntity<Object> handleMissingPathVariable(_			MissingPathVariableException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,path,variable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2;protected,response,entity,object,handle,missing,path,variable,missing,path,variable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> @ExceptionHandler(value={ 			NoSuchRequestHandlingMethodException.class, 			HttpRequestMethodNotSupportedException.class, 			HttpMediaTypeNotSupportedException.class, 			HttpMediaTypeNotAcceptableException.class, 			MissingServletRequestParameterException.class, 			ServletRequestBindingException.class, 			ConversionNotSupportedException.class, 			TypeMismatchException.class, 			HttpMessageNotReadableException.class, 			HttpMessageNotWritableException.class, 			MethodArgumentNotValidException.class, 			MissingServletRequestPartException.class, 			BindException.class 		}) 	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request);1346090766;Provides handling for standard Spring MVC exceptions._@param ex the target exception_@param request the current request;@ExceptionHandler(value={_			NoSuchRequestHandlingMethodException.class,_			HttpRequestMethodNotSupportedException.class,_			HttpMediaTypeNotSupportedException.class,_			HttpMediaTypeNotAcceptableException.class,_			MissingServletRequestParameterException.class,_			ServletRequestBindingException.class,_			ConversionNotSupportedException.class,_			TypeMismatchException.class,_			HttpMessageNotReadableException.class,_			HttpMessageNotWritableException.class,_			MethodArgumentNotValidException.class,_			MissingServletRequestPartException.class,_			BindException.class_		})_	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) {__		HttpHeaders headers = new HttpHeaders()___		if (ex instanceof NoSuchRequestHandlingMethodException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoSuchRequestHandlingMethod((NoSuchRequestHandlingMethodException) ex, headers, status, request)__		}_		else if (ex instanceof HttpRequestMethodNotSupportedException) {_			HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED__			return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotSupportedException) {_			HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE__			return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotAcceptableException) {_			HttpStatus status = HttpStatus.NOT_ACCEPTABLE__			return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestParameterException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request)__		}_		else if (ex instanceof ServletRequestBindingException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request)__		}_		else if (ex instanceof ConversionNotSupportedException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof TypeMismatchException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleTypeMismatch((TypeMismatchException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotReadableException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotWritableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request)__		}_		else if (ex instanceof MethodArgumentNotValidException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestPartException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request)__		}_		else if (ex instanceof BindException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleBindException((BindException) ex, headers, status, request)__		}_		else {_			logger.warn("Unknown exception type: " + ex.getClass().getName())__			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleExceptionInternal(ex, null, headers, status, request)__		}_	};provides,handling,for,standard,spring,mvc,exceptions,param,ex,the,target,exception,param,request,the,current,request;exception,handler,value,no,such,request,handling,method,exception,class,http,request,method,not,supported,exception,class,http,media,type,not,supported,exception,class,http,media,type,not,acceptable,exception,class,missing,servlet,request,parameter,exception,class,servlet,request,binding,exception,class,conversion,not,supported,exception,class,type,mismatch,exception,class,http,message,not,readable,exception,class,http,message,not,writable,exception,class,method,argument,not,valid,exception,class,missing,servlet,request,part,exception,class,bind,exception,class,public,final,response,entity,object,handle,exception,exception,ex,web,request,request,http,headers,headers,new,http,headers,if,ex,instanceof,no,such,request,handling,method,exception,http,status,status,http,status,return,handle,no,such,request,handling,method,no,such,request,handling,method,exception,ex,headers,status,request,else,if,ex,instanceof,http,request,method,not,supported,exception,http,status,status,http,status,return,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,supported,exception,http,status,status,http,status,return,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,acceptable,exception,http,status,status,http,status,return,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,parameter,exception,http,status,status,http,status,return,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,headers,status,request,else,if,ex,instanceof,servlet,request,binding,exception,http,status,status,http,status,return,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,headers,status,request,else,if,ex,instanceof,conversion,not,supported,exception,http,status,status,http,status,return,handle,conversion,not,supported,conversion,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,type,mismatch,exception,http,status,status,http,status,return,handle,type,mismatch,type,mismatch,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,readable,exception,http,status,status,http,status,return,handle,http,message,not,readable,http,message,not,readable,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,writable,exception,http,status,status,http,status,return,handle,http,message,not,writable,http,message,not,writable,exception,ex,headers,status,request,else,if,ex,instanceof,method,argument,not,valid,exception,http,status,status,http,status,return,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,part,exception,http,status,status,http,status,return,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,headers,status,request,else,if,ex,instanceof,bind,exception,http,status,status,http,status,return,handle,bind,exception,bind,exception,ex,headers,status,request,else,logger,warn,unknown,exception,type,ex,get,class,get,name,http,status,status,http,status,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> @ExceptionHandler(value={ 			NoSuchRequestHandlingMethodException.class, 			HttpRequestMethodNotSupportedException.class, 			HttpMediaTypeNotSupportedException.class, 			HttpMediaTypeNotAcceptableException.class, 			MissingServletRequestParameterException.class, 			ServletRequestBindingException.class, 			ConversionNotSupportedException.class, 			TypeMismatchException.class, 			HttpMessageNotReadableException.class, 			HttpMessageNotWritableException.class, 			MethodArgumentNotValidException.class, 			MissingServletRequestPartException.class, 			BindException.class 		}) 	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request);1347316003;Provides handling for standard Spring MVC exceptions._@param ex the target exception_@param request the current request;@ExceptionHandler(value={_			NoSuchRequestHandlingMethodException.class,_			HttpRequestMethodNotSupportedException.class,_			HttpMediaTypeNotSupportedException.class,_			HttpMediaTypeNotAcceptableException.class,_			MissingServletRequestParameterException.class,_			ServletRequestBindingException.class,_			ConversionNotSupportedException.class,_			TypeMismatchException.class,_			HttpMessageNotReadableException.class,_			HttpMessageNotWritableException.class,_			MethodArgumentNotValidException.class,_			MissingServletRequestPartException.class,_			BindException.class_		})_	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) {__		HttpHeaders headers = new HttpHeaders()___		if (ex instanceof NoSuchRequestHandlingMethodException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoSuchRequestHandlingMethod((NoSuchRequestHandlingMethodException) ex, headers, status, request)__		}_		else if (ex instanceof HttpRequestMethodNotSupportedException) {_			HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED__			return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotSupportedException) {_			HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE__			return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotAcceptableException) {_			HttpStatus status = HttpStatus.NOT_ACCEPTABLE__			return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestParameterException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request)__		}_		else if (ex instanceof ServletRequestBindingException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request)__		}_		else if (ex instanceof ConversionNotSupportedException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof TypeMismatchException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleTypeMismatch((TypeMismatchException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotReadableException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotWritableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request)__		}_		else if (ex instanceof MethodArgumentNotValidException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestPartException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request)__		}_		else if (ex instanceof BindException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleBindException((BindException) ex, headers, status, request)__		}_		else {_			logger.warn("Unknown exception type: " + ex.getClass().getName())__			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleExceptionInternal(ex, null, headers, status, request)__		}_	};provides,handling,for,standard,spring,mvc,exceptions,param,ex,the,target,exception,param,request,the,current,request;exception,handler,value,no,such,request,handling,method,exception,class,http,request,method,not,supported,exception,class,http,media,type,not,supported,exception,class,http,media,type,not,acceptable,exception,class,missing,servlet,request,parameter,exception,class,servlet,request,binding,exception,class,conversion,not,supported,exception,class,type,mismatch,exception,class,http,message,not,readable,exception,class,http,message,not,writable,exception,class,method,argument,not,valid,exception,class,missing,servlet,request,part,exception,class,bind,exception,class,public,final,response,entity,object,handle,exception,exception,ex,web,request,request,http,headers,headers,new,http,headers,if,ex,instanceof,no,such,request,handling,method,exception,http,status,status,http,status,return,handle,no,such,request,handling,method,no,such,request,handling,method,exception,ex,headers,status,request,else,if,ex,instanceof,http,request,method,not,supported,exception,http,status,status,http,status,return,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,supported,exception,http,status,status,http,status,return,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,acceptable,exception,http,status,status,http,status,return,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,parameter,exception,http,status,status,http,status,return,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,headers,status,request,else,if,ex,instanceof,servlet,request,binding,exception,http,status,status,http,status,return,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,headers,status,request,else,if,ex,instanceof,conversion,not,supported,exception,http,status,status,http,status,return,handle,conversion,not,supported,conversion,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,type,mismatch,exception,http,status,status,http,status,return,handle,type,mismatch,type,mismatch,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,readable,exception,http,status,status,http,status,return,handle,http,message,not,readable,http,message,not,readable,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,writable,exception,http,status,status,http,status,return,handle,http,message,not,writable,http,message,not,writable,exception,ex,headers,status,request,else,if,ex,instanceof,method,argument,not,valid,exception,http,status,status,http,status,return,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,part,exception,http,status,status,http,status,return,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,headers,status,request,else,if,ex,instanceof,bind,exception,http,status,status,http,status,return,handle,bind,exception,bind,exception,ex,headers,status,request,else,logger,warn,unknown,exception,type,ex,get,class,get,name,http,status,status,http,status,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body, 			HttpHeaders headers, HttpStatus status, WebRequest request);1346090766;A single place to customize the response body of all Exception types._This method returns {@code null} by default._@param ex the exception_@param body the body to use for the response_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return new ResponseEntity<Object>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,this,method,returns,code,null,by,default,param,ex,the,exception,param,body,the,body,to,use,for,the,response,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,object,body,http,headers,headers,http,status,status,web,request,request,return,new,response,entity,object,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body, 			HttpHeaders headers, HttpStatus status, WebRequest request);1347316003;A single place to customize the response body of all Exception types._This method returns {@code null} by default._@param ex the exception_@param body the body to use for the response_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute("javax.servlet.error.exception", ex, WebRequest.SCOPE_REQUEST)__		}__		return new ResponseEntity<Object>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,this,method,returns,code,null,by,default,param,ex,the,exception,param,body,the,body,to,use,for,the,response,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,javax,servlet,error,exception,ex,web,request,return,new,response,entity,object,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body, 			HttpHeaders headers, HttpStatus status, WebRequest request);1380132768;A single place to customize the response body of all Exception types._This method returns {@code null} by default._@param ex the exception_@param body the body to use for the response_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute("javax.servlet.error.exception", ex, WebRequest.SCOPE_REQUEST)__		}__		return new ResponseEntity<Object>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,this,method,returns,code,null,by,default,param,ex,the,exception,param,body,the,body,to,use,for,the,response,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,javax,servlet,error,exception,ex,web,request,return,new,response,entity,object,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body, 			HttpHeaders headers, HttpStatus status, WebRequest request);1413848647;A single place to customize the response body of all Exception types._This method returns {@code null} by default._@param ex the exception_@param body the body to use for the response_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute("javax.servlet.error.exception", ex, WebRequest.SCOPE_REQUEST)__		}__		return new ResponseEntity<Object>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,this,method,returns,code,null,by,default,param,ex,the,exception,param,body,the,body,to,use,for,the,response,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,javax,servlet,error,exception,ex,web,request,return,new,response,entity,object,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body, 			HttpHeaders headers, HttpStatus status, WebRequest request);1434398959;A single place to customize the response body of all Exception types._This method returns {@code null} by default._@param ex the exception_@param body the body to use for the response_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute("javax.servlet.error.exception", ex, WebRequest.SCOPE_REQUEST)__		}__		return new ResponseEntity<Object>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,this,method,returns,code,null,by,default,param,ex,the,exception,param,body,the,body,to,use,for,the,response,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,javax,servlet,error,exception,ex,web,request,return,new,response,entity,object,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body, 			HttpHeaders headers, HttpStatus status, WebRequest request);1444145445;A single place to customize the response body of all Exception types._<p>This method returns {@code null} by default._@param ex the exception_@param body the body to use for the response_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute("javax.servlet.error.exception", ex, WebRequest.SCOPE_REQUEST)__		}__		return new ResponseEntity<Object>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,p,this,method,returns,code,null,by,default,param,ex,the,exception,param,body,the,body,to,use,for,the,response,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,javax,servlet,error,exception,ex,web,request,return,new,response,entity,object,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452799530;A single place to customize the response body of all Exception types._<p>The default implementation sets the {@link WebUtils#ERROR_EXCEPTION_ATTRIBUTE}_request attribute and creates a {@link ResponseEntity} from the given_body, headers, and status._@param ex the exception_@param body the body for the response_@param headers the headers for the response_@param status the response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute(WebUtils.ERROR_EXCEPTION_ATTRIBUTE, ex, WebRequest.SCOPE_REQUEST)__		}__		return new ResponseEntity<Object>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,p,the,default,implementation,sets,the,link,web,utils,request,attribute,and,creates,a,link,response,entity,from,the,given,body,headers,and,status,param,ex,the,exception,param,body,the,body,for,the,response,param,headers,the,headers,for,the,response,param,status,the,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,web,utils,ex,web,request,return,new,response,entity,object,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452851471;A single place to customize the response body of all Exception types._<p>The default implementation sets the {@link WebUtils#ERROR_EXCEPTION_ATTRIBUTE}_request attribute and creates a {@link ResponseEntity} from the given_body, headers, and status._@param ex the exception_@param body the body for the response_@param headers the headers for the response_@param status the response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute(WebUtils.ERROR_EXCEPTION_ATTRIBUTE, ex, WebRequest.SCOPE_REQUEST)__		}__		return new ResponseEntity<Object>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,p,the,default,implementation,sets,the,link,web,utils,request,attribute,and,creates,a,link,response,entity,from,the,given,body,headers,and,status,param,ex,the,exception,param,body,the,body,for,the,response,param,headers,the,headers,for,the,response,param,status,the,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,web,utils,ex,web,request,return,new,response,entity,object,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body, 			HttpHeaders headers, HttpStatus status, WebRequest request);1458944925;A single place to customize the response body of all Exception types._<p>The default implementation sets the {@link WebUtils#ERROR_EXCEPTION_ATTRIBUTE}_request attribute and creates a {@link ResponseEntity} from the given_body, headers, and status._@param ex the exception_@param body the body for the response_@param headers the headers for the response_@param status the response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute(WebUtils.ERROR_EXCEPTION_ATTRIBUTE, ex, WebRequest.SCOPE_REQUEST)__		}_		return new ResponseEntity<Object>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,p,the,default,implementation,sets,the,link,web,utils,request,attribute,and,creates,a,link,response,entity,from,the,given,body,headers,and,status,param,ex,the,exception,param,body,the,body,for,the,response,param,headers,the,headers,for,the,response,param,status,the,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,web,utils,ex,web,request,return,new,response,entity,object,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body, 			HttpHeaders headers, HttpStatus status, WebRequest request);1460021854;A single place to customize the response body of all Exception types._<p>The default implementation sets the {@link WebUtils#ERROR_EXCEPTION_ATTRIBUTE}_request attribute and creates a {@link ResponseEntity} from the given_body, headers, and status._@param ex the exception_@param body the body for the response_@param headers the headers for the response_@param status the response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute(WebUtils.ERROR_EXCEPTION_ATTRIBUTE, ex, WebRequest.SCOPE_REQUEST)__		}_		return new ResponseEntity<Object>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,p,the,default,implementation,sets,the,link,web,utils,request,attribute,and,creates,a,link,response,entity,from,the,given,body,headers,and,status,param,ex,the,exception,param,body,the,body,for,the,response,param,headers,the,headers,for,the,response,param,status,the,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,web,utils,ex,web,request,return,new,response,entity,object,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467726769;A single place to customize the response body of all Exception types._<p>The default implementation sets the {@link WebUtils#ERROR_EXCEPTION_ATTRIBUTE}_request attribute and creates a {@link ResponseEntity} from the given_body, headers, and status._@param ex the exception_@param body the body for the response_@param headers the headers for the response_@param status the response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute(WebUtils.ERROR_EXCEPTION_ATTRIBUTE, ex, WebRequest.SCOPE_REQUEST)__		}_		return new ResponseEntity<Object>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,p,the,default,implementation,sets,the,link,web,utils,request,attribute,and,creates,a,link,response,entity,from,the,given,body,headers,and,status,param,ex,the,exception,param,body,the,body,for,the,response,param,headers,the,headers,for,the,response,param,status,the,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,web,utils,ex,web,request,return,new,response,entity,object,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467730834;A single place to customize the response body of all Exception types._<p>The default implementation sets the {@link WebUtils#ERROR_EXCEPTION_ATTRIBUTE}_request attribute and creates a {@link ResponseEntity} from the given_body, headers, and status._@param ex the exception_@param body the body for the response_@param headers the headers for the response_@param status the response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute(WebUtils.ERROR_EXCEPTION_ATTRIBUTE, ex, WebRequest.SCOPE_REQUEST)__		}_		return new ResponseEntity<>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,p,the,default,implementation,sets,the,link,web,utils,request,attribute,and,creates,a,link,response,entity,from,the,given,body,headers,and,status,param,ex,the,exception,param,body,the,body,for,the,response,param,headers,the,headers,for,the,response,param,status,the,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,web,utils,ex,web,request,return,new,response,entity,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473903270;A single place to customize the response body of all Exception types._<p>The default implementation sets the {@link WebUtils#ERROR_EXCEPTION_ATTRIBUTE}_request attribute and creates a {@link ResponseEntity} from the given_body, headers, and status._@param ex the exception_@param body the body for the response_@param headers the headers for the response_@param status the response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute(WebUtils.ERROR_EXCEPTION_ATTRIBUTE, ex, WebRequest.SCOPE_REQUEST)__		}_		return new ResponseEntity<>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,p,the,default,implementation,sets,the,link,web,utils,request,attribute,and,creates,a,link,response,entity,from,the,given,body,headers,and,status,param,ex,the,exception,param,body,the,body,for,the,response,param,headers,the,headers,for,the,response,param,status,the,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,web,utils,ex,web,request,return,new,response,entity,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473922457;A single place to customize the response body of all Exception types._<p>The default implementation sets the {@link WebUtils#ERROR_EXCEPTION_ATTRIBUTE}_request attribute and creates a {@link ResponseEntity} from the given_body, headers, and status._@param ex the exception_@param body the body for the response_@param headers the headers for the response_@param status the response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute(WebUtils.ERROR_EXCEPTION_ATTRIBUTE, ex, WebRequest.SCOPE_REQUEST)__		}_		return new ResponseEntity<>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,p,the,default,implementation,sets,the,link,web,utils,request,attribute,and,creates,a,link,response,entity,from,the,given,body,headers,and,status,param,ex,the,exception,param,body,the,body,for,the,response,param,headers,the,headers,for,the,response,param,status,the,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,web,utils,ex,web,request,return,new,response,entity,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body, 			HttpHeaders headers, HttpStatus status, WebRequest request);1476211212;A single place to customize the response body of all Exception types._<p>The default implementation sets the {@link WebUtils#ERROR_EXCEPTION_ATTRIBUTE}_request attribute and creates a {@link ResponseEntity} from the given_body, headers, and status._@param ex the exception_@param body the body for the response_@param headers the headers for the response_@param status the response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute(WebUtils.ERROR_EXCEPTION_ATTRIBUTE, ex, WebRequest.SCOPE_REQUEST)__		}_		return new ResponseEntity<>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,p,the,default,implementation,sets,the,link,web,utils,request,attribute,and,creates,a,link,response,entity,from,the,given,body,headers,and,status,param,ex,the,exception,param,body,the,body,for,the,response,param,headers,the,headers,for,the,response,param,status,the,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,web,utils,ex,web,request,return,new,response,entity,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body, 			HttpHeaders headers, HttpStatus status, WebRequest request);1477665930;A single place to customize the response body of all Exception types._<p>The default implementation sets the {@link WebUtils#ERROR_EXCEPTION_ATTRIBUTE}_request attribute and creates a {@link ResponseEntity} from the given_body, headers, and status._@param ex the exception_@param body the body for the response_@param headers the headers for the response_@param status the response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute(WebUtils.ERROR_EXCEPTION_ATTRIBUTE, ex, WebRequest.SCOPE_REQUEST)__		}_		return new ResponseEntity<>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,p,the,default,implementation,sets,the,link,web,utils,request,attribute,and,creates,a,link,response,entity,from,the,given,body,headers,and,status,param,ex,the,exception,param,body,the,body,for,the,response,param,headers,the,headers,for,the,response,param,status,the,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,web,utils,ex,web,request,return,new,response,entity,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body, 			HttpHeaders headers, HttpStatus status, WebRequest request);1486062666;A single place to customize the response body of all Exception types._<p>The default implementation sets the {@link WebUtils#ERROR_EXCEPTION_ATTRIBUTE}_request attribute and creates a {@link ResponseEntity} from the given_body, headers, and status._@param ex the exception_@param body the body for the response_@param headers the headers for the response_@param status the response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute(WebUtils.ERROR_EXCEPTION_ATTRIBUTE, ex, WebRequest.SCOPE_REQUEST)__		}_		return new ResponseEntity<>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,p,the,default,implementation,sets,the,link,web,utils,request,attribute,and,creates,a,link,response,entity,from,the,given,body,headers,and,status,param,ex,the,exception,param,body,the,body,for,the,response,param,headers,the,headers,for,the,response,param,status,the,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,web,utils,ex,web,request,return,new,response,entity,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body, 			HttpHeaders headers, HttpStatus status, WebRequest request);1490350007;A single place to customize the response body of all Exception types._<p>The default implementation sets the {@link WebUtils#ERROR_EXCEPTION_ATTRIBUTE}_request attribute and creates a {@link ResponseEntity} from the given_body, headers, and status._@param ex the exception_@param body the body for the response_@param headers the headers for the response_@param status the response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute(WebUtils.ERROR_EXCEPTION_ATTRIBUTE, ex, WebRequest.SCOPE_REQUEST)__		}_		return new ResponseEntity<>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,p,the,default,implementation,sets,the,link,web,utils,request,attribute,and,creates,a,link,response,entity,from,the,given,body,headers,and,status,param,ex,the,exception,param,body,the,body,for,the,response,param,headers,the,headers,for,the,response,param,status,the,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,web,utils,ex,web,request,return,new,response,entity,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body, 			HttpHeaders headers, HttpStatus status, WebRequest request);1495868221;A single place to customize the response body of all Exception types._<p>The default implementation sets the {@link WebUtils#ERROR_EXCEPTION_ATTRIBUTE}_request attribute and creates a {@link ResponseEntity} from the given_body, headers, and status._@param ex the exception_@param body the body for the response_@param headers the headers for the response_@param status the response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute(WebUtils.ERROR_EXCEPTION_ATTRIBUTE, ex, WebRequest.SCOPE_REQUEST)__		}_		return new ResponseEntity<>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,p,the,default,implementation,sets,the,link,web,utils,request,attribute,and,creates,a,link,response,entity,from,the,given,body,headers,and,status,param,ex,the,exception,param,body,the,body,for,the,response,param,headers,the,headers,for,the,response,param,status,the,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,web,utils,ex,web,request,return,new,response,entity,body,headers,status
ResponseEntityExceptionHandler -> @ExceptionHandler({ 			HttpRequestMethodNotSupportedException.class, 			HttpMediaTypeNotSupportedException.class, 			HttpMediaTypeNotAcceptableException.class, 			MissingPathVariableException.class, 			MissingServletRequestParameterException.class, 			ServletRequestBindingException.class, 			ConversionNotSupportedException.class, 			TypeMismatchException.class, 			HttpMessageNotReadableException.class, 			HttpMessageNotWritableException.class, 			MethodArgumentNotValidException.class, 			MissingServletRequestPartException.class, 			BindException.class, 			NoHandlerFoundException.class, 			AsyncRequestTimeoutException.class 		}) 	@Nullable 	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) throws Exception;1525517218;Provides handling for standard Spring MVC exceptions._@param ex the target exception_@param request the current request;@ExceptionHandler({_			HttpRequestMethodNotSupportedException.class,_			HttpMediaTypeNotSupportedException.class,_			HttpMediaTypeNotAcceptableException.class,_			MissingPathVariableException.class,_			MissingServletRequestParameterException.class,_			ServletRequestBindingException.class,_			ConversionNotSupportedException.class,_			TypeMismatchException.class,_			HttpMessageNotReadableException.class,_			HttpMessageNotWritableException.class,_			MethodArgumentNotValidException.class,_			MissingServletRequestPartException.class,_			BindException.class,_			NoHandlerFoundException.class,_			AsyncRequestTimeoutException.class_		})_	@Nullable_	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) throws Exception {_		HttpHeaders headers = new HttpHeaders()___		if (ex instanceof HttpRequestMethodNotSupportedException) {_			HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED__			return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotSupportedException) {_			HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE__			return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotAcceptableException) {_			HttpStatus status = HttpStatus.NOT_ACCEPTABLE__			return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingPathVariableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleMissingPathVariable((MissingPathVariableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestParameterException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request)__		}_		else if (ex instanceof ServletRequestBindingException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request)__		}_		else if (ex instanceof ConversionNotSupportedException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof TypeMismatchException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleTypeMismatch((TypeMismatchException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotReadableException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotWritableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request)__		}_		else if (ex instanceof MethodArgumentNotValidException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestPartException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request)__		}_		else if (ex instanceof BindException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleBindException((BindException) ex, headers, status, request)__		}_		else if (ex instanceof NoHandlerFoundException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoHandlerFoundException((NoHandlerFoundException) ex, headers, status, request)__		}_		else if (ex instanceof AsyncRequestTimeoutException) {_			HttpStatus status = HttpStatus.SERVICE_UNAVAILABLE__			return handleAsyncRequestTimeoutException((AsyncRequestTimeoutException) ex, headers, status, request)__		}_		else {_			_			_			_			_			throw ex__		}_	};provides,handling,for,standard,spring,mvc,exceptions,param,ex,the,target,exception,param,request,the,current,request;exception,handler,http,request,method,not,supported,exception,class,http,media,type,not,supported,exception,class,http,media,type,not,acceptable,exception,class,missing,path,variable,exception,class,missing,servlet,request,parameter,exception,class,servlet,request,binding,exception,class,conversion,not,supported,exception,class,type,mismatch,exception,class,http,message,not,readable,exception,class,http,message,not,writable,exception,class,method,argument,not,valid,exception,class,missing,servlet,request,part,exception,class,bind,exception,class,no,handler,found,exception,class,async,request,timeout,exception,class,nullable,public,final,response,entity,object,handle,exception,exception,ex,web,request,request,throws,exception,http,headers,headers,new,http,headers,if,ex,instanceof,http,request,method,not,supported,exception,http,status,status,http,status,return,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,supported,exception,http,status,status,http,status,return,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,acceptable,exception,http,status,status,http,status,return,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,path,variable,exception,http,status,status,http,status,return,handle,missing,path,variable,missing,path,variable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,parameter,exception,http,status,status,http,status,return,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,headers,status,request,else,if,ex,instanceof,servlet,request,binding,exception,http,status,status,http,status,return,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,headers,status,request,else,if,ex,instanceof,conversion,not,supported,exception,http,status,status,http,status,return,handle,conversion,not,supported,conversion,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,type,mismatch,exception,http,status,status,http,status,return,handle,type,mismatch,type,mismatch,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,readable,exception,http,status,status,http,status,return,handle,http,message,not,readable,http,message,not,readable,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,writable,exception,http,status,status,http,status,return,handle,http,message,not,writable,http,message,not,writable,exception,ex,headers,status,request,else,if,ex,instanceof,method,argument,not,valid,exception,http,status,status,http,status,return,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,part,exception,http,status,status,http,status,return,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,headers,status,request,else,if,ex,instanceof,bind,exception,http,status,status,http,status,return,handle,bind,exception,bind,exception,ex,headers,status,request,else,if,ex,instanceof,no,handler,found,exception,http,status,status,http,status,return,handle,no,handler,found,exception,no,handler,found,exception,ex,headers,status,request,else,if,ex,instanceof,async,request,timeout,exception,http,status,status,http,status,return,handle,async,request,timeout,exception,async,request,timeout,exception,ex,headers,status,request,else,throw,ex
ResponseEntityExceptionHandler -> @ExceptionHandler({ 			HttpRequestMethodNotSupportedException.class, 			HttpMediaTypeNotSupportedException.class, 			HttpMediaTypeNotAcceptableException.class, 			MissingPathVariableException.class, 			MissingServletRequestParameterException.class, 			ServletRequestBindingException.class, 			ConversionNotSupportedException.class, 			TypeMismatchException.class, 			HttpMessageNotReadableException.class, 			HttpMessageNotWritableException.class, 			MethodArgumentNotValidException.class, 			MissingServletRequestPartException.class, 			BindException.class, 			NoHandlerFoundException.class, 			AsyncRequestTimeoutException.class 		}) 	@Nullable 	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) throws Exception;1529361191;Provides handling for standard Spring MVC exceptions._@param ex the target exception_@param request the current request;@ExceptionHandler({_			HttpRequestMethodNotSupportedException.class,_			HttpMediaTypeNotSupportedException.class,_			HttpMediaTypeNotAcceptableException.class,_			MissingPathVariableException.class,_			MissingServletRequestParameterException.class,_			ServletRequestBindingException.class,_			ConversionNotSupportedException.class,_			TypeMismatchException.class,_			HttpMessageNotReadableException.class,_			HttpMessageNotWritableException.class,_			MethodArgumentNotValidException.class,_			MissingServletRequestPartException.class,_			BindException.class,_			NoHandlerFoundException.class,_			AsyncRequestTimeoutException.class_		})_	@Nullable_	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) throws Exception {_		HttpHeaders headers = new HttpHeaders()___		if (ex instanceof HttpRequestMethodNotSupportedException) {_			HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED__			return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotSupportedException) {_			HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE__			return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotAcceptableException) {_			HttpStatus status = HttpStatus.NOT_ACCEPTABLE__			return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingPathVariableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleMissingPathVariable((MissingPathVariableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestParameterException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request)__		}_		else if (ex instanceof ServletRequestBindingException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request)__		}_		else if (ex instanceof ConversionNotSupportedException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof TypeMismatchException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleTypeMismatch((TypeMismatchException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotReadableException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotWritableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request)__		}_		else if (ex instanceof MethodArgumentNotValidException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestPartException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request)__		}_		else if (ex instanceof BindException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleBindException((BindException) ex, headers, status, request)__		}_		else if (ex instanceof NoHandlerFoundException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoHandlerFoundException((NoHandlerFoundException) ex, headers, status, request)__		}_		else if (ex instanceof AsyncRequestTimeoutException) {_			HttpStatus status = HttpStatus.SERVICE_UNAVAILABLE__			return handleAsyncRequestTimeoutException((AsyncRequestTimeoutException) ex, headers, status, request)__		}_		else {_			_			_			_			_			throw ex__		}_	};provides,handling,for,standard,spring,mvc,exceptions,param,ex,the,target,exception,param,request,the,current,request;exception,handler,http,request,method,not,supported,exception,class,http,media,type,not,supported,exception,class,http,media,type,not,acceptable,exception,class,missing,path,variable,exception,class,missing,servlet,request,parameter,exception,class,servlet,request,binding,exception,class,conversion,not,supported,exception,class,type,mismatch,exception,class,http,message,not,readable,exception,class,http,message,not,writable,exception,class,method,argument,not,valid,exception,class,missing,servlet,request,part,exception,class,bind,exception,class,no,handler,found,exception,class,async,request,timeout,exception,class,nullable,public,final,response,entity,object,handle,exception,exception,ex,web,request,request,throws,exception,http,headers,headers,new,http,headers,if,ex,instanceof,http,request,method,not,supported,exception,http,status,status,http,status,return,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,supported,exception,http,status,status,http,status,return,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,acceptable,exception,http,status,status,http,status,return,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,path,variable,exception,http,status,status,http,status,return,handle,missing,path,variable,missing,path,variable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,parameter,exception,http,status,status,http,status,return,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,headers,status,request,else,if,ex,instanceof,servlet,request,binding,exception,http,status,status,http,status,return,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,headers,status,request,else,if,ex,instanceof,conversion,not,supported,exception,http,status,status,http,status,return,handle,conversion,not,supported,conversion,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,type,mismatch,exception,http,status,status,http,status,return,handle,type,mismatch,type,mismatch,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,readable,exception,http,status,status,http,status,return,handle,http,message,not,readable,http,message,not,readable,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,writable,exception,http,status,status,http,status,return,handle,http,message,not,writable,http,message,not,writable,exception,ex,headers,status,request,else,if,ex,instanceof,method,argument,not,valid,exception,http,status,status,http,status,return,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,part,exception,http,status,status,http,status,return,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,headers,status,request,else,if,ex,instanceof,bind,exception,http,status,status,http,status,return,handle,bind,exception,bind,exception,ex,headers,status,request,else,if,ex,instanceof,no,handler,found,exception,http,status,status,http,status,return,handle,no,handler,found,exception,no,handler,found,exception,ex,headers,status,request,else,if,ex,instanceof,async,request,timeout,exception,http,status,status,http,status,return,handle,async,request,timeout,exception,async,request,timeout,exception,ex,headers,status,request,else,throw,ex
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable( 			HttpMessageNotReadableException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1525517218;Customize the response for HttpMessageNotReadableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(_			HttpMessageNotReadableException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable( 			HttpMessageNotReadableException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1529361191;Customize the response for HttpMessageNotReadableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(_			HttpMessageNotReadableException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported( 			HttpRequestMethodNotSupportedException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1525517218;Customize the response for HttpRequestMethodNotSupportedException._<p>This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(_			HttpRequestMethodNotSupportedException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!CollectionUtils.isEmpty(supportedMethods)) {_			headers.setAllow(supportedMethods)__		}_		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,p,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,collection,utils,is,empty,supported,methods,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported( 			HttpRequestMethodNotSupportedException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1529361191;Customize the response for HttpRequestMethodNotSupportedException._<p>This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(_			HttpRequestMethodNotSupportedException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!CollectionUtils.isEmpty(supportedMethods)) {_			headers.setAllow(supportedMethods)__		}_		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,p,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,collection,utils,is,empty,supported,methods,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported( 			ConversionNotSupportedException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1525517218;Customize the response for ConversionNotSupportedException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(_			ConversionNotSupportedException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported( 			ConversionNotSupportedException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1529361191;Customize the response for ConversionNotSupportedException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(_			ConversionNotSupportedException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> @ExceptionHandler(value={ 			NoSuchRequestHandlingMethodException.class, 			HttpRequestMethodNotSupportedException.class, 			HttpMediaTypeNotSupportedException.class, 			HttpMediaTypeNotAcceptableException.class, 			MissingServletRequestParameterException.class, 			ServletRequestBindingException.class, 			ConversionNotSupportedException.class, 			TypeMismatchException.class, 			HttpMessageNotReadableException.class, 			HttpMessageNotWritableException.class, 			MethodArgumentNotValidException.class, 			MissingServletRequestPartException.class, 			BindException.class, 			NoHandlerFoundException.class 		}) 	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request);1380132768;Provides handling for standard Spring MVC exceptions._@param ex the target exception_@param request the current request;@ExceptionHandler(value={_			NoSuchRequestHandlingMethodException.class,_			HttpRequestMethodNotSupportedException.class,_			HttpMediaTypeNotSupportedException.class,_			HttpMediaTypeNotAcceptableException.class,_			MissingServletRequestParameterException.class,_			ServletRequestBindingException.class,_			ConversionNotSupportedException.class,_			TypeMismatchException.class,_			HttpMessageNotReadableException.class,_			HttpMessageNotWritableException.class,_			MethodArgumentNotValidException.class,_			MissingServletRequestPartException.class,_			BindException.class,_			NoHandlerFoundException.class_		})_	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) {__		HttpHeaders headers = new HttpHeaders()___		if (ex instanceof NoSuchRequestHandlingMethodException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoSuchRequestHandlingMethod((NoSuchRequestHandlingMethodException) ex, headers, status, request)__		}_		else if (ex instanceof HttpRequestMethodNotSupportedException) {_			HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED__			return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotSupportedException) {_			HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE__			return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotAcceptableException) {_			HttpStatus status = HttpStatus.NOT_ACCEPTABLE__			return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestParameterException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request)__		}_		else if (ex instanceof ServletRequestBindingException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request)__		}_		else if (ex instanceof ConversionNotSupportedException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof TypeMismatchException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleTypeMismatch((TypeMismatchException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotReadableException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotWritableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request)__		}_		else if (ex instanceof MethodArgumentNotValidException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestPartException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request)__		}_		else if (ex instanceof BindException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleBindException((BindException) ex, headers, status, request)__		}_		else if (ex instanceof NoHandlerFoundException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoHandlerFoundException((NoHandlerFoundException) ex, headers, status, request)__		}_		else {_			logger.warn("Unknown exception type: " + ex.getClass().getName())__			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleExceptionInternal(ex, null, headers, status, request)__		}_	};provides,handling,for,standard,spring,mvc,exceptions,param,ex,the,target,exception,param,request,the,current,request;exception,handler,value,no,such,request,handling,method,exception,class,http,request,method,not,supported,exception,class,http,media,type,not,supported,exception,class,http,media,type,not,acceptable,exception,class,missing,servlet,request,parameter,exception,class,servlet,request,binding,exception,class,conversion,not,supported,exception,class,type,mismatch,exception,class,http,message,not,readable,exception,class,http,message,not,writable,exception,class,method,argument,not,valid,exception,class,missing,servlet,request,part,exception,class,bind,exception,class,no,handler,found,exception,class,public,final,response,entity,object,handle,exception,exception,ex,web,request,request,http,headers,headers,new,http,headers,if,ex,instanceof,no,such,request,handling,method,exception,http,status,status,http,status,return,handle,no,such,request,handling,method,no,such,request,handling,method,exception,ex,headers,status,request,else,if,ex,instanceof,http,request,method,not,supported,exception,http,status,status,http,status,return,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,supported,exception,http,status,status,http,status,return,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,acceptable,exception,http,status,status,http,status,return,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,parameter,exception,http,status,status,http,status,return,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,headers,status,request,else,if,ex,instanceof,servlet,request,binding,exception,http,status,status,http,status,return,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,headers,status,request,else,if,ex,instanceof,conversion,not,supported,exception,http,status,status,http,status,return,handle,conversion,not,supported,conversion,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,type,mismatch,exception,http,status,status,http,status,return,handle,type,mismatch,type,mismatch,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,readable,exception,http,status,status,http,status,return,handle,http,message,not,readable,http,message,not,readable,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,writable,exception,http,status,status,http,status,return,handle,http,message,not,writable,http,message,not,writable,exception,ex,headers,status,request,else,if,ex,instanceof,method,argument,not,valid,exception,http,status,status,http,status,return,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,part,exception,http,status,status,http,status,return,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,headers,status,request,else,if,ex,instanceof,bind,exception,http,status,status,http,status,return,handle,bind,exception,bind,exception,ex,headers,status,request,else,if,ex,instanceof,no,handler,found,exception,http,status,status,http,status,return,handle,no,handler,found,exception,no,handler,found,exception,ex,headers,status,request,else,logger,warn,unknown,exception,type,ex,get,class,get,name,http,status,status,http,status,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> @ExceptionHandler(value={ 			NoSuchRequestHandlingMethodException.class, 			HttpRequestMethodNotSupportedException.class, 			HttpMediaTypeNotSupportedException.class, 			HttpMediaTypeNotAcceptableException.class, 			MissingServletRequestParameterException.class, 			ServletRequestBindingException.class, 			ConversionNotSupportedException.class, 			TypeMismatchException.class, 			HttpMessageNotReadableException.class, 			HttpMessageNotWritableException.class, 			MethodArgumentNotValidException.class, 			MissingServletRequestPartException.class, 			BindException.class, 			NoHandlerFoundException.class 		}) 	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request);1413848647;Provides handling for standard Spring MVC exceptions._@param ex the target exception_@param request the current request;@ExceptionHandler(value={_			NoSuchRequestHandlingMethodException.class,_			HttpRequestMethodNotSupportedException.class,_			HttpMediaTypeNotSupportedException.class,_			HttpMediaTypeNotAcceptableException.class,_			MissingServletRequestParameterException.class,_			ServletRequestBindingException.class,_			ConversionNotSupportedException.class,_			TypeMismatchException.class,_			HttpMessageNotReadableException.class,_			HttpMessageNotWritableException.class,_			MethodArgumentNotValidException.class,_			MissingServletRequestPartException.class,_			BindException.class,_			NoHandlerFoundException.class_		})_	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) {__		HttpHeaders headers = new HttpHeaders()___		if (ex instanceof NoSuchRequestHandlingMethodException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoSuchRequestHandlingMethod((NoSuchRequestHandlingMethodException) ex, headers, status, request)__		}_		else if (ex instanceof HttpRequestMethodNotSupportedException) {_			HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED__			return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotSupportedException) {_			HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE__			return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotAcceptableException) {_			HttpStatus status = HttpStatus.NOT_ACCEPTABLE__			return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestParameterException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request)__		}_		else if (ex instanceof ServletRequestBindingException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request)__		}_		else if (ex instanceof ConversionNotSupportedException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof TypeMismatchException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleTypeMismatch((TypeMismatchException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotReadableException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotWritableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request)__		}_		else if (ex instanceof MethodArgumentNotValidException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestPartException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request)__		}_		else if (ex instanceof BindException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleBindException((BindException) ex, headers, status, request)__		}_		else if (ex instanceof NoHandlerFoundException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoHandlerFoundException((NoHandlerFoundException) ex, headers, status, request)__		}_		else {_			logger.warn("Unknown exception type: " + ex.getClass().getName())__			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleExceptionInternal(ex, null, headers, status, request)__		}_	};provides,handling,for,standard,spring,mvc,exceptions,param,ex,the,target,exception,param,request,the,current,request;exception,handler,value,no,such,request,handling,method,exception,class,http,request,method,not,supported,exception,class,http,media,type,not,supported,exception,class,http,media,type,not,acceptable,exception,class,missing,servlet,request,parameter,exception,class,servlet,request,binding,exception,class,conversion,not,supported,exception,class,type,mismatch,exception,class,http,message,not,readable,exception,class,http,message,not,writable,exception,class,method,argument,not,valid,exception,class,missing,servlet,request,part,exception,class,bind,exception,class,no,handler,found,exception,class,public,final,response,entity,object,handle,exception,exception,ex,web,request,request,http,headers,headers,new,http,headers,if,ex,instanceof,no,such,request,handling,method,exception,http,status,status,http,status,return,handle,no,such,request,handling,method,no,such,request,handling,method,exception,ex,headers,status,request,else,if,ex,instanceof,http,request,method,not,supported,exception,http,status,status,http,status,return,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,supported,exception,http,status,status,http,status,return,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,acceptable,exception,http,status,status,http,status,return,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,parameter,exception,http,status,status,http,status,return,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,headers,status,request,else,if,ex,instanceof,servlet,request,binding,exception,http,status,status,http,status,return,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,headers,status,request,else,if,ex,instanceof,conversion,not,supported,exception,http,status,status,http,status,return,handle,conversion,not,supported,conversion,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,type,mismatch,exception,http,status,status,http,status,return,handle,type,mismatch,type,mismatch,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,readable,exception,http,status,status,http,status,return,handle,http,message,not,readable,http,message,not,readable,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,writable,exception,http,status,status,http,status,return,handle,http,message,not,writable,http,message,not,writable,exception,ex,headers,status,request,else,if,ex,instanceof,method,argument,not,valid,exception,http,status,status,http,status,return,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,part,exception,http,status,status,http,status,return,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,headers,status,request,else,if,ex,instanceof,bind,exception,http,status,status,http,status,return,handle,bind,exception,bind,exception,ex,headers,status,request,else,if,ex,instanceof,no,handler,found,exception,http,status,status,http,status,return,handle,no,handler,found,exception,no,handler,found,exception,ex,headers,status,request,else,logger,warn,unknown,exception,type,ex,get,class,get,name,http,status,status,http,status,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1346090766;Customize the response for HttpRequestMethodNotSupportedException._This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!supportedMethods.isEmpty()) {_			headers.setAllow(supportedMethods)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,supported,methods,is,empty,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1347316003;Customize the response for HttpRequestMethodNotSupportedException._This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!supportedMethods.isEmpty()) {_			headers.setAllow(supportedMethods)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,supported,methods,is,empty,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1380132768;Customize the response for HttpRequestMethodNotSupportedException._This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!supportedMethods.isEmpty()) {_			headers.setAllow(supportedMethods)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,supported,methods,is,empty,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1413848647;Customize the response for HttpRequestMethodNotSupportedException._This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!supportedMethods.isEmpty()) {_			headers.setAllow(supportedMethods)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,supported,methods,is,empty,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1434398959;Customize the response for HttpRequestMethodNotSupportedException._This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!supportedMethods.isEmpty()) {_			headers.setAllow(supportedMethods)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,supported,methods,is,empty,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1444145445;Customize the response for HttpRequestMethodNotSupportedException._<p>This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!supportedMethods.isEmpty()) {_			headers.setAllow(supportedMethods)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,p,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,supported,methods,is,empty,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452799530;Customize the response for HttpRequestMethodNotSupportedException._<p>This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!supportedMethods.isEmpty()) {_			headers.setAllow(supportedMethods)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,p,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,supported,methods,is,empty,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452851471;Customize the response for HttpRequestMethodNotSupportedException._<p>This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!supportedMethods.isEmpty()) {_			headers.setAllow(supportedMethods)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,p,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,supported,methods,is,empty,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1458944925;Customize the response for HttpRequestMethodNotSupportedException._<p>This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!supportedMethods.isEmpty()) {_			headers.setAllow(supportedMethods)__		}_		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,p,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,supported,methods,is,empty,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1460021854;Customize the response for HttpRequestMethodNotSupportedException._<p>This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!supportedMethods.isEmpty()) {_			headers.setAllow(supportedMethods)__		}_		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,p,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,supported,methods,is,empty,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467726769;Customize the response for HttpRequestMethodNotSupportedException._<p>This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!supportedMethods.isEmpty()) {_			headers.setAllow(supportedMethods)__		}_		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,p,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,supported,methods,is,empty,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467730834;Customize the response for HttpRequestMethodNotSupportedException._<p>This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!supportedMethods.isEmpty()) {_			headers.setAllow(supportedMethods)__		}_		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,p,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,supported,methods,is,empty,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473903270;Customize the response for HttpRequestMethodNotSupportedException._<p>This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!supportedMethods.isEmpty()) {_			headers.setAllow(supportedMethods)__		}_		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,p,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,supported,methods,is,empty,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473922457;Customize the response for HttpRequestMethodNotSupportedException._<p>This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!supportedMethods.isEmpty()) {_			headers.setAllow(supportedMethods)__		}_		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,p,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,supported,methods,is,empty,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1476211212;Customize the response for HttpRequestMethodNotSupportedException._<p>This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!supportedMethods.isEmpty()) {_			headers.setAllow(supportedMethods)__		}_		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,p,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,supported,methods,is,empty,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1477665930;Customize the response for HttpRequestMethodNotSupportedException._<p>This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!supportedMethods.isEmpty()) {_			headers.setAllow(supportedMethods)__		}_		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,p,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,supported,methods,is,empty,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1486062666;Customize the response for HttpRequestMethodNotSupportedException._<p>This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!supportedMethods.isEmpty()) {_			headers.setAllow(supportedMethods)__		}_		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,p,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,supported,methods,is,empty,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1490350007;Customize the response for HttpRequestMethodNotSupportedException._<p>This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!CollectionUtils.isEmpty(supportedMethods)) {_			headers.setAllow(supportedMethods)__		}_		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,p,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,collection,utils,is,empty,supported,methods,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1495868221;Customize the response for HttpRequestMethodNotSupportedException._<p>This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!CollectionUtils.isEmpty(supportedMethods)) {_			headers.setAllow(supportedMethods)__		}_		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,p,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,collection,utils,is,empty,supported,methods,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496259743;Customize the response for HttpRequestMethodNotSupportedException._<p>This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!CollectionUtils.isEmpty(supportedMethods)) {_			headers.setAllow(supportedMethods)__		}_		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,p,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,collection,utils,is,empty,supported,methods,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496837955;Customize the response for HttpRequestMethodNotSupportedException._<p>This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!CollectionUtils.isEmpty(supportedMethods)) {_			headers.setAllow(supportedMethods)__		}_		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,p,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,collection,utils,is,empty,supported,methods,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1519937579;Customize the response for HttpRequestMethodNotSupportedException._<p>This method logs a warning, sets the "Allow" header, and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		Set<HttpMethod> supportedMethods = ex.getSupportedHttpMethods()__		if (!CollectionUtils.isEmpty(supportedMethods)) {_			headers.setAllow(supportedMethods)__		}_		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,request,method,not,supported,exception,p,this,method,logs,a,warning,sets,the,allow,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,set,http,method,supported,methods,ex,get,supported,http,methods,if,collection,utils,is,empty,supported,methods,headers,set,allow,supported,methods,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException( 			ServletRequestBindingException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1525517218;Customize the response for ServletRequestBindingException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(_			ServletRequestBindingException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException( 			ServletRequestBindingException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1529361191;Customize the response for ServletRequestBindingException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(_			ServletRequestBindingException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1346090766;Customize the response for ConversionNotSupportedException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1347316003;Customize the response for ConversionNotSupportedException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1380132768;Customize the response for ConversionNotSupportedException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1413848647;Customize the response for ConversionNotSupportedException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1434398959;Customize the response for ConversionNotSupportedException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1444145445;Customize the response for ConversionNotSupportedException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452799530;Customize the response for ConversionNotSupportedException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452851471;Customize the response for ConversionNotSupportedException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1458944925;Customize the response for ConversionNotSupportedException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1460021854;Customize the response for ConversionNotSupportedException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467726769;Customize the response for ConversionNotSupportedException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467730834;Customize the response for ConversionNotSupportedException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473903270;Customize the response for ConversionNotSupportedException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473922457;Customize the response for ConversionNotSupportedException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1476211212;Customize the response for ConversionNotSupportedException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1477665930;Customize the response for ConversionNotSupportedException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1486062666;Customize the response for ConversionNotSupportedException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1490350007;Customize the response for ConversionNotSupportedException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1495868221;Customize the response for ConversionNotSupportedException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496259743;Customize the response for ConversionNotSupportedException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496837955;Customize the response for ConversionNotSupportedException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1519937579;Customize the response for ConversionNotSupportedException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleConversionNotSupported(ConversionNotSupportedException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,conversion,not,supported,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,conversion,not,supported,conversion,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1346090766;Customize the response for BindException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1347316003;Customize the response for BindException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1380132768;Customize the response for BindException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1413848647;Customize the response for BindException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1434398959;Customize the response for BindException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1444145445;Customize the response for BindException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1452799530;Customize the response for BindException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1452851471;Customize the response for BindException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1458944925;Customize the response for BindException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1460021854;Customize the response for BindException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1467726769;Customize the response for BindException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1467730834;Customize the response for BindException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1473903270;Customize the response for BindException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1473922457;Customize the response for BindException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1476211212;Customize the response for BindException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1477665930;Customize the response for BindException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1486062666;Customize the response for BindException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1490350007;Customize the response for BindException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1495868221;Customize the response for BindException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1496259743;Customize the response for BindException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1496837955;Customize the response for BindException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1519937579;Customize the response for BindException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleBindException(BindException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,bind,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,bind,exception,bind,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal(Exception ex, @Nullable Object body, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496259743;A single place to customize the response body of all Exception types._<p>The default implementation sets the {@link WebUtils#ERROR_EXCEPTION_ATTRIBUTE}_request attribute and creates a {@link ResponseEntity} from the given_body, headers, and status._@param ex the exception_@param body the body for the response_@param headers the headers for the response_@param status the response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(Exception ex, @Nullable Object body,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute(WebUtils.ERROR_EXCEPTION_ATTRIBUTE, ex, WebRequest.SCOPE_REQUEST)__		}_		return new ResponseEntity<>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,p,the,default,implementation,sets,the,link,web,utils,request,attribute,and,creates,a,link,response,entity,from,the,given,body,headers,and,status,param,ex,the,exception,param,body,the,body,for,the,response,param,headers,the,headers,for,the,response,param,status,the,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,nullable,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,web,utils,ex,web,request,return,new,response,entity,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal(Exception ex, @Nullable Object body, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496837955;A single place to customize the response body of all Exception types._<p>The default implementation sets the {@link WebUtils#ERROR_EXCEPTION_ATTRIBUTE}_request attribute and creates a {@link ResponseEntity} from the given_body, headers, and status._@param ex the exception_@param body the body for the response_@param headers the headers for the response_@param status the response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(Exception ex, @Nullable Object body,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute(WebUtils.ERROR_EXCEPTION_ATTRIBUTE, ex, WebRequest.SCOPE_REQUEST)__		}_		return new ResponseEntity<>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,p,the,default,implementation,sets,the,link,web,utils,request,attribute,and,creates,a,link,response,entity,from,the,given,body,headers,and,status,param,ex,the,exception,param,body,the,body,for,the,response,param,headers,the,headers,for,the,response,param,status,the,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,nullable,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,web,utils,ex,web,request,return,new,response,entity,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal(Exception ex, @Nullable Object body, 			HttpHeaders headers, HttpStatus status, WebRequest request);1519937579;A single place to customize the response body of all Exception types._<p>The default implementation sets the {@link WebUtils#ERROR_EXCEPTION_ATTRIBUTE}_request attribute and creates a {@link ResponseEntity} from the given_body, headers, and status._@param ex the exception_@param body the body for the response_@param headers the headers for the response_@param status the response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(Exception ex, @Nullable Object body,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute(WebUtils.ERROR_EXCEPTION_ATTRIBUTE, ex, WebRequest.SCOPE_REQUEST)__		}_		return new ResponseEntity<>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,p,the,default,implementation,sets,the,link,web,utils,request,attribute,and,creates,a,link,response,entity,from,the,given,body,headers,and,status,param,ex,the,exception,param,body,the,body,for,the,response,param,headers,the,headers,for,the,response,param,status,the,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,nullable,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,web,utils,ex,web,request,return,new,response,entity,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1346090766;Customize the response for ServletRequestBindingException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1347316003;Customize the response for ServletRequestBindingException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1380132768;Customize the response for ServletRequestBindingException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1413848647;Customize the response for ServletRequestBindingException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1434398959;Customize the response for ServletRequestBindingException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1444145445;Customize the response for ServletRequestBindingException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452799530;Customize the response for ServletRequestBindingException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452851471;Customize the response for ServletRequestBindingException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1458944925;Customize the response for ServletRequestBindingException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1460021854;Customize the response for ServletRequestBindingException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467726769;Customize the response for ServletRequestBindingException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467730834;Customize the response for ServletRequestBindingException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473903270;Customize the response for ServletRequestBindingException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473922457;Customize the response for ServletRequestBindingException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1476211212;Customize the response for ServletRequestBindingException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1477665930;Customize the response for ServletRequestBindingException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1486062666;Customize the response for ServletRequestBindingException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1490350007;Customize the response for ServletRequestBindingException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1495868221;Customize the response for ServletRequestBindingException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496259743;Customize the response for ServletRequestBindingException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496837955;Customize the response for ServletRequestBindingException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1519937579;Customize the response for ServletRequestBindingException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,servlet,request,binding,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> @ExceptionHandler({ 			NoSuchRequestHandlingMethodException.class, 			HttpRequestMethodNotSupportedException.class, 			HttpMediaTypeNotSupportedException.class, 			HttpMediaTypeNotAcceptableException.class, 			MissingPathVariableException.class, 			MissingServletRequestParameterException.class, 			ServletRequestBindingException.class, 			ConversionNotSupportedException.class, 			TypeMismatchException.class, 			HttpMessageNotReadableException.class, 			HttpMessageNotWritableException.class, 			MethodArgumentNotValidException.class, 			MissingServletRequestPartException.class, 			BindException.class, 			NoHandlerFoundException.class 		}) 	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request);1444145445;Provides handling for standard Spring MVC exceptions._@param ex the target exception_@param request the current request;@ExceptionHandler({_			NoSuchRequestHandlingMethodException.class,_			HttpRequestMethodNotSupportedException.class,_			HttpMediaTypeNotSupportedException.class,_			HttpMediaTypeNotAcceptableException.class,_			MissingPathVariableException.class,_			MissingServletRequestParameterException.class,_			ServletRequestBindingException.class,_			ConversionNotSupportedException.class,_			TypeMismatchException.class,_			HttpMessageNotReadableException.class,_			HttpMessageNotWritableException.class,_			MethodArgumentNotValidException.class,_			MissingServletRequestPartException.class,_			BindException.class,_			NoHandlerFoundException.class_		})_	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) {__		HttpHeaders headers = new HttpHeaders()___		if (ex instanceof NoSuchRequestHandlingMethodException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoSuchRequestHandlingMethod((NoSuchRequestHandlingMethodException) ex, headers, status, request)__		}_		else if (ex instanceof HttpRequestMethodNotSupportedException) {_			HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED__			return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotSupportedException) {_			HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE__			return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotAcceptableException) {_			HttpStatus status = HttpStatus.NOT_ACCEPTABLE__			return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingPathVariableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleMissingPathVariable((MissingPathVariableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestParameterException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request)__		}_		else if (ex instanceof ServletRequestBindingException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request)__		}_		else if (ex instanceof ConversionNotSupportedException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof TypeMismatchException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleTypeMismatch((TypeMismatchException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotReadableException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotWritableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request)__		}_		else if (ex instanceof MethodArgumentNotValidException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestPartException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request)__		}_		else if (ex instanceof BindException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleBindException((BindException) ex, headers, status, request)__		}_		else if (ex instanceof NoHandlerFoundException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoHandlerFoundException((NoHandlerFoundException) ex, headers, status, request)__		}_		else {_			logger.warn("Unknown exception type: " + ex.getClass().getName())__			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleExceptionInternal(ex, null, headers, status, request)__		}_	};provides,handling,for,standard,spring,mvc,exceptions,param,ex,the,target,exception,param,request,the,current,request;exception,handler,no,such,request,handling,method,exception,class,http,request,method,not,supported,exception,class,http,media,type,not,supported,exception,class,http,media,type,not,acceptable,exception,class,missing,path,variable,exception,class,missing,servlet,request,parameter,exception,class,servlet,request,binding,exception,class,conversion,not,supported,exception,class,type,mismatch,exception,class,http,message,not,readable,exception,class,http,message,not,writable,exception,class,method,argument,not,valid,exception,class,missing,servlet,request,part,exception,class,bind,exception,class,no,handler,found,exception,class,public,final,response,entity,object,handle,exception,exception,ex,web,request,request,http,headers,headers,new,http,headers,if,ex,instanceof,no,such,request,handling,method,exception,http,status,status,http,status,return,handle,no,such,request,handling,method,no,such,request,handling,method,exception,ex,headers,status,request,else,if,ex,instanceof,http,request,method,not,supported,exception,http,status,status,http,status,return,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,supported,exception,http,status,status,http,status,return,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,acceptable,exception,http,status,status,http,status,return,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,path,variable,exception,http,status,status,http,status,return,handle,missing,path,variable,missing,path,variable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,parameter,exception,http,status,status,http,status,return,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,headers,status,request,else,if,ex,instanceof,servlet,request,binding,exception,http,status,status,http,status,return,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,headers,status,request,else,if,ex,instanceof,conversion,not,supported,exception,http,status,status,http,status,return,handle,conversion,not,supported,conversion,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,type,mismatch,exception,http,status,status,http,status,return,handle,type,mismatch,type,mismatch,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,readable,exception,http,status,status,http,status,return,handle,http,message,not,readable,http,message,not,readable,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,writable,exception,http,status,status,http,status,return,handle,http,message,not,writable,http,message,not,writable,exception,ex,headers,status,request,else,if,ex,instanceof,method,argument,not,valid,exception,http,status,status,http,status,return,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,part,exception,http,status,status,http,status,return,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,headers,status,request,else,if,ex,instanceof,bind,exception,http,status,status,http,status,return,handle,bind,exception,bind,exception,ex,headers,status,request,else,if,ex,instanceof,no,handler,found,exception,http,status,status,http,status,return,handle,no,handler,found,exception,no,handler,found,exception,ex,headers,status,request,else,logger,warn,unknown,exception,type,ex,get,class,get,name,http,status,status,http,status,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> @ExceptionHandler({ 			NoSuchRequestHandlingMethodException.class, 			HttpRequestMethodNotSupportedException.class, 			HttpMediaTypeNotSupportedException.class, 			HttpMediaTypeNotAcceptableException.class, 			MissingPathVariableException.class, 			MissingServletRequestParameterException.class, 			ServletRequestBindingException.class, 			ConversionNotSupportedException.class, 			TypeMismatchException.class, 			HttpMessageNotReadableException.class, 			HttpMessageNotWritableException.class, 			MethodArgumentNotValidException.class, 			MissingServletRequestPartException.class, 			BindException.class, 			NoHandlerFoundException.class 		}) 	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request);1452799530;Provides handling for standard Spring MVC exceptions._@param ex the target exception_@param request the current request;@ExceptionHandler({_			NoSuchRequestHandlingMethodException.class,_			HttpRequestMethodNotSupportedException.class,_			HttpMediaTypeNotSupportedException.class,_			HttpMediaTypeNotAcceptableException.class,_			MissingPathVariableException.class,_			MissingServletRequestParameterException.class,_			ServletRequestBindingException.class,_			ConversionNotSupportedException.class,_			TypeMismatchException.class,_			HttpMessageNotReadableException.class,_			HttpMessageNotWritableException.class,_			MethodArgumentNotValidException.class,_			MissingServletRequestPartException.class,_			BindException.class,_			NoHandlerFoundException.class_		})_	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) {__		HttpHeaders headers = new HttpHeaders()___		if (ex instanceof NoSuchRequestHandlingMethodException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoSuchRequestHandlingMethod((NoSuchRequestHandlingMethodException) ex, headers, status, request)__		}_		else if (ex instanceof HttpRequestMethodNotSupportedException) {_			HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED__			return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotSupportedException) {_			HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE__			return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotAcceptableException) {_			HttpStatus status = HttpStatus.NOT_ACCEPTABLE__			return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingPathVariableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleMissingPathVariable((MissingPathVariableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestParameterException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request)__		}_		else if (ex instanceof ServletRequestBindingException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request)__		}_		else if (ex instanceof ConversionNotSupportedException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof TypeMismatchException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleTypeMismatch((TypeMismatchException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotReadableException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotWritableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request)__		}_		else if (ex instanceof MethodArgumentNotValidException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestPartException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request)__		}_		else if (ex instanceof BindException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleBindException((BindException) ex, headers, status, request)__		}_		else if (ex instanceof NoHandlerFoundException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoHandlerFoundException((NoHandlerFoundException) ex, headers, status, request)__		}_		else {_			logger.warn("Unknown exception type: " + ex.getClass().getName())__			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleExceptionInternal(ex, null, headers, status, request)__		}_	};provides,handling,for,standard,spring,mvc,exceptions,param,ex,the,target,exception,param,request,the,current,request;exception,handler,no,such,request,handling,method,exception,class,http,request,method,not,supported,exception,class,http,media,type,not,supported,exception,class,http,media,type,not,acceptable,exception,class,missing,path,variable,exception,class,missing,servlet,request,parameter,exception,class,servlet,request,binding,exception,class,conversion,not,supported,exception,class,type,mismatch,exception,class,http,message,not,readable,exception,class,http,message,not,writable,exception,class,method,argument,not,valid,exception,class,missing,servlet,request,part,exception,class,bind,exception,class,no,handler,found,exception,class,public,final,response,entity,object,handle,exception,exception,ex,web,request,request,http,headers,headers,new,http,headers,if,ex,instanceof,no,such,request,handling,method,exception,http,status,status,http,status,return,handle,no,such,request,handling,method,no,such,request,handling,method,exception,ex,headers,status,request,else,if,ex,instanceof,http,request,method,not,supported,exception,http,status,status,http,status,return,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,supported,exception,http,status,status,http,status,return,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,acceptable,exception,http,status,status,http,status,return,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,path,variable,exception,http,status,status,http,status,return,handle,missing,path,variable,missing,path,variable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,parameter,exception,http,status,status,http,status,return,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,headers,status,request,else,if,ex,instanceof,servlet,request,binding,exception,http,status,status,http,status,return,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,headers,status,request,else,if,ex,instanceof,conversion,not,supported,exception,http,status,status,http,status,return,handle,conversion,not,supported,conversion,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,type,mismatch,exception,http,status,status,http,status,return,handle,type,mismatch,type,mismatch,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,readable,exception,http,status,status,http,status,return,handle,http,message,not,readable,http,message,not,readable,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,writable,exception,http,status,status,http,status,return,handle,http,message,not,writable,http,message,not,writable,exception,ex,headers,status,request,else,if,ex,instanceof,method,argument,not,valid,exception,http,status,status,http,status,return,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,part,exception,http,status,status,http,status,return,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,headers,status,request,else,if,ex,instanceof,bind,exception,http,status,status,http,status,return,handle,bind,exception,bind,exception,ex,headers,status,request,else,if,ex,instanceof,no,handler,found,exception,http,status,status,http,status,return,handle,no,handler,found,exception,no,handler,found,exception,ex,headers,status,request,else,logger,warn,unknown,exception,type,ex,get,class,get,name,http,status,status,http,status,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> @ExceptionHandler({ 			NoSuchRequestHandlingMethodException.class, 			HttpRequestMethodNotSupportedException.class, 			HttpMediaTypeNotSupportedException.class, 			HttpMediaTypeNotAcceptableException.class, 			MissingPathVariableException.class, 			MissingServletRequestParameterException.class, 			ServletRequestBindingException.class, 			ConversionNotSupportedException.class, 			TypeMismatchException.class, 			HttpMessageNotReadableException.class, 			HttpMessageNotWritableException.class, 			MethodArgumentNotValidException.class, 			MissingServletRequestPartException.class, 			BindException.class, 			NoHandlerFoundException.class 		}) 	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request);1452851471;Provides handling for standard Spring MVC exceptions._@param ex the target exception_@param request the current request;@ExceptionHandler({_			NoSuchRequestHandlingMethodException.class,_			HttpRequestMethodNotSupportedException.class,_			HttpMediaTypeNotSupportedException.class,_			HttpMediaTypeNotAcceptableException.class,_			MissingPathVariableException.class,_			MissingServletRequestParameterException.class,_			ServletRequestBindingException.class,_			ConversionNotSupportedException.class,_			TypeMismatchException.class,_			HttpMessageNotReadableException.class,_			HttpMessageNotWritableException.class,_			MethodArgumentNotValidException.class,_			MissingServletRequestPartException.class,_			BindException.class,_			NoHandlerFoundException.class_		})_	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) {__		HttpHeaders headers = new HttpHeaders()___		if (ex instanceof NoSuchRequestHandlingMethodException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoSuchRequestHandlingMethod((NoSuchRequestHandlingMethodException) ex, headers, status, request)__		}_		else if (ex instanceof HttpRequestMethodNotSupportedException) {_			HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED__			return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotSupportedException) {_			HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE__			return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotAcceptableException) {_			HttpStatus status = HttpStatus.NOT_ACCEPTABLE__			return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingPathVariableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleMissingPathVariable((MissingPathVariableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestParameterException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request)__		}_		else if (ex instanceof ServletRequestBindingException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request)__		}_		else if (ex instanceof ConversionNotSupportedException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof TypeMismatchException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleTypeMismatch((TypeMismatchException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotReadableException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotWritableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request)__		}_		else if (ex instanceof MethodArgumentNotValidException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestPartException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request)__		}_		else if (ex instanceof BindException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleBindException((BindException) ex, headers, status, request)__		}_		else if (ex instanceof NoHandlerFoundException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoHandlerFoundException((NoHandlerFoundException) ex, headers, status, request)__		}_		else {_			logger.warn("Unknown exception type: " + ex.getClass().getName())__			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleExceptionInternal(ex, null, headers, status, request)__		}_	};provides,handling,for,standard,spring,mvc,exceptions,param,ex,the,target,exception,param,request,the,current,request;exception,handler,no,such,request,handling,method,exception,class,http,request,method,not,supported,exception,class,http,media,type,not,supported,exception,class,http,media,type,not,acceptable,exception,class,missing,path,variable,exception,class,missing,servlet,request,parameter,exception,class,servlet,request,binding,exception,class,conversion,not,supported,exception,class,type,mismatch,exception,class,http,message,not,readable,exception,class,http,message,not,writable,exception,class,method,argument,not,valid,exception,class,missing,servlet,request,part,exception,class,bind,exception,class,no,handler,found,exception,class,public,final,response,entity,object,handle,exception,exception,ex,web,request,request,http,headers,headers,new,http,headers,if,ex,instanceof,no,such,request,handling,method,exception,http,status,status,http,status,return,handle,no,such,request,handling,method,no,such,request,handling,method,exception,ex,headers,status,request,else,if,ex,instanceof,http,request,method,not,supported,exception,http,status,status,http,status,return,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,supported,exception,http,status,status,http,status,return,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,acceptable,exception,http,status,status,http,status,return,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,path,variable,exception,http,status,status,http,status,return,handle,missing,path,variable,missing,path,variable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,parameter,exception,http,status,status,http,status,return,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,headers,status,request,else,if,ex,instanceof,servlet,request,binding,exception,http,status,status,http,status,return,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,headers,status,request,else,if,ex,instanceof,conversion,not,supported,exception,http,status,status,http,status,return,handle,conversion,not,supported,conversion,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,type,mismatch,exception,http,status,status,http,status,return,handle,type,mismatch,type,mismatch,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,readable,exception,http,status,status,http,status,return,handle,http,message,not,readable,http,message,not,readable,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,writable,exception,http,status,status,http,status,return,handle,http,message,not,writable,http,message,not,writable,exception,ex,headers,status,request,else,if,ex,instanceof,method,argument,not,valid,exception,http,status,status,http,status,return,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,part,exception,http,status,status,http,status,return,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,headers,status,request,else,if,ex,instanceof,bind,exception,http,status,status,http,status,return,handle,bind,exception,bind,exception,ex,headers,status,request,else,if,ex,instanceof,no,handler,found,exception,http,status,status,http,status,return,handle,no,handler,found,exception,no,handler,found,exception,ex,headers,status,request,else,logger,warn,unknown,exception,type,ex,get,class,get,name,http,status,status,http,status,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> @ExceptionHandler({ 			NoSuchRequestHandlingMethodException.class, 			HttpRequestMethodNotSupportedException.class, 			HttpMediaTypeNotSupportedException.class, 			HttpMediaTypeNotAcceptableException.class, 			MissingPathVariableException.class, 			MissingServletRequestParameterException.class, 			ServletRequestBindingException.class, 			ConversionNotSupportedException.class, 			TypeMismatchException.class, 			HttpMessageNotReadableException.class, 			HttpMessageNotWritableException.class, 			MethodArgumentNotValidException.class, 			MissingServletRequestPartException.class, 			BindException.class, 			NoHandlerFoundException.class 		}) 	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request);1458944925;Provides handling for standard Spring MVC exceptions._@param ex the target exception_@param request the current request;@ExceptionHandler({_			NoSuchRequestHandlingMethodException.class,_			HttpRequestMethodNotSupportedException.class,_			HttpMediaTypeNotSupportedException.class,_			HttpMediaTypeNotAcceptableException.class,_			MissingPathVariableException.class,_			MissingServletRequestParameterException.class,_			ServletRequestBindingException.class,_			ConversionNotSupportedException.class,_			TypeMismatchException.class,_			HttpMessageNotReadableException.class,_			HttpMessageNotWritableException.class,_			MethodArgumentNotValidException.class,_			MissingServletRequestPartException.class,_			BindException.class,_			NoHandlerFoundException.class_		})_	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) {_		HttpHeaders headers = new HttpHeaders()__		if (ex instanceof NoSuchRequestHandlingMethodException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoSuchRequestHandlingMethod((NoSuchRequestHandlingMethodException) ex, headers, status, request)__		}_		else if (ex instanceof HttpRequestMethodNotSupportedException) {_			HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED__			return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotSupportedException) {_			HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE__			return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotAcceptableException) {_			HttpStatus status = HttpStatus.NOT_ACCEPTABLE__			return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingPathVariableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleMissingPathVariable((MissingPathVariableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestParameterException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request)__		}_		else if (ex instanceof ServletRequestBindingException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request)__		}_		else if (ex instanceof ConversionNotSupportedException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof TypeMismatchException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleTypeMismatch((TypeMismatchException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotReadableException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotWritableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request)__		}_		else if (ex instanceof MethodArgumentNotValidException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestPartException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request)__		}_		else if (ex instanceof BindException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleBindException((BindException) ex, headers, status, request)__		}_		else if (ex instanceof NoHandlerFoundException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoHandlerFoundException((NoHandlerFoundException) ex, headers, status, request)__		}_		else {_			logger.warn("Unknown exception type: " + ex.getClass().getName())__			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleExceptionInternal(ex, null, headers, status, request)__		}_	};provides,handling,for,standard,spring,mvc,exceptions,param,ex,the,target,exception,param,request,the,current,request;exception,handler,no,such,request,handling,method,exception,class,http,request,method,not,supported,exception,class,http,media,type,not,supported,exception,class,http,media,type,not,acceptable,exception,class,missing,path,variable,exception,class,missing,servlet,request,parameter,exception,class,servlet,request,binding,exception,class,conversion,not,supported,exception,class,type,mismatch,exception,class,http,message,not,readable,exception,class,http,message,not,writable,exception,class,method,argument,not,valid,exception,class,missing,servlet,request,part,exception,class,bind,exception,class,no,handler,found,exception,class,public,final,response,entity,object,handle,exception,exception,ex,web,request,request,http,headers,headers,new,http,headers,if,ex,instanceof,no,such,request,handling,method,exception,http,status,status,http,status,return,handle,no,such,request,handling,method,no,such,request,handling,method,exception,ex,headers,status,request,else,if,ex,instanceof,http,request,method,not,supported,exception,http,status,status,http,status,return,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,supported,exception,http,status,status,http,status,return,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,acceptable,exception,http,status,status,http,status,return,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,path,variable,exception,http,status,status,http,status,return,handle,missing,path,variable,missing,path,variable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,parameter,exception,http,status,status,http,status,return,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,headers,status,request,else,if,ex,instanceof,servlet,request,binding,exception,http,status,status,http,status,return,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,headers,status,request,else,if,ex,instanceof,conversion,not,supported,exception,http,status,status,http,status,return,handle,conversion,not,supported,conversion,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,type,mismatch,exception,http,status,status,http,status,return,handle,type,mismatch,type,mismatch,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,readable,exception,http,status,status,http,status,return,handle,http,message,not,readable,http,message,not,readable,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,writable,exception,http,status,status,http,status,return,handle,http,message,not,writable,http,message,not,writable,exception,ex,headers,status,request,else,if,ex,instanceof,method,argument,not,valid,exception,http,status,status,http,status,return,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,part,exception,http,status,status,http,status,return,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,headers,status,request,else,if,ex,instanceof,bind,exception,http,status,status,http,status,return,handle,bind,exception,bind,exception,ex,headers,status,request,else,if,ex,instanceof,no,handler,found,exception,http,status,status,http,status,return,handle,no,handler,found,exception,no,handler,found,exception,ex,headers,status,request,else,logger,warn,unknown,exception,type,ex,get,class,get,name,http,status,status,http,status,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> @ExceptionHandler({ 			HttpRequestMethodNotSupportedException.class, 			HttpMediaTypeNotSupportedException.class, 			HttpMediaTypeNotAcceptableException.class, 			MissingPathVariableException.class, 			MissingServletRequestParameterException.class, 			ServletRequestBindingException.class, 			ConversionNotSupportedException.class, 			TypeMismatchException.class, 			HttpMessageNotReadableException.class, 			HttpMessageNotWritableException.class, 			MethodArgumentNotValidException.class, 			MissingServletRequestPartException.class, 			BindException.class, 			NoHandlerFoundException.class 		}) 	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request);1467726769;Provides handling for standard Spring MVC exceptions._@param ex the target exception_@param request the current request;@ExceptionHandler({_			HttpRequestMethodNotSupportedException.class,_			HttpMediaTypeNotSupportedException.class,_			HttpMediaTypeNotAcceptableException.class,_			MissingPathVariableException.class,_			MissingServletRequestParameterException.class,_			ServletRequestBindingException.class,_			ConversionNotSupportedException.class,_			TypeMismatchException.class,_			HttpMessageNotReadableException.class,_			HttpMessageNotWritableException.class,_			MethodArgumentNotValidException.class,_			MissingServletRequestPartException.class,_			BindException.class,_			NoHandlerFoundException.class_		})_	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) {_		HttpHeaders headers = new HttpHeaders()__		if (ex instanceof HttpRequestMethodNotSupportedException) {_			HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED__			return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotSupportedException) {_			HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE__			return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotAcceptableException) {_			HttpStatus status = HttpStatus.NOT_ACCEPTABLE__			return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingPathVariableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleMissingPathVariable((MissingPathVariableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestParameterException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request)__		}_		else if (ex instanceof ServletRequestBindingException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request)__		}_		else if (ex instanceof ConversionNotSupportedException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof TypeMismatchException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleTypeMismatch((TypeMismatchException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotReadableException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotWritableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request)__		}_		else if (ex instanceof MethodArgumentNotValidException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestPartException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request)__		}_		else if (ex instanceof BindException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleBindException((BindException) ex, headers, status, request)__		}_		else if (ex instanceof NoHandlerFoundException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoHandlerFoundException((NoHandlerFoundException) ex, headers, status, request)__		}_		else {_			logger.warn("Unknown exception type: " + ex.getClass().getName())__			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleExceptionInternal(ex, null, headers, status, request)__		}_	};provides,handling,for,standard,spring,mvc,exceptions,param,ex,the,target,exception,param,request,the,current,request;exception,handler,http,request,method,not,supported,exception,class,http,media,type,not,supported,exception,class,http,media,type,not,acceptable,exception,class,missing,path,variable,exception,class,missing,servlet,request,parameter,exception,class,servlet,request,binding,exception,class,conversion,not,supported,exception,class,type,mismatch,exception,class,http,message,not,readable,exception,class,http,message,not,writable,exception,class,method,argument,not,valid,exception,class,missing,servlet,request,part,exception,class,bind,exception,class,no,handler,found,exception,class,public,final,response,entity,object,handle,exception,exception,ex,web,request,request,http,headers,headers,new,http,headers,if,ex,instanceof,http,request,method,not,supported,exception,http,status,status,http,status,return,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,supported,exception,http,status,status,http,status,return,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,acceptable,exception,http,status,status,http,status,return,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,path,variable,exception,http,status,status,http,status,return,handle,missing,path,variable,missing,path,variable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,parameter,exception,http,status,status,http,status,return,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,headers,status,request,else,if,ex,instanceof,servlet,request,binding,exception,http,status,status,http,status,return,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,headers,status,request,else,if,ex,instanceof,conversion,not,supported,exception,http,status,status,http,status,return,handle,conversion,not,supported,conversion,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,type,mismatch,exception,http,status,status,http,status,return,handle,type,mismatch,type,mismatch,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,readable,exception,http,status,status,http,status,return,handle,http,message,not,readable,http,message,not,readable,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,writable,exception,http,status,status,http,status,return,handle,http,message,not,writable,http,message,not,writable,exception,ex,headers,status,request,else,if,ex,instanceof,method,argument,not,valid,exception,http,status,status,http,status,return,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,part,exception,http,status,status,http,status,return,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,headers,status,request,else,if,ex,instanceof,bind,exception,http,status,status,http,status,return,handle,bind,exception,bind,exception,ex,headers,status,request,else,if,ex,instanceof,no,handler,found,exception,http,status,status,http,status,return,handle,no,handler,found,exception,no,handler,found,exception,ex,headers,status,request,else,logger,warn,unknown,exception,type,ex,get,class,get,name,http,status,status,http,status,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> @ExceptionHandler({ 			HttpRequestMethodNotSupportedException.class, 			HttpMediaTypeNotSupportedException.class, 			HttpMediaTypeNotAcceptableException.class, 			MissingPathVariableException.class, 			MissingServletRequestParameterException.class, 			ServletRequestBindingException.class, 			ConversionNotSupportedException.class, 			TypeMismatchException.class, 			HttpMessageNotReadableException.class, 			HttpMessageNotWritableException.class, 			MethodArgumentNotValidException.class, 			MissingServletRequestPartException.class, 			BindException.class, 			NoHandlerFoundException.class 		}) 	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request);1467730834;Provides handling for standard Spring MVC exceptions._@param ex the target exception_@param request the current request;@ExceptionHandler({_			HttpRequestMethodNotSupportedException.class,_			HttpMediaTypeNotSupportedException.class,_			HttpMediaTypeNotAcceptableException.class,_			MissingPathVariableException.class,_			MissingServletRequestParameterException.class,_			ServletRequestBindingException.class,_			ConversionNotSupportedException.class,_			TypeMismatchException.class,_			HttpMessageNotReadableException.class,_			HttpMessageNotWritableException.class,_			MethodArgumentNotValidException.class,_			MissingServletRequestPartException.class,_			BindException.class,_			NoHandlerFoundException.class_		})_	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) {_		HttpHeaders headers = new HttpHeaders()__		if (ex instanceof HttpRequestMethodNotSupportedException) {_			HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED__			return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotSupportedException) {_			HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE__			return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotAcceptableException) {_			HttpStatus status = HttpStatus.NOT_ACCEPTABLE__			return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingPathVariableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleMissingPathVariable((MissingPathVariableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestParameterException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request)__		}_		else if (ex instanceof ServletRequestBindingException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request)__		}_		else if (ex instanceof ConversionNotSupportedException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof TypeMismatchException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleTypeMismatch((TypeMismatchException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotReadableException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotWritableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request)__		}_		else if (ex instanceof MethodArgumentNotValidException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestPartException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request)__		}_		else if (ex instanceof BindException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleBindException((BindException) ex, headers, status, request)__		}_		else if (ex instanceof NoHandlerFoundException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoHandlerFoundException((NoHandlerFoundException) ex, headers, status, request)__		}_		else {_			logger.warn("Unknown exception type: " + ex.getClass().getName())__			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleExceptionInternal(ex, null, headers, status, request)__		}_	};provides,handling,for,standard,spring,mvc,exceptions,param,ex,the,target,exception,param,request,the,current,request;exception,handler,http,request,method,not,supported,exception,class,http,media,type,not,supported,exception,class,http,media,type,not,acceptable,exception,class,missing,path,variable,exception,class,missing,servlet,request,parameter,exception,class,servlet,request,binding,exception,class,conversion,not,supported,exception,class,type,mismatch,exception,class,http,message,not,readable,exception,class,http,message,not,writable,exception,class,method,argument,not,valid,exception,class,missing,servlet,request,part,exception,class,bind,exception,class,no,handler,found,exception,class,public,final,response,entity,object,handle,exception,exception,ex,web,request,request,http,headers,headers,new,http,headers,if,ex,instanceof,http,request,method,not,supported,exception,http,status,status,http,status,return,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,supported,exception,http,status,status,http,status,return,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,acceptable,exception,http,status,status,http,status,return,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,path,variable,exception,http,status,status,http,status,return,handle,missing,path,variable,missing,path,variable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,parameter,exception,http,status,status,http,status,return,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,headers,status,request,else,if,ex,instanceof,servlet,request,binding,exception,http,status,status,http,status,return,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,headers,status,request,else,if,ex,instanceof,conversion,not,supported,exception,http,status,status,http,status,return,handle,conversion,not,supported,conversion,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,type,mismatch,exception,http,status,status,http,status,return,handle,type,mismatch,type,mismatch,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,readable,exception,http,status,status,http,status,return,handle,http,message,not,readable,http,message,not,readable,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,writable,exception,http,status,status,http,status,return,handle,http,message,not,writable,http,message,not,writable,exception,ex,headers,status,request,else,if,ex,instanceof,method,argument,not,valid,exception,http,status,status,http,status,return,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,part,exception,http,status,status,http,status,return,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,headers,status,request,else,if,ex,instanceof,bind,exception,http,status,status,http,status,return,handle,bind,exception,bind,exception,ex,headers,status,request,else,if,ex,instanceof,no,handler,found,exception,http,status,status,http,status,return,handle,no,handler,found,exception,no,handler,found,exception,ex,headers,status,request,else,logger,warn,unknown,exception,type,ex,get,class,get,name,http,status,status,http,status,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleAsyncRequestTimeoutException( 			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest webRequest);1477665930;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param webRequest the current request_@return a {@code ResponseEntity} instance_@since 4.2.8;protected ResponseEntity<Object> handleAsyncRequestTimeoutException(_			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest webRequest) {__		if (webRequest instanceof ServletWebRequest) {_			ServletWebRequest servletRequest = (ServletWebRequest) webRequest__			HttpServletRequest request = servletRequest.getNativeRequest(HttpServletRequest.class)__			HttpServletResponse response = servletRequest.getNativeResponse(HttpServletResponse.class)__			if (response.isCommitted()) {_				logger.error("Async timeout for " + request.getMethod() + " [" +  request.getRequestURI() + "]")__				return null__			}_		}_		return handleExceptionInternal(ex, null, headers, status, webRequest)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,web,request,the,current,request,return,a,code,response,entity,instance,since,4,2,8;protected,response,entity,object,handle,async,request,timeout,exception,async,request,timeout,exception,ex,http,headers,headers,http,status,status,web,request,web,request,if,web,request,instanceof,servlet,web,request,servlet,web,request,servlet,request,servlet,web,request,web,request,http,servlet,request,request,servlet,request,get,native,request,http,servlet,request,class,http,servlet,response,response,servlet,request,get,native,response,http,servlet,response,class,if,response,is,committed,logger,error,async,timeout,for,request,get,method,request,get,request,uri,return,null,return,handle,exception,internal,ex,null,headers,status,web,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleAsyncRequestTimeoutException( 			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest webRequest);1486062666;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param webRequest the current request_@return a {@code ResponseEntity} instance_@since 4.2.8;protected ResponseEntity<Object> handleAsyncRequestTimeoutException(_			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest webRequest) {__		if (webRequest instanceof ServletWebRequest) {_			ServletWebRequest servletRequest = (ServletWebRequest) webRequest__			HttpServletRequest request = servletRequest.getNativeRequest(HttpServletRequest.class)__			HttpServletResponse response = servletRequest.getNativeResponse(HttpServletResponse.class)__			if (response.isCommitted()) {_				if (logger.isErrorEnabled()) {_					logger.error("Async timeout for " + request.getMethod() + " [" + request.getRequestURI() + "]")__				}_				return null__			}_		}__		return handleExceptionInternal(ex, null, headers, status, webRequest)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,web,request,the,current,request,return,a,code,response,entity,instance,since,4,2,8;protected,response,entity,object,handle,async,request,timeout,exception,async,request,timeout,exception,ex,http,headers,headers,http,status,status,web,request,web,request,if,web,request,instanceof,servlet,web,request,servlet,web,request,servlet,request,servlet,web,request,web,request,http,servlet,request,request,servlet,request,get,native,request,http,servlet,request,class,http,servlet,response,response,servlet,request,get,native,response,http,servlet,response,class,if,response,is,committed,if,logger,is,error,enabled,logger,error,async,timeout,for,request,get,method,request,get,request,uri,return,null,return,handle,exception,internal,ex,null,headers,status,web,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleAsyncRequestTimeoutException( 			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest webRequest);1490350007;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param webRequest the current request_@return a {@code ResponseEntity} instance_@since 4.2.8;protected ResponseEntity<Object> handleAsyncRequestTimeoutException(_			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest webRequest) {__		if (webRequest instanceof ServletWebRequest) {_			ServletWebRequest servletRequest = (ServletWebRequest) webRequest__			HttpServletRequest request = servletRequest.getNativeRequest(HttpServletRequest.class)__			HttpServletResponse response = servletRequest.getNativeResponse(HttpServletResponse.class)__			if (response.isCommitted()) {_				if (logger.isErrorEnabled()) {_					logger.error("Async timeout for " + request.getMethod() + " [" + request.getRequestURI() + "]")__				}_				return null__			}_		}__		return handleExceptionInternal(ex, null, headers, status, webRequest)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,web,request,the,current,request,return,a,code,response,entity,instance,since,4,2,8;protected,response,entity,object,handle,async,request,timeout,exception,async,request,timeout,exception,ex,http,headers,headers,http,status,status,web,request,web,request,if,web,request,instanceof,servlet,web,request,servlet,web,request,servlet,request,servlet,web,request,web,request,http,servlet,request,request,servlet,request,get,native,request,http,servlet,request,class,http,servlet,response,response,servlet,request,get,native,response,http,servlet,response,class,if,response,is,committed,if,logger,is,error,enabled,logger,error,async,timeout,for,request,get,method,request,get,request,uri,return,null,return,handle,exception,internal,ex,null,headers,status,web,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1346090766;Customize the response for MissingServletRequestParameterException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1347316003;Customize the response for MissingServletRequestParameterException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1380132768;Customize the response for MissingServletRequestParameterException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1413848647;Customize the response for MissingServletRequestParameterException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1434398959;Customize the response for MissingServletRequestParameterException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1444145445;Customize the response for MissingServletRequestParameterException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452799530;Customize the response for MissingServletRequestParameterException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452851471;Customize the response for MissingServletRequestParameterException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1458944925;Customize the response for MissingServletRequestParameterException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1460021854;Customize the response for MissingServletRequestParameterException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467726769;Customize the response for MissingServletRequestParameterException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467730834;Customize the response for MissingServletRequestParameterException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473903270;Customize the response for MissingServletRequestParameterException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473922457;Customize the response for MissingServletRequestParameterException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1476211212;Customize the response for MissingServletRequestParameterException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1477665930;Customize the response for MissingServletRequestParameterException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1486062666;Customize the response for MissingServletRequestParameterException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1490350007;Customize the response for MissingServletRequestParameterException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1495868221;Customize the response for MissingServletRequestParameterException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496259743;Customize the response for MissingServletRequestParameterException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496837955;Customize the response for MissingServletRequestParameterException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1519937579;Customize the response for MissingServletRequestParameterException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1346090766;Customize the response for HttpMessageNotWritableException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1347316003;Customize the response for HttpMessageNotWritableException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1380132768;Customize the response for HttpMessageNotWritableException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1413848647;Customize the response for HttpMessageNotWritableException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1434398959;Customize the response for HttpMessageNotWritableException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1444145445;Customize the response for HttpMessageNotWritableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452799530;Customize the response for HttpMessageNotWritableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452851471;Customize the response for HttpMessageNotWritableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1458944925;Customize the response for HttpMessageNotWritableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1460021854;Customize the response for HttpMessageNotWritableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467726769;Customize the response for HttpMessageNotWritableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467730834;Customize the response for HttpMessageNotWritableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473903270;Customize the response for HttpMessageNotWritableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473922457;Customize the response for HttpMessageNotWritableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1476211212;Customize the response for HttpMessageNotWritableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1477665930;Customize the response for HttpMessageNotWritableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1486062666;Customize the response for HttpMessageNotWritableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1490350007;Customize the response for HttpMessageNotWritableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1495868221;Customize the response for HttpMessageNotWritableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496259743;Customize the response for HttpMessageNotWritableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496837955;Customize the response for HttpMessageNotWritableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1519937579;Customize the response for HttpMessageNotWritableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(HttpMessageNotWritableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable( 			HttpMediaTypeNotAcceptableException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1525517218;Customize the response for HttpMediaTypeNotAcceptableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(_			HttpMediaTypeNotAcceptableException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable( 			HttpMediaTypeNotAcceptableException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1529361191;Customize the response for HttpMediaTypeNotAcceptableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(_			HttpMediaTypeNotAcceptableException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart( 			MissingServletRequestPartException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1525517218;Customize the response for MissingServletRequestPartException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(_			MissingServletRequestPartException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart( 			MissingServletRequestPartException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1529361191;Customize the response for MissingServletRequestPartException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(_			MissingServletRequestPartException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1346090766;Customize the response for HttpMediaTypeNotAcceptableException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1347316003;Customize the response for HttpMediaTypeNotAcceptableException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1380132768;Customize the response for HttpMediaTypeNotAcceptableException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1413848647;Customize the response for HttpMediaTypeNotAcceptableException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1434398959;Customize the response for HttpMediaTypeNotAcceptableException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1444145445;Customize the response for HttpMediaTypeNotAcceptableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452799530;Customize the response for HttpMediaTypeNotAcceptableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452851471;Customize the response for HttpMediaTypeNotAcceptableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1458944925;Customize the response for HttpMediaTypeNotAcceptableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1460021854;Customize the response for HttpMediaTypeNotAcceptableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467726769;Customize the response for HttpMediaTypeNotAcceptableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467730834;Customize the response for HttpMediaTypeNotAcceptableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473903270;Customize the response for HttpMediaTypeNotAcceptableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473922457;Customize the response for HttpMediaTypeNotAcceptableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1476211212;Customize the response for HttpMediaTypeNotAcceptableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1477665930;Customize the response for HttpMediaTypeNotAcceptableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1486062666;Customize the response for HttpMediaTypeNotAcceptableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1490350007;Customize the response for HttpMediaTypeNotAcceptableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1495868221;Customize the response for HttpMediaTypeNotAcceptableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496259743;Customize the response for HttpMediaTypeNotAcceptableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496837955;Customize the response for HttpMediaTypeNotAcceptableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1519937579;Customize the response for HttpMediaTypeNotAcceptableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,acceptable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1346090766;Customize the response for HttpMessageNotReadableException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1347316003;Customize the response for HttpMessageNotReadableException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1380132768;Customize the response for HttpMessageNotReadableException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1413848647;Customize the response for HttpMessageNotReadableException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1434398959;Customize the response for HttpMessageNotReadableException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1444145445;Customize the response for HttpMessageNotReadableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452799530;Customize the response for HttpMessageNotReadableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452851471;Customize the response for HttpMessageNotReadableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1458944925;Customize the response for HttpMessageNotReadableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1460021854;Customize the response for HttpMessageNotReadableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467726769;Customize the response for HttpMessageNotReadableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467730834;Customize the response for HttpMessageNotReadableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473903270;Customize the response for HttpMessageNotReadableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473922457;Customize the response for HttpMessageNotReadableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1476211212;Customize the response for HttpMessageNotReadableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1477665930;Customize the response for HttpMessageNotReadableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1486062666;Customize the response for HttpMessageNotReadableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1490350007;Customize the response for HttpMessageNotReadableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1495868221;Customize the response for HttpMessageNotReadableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496259743;Customize the response for HttpMessageNotReadableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496837955;Customize the response for HttpMessageNotReadableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1519937579;Customize the response for HttpMessageNotReadableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotReadable(HttpMessageNotReadableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,readable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,readable,http,message,not,readable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoSuchRequestHandlingMethod(NoSuchRequestHandlingMethodException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1346090766;Customize the response for NoSuchRequestHandlingMethodException._This method logs a warning and delegates to_{@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleNoSuchRequestHandlingMethod(NoSuchRequestHandlingMethodException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,such,request,handling,method,exception,this,method,logs,a,warning,and,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,no,such,request,handling,method,no,such,request,handling,method,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoSuchRequestHandlingMethod(NoSuchRequestHandlingMethodException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1347316003;Customize the response for NoSuchRequestHandlingMethodException._This method logs a warning and delegates to_{@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleNoSuchRequestHandlingMethod(NoSuchRequestHandlingMethodException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,such,request,handling,method,exception,this,method,logs,a,warning,and,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,no,such,request,handling,method,no,such,request,handling,method,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoSuchRequestHandlingMethod(NoSuchRequestHandlingMethodException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1380132768;Customize the response for NoSuchRequestHandlingMethodException._This method logs a warning and delegates to_{@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleNoSuchRequestHandlingMethod(NoSuchRequestHandlingMethodException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,such,request,handling,method,exception,this,method,logs,a,warning,and,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,no,such,request,handling,method,no,such,request,handling,method,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoSuchRequestHandlingMethod(NoSuchRequestHandlingMethodException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1413848647;Customize the response for NoSuchRequestHandlingMethodException._This method logs a warning and delegates to_{@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleNoSuchRequestHandlingMethod(NoSuchRequestHandlingMethodException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,such,request,handling,method,exception,this,method,logs,a,warning,and,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,no,such,request,handling,method,no,such,request,handling,method,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoSuchRequestHandlingMethod(NoSuchRequestHandlingMethodException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1434398959;Customize the response for NoSuchRequestHandlingMethodException._This method logs a warning and delegates to_{@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleNoSuchRequestHandlingMethod(NoSuchRequestHandlingMethodException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,such,request,handling,method,exception,this,method,logs,a,warning,and,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,no,such,request,handling,method,no,such,request,handling,method,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoSuchRequestHandlingMethod(NoSuchRequestHandlingMethodException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1444145445;Customize the response for NoSuchRequestHandlingMethodException._<p>This method logs a warning and delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleNoSuchRequestHandlingMethod(NoSuchRequestHandlingMethodException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,such,request,handling,method,exception,p,this,method,logs,a,warning,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,no,such,request,handling,method,no,such,request,handling,method,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoSuchRequestHandlingMethod(NoSuchRequestHandlingMethodException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452799530;Customize the response for NoSuchRequestHandlingMethodException._<p>This method logs a warning and delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleNoSuchRequestHandlingMethod(NoSuchRequestHandlingMethodException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,such,request,handling,method,exception,p,this,method,logs,a,warning,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,no,such,request,handling,method,no,such,request,handling,method,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoSuchRequestHandlingMethod(NoSuchRequestHandlingMethodException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452851471;Customize the response for NoSuchRequestHandlingMethodException._<p>This method logs a warning and delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleNoSuchRequestHandlingMethod(NoSuchRequestHandlingMethodException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,such,request,handling,method,exception,p,this,method,logs,a,warning,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,no,such,request,handling,method,no,such,request,handling,method,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoSuchRequestHandlingMethod(NoSuchRequestHandlingMethodException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1458944925;Customize the response for NoSuchRequestHandlingMethodException._<p>This method logs a warning and delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleNoSuchRequestHandlingMethod(NoSuchRequestHandlingMethodException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		pageNotFoundLogger.warn(ex.getMessage())___		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,such,request,handling,method,exception,p,this,method,logs,a,warning,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,no,such,request,handling,method,no,such,request,handling,method,exception,ex,http,headers,headers,http,status,status,web,request,request,page,not,found,logger,warn,ex,get,message,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1434398959;Customize the response for MissingPathVariableException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2;protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,path,variable,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2;protected,response,entity,object,handle,missing,path,variable,missing,path,variable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1444145445;Customize the response for MissingPathVariableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2;protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,path,variable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2;protected,response,entity,object,handle,missing,path,variable,missing,path,variable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452799530;Customize the response for MissingPathVariableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2;protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,path,variable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2;protected,response,entity,object,handle,missing,path,variable,missing,path,variable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452851471;Customize the response for MissingPathVariableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2;protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,path,variable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2;protected,response,entity,object,handle,missing,path,variable,missing,path,variable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1458944925;Customize the response for MissingPathVariableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2;protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,path,variable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2;protected,response,entity,object,handle,missing,path,variable,missing,path,variable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1460021854;Customize the response for MissingPathVariableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2;protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,path,variable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2;protected,response,entity,object,handle,missing,path,variable,missing,path,variable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467726769;Customize the response for MissingPathVariableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2;protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,path,variable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2;protected,response,entity,object,handle,missing,path,variable,missing,path,variable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467730834;Customize the response for MissingPathVariableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2;protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,path,variable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2;protected,response,entity,object,handle,missing,path,variable,missing,path,variable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473903270;Customize the response for MissingPathVariableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2;protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,path,variable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2;protected,response,entity,object,handle,missing,path,variable,missing,path,variable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473922457;Customize the response for MissingPathVariableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2;protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,path,variable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2;protected,response,entity,object,handle,missing,path,variable,missing,path,variable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1476211212;Customize the response for MissingPathVariableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2;protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,path,variable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2;protected,response,entity,object,handle,missing,path,variable,missing,path,variable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1477665930;Customize the response for MissingPathVariableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2;protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,path,variable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2;protected,response,entity,object,handle,missing,path,variable,missing,path,variable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1486062666;Customize the response for MissingPathVariableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2;protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,path,variable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2;protected,response,entity,object,handle,missing,path,variable,missing,path,variable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1490350007;Customize the response for MissingPathVariableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2;protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,path,variable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2;protected,response,entity,object,handle,missing,path,variable,missing,path,variable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1495868221;Customize the response for MissingPathVariableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2;protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,path,variable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2;protected,response,entity,object,handle,missing,path,variable,missing,path,variable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496259743;Customize the response for MissingPathVariableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2;protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,path,variable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2;protected,response,entity,object,handle,missing,path,variable,missing,path,variable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496837955;Customize the response for MissingPathVariableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2;protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,path,variable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2;protected,response,entity,object,handle,missing,path,variable,missing,path,variable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1519937579;Customize the response for MissingPathVariableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2;protected ResponseEntity<Object> handleMissingPathVariable(MissingPathVariableException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,path,variable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2;protected,response,entity,object,handle,missing,path,variable,missing,path,variable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> @ExceptionHandler({ 			HttpRequestMethodNotSupportedException.class, 			HttpMediaTypeNotSupportedException.class, 			HttpMediaTypeNotAcceptableException.class, 			MissingPathVariableException.class, 			MissingServletRequestParameterException.class, 			ServletRequestBindingException.class, 			ConversionNotSupportedException.class, 			TypeMismatchException.class, 			HttpMessageNotReadableException.class, 			HttpMessageNotWritableException.class, 			MethodArgumentNotValidException.class, 			MissingServletRequestPartException.class, 			BindException.class, 			NoHandlerFoundException.class, 			AsyncRequestTimeoutException.class 		}) 	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request);1473903270;Provides handling for standard Spring MVC exceptions._@param ex the target exception_@param request the current request;@ExceptionHandler({_			HttpRequestMethodNotSupportedException.class,_			HttpMediaTypeNotSupportedException.class,_			HttpMediaTypeNotAcceptableException.class,_			MissingPathVariableException.class,_			MissingServletRequestParameterException.class,_			ServletRequestBindingException.class,_			ConversionNotSupportedException.class,_			TypeMismatchException.class,_			HttpMessageNotReadableException.class,_			HttpMessageNotWritableException.class,_			MethodArgumentNotValidException.class,_			MissingServletRequestPartException.class,_			BindException.class,_			NoHandlerFoundException.class,_			AsyncRequestTimeoutException.class_		})_	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) {_		HttpHeaders headers = new HttpHeaders()__		if (ex instanceof HttpRequestMethodNotSupportedException) {_			HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED__			return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotSupportedException) {_			HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE__			return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotAcceptableException) {_			HttpStatus status = HttpStatus.NOT_ACCEPTABLE__			return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingPathVariableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleMissingPathVariable((MissingPathVariableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestParameterException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request)__		}_		else if (ex instanceof ServletRequestBindingException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request)__		}_		else if (ex instanceof ConversionNotSupportedException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof TypeMismatchException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleTypeMismatch((TypeMismatchException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotReadableException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotWritableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request)__		}_		else if (ex instanceof MethodArgumentNotValidException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestPartException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request)__		}_		else if (ex instanceof BindException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleBindException((BindException) ex, headers, status, request)__		}_		else if (ex instanceof NoHandlerFoundException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoHandlerFoundException((NoHandlerFoundException) ex, headers, status, request)__		}_		else if (ex instanceof AsyncRequestTimeoutException) {_			HttpStatus status = HttpStatus.SERVICE_UNAVAILABLE__			return handleAsyncRequestTimeoutException(_					(AsyncRequestTimeoutException) ex, headers, status, request)__		}_		else {_			logger.warn("Unknown exception type: " + ex.getClass().getName())__			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleExceptionInternal(ex, null, headers, status, request)__		}_	};provides,handling,for,standard,spring,mvc,exceptions,param,ex,the,target,exception,param,request,the,current,request;exception,handler,http,request,method,not,supported,exception,class,http,media,type,not,supported,exception,class,http,media,type,not,acceptable,exception,class,missing,path,variable,exception,class,missing,servlet,request,parameter,exception,class,servlet,request,binding,exception,class,conversion,not,supported,exception,class,type,mismatch,exception,class,http,message,not,readable,exception,class,http,message,not,writable,exception,class,method,argument,not,valid,exception,class,missing,servlet,request,part,exception,class,bind,exception,class,no,handler,found,exception,class,async,request,timeout,exception,class,public,final,response,entity,object,handle,exception,exception,ex,web,request,request,http,headers,headers,new,http,headers,if,ex,instanceof,http,request,method,not,supported,exception,http,status,status,http,status,return,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,supported,exception,http,status,status,http,status,return,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,acceptable,exception,http,status,status,http,status,return,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,path,variable,exception,http,status,status,http,status,return,handle,missing,path,variable,missing,path,variable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,parameter,exception,http,status,status,http,status,return,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,headers,status,request,else,if,ex,instanceof,servlet,request,binding,exception,http,status,status,http,status,return,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,headers,status,request,else,if,ex,instanceof,conversion,not,supported,exception,http,status,status,http,status,return,handle,conversion,not,supported,conversion,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,type,mismatch,exception,http,status,status,http,status,return,handle,type,mismatch,type,mismatch,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,readable,exception,http,status,status,http,status,return,handle,http,message,not,readable,http,message,not,readable,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,writable,exception,http,status,status,http,status,return,handle,http,message,not,writable,http,message,not,writable,exception,ex,headers,status,request,else,if,ex,instanceof,method,argument,not,valid,exception,http,status,status,http,status,return,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,part,exception,http,status,status,http,status,return,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,headers,status,request,else,if,ex,instanceof,bind,exception,http,status,status,http,status,return,handle,bind,exception,bind,exception,ex,headers,status,request,else,if,ex,instanceof,no,handler,found,exception,http,status,status,http,status,return,handle,no,handler,found,exception,no,handler,found,exception,ex,headers,status,request,else,if,ex,instanceof,async,request,timeout,exception,http,status,status,http,status,return,handle,async,request,timeout,exception,async,request,timeout,exception,ex,headers,status,request,else,logger,warn,unknown,exception,type,ex,get,class,get,name,http,status,status,http,status,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> @ExceptionHandler({ 			HttpRequestMethodNotSupportedException.class, 			HttpMediaTypeNotSupportedException.class, 			HttpMediaTypeNotAcceptableException.class, 			MissingPathVariableException.class, 			MissingServletRequestParameterException.class, 			ServletRequestBindingException.class, 			ConversionNotSupportedException.class, 			TypeMismatchException.class, 			HttpMessageNotReadableException.class, 			HttpMessageNotWritableException.class, 			MethodArgumentNotValidException.class, 			MissingServletRequestPartException.class, 			BindException.class, 			NoHandlerFoundException.class, 			AsyncRequestTimeoutException.class 		}) 	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request);1473922457;Provides handling for standard Spring MVC exceptions._@param ex the target exception_@param request the current request;@ExceptionHandler({_			HttpRequestMethodNotSupportedException.class,_			HttpMediaTypeNotSupportedException.class,_			HttpMediaTypeNotAcceptableException.class,_			MissingPathVariableException.class,_			MissingServletRequestParameterException.class,_			ServletRequestBindingException.class,_			ConversionNotSupportedException.class,_			TypeMismatchException.class,_			HttpMessageNotReadableException.class,_			HttpMessageNotWritableException.class,_			MethodArgumentNotValidException.class,_			MissingServletRequestPartException.class,_			BindException.class,_			NoHandlerFoundException.class,_			AsyncRequestTimeoutException.class_		})_	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) {_		HttpHeaders headers = new HttpHeaders()__		if (ex instanceof HttpRequestMethodNotSupportedException) {_			HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED__			return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotSupportedException) {_			HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE__			return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotAcceptableException) {_			HttpStatus status = HttpStatus.NOT_ACCEPTABLE__			return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingPathVariableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleMissingPathVariable((MissingPathVariableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestParameterException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request)__		}_		else if (ex instanceof ServletRequestBindingException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request)__		}_		else if (ex instanceof ConversionNotSupportedException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof TypeMismatchException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleTypeMismatch((TypeMismatchException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotReadableException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotWritableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request)__		}_		else if (ex instanceof MethodArgumentNotValidException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestPartException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request)__		}_		else if (ex instanceof BindException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleBindException((BindException) ex, headers, status, request)__		}_		else if (ex instanceof NoHandlerFoundException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoHandlerFoundException((NoHandlerFoundException) ex, headers, status, request)__		}_		else if (ex instanceof AsyncRequestTimeoutException) {_			HttpStatus status = HttpStatus.SERVICE_UNAVAILABLE__			return handleAsyncRequestTimeoutException(_					(AsyncRequestTimeoutException) ex, headers, status, request)__		}_		else {_			if (logger.isWarnEnabled()) {_				logger.warn("Unknown exception type: " + ex.getClass().getName())__			}_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleExceptionInternal(ex, null, headers, status, request)__		}_	};provides,handling,for,standard,spring,mvc,exceptions,param,ex,the,target,exception,param,request,the,current,request;exception,handler,http,request,method,not,supported,exception,class,http,media,type,not,supported,exception,class,http,media,type,not,acceptable,exception,class,missing,path,variable,exception,class,missing,servlet,request,parameter,exception,class,servlet,request,binding,exception,class,conversion,not,supported,exception,class,type,mismatch,exception,class,http,message,not,readable,exception,class,http,message,not,writable,exception,class,method,argument,not,valid,exception,class,missing,servlet,request,part,exception,class,bind,exception,class,no,handler,found,exception,class,async,request,timeout,exception,class,public,final,response,entity,object,handle,exception,exception,ex,web,request,request,http,headers,headers,new,http,headers,if,ex,instanceof,http,request,method,not,supported,exception,http,status,status,http,status,return,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,supported,exception,http,status,status,http,status,return,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,acceptable,exception,http,status,status,http,status,return,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,path,variable,exception,http,status,status,http,status,return,handle,missing,path,variable,missing,path,variable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,parameter,exception,http,status,status,http,status,return,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,headers,status,request,else,if,ex,instanceof,servlet,request,binding,exception,http,status,status,http,status,return,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,headers,status,request,else,if,ex,instanceof,conversion,not,supported,exception,http,status,status,http,status,return,handle,conversion,not,supported,conversion,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,type,mismatch,exception,http,status,status,http,status,return,handle,type,mismatch,type,mismatch,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,readable,exception,http,status,status,http,status,return,handle,http,message,not,readable,http,message,not,readable,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,writable,exception,http,status,status,http,status,return,handle,http,message,not,writable,http,message,not,writable,exception,ex,headers,status,request,else,if,ex,instanceof,method,argument,not,valid,exception,http,status,status,http,status,return,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,part,exception,http,status,status,http,status,return,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,headers,status,request,else,if,ex,instanceof,bind,exception,http,status,status,http,status,return,handle,bind,exception,bind,exception,ex,headers,status,request,else,if,ex,instanceof,no,handler,found,exception,http,status,status,http,status,return,handle,no,handler,found,exception,no,handler,found,exception,ex,headers,status,request,else,if,ex,instanceof,async,request,timeout,exception,http,status,status,http,status,return,handle,async,request,timeout,exception,async,request,timeout,exception,ex,headers,status,request,else,if,logger,is,warn,enabled,logger,warn,unknown,exception,type,ex,get,class,get,name,http,status,status,http,status,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> @ExceptionHandler({ 			HttpRequestMethodNotSupportedException.class, 			HttpMediaTypeNotSupportedException.class, 			HttpMediaTypeNotAcceptableException.class, 			MissingPathVariableException.class, 			MissingServletRequestParameterException.class, 			ServletRequestBindingException.class, 			ConversionNotSupportedException.class, 			TypeMismatchException.class, 			HttpMessageNotReadableException.class, 			HttpMessageNotWritableException.class, 			MethodArgumentNotValidException.class, 			MissingServletRequestPartException.class, 			BindException.class, 			NoHandlerFoundException.class, 			AsyncRequestTimeoutException.class 		}) 	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request);1476211212;Provides handling for standard Spring MVC exceptions._@param ex the target exception_@param request the current request;@ExceptionHandler({_			HttpRequestMethodNotSupportedException.class,_			HttpMediaTypeNotSupportedException.class,_			HttpMediaTypeNotAcceptableException.class,_			MissingPathVariableException.class,_			MissingServletRequestParameterException.class,_			ServletRequestBindingException.class,_			ConversionNotSupportedException.class,_			TypeMismatchException.class,_			HttpMessageNotReadableException.class,_			HttpMessageNotWritableException.class,_			MethodArgumentNotValidException.class,_			MissingServletRequestPartException.class,_			BindException.class,_			NoHandlerFoundException.class,_			AsyncRequestTimeoutException.class_		})_	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) {_		HttpHeaders headers = new HttpHeaders()__		if (ex instanceof HttpRequestMethodNotSupportedException) {_			HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED__			return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotSupportedException) {_			HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE__			return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotAcceptableException) {_			HttpStatus status = HttpStatus.NOT_ACCEPTABLE__			return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingPathVariableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleMissingPathVariable((MissingPathVariableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestParameterException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request)__		}_		else if (ex instanceof ServletRequestBindingException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request)__		}_		else if (ex instanceof ConversionNotSupportedException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof TypeMismatchException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleTypeMismatch((TypeMismatchException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotReadableException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotWritableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request)__		}_		else if (ex instanceof MethodArgumentNotValidException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestPartException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request)__		}_		else if (ex instanceof BindException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleBindException((BindException) ex, headers, status, request)__		}_		else if (ex instanceof NoHandlerFoundException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoHandlerFoundException((NoHandlerFoundException) ex, headers, status, request)__		}_		else if (ex instanceof AsyncRequestTimeoutException) {_			HttpStatus status = HttpStatus.SERVICE_UNAVAILABLE__			return handleAsyncRequestTimeoutException(_					(AsyncRequestTimeoutException) ex, headers, status, request)__		}_		else {_			if (logger.isWarnEnabled()) {_				logger.warn("Unknown exception type: " + ex.getClass().getName())__			}_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleExceptionInternal(ex, null, headers, status, request)__		}_	};provides,handling,for,standard,spring,mvc,exceptions,param,ex,the,target,exception,param,request,the,current,request;exception,handler,http,request,method,not,supported,exception,class,http,media,type,not,supported,exception,class,http,media,type,not,acceptable,exception,class,missing,path,variable,exception,class,missing,servlet,request,parameter,exception,class,servlet,request,binding,exception,class,conversion,not,supported,exception,class,type,mismatch,exception,class,http,message,not,readable,exception,class,http,message,not,writable,exception,class,method,argument,not,valid,exception,class,missing,servlet,request,part,exception,class,bind,exception,class,no,handler,found,exception,class,async,request,timeout,exception,class,public,final,response,entity,object,handle,exception,exception,ex,web,request,request,http,headers,headers,new,http,headers,if,ex,instanceof,http,request,method,not,supported,exception,http,status,status,http,status,return,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,supported,exception,http,status,status,http,status,return,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,acceptable,exception,http,status,status,http,status,return,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,path,variable,exception,http,status,status,http,status,return,handle,missing,path,variable,missing,path,variable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,parameter,exception,http,status,status,http,status,return,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,headers,status,request,else,if,ex,instanceof,servlet,request,binding,exception,http,status,status,http,status,return,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,headers,status,request,else,if,ex,instanceof,conversion,not,supported,exception,http,status,status,http,status,return,handle,conversion,not,supported,conversion,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,type,mismatch,exception,http,status,status,http,status,return,handle,type,mismatch,type,mismatch,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,readable,exception,http,status,status,http,status,return,handle,http,message,not,readable,http,message,not,readable,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,writable,exception,http,status,status,http,status,return,handle,http,message,not,writable,http,message,not,writable,exception,ex,headers,status,request,else,if,ex,instanceof,method,argument,not,valid,exception,http,status,status,http,status,return,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,part,exception,http,status,status,http,status,return,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,headers,status,request,else,if,ex,instanceof,bind,exception,http,status,status,http,status,return,handle,bind,exception,bind,exception,ex,headers,status,request,else,if,ex,instanceof,no,handler,found,exception,http,status,status,http,status,return,handle,no,handler,found,exception,no,handler,found,exception,ex,headers,status,request,else,if,ex,instanceof,async,request,timeout,exception,http,status,status,http,status,return,handle,async,request,timeout,exception,async,request,timeout,exception,ex,headers,status,request,else,if,logger,is,warn,enabled,logger,warn,unknown,exception,type,ex,get,class,get,name,http,status,status,http,status,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> @ExceptionHandler({ 			HttpRequestMethodNotSupportedException.class, 			HttpMediaTypeNotSupportedException.class, 			HttpMediaTypeNotAcceptableException.class, 			MissingPathVariableException.class, 			MissingServletRequestParameterException.class, 			ServletRequestBindingException.class, 			ConversionNotSupportedException.class, 			TypeMismatchException.class, 			HttpMessageNotReadableException.class, 			HttpMessageNotWritableException.class, 			MethodArgumentNotValidException.class, 			MissingServletRequestPartException.class, 			BindException.class, 			NoHandlerFoundException.class, 			AsyncRequestTimeoutException.class 		}) 	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request);1477665930;Provides handling for standard Spring MVC exceptions._@param ex the target exception_@param request the current request;@ExceptionHandler({_			HttpRequestMethodNotSupportedException.class,_			HttpMediaTypeNotSupportedException.class,_			HttpMediaTypeNotAcceptableException.class,_			MissingPathVariableException.class,_			MissingServletRequestParameterException.class,_			ServletRequestBindingException.class,_			ConversionNotSupportedException.class,_			TypeMismatchException.class,_			HttpMessageNotReadableException.class,_			HttpMessageNotWritableException.class,_			MethodArgumentNotValidException.class,_			MissingServletRequestPartException.class,_			BindException.class,_			NoHandlerFoundException.class,_			AsyncRequestTimeoutException.class_		})_	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) {_		HttpHeaders headers = new HttpHeaders()__		if (ex instanceof HttpRequestMethodNotSupportedException) {_			HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED__			return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotSupportedException) {_			HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE__			return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotAcceptableException) {_			HttpStatus status = HttpStatus.NOT_ACCEPTABLE__			return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingPathVariableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleMissingPathVariable((MissingPathVariableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestParameterException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request)__		}_		else if (ex instanceof ServletRequestBindingException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request)__		}_		else if (ex instanceof ConversionNotSupportedException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof TypeMismatchException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleTypeMismatch((TypeMismatchException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotReadableException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotWritableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request)__		}_		else if (ex instanceof MethodArgumentNotValidException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestPartException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request)__		}_		else if (ex instanceof BindException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleBindException((BindException) ex, headers, status, request)__		}_		else if (ex instanceof NoHandlerFoundException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoHandlerFoundException((NoHandlerFoundException) ex, headers, status, request)__		}_		else if (ex instanceof AsyncRequestTimeoutException) {_			HttpStatus status = HttpStatus.SERVICE_UNAVAILABLE__			return handleAsyncRequestTimeoutException(_					(AsyncRequestTimeoutException) ex, headers, status, request)__		}_		else {_			if (logger.isWarnEnabled()) {_				logger.warn("Unknown exception type: " + ex.getClass().getName())__			}_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleExceptionInternal(ex, null, headers, status, request)__		}_	};provides,handling,for,standard,spring,mvc,exceptions,param,ex,the,target,exception,param,request,the,current,request;exception,handler,http,request,method,not,supported,exception,class,http,media,type,not,supported,exception,class,http,media,type,not,acceptable,exception,class,missing,path,variable,exception,class,missing,servlet,request,parameter,exception,class,servlet,request,binding,exception,class,conversion,not,supported,exception,class,type,mismatch,exception,class,http,message,not,readable,exception,class,http,message,not,writable,exception,class,method,argument,not,valid,exception,class,missing,servlet,request,part,exception,class,bind,exception,class,no,handler,found,exception,class,async,request,timeout,exception,class,public,final,response,entity,object,handle,exception,exception,ex,web,request,request,http,headers,headers,new,http,headers,if,ex,instanceof,http,request,method,not,supported,exception,http,status,status,http,status,return,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,supported,exception,http,status,status,http,status,return,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,acceptable,exception,http,status,status,http,status,return,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,path,variable,exception,http,status,status,http,status,return,handle,missing,path,variable,missing,path,variable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,parameter,exception,http,status,status,http,status,return,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,headers,status,request,else,if,ex,instanceof,servlet,request,binding,exception,http,status,status,http,status,return,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,headers,status,request,else,if,ex,instanceof,conversion,not,supported,exception,http,status,status,http,status,return,handle,conversion,not,supported,conversion,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,type,mismatch,exception,http,status,status,http,status,return,handle,type,mismatch,type,mismatch,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,readable,exception,http,status,status,http,status,return,handle,http,message,not,readable,http,message,not,readable,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,writable,exception,http,status,status,http,status,return,handle,http,message,not,writable,http,message,not,writable,exception,ex,headers,status,request,else,if,ex,instanceof,method,argument,not,valid,exception,http,status,status,http,status,return,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,part,exception,http,status,status,http,status,return,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,headers,status,request,else,if,ex,instanceof,bind,exception,http,status,status,http,status,return,handle,bind,exception,bind,exception,ex,headers,status,request,else,if,ex,instanceof,no,handler,found,exception,http,status,status,http,status,return,handle,no,handler,found,exception,no,handler,found,exception,ex,headers,status,request,else,if,ex,instanceof,async,request,timeout,exception,http,status,status,http,status,return,handle,async,request,timeout,exception,async,request,timeout,exception,ex,headers,status,request,else,if,logger,is,warn,enabled,logger,warn,unknown,exception,type,ex,get,class,get,name,http,status,status,http,status,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> @ExceptionHandler({ 			HttpRequestMethodNotSupportedException.class, 			HttpMediaTypeNotSupportedException.class, 			HttpMediaTypeNotAcceptableException.class, 			MissingPathVariableException.class, 			MissingServletRequestParameterException.class, 			ServletRequestBindingException.class, 			ConversionNotSupportedException.class, 			TypeMismatchException.class, 			HttpMessageNotReadableException.class, 			HttpMessageNotWritableException.class, 			MethodArgumentNotValidException.class, 			MissingServletRequestPartException.class, 			BindException.class, 			NoHandlerFoundException.class, 			AsyncRequestTimeoutException.class 		}) 	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request);1486062666;Provides handling for standard Spring MVC exceptions._@param ex the target exception_@param request the current request;@ExceptionHandler({_			HttpRequestMethodNotSupportedException.class,_			HttpMediaTypeNotSupportedException.class,_			HttpMediaTypeNotAcceptableException.class,_			MissingPathVariableException.class,_			MissingServletRequestParameterException.class,_			ServletRequestBindingException.class,_			ConversionNotSupportedException.class,_			TypeMismatchException.class,_			HttpMessageNotReadableException.class,_			HttpMessageNotWritableException.class,_			MethodArgumentNotValidException.class,_			MissingServletRequestPartException.class,_			BindException.class,_			NoHandlerFoundException.class,_			AsyncRequestTimeoutException.class_		})_	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) {_		HttpHeaders headers = new HttpHeaders()__		if (ex instanceof HttpRequestMethodNotSupportedException) {_			HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED__			return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotSupportedException) {_			HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE__			return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotAcceptableException) {_			HttpStatus status = HttpStatus.NOT_ACCEPTABLE__			return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingPathVariableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleMissingPathVariable((MissingPathVariableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestParameterException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request)__		}_		else if (ex instanceof ServletRequestBindingException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request)__		}_		else if (ex instanceof ConversionNotSupportedException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof TypeMismatchException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleTypeMismatch((TypeMismatchException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotReadableException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotWritableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request)__		}_		else if (ex instanceof MethodArgumentNotValidException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestPartException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request)__		}_		else if (ex instanceof BindException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleBindException((BindException) ex, headers, status, request)__		}_		else if (ex instanceof NoHandlerFoundException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoHandlerFoundException((NoHandlerFoundException) ex, headers, status, request)__		}_		else if (ex instanceof AsyncRequestTimeoutException) {_			HttpStatus status = HttpStatus.SERVICE_UNAVAILABLE__			return handleAsyncRequestTimeoutException(_					(AsyncRequestTimeoutException) ex, headers, status, request)__		}_		else {_			if (logger.isWarnEnabled()) {_				logger.warn("Unknown exception type: " + ex.getClass().getName())__			}_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleExceptionInternal(ex, null, headers, status, request)__		}_	};provides,handling,for,standard,spring,mvc,exceptions,param,ex,the,target,exception,param,request,the,current,request;exception,handler,http,request,method,not,supported,exception,class,http,media,type,not,supported,exception,class,http,media,type,not,acceptable,exception,class,missing,path,variable,exception,class,missing,servlet,request,parameter,exception,class,servlet,request,binding,exception,class,conversion,not,supported,exception,class,type,mismatch,exception,class,http,message,not,readable,exception,class,http,message,not,writable,exception,class,method,argument,not,valid,exception,class,missing,servlet,request,part,exception,class,bind,exception,class,no,handler,found,exception,class,async,request,timeout,exception,class,public,final,response,entity,object,handle,exception,exception,ex,web,request,request,http,headers,headers,new,http,headers,if,ex,instanceof,http,request,method,not,supported,exception,http,status,status,http,status,return,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,supported,exception,http,status,status,http,status,return,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,acceptable,exception,http,status,status,http,status,return,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,path,variable,exception,http,status,status,http,status,return,handle,missing,path,variable,missing,path,variable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,parameter,exception,http,status,status,http,status,return,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,headers,status,request,else,if,ex,instanceof,servlet,request,binding,exception,http,status,status,http,status,return,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,headers,status,request,else,if,ex,instanceof,conversion,not,supported,exception,http,status,status,http,status,return,handle,conversion,not,supported,conversion,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,type,mismatch,exception,http,status,status,http,status,return,handle,type,mismatch,type,mismatch,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,readable,exception,http,status,status,http,status,return,handle,http,message,not,readable,http,message,not,readable,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,writable,exception,http,status,status,http,status,return,handle,http,message,not,writable,http,message,not,writable,exception,ex,headers,status,request,else,if,ex,instanceof,method,argument,not,valid,exception,http,status,status,http,status,return,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,part,exception,http,status,status,http,status,return,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,headers,status,request,else,if,ex,instanceof,bind,exception,http,status,status,http,status,return,handle,bind,exception,bind,exception,ex,headers,status,request,else,if,ex,instanceof,no,handler,found,exception,http,status,status,http,status,return,handle,no,handler,found,exception,no,handler,found,exception,ex,headers,status,request,else,if,ex,instanceof,async,request,timeout,exception,http,status,status,http,status,return,handle,async,request,timeout,exception,async,request,timeout,exception,ex,headers,status,request,else,if,logger,is,warn,enabled,logger,warn,unknown,exception,type,ex,get,class,get,name,http,status,status,http,status,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> @ExceptionHandler({ 			HttpRequestMethodNotSupportedException.class, 			HttpMediaTypeNotSupportedException.class, 			HttpMediaTypeNotAcceptableException.class, 			MissingPathVariableException.class, 			MissingServletRequestParameterException.class, 			ServletRequestBindingException.class, 			ConversionNotSupportedException.class, 			TypeMismatchException.class, 			HttpMessageNotReadableException.class, 			HttpMessageNotWritableException.class, 			MethodArgumentNotValidException.class, 			MissingServletRequestPartException.class, 			BindException.class, 			NoHandlerFoundException.class, 			AsyncRequestTimeoutException.class 		}) 	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request);1490350007;Provides handling for standard Spring MVC exceptions._@param ex the target exception_@param request the current request;@ExceptionHandler({_			HttpRequestMethodNotSupportedException.class,_			HttpMediaTypeNotSupportedException.class,_			HttpMediaTypeNotAcceptableException.class,_			MissingPathVariableException.class,_			MissingServletRequestParameterException.class,_			ServletRequestBindingException.class,_			ConversionNotSupportedException.class,_			TypeMismatchException.class,_			HttpMessageNotReadableException.class,_			HttpMessageNotWritableException.class,_			MethodArgumentNotValidException.class,_			MissingServletRequestPartException.class,_			BindException.class,_			NoHandlerFoundException.class,_			AsyncRequestTimeoutException.class_		})_	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) {_		HttpHeaders headers = new HttpHeaders()__		if (ex instanceof HttpRequestMethodNotSupportedException) {_			HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED__			return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotSupportedException) {_			HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE__			return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotAcceptableException) {_			HttpStatus status = HttpStatus.NOT_ACCEPTABLE__			return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingPathVariableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleMissingPathVariable((MissingPathVariableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestParameterException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request)__		}_		else if (ex instanceof ServletRequestBindingException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request)__		}_		else if (ex instanceof ConversionNotSupportedException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof TypeMismatchException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleTypeMismatch((TypeMismatchException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotReadableException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotWritableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request)__		}_		else if (ex instanceof MethodArgumentNotValidException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestPartException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request)__		}_		else if (ex instanceof BindException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleBindException((BindException) ex, headers, status, request)__		}_		else if (ex instanceof NoHandlerFoundException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoHandlerFoundException((NoHandlerFoundException) ex, headers, status, request)__		}_		else if (ex instanceof AsyncRequestTimeoutException) {_			HttpStatus status = HttpStatus.SERVICE_UNAVAILABLE__			return handleAsyncRequestTimeoutException(_					(AsyncRequestTimeoutException) ex, headers, status, request)__		}_		else {_			if (logger.isWarnEnabled()) {_				logger.warn("Unknown exception type: " + ex.getClass().getName())__			}_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleExceptionInternal(ex, null, headers, status, request)__		}_	};provides,handling,for,standard,spring,mvc,exceptions,param,ex,the,target,exception,param,request,the,current,request;exception,handler,http,request,method,not,supported,exception,class,http,media,type,not,supported,exception,class,http,media,type,not,acceptable,exception,class,missing,path,variable,exception,class,missing,servlet,request,parameter,exception,class,servlet,request,binding,exception,class,conversion,not,supported,exception,class,type,mismatch,exception,class,http,message,not,readable,exception,class,http,message,not,writable,exception,class,method,argument,not,valid,exception,class,missing,servlet,request,part,exception,class,bind,exception,class,no,handler,found,exception,class,async,request,timeout,exception,class,public,final,response,entity,object,handle,exception,exception,ex,web,request,request,http,headers,headers,new,http,headers,if,ex,instanceof,http,request,method,not,supported,exception,http,status,status,http,status,return,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,supported,exception,http,status,status,http,status,return,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,acceptable,exception,http,status,status,http,status,return,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,path,variable,exception,http,status,status,http,status,return,handle,missing,path,variable,missing,path,variable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,parameter,exception,http,status,status,http,status,return,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,headers,status,request,else,if,ex,instanceof,servlet,request,binding,exception,http,status,status,http,status,return,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,headers,status,request,else,if,ex,instanceof,conversion,not,supported,exception,http,status,status,http,status,return,handle,conversion,not,supported,conversion,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,type,mismatch,exception,http,status,status,http,status,return,handle,type,mismatch,type,mismatch,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,readable,exception,http,status,status,http,status,return,handle,http,message,not,readable,http,message,not,readable,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,writable,exception,http,status,status,http,status,return,handle,http,message,not,writable,http,message,not,writable,exception,ex,headers,status,request,else,if,ex,instanceof,method,argument,not,valid,exception,http,status,status,http,status,return,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,part,exception,http,status,status,http,status,return,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,headers,status,request,else,if,ex,instanceof,bind,exception,http,status,status,http,status,return,handle,bind,exception,bind,exception,ex,headers,status,request,else,if,ex,instanceof,no,handler,found,exception,http,status,status,http,status,return,handle,no,handler,found,exception,no,handler,found,exception,ex,headers,status,request,else,if,ex,instanceof,async,request,timeout,exception,http,status,status,http,status,return,handle,async,request,timeout,exception,async,request,timeout,exception,ex,headers,status,request,else,if,logger,is,warn,enabled,logger,warn,unknown,exception,type,ex,get,class,get,name,http,status,status,http,status,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> @ExceptionHandler({ 			HttpRequestMethodNotSupportedException.class, 			HttpMediaTypeNotSupportedException.class, 			HttpMediaTypeNotAcceptableException.class, 			MissingPathVariableException.class, 			MissingServletRequestParameterException.class, 			ServletRequestBindingException.class, 			ConversionNotSupportedException.class, 			TypeMismatchException.class, 			HttpMessageNotReadableException.class, 			HttpMessageNotWritableException.class, 			MethodArgumentNotValidException.class, 			MissingServletRequestPartException.class, 			BindException.class, 			NoHandlerFoundException.class, 			AsyncRequestTimeoutException.class 		}) 	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request);1495868221;Provides handling for standard Spring MVC exceptions._@param ex the target exception_@param request the current request;@ExceptionHandler({_			HttpRequestMethodNotSupportedException.class,_			HttpMediaTypeNotSupportedException.class,_			HttpMediaTypeNotAcceptableException.class,_			MissingPathVariableException.class,_			MissingServletRequestParameterException.class,_			ServletRequestBindingException.class,_			ConversionNotSupportedException.class,_			TypeMismatchException.class,_			HttpMessageNotReadableException.class,_			HttpMessageNotWritableException.class,_			MethodArgumentNotValidException.class,_			MissingServletRequestPartException.class,_			BindException.class,_			NoHandlerFoundException.class,_			AsyncRequestTimeoutException.class_		})_	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) {_		HttpHeaders headers = new HttpHeaders()__		if (ex instanceof HttpRequestMethodNotSupportedException) {_			HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED__			return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotSupportedException) {_			HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE__			return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotAcceptableException) {_			HttpStatus status = HttpStatus.NOT_ACCEPTABLE__			return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingPathVariableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleMissingPathVariable((MissingPathVariableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestParameterException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request)__		}_		else if (ex instanceof ServletRequestBindingException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request)__		}_		else if (ex instanceof ConversionNotSupportedException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof TypeMismatchException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleTypeMismatch((TypeMismatchException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotReadableException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotWritableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request)__		}_		else if (ex instanceof MethodArgumentNotValidException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestPartException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request)__		}_		else if (ex instanceof BindException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleBindException((BindException) ex, headers, status, request)__		}_		else if (ex instanceof NoHandlerFoundException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoHandlerFoundException((NoHandlerFoundException) ex, headers, status, request)__		}_		else if (ex instanceof AsyncRequestTimeoutException) {_			HttpStatus status = HttpStatus.SERVICE_UNAVAILABLE__			return handleAsyncRequestTimeoutException(_					(AsyncRequestTimeoutException) ex, headers, status, request)__		}_		else {_			if (logger.isWarnEnabled()) {_				logger.warn("Unknown exception type: " + ex.getClass().getName())__			}_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleExceptionInternal(ex, null, headers, status, request)__		}_	};provides,handling,for,standard,spring,mvc,exceptions,param,ex,the,target,exception,param,request,the,current,request;exception,handler,http,request,method,not,supported,exception,class,http,media,type,not,supported,exception,class,http,media,type,not,acceptable,exception,class,missing,path,variable,exception,class,missing,servlet,request,parameter,exception,class,servlet,request,binding,exception,class,conversion,not,supported,exception,class,type,mismatch,exception,class,http,message,not,readable,exception,class,http,message,not,writable,exception,class,method,argument,not,valid,exception,class,missing,servlet,request,part,exception,class,bind,exception,class,no,handler,found,exception,class,async,request,timeout,exception,class,public,final,response,entity,object,handle,exception,exception,ex,web,request,request,http,headers,headers,new,http,headers,if,ex,instanceof,http,request,method,not,supported,exception,http,status,status,http,status,return,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,supported,exception,http,status,status,http,status,return,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,acceptable,exception,http,status,status,http,status,return,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,path,variable,exception,http,status,status,http,status,return,handle,missing,path,variable,missing,path,variable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,parameter,exception,http,status,status,http,status,return,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,headers,status,request,else,if,ex,instanceof,servlet,request,binding,exception,http,status,status,http,status,return,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,headers,status,request,else,if,ex,instanceof,conversion,not,supported,exception,http,status,status,http,status,return,handle,conversion,not,supported,conversion,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,type,mismatch,exception,http,status,status,http,status,return,handle,type,mismatch,type,mismatch,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,readable,exception,http,status,status,http,status,return,handle,http,message,not,readable,http,message,not,readable,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,writable,exception,http,status,status,http,status,return,handle,http,message,not,writable,http,message,not,writable,exception,ex,headers,status,request,else,if,ex,instanceof,method,argument,not,valid,exception,http,status,status,http,status,return,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,part,exception,http,status,status,http,status,return,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,headers,status,request,else,if,ex,instanceof,bind,exception,http,status,status,http,status,return,handle,bind,exception,bind,exception,ex,headers,status,request,else,if,ex,instanceof,no,handler,found,exception,http,status,status,http,status,return,handle,no,handler,found,exception,no,handler,found,exception,ex,headers,status,request,else,if,ex,instanceof,async,request,timeout,exception,http,status,status,http,status,return,handle,async,request,timeout,exception,async,request,timeout,exception,ex,headers,status,request,else,if,logger,is,warn,enabled,logger,warn,unknown,exception,type,ex,get,class,get,name,http,status,status,http,status,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> @ExceptionHandler({ 			HttpRequestMethodNotSupportedException.class, 			HttpMediaTypeNotSupportedException.class, 			HttpMediaTypeNotAcceptableException.class, 			MissingPathVariableException.class, 			MissingServletRequestParameterException.class, 			ServletRequestBindingException.class, 			ConversionNotSupportedException.class, 			TypeMismatchException.class, 			HttpMessageNotReadableException.class, 			HttpMessageNotWritableException.class, 			MethodArgumentNotValidException.class, 			MissingServletRequestPartException.class, 			BindException.class, 			NoHandlerFoundException.class, 			AsyncRequestTimeoutException.class 		}) 	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request);1496259743;Provides handling for standard Spring MVC exceptions._@param ex the target exception_@param request the current request;@ExceptionHandler({_			HttpRequestMethodNotSupportedException.class,_			HttpMediaTypeNotSupportedException.class,_			HttpMediaTypeNotAcceptableException.class,_			MissingPathVariableException.class,_			MissingServletRequestParameterException.class,_			ServletRequestBindingException.class,_			ConversionNotSupportedException.class,_			TypeMismatchException.class,_			HttpMessageNotReadableException.class,_			HttpMessageNotWritableException.class,_			MethodArgumentNotValidException.class,_			MissingServletRequestPartException.class,_			BindException.class,_			NoHandlerFoundException.class,_			AsyncRequestTimeoutException.class_		})_	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) {_		HttpHeaders headers = new HttpHeaders()__		if (ex instanceof HttpRequestMethodNotSupportedException) {_			HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED__			return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotSupportedException) {_			HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE__			return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotAcceptableException) {_			HttpStatus status = HttpStatus.NOT_ACCEPTABLE__			return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingPathVariableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleMissingPathVariable((MissingPathVariableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestParameterException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request)__		}_		else if (ex instanceof ServletRequestBindingException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request)__		}_		else if (ex instanceof ConversionNotSupportedException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof TypeMismatchException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleTypeMismatch((TypeMismatchException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotReadableException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotWritableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request)__		}_		else if (ex instanceof MethodArgumentNotValidException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestPartException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request)__		}_		else if (ex instanceof BindException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleBindException((BindException) ex, headers, status, request)__		}_		else if (ex instanceof NoHandlerFoundException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoHandlerFoundException((NoHandlerFoundException) ex, headers, status, request)__		}_		else if (ex instanceof AsyncRequestTimeoutException) {_			HttpStatus status = HttpStatus.SERVICE_UNAVAILABLE__			return handleAsyncRequestTimeoutException(_					(AsyncRequestTimeoutException) ex, headers, status, request)__		}_		else {_			if (logger.isWarnEnabled()) {_				logger.warn("Unknown exception type: " + ex.getClass().getName())__			}_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleExceptionInternal(ex, null, headers, status, request)__		}_	};provides,handling,for,standard,spring,mvc,exceptions,param,ex,the,target,exception,param,request,the,current,request;exception,handler,http,request,method,not,supported,exception,class,http,media,type,not,supported,exception,class,http,media,type,not,acceptable,exception,class,missing,path,variable,exception,class,missing,servlet,request,parameter,exception,class,servlet,request,binding,exception,class,conversion,not,supported,exception,class,type,mismatch,exception,class,http,message,not,readable,exception,class,http,message,not,writable,exception,class,method,argument,not,valid,exception,class,missing,servlet,request,part,exception,class,bind,exception,class,no,handler,found,exception,class,async,request,timeout,exception,class,public,final,response,entity,object,handle,exception,exception,ex,web,request,request,http,headers,headers,new,http,headers,if,ex,instanceof,http,request,method,not,supported,exception,http,status,status,http,status,return,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,supported,exception,http,status,status,http,status,return,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,acceptable,exception,http,status,status,http,status,return,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,path,variable,exception,http,status,status,http,status,return,handle,missing,path,variable,missing,path,variable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,parameter,exception,http,status,status,http,status,return,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,headers,status,request,else,if,ex,instanceof,servlet,request,binding,exception,http,status,status,http,status,return,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,headers,status,request,else,if,ex,instanceof,conversion,not,supported,exception,http,status,status,http,status,return,handle,conversion,not,supported,conversion,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,type,mismatch,exception,http,status,status,http,status,return,handle,type,mismatch,type,mismatch,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,readable,exception,http,status,status,http,status,return,handle,http,message,not,readable,http,message,not,readable,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,writable,exception,http,status,status,http,status,return,handle,http,message,not,writable,http,message,not,writable,exception,ex,headers,status,request,else,if,ex,instanceof,method,argument,not,valid,exception,http,status,status,http,status,return,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,part,exception,http,status,status,http,status,return,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,headers,status,request,else,if,ex,instanceof,bind,exception,http,status,status,http,status,return,handle,bind,exception,bind,exception,ex,headers,status,request,else,if,ex,instanceof,no,handler,found,exception,http,status,status,http,status,return,handle,no,handler,found,exception,no,handler,found,exception,ex,headers,status,request,else,if,ex,instanceof,async,request,timeout,exception,http,status,status,http,status,return,handle,async,request,timeout,exception,async,request,timeout,exception,ex,headers,status,request,else,if,logger,is,warn,enabled,logger,warn,unknown,exception,type,ex,get,class,get,name,http,status,status,http,status,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable( 			HttpMessageNotWritableException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1525517218;Customize the response for HttpMessageNotWritableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(_			HttpMessageNotWritableException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMessageNotWritable( 			HttpMessageNotWritableException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1529361191;Customize the response for HttpMessageNotWritableException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMessageNotWritable(_			HttpMessageNotWritableException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,message,not,writable,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,message,not,writable,http,message,not,writable,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter( 			MissingServletRequestParameterException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1525517218;Customize the response for MissingServletRequestParameterException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(_			MissingServletRequestParameterException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestParameter( 			MissingServletRequestParameterException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1529361191;Customize the response for MissingServletRequestParameterException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestParameter(_			MissingServletRequestParameterException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,parameter,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoHandlerFoundException(NoHandlerFoundException ex, HttpHeaders headers, 	                                                     HttpStatus status, WebRequest request);1380132768;Customize the response for NoHandlerFoundException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.0;protected ResponseEntity<Object> handleNoHandlerFoundException(NoHandlerFoundException ex, HttpHeaders headers,_	                                                     HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,0;protected,response,entity,object,handle,no,handler,found,exception,no,handler,found,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoHandlerFoundException(NoHandlerFoundException ex, HttpHeaders headers, 	                                                     HttpStatus status, WebRequest request);1413848647;Customize the response for NoHandlerFoundException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.0;protected ResponseEntity<Object> handleNoHandlerFoundException(NoHandlerFoundException ex, HttpHeaders headers,_	                                                     HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,0;protected,response,entity,object,handle,no,handler,found,exception,no,handler,found,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoHandlerFoundException(NoHandlerFoundException ex, HttpHeaders headers, 	                                                     HttpStatus status, WebRequest request);1434398959;Customize the response for NoHandlerFoundException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.0;protected ResponseEntity<Object> handleNoHandlerFoundException(NoHandlerFoundException ex, HttpHeaders headers,_	                                                     HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,0;protected,response,entity,object,handle,no,handler,found,exception,no,handler,found,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoHandlerFoundException(NoHandlerFoundException ex, HttpHeaders headers, 	                                                     HttpStatus status, WebRequest request);1444145445;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.0;protected ResponseEntity<Object> handleNoHandlerFoundException(NoHandlerFoundException ex, HttpHeaders headers,_	                                                     HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,0;protected,response,entity,object,handle,no,handler,found,exception,no,handler,found,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoHandlerFoundException(NoHandlerFoundException ex, HttpHeaders headers, 	                                                     HttpStatus status, WebRequest request);1452799530;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.0;protected ResponseEntity<Object> handleNoHandlerFoundException(NoHandlerFoundException ex, HttpHeaders headers,_	                                                     HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,0;protected,response,entity,object,handle,no,handler,found,exception,no,handler,found,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoHandlerFoundException(NoHandlerFoundException ex, HttpHeaders headers, 	                                                     HttpStatus status, WebRequest request);1452851471;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.0;protected ResponseEntity<Object> handleNoHandlerFoundException(NoHandlerFoundException ex, HttpHeaders headers,_	                                                     HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,0;protected,response,entity,object,handle,no,handler,found,exception,no,handler,found,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1346090766;Customize the response for TypeMismatchException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1347316003;Customize the response for TypeMismatchException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1380132768;Customize the response for TypeMismatchException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1413848647;Customize the response for TypeMismatchException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1434398959;Customize the response for TypeMismatchException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1444145445;Customize the response for TypeMismatchException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1452799530;Customize the response for TypeMismatchException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1452851471;Customize the response for TypeMismatchException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1458944925;Customize the response for TypeMismatchException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1460021854;Customize the response for TypeMismatchException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1467726769;Customize the response for TypeMismatchException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1467730834;Customize the response for TypeMismatchException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1473903270;Customize the response for TypeMismatchException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1473922457;Customize the response for TypeMismatchException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1476211212;Customize the response for TypeMismatchException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1477665930;Customize the response for TypeMismatchException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1486062666;Customize the response for TypeMismatchException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1490350007;Customize the response for TypeMismatchException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1495868221;Customize the response for TypeMismatchException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1496259743;Customize the response for TypeMismatchException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1496837955;Customize the response for TypeMismatchException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers, 			HttpStatus status, WebRequest request);1519937579;Customize the response for TypeMismatchException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleTypeMismatch(TypeMismatchException ex, HttpHeaders headers,_			HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,type,mismatch,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,type,mismatch,type,mismatch,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> @ExceptionHandler({ 			HttpRequestMethodNotSupportedException.class, 			HttpMediaTypeNotSupportedException.class, 			HttpMediaTypeNotAcceptableException.class, 			MissingPathVariableException.class, 			MissingServletRequestParameterException.class, 			ServletRequestBindingException.class, 			ConversionNotSupportedException.class, 			TypeMismatchException.class, 			HttpMessageNotReadableException.class, 			HttpMessageNotWritableException.class, 			MethodArgumentNotValidException.class, 			MissingServletRequestPartException.class, 			BindException.class, 			NoHandlerFoundException.class, 			AsyncRequestTimeoutException.class 		}) 	@Nullable 	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request);1496837955;Provides handling for standard Spring MVC exceptions._@param ex the target exception_@param request the current request;@ExceptionHandler({_			HttpRequestMethodNotSupportedException.class,_			HttpMediaTypeNotSupportedException.class,_			HttpMediaTypeNotAcceptableException.class,_			MissingPathVariableException.class,_			MissingServletRequestParameterException.class,_			ServletRequestBindingException.class,_			ConversionNotSupportedException.class,_			TypeMismatchException.class,_			HttpMessageNotReadableException.class,_			HttpMessageNotWritableException.class,_			MethodArgumentNotValidException.class,_			MissingServletRequestPartException.class,_			BindException.class,_			NoHandlerFoundException.class,_			AsyncRequestTimeoutException.class_		})_	@Nullable_	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) {_		HttpHeaders headers = new HttpHeaders()__		if (ex instanceof HttpRequestMethodNotSupportedException) {_			HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED__			return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotSupportedException) {_			HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE__			return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotAcceptableException) {_			HttpStatus status = HttpStatus.NOT_ACCEPTABLE__			return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingPathVariableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleMissingPathVariable((MissingPathVariableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestParameterException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request)__		}_		else if (ex instanceof ServletRequestBindingException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request)__		}_		else if (ex instanceof ConversionNotSupportedException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof TypeMismatchException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleTypeMismatch((TypeMismatchException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotReadableException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotWritableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request)__		}_		else if (ex instanceof MethodArgumentNotValidException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestPartException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request)__		}_		else if (ex instanceof BindException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleBindException((BindException) ex, headers, status, request)__		}_		else if (ex instanceof NoHandlerFoundException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoHandlerFoundException((NoHandlerFoundException) ex, headers, status, request)__		}_		else if (ex instanceof AsyncRequestTimeoutException) {_			HttpStatus status = HttpStatus.SERVICE_UNAVAILABLE__			return handleAsyncRequestTimeoutException(_					(AsyncRequestTimeoutException) ex, headers, status, request)__		}_		else {_			if (logger.isWarnEnabled()) {_				logger.warn("Unknown exception type: " + ex.getClass().getName())__			}_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleExceptionInternal(ex, null, headers, status, request)__		}_	};provides,handling,for,standard,spring,mvc,exceptions,param,ex,the,target,exception,param,request,the,current,request;exception,handler,http,request,method,not,supported,exception,class,http,media,type,not,supported,exception,class,http,media,type,not,acceptable,exception,class,missing,path,variable,exception,class,missing,servlet,request,parameter,exception,class,servlet,request,binding,exception,class,conversion,not,supported,exception,class,type,mismatch,exception,class,http,message,not,readable,exception,class,http,message,not,writable,exception,class,method,argument,not,valid,exception,class,missing,servlet,request,part,exception,class,bind,exception,class,no,handler,found,exception,class,async,request,timeout,exception,class,nullable,public,final,response,entity,object,handle,exception,exception,ex,web,request,request,http,headers,headers,new,http,headers,if,ex,instanceof,http,request,method,not,supported,exception,http,status,status,http,status,return,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,supported,exception,http,status,status,http,status,return,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,acceptable,exception,http,status,status,http,status,return,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,path,variable,exception,http,status,status,http,status,return,handle,missing,path,variable,missing,path,variable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,parameter,exception,http,status,status,http,status,return,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,headers,status,request,else,if,ex,instanceof,servlet,request,binding,exception,http,status,status,http,status,return,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,headers,status,request,else,if,ex,instanceof,conversion,not,supported,exception,http,status,status,http,status,return,handle,conversion,not,supported,conversion,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,type,mismatch,exception,http,status,status,http,status,return,handle,type,mismatch,type,mismatch,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,readable,exception,http,status,status,http,status,return,handle,http,message,not,readable,http,message,not,readable,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,writable,exception,http,status,status,http,status,return,handle,http,message,not,writable,http,message,not,writable,exception,ex,headers,status,request,else,if,ex,instanceof,method,argument,not,valid,exception,http,status,status,http,status,return,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,part,exception,http,status,status,http,status,return,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,headers,status,request,else,if,ex,instanceof,bind,exception,http,status,status,http,status,return,handle,bind,exception,bind,exception,ex,headers,status,request,else,if,ex,instanceof,no,handler,found,exception,http,status,status,http,status,return,handle,no,handler,found,exception,no,handler,found,exception,ex,headers,status,request,else,if,ex,instanceof,async,request,timeout,exception,http,status,status,http,status,return,handle,async,request,timeout,exception,async,request,timeout,exception,ex,headers,status,request,else,if,logger,is,warn,enabled,logger,warn,unknown,exception,type,ex,get,class,get,name,http,status,status,http,status,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> @ExceptionHandler({ 			HttpRequestMethodNotSupportedException.class, 			HttpMediaTypeNotSupportedException.class, 			HttpMediaTypeNotAcceptableException.class, 			MissingPathVariableException.class, 			MissingServletRequestParameterException.class, 			ServletRequestBindingException.class, 			ConversionNotSupportedException.class, 			TypeMismatchException.class, 			HttpMessageNotReadableException.class, 			HttpMessageNotWritableException.class, 			MethodArgumentNotValidException.class, 			MissingServletRequestPartException.class, 			BindException.class, 			NoHandlerFoundException.class, 			AsyncRequestTimeoutException.class 		}) 	@Nullable 	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request);1519937579;Provides handling for standard Spring MVC exceptions._@param ex the target exception_@param request the current request;@ExceptionHandler({_			HttpRequestMethodNotSupportedException.class,_			HttpMediaTypeNotSupportedException.class,_			HttpMediaTypeNotAcceptableException.class,_			MissingPathVariableException.class,_			MissingServletRequestParameterException.class,_			ServletRequestBindingException.class,_			ConversionNotSupportedException.class,_			TypeMismatchException.class,_			HttpMessageNotReadableException.class,_			HttpMessageNotWritableException.class,_			MethodArgumentNotValidException.class,_			MissingServletRequestPartException.class,_			BindException.class,_			NoHandlerFoundException.class,_			AsyncRequestTimeoutException.class_		})_	@Nullable_	public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) {_		HttpHeaders headers = new HttpHeaders()__		if (ex instanceof HttpRequestMethodNotSupportedException) {_			HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED__			return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotSupportedException) {_			HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE__			return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMediaTypeNotAcceptableException) {_			HttpStatus status = HttpStatus.NOT_ACCEPTABLE__			return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingPathVariableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleMissingPathVariable((MissingPathVariableException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestParameterException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request)__		}_		else if (ex instanceof ServletRequestBindingException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request)__		}_		else if (ex instanceof ConversionNotSupportedException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request)__		}_		else if (ex instanceof TypeMismatchException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleTypeMismatch((TypeMismatchException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotReadableException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request)__		}_		else if (ex instanceof HttpMessageNotWritableException) {_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request)__		}_		else if (ex instanceof MethodArgumentNotValidException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request)__		}_		else if (ex instanceof MissingServletRequestPartException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request)__		}_		else if (ex instanceof BindException) {_			HttpStatus status = HttpStatus.BAD_REQUEST__			return handleBindException((BindException) ex, headers, status, request)__		}_		else if (ex instanceof NoHandlerFoundException) {_			HttpStatus status = HttpStatus.NOT_FOUND__			return handleNoHandlerFoundException((NoHandlerFoundException) ex, headers, status, request)__		}_		else if (ex instanceof AsyncRequestTimeoutException) {_			HttpStatus status = HttpStatus.SERVICE_UNAVAILABLE__			return handleAsyncRequestTimeoutException(_					(AsyncRequestTimeoutException) ex, headers, status, request)__		}_		else {_			if (logger.isWarnEnabled()) {_				logger.warn("Unknown exception type: " + ex.getClass().getName())__			}_			HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR__			return handleExceptionInternal(ex, null, headers, status, request)__		}_	};provides,handling,for,standard,spring,mvc,exceptions,param,ex,the,target,exception,param,request,the,current,request;exception,handler,http,request,method,not,supported,exception,class,http,media,type,not,supported,exception,class,http,media,type,not,acceptable,exception,class,missing,path,variable,exception,class,missing,servlet,request,parameter,exception,class,servlet,request,binding,exception,class,conversion,not,supported,exception,class,type,mismatch,exception,class,http,message,not,readable,exception,class,http,message,not,writable,exception,class,method,argument,not,valid,exception,class,missing,servlet,request,part,exception,class,bind,exception,class,no,handler,found,exception,class,async,request,timeout,exception,class,nullable,public,final,response,entity,object,handle,exception,exception,ex,web,request,request,http,headers,headers,new,http,headers,if,ex,instanceof,http,request,method,not,supported,exception,http,status,status,http,status,return,handle,http,request,method,not,supported,http,request,method,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,supported,exception,http,status,status,http,status,return,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,http,media,type,not,acceptable,exception,http,status,status,http,status,return,handle,http,media,type,not,acceptable,http,media,type,not,acceptable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,path,variable,exception,http,status,status,http,status,return,handle,missing,path,variable,missing,path,variable,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,parameter,exception,http,status,status,http,status,return,handle,missing,servlet,request,parameter,missing,servlet,request,parameter,exception,ex,headers,status,request,else,if,ex,instanceof,servlet,request,binding,exception,http,status,status,http,status,return,handle,servlet,request,binding,exception,servlet,request,binding,exception,ex,headers,status,request,else,if,ex,instanceof,conversion,not,supported,exception,http,status,status,http,status,return,handle,conversion,not,supported,conversion,not,supported,exception,ex,headers,status,request,else,if,ex,instanceof,type,mismatch,exception,http,status,status,http,status,return,handle,type,mismatch,type,mismatch,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,readable,exception,http,status,status,http,status,return,handle,http,message,not,readable,http,message,not,readable,exception,ex,headers,status,request,else,if,ex,instanceof,http,message,not,writable,exception,http,status,status,http,status,return,handle,http,message,not,writable,http,message,not,writable,exception,ex,headers,status,request,else,if,ex,instanceof,method,argument,not,valid,exception,http,status,status,http,status,return,handle,method,argument,not,valid,method,argument,not,valid,exception,ex,headers,status,request,else,if,ex,instanceof,missing,servlet,request,part,exception,http,status,status,http,status,return,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,headers,status,request,else,if,ex,instanceof,bind,exception,http,status,status,http,status,return,handle,bind,exception,bind,exception,ex,headers,status,request,else,if,ex,instanceof,no,handler,found,exception,http,status,status,http,status,return,handle,no,handler,found,exception,no,handler,found,exception,ex,headers,status,request,else,if,ex,instanceof,async,request,timeout,exception,http,status,status,http,status,return,handle,async,request,timeout,exception,async,request,timeout,exception,ex,headers,status,request,else,if,logger,is,warn,enabled,logger,warn,unknown,exception,type,ex,get,class,get,name,http,status,status,http,status,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported( 			HttpMediaTypeNotSupportedException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1525517218;Customize the response for HttpMediaTypeNotSupportedException._<p>This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(_			HttpMediaTypeNotSupportedException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,p,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleHttpMediaTypeNotSupported( 			HttpMediaTypeNotSupportedException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1529361191;Customize the response for HttpMediaTypeNotSupportedException._<p>This method sets the "Accept" header and delegates to_{@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(_			HttpMediaTypeNotSupportedException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		List<MediaType> mediaTypes = ex.getSupportedMediaTypes()__		if (!CollectionUtils.isEmpty(mediaTypes)) {_			headers.setAccept(mediaTypes)__		}__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,http,media,type,not,supported,exception,p,this,method,sets,the,accept,header,and,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,http,media,type,not,supported,http,media,type,not,supported,exception,ex,http,headers,headers,http,status,status,web,request,request,list,media,type,media,types,ex,get,supported,media,types,if,collection,utils,is,empty,media,types,headers,set,accept,media,types,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> @Nullable 	protected ResponseEntity<Object> handleAsyncRequestTimeoutException( 			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest webRequest);1495868221;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param webRequest the current request_@return a {@code ResponseEntity} instance_@since 4.2.8;@Nullable_	protected ResponseEntity<Object> handleAsyncRequestTimeoutException(_			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest webRequest) {__		if (webRequest instanceof ServletWebRequest) {_			ServletWebRequest servletRequest = (ServletWebRequest) webRequest__			HttpServletRequest request = servletRequest.getNativeRequest(HttpServletRequest.class)__			HttpServletResponse response = servletRequest.getNativeResponse(HttpServletResponse.class)__			if (response.isCommitted()) {_				if (logger.isErrorEnabled()) {_					logger.error("Async timeout for " + request.getMethod() + " [" + request.getRequestURI() + "]")__				}_				return null__			}_		}__		return handleExceptionInternal(ex, null, headers, status, webRequest)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,web,request,the,current,request,return,a,code,response,entity,instance,since,4,2,8;nullable,protected,response,entity,object,handle,async,request,timeout,exception,async,request,timeout,exception,ex,http,headers,headers,http,status,status,web,request,web,request,if,web,request,instanceof,servlet,web,request,servlet,web,request,servlet,request,servlet,web,request,web,request,http,servlet,request,request,servlet,request,get,native,request,http,servlet,request,class,http,servlet,response,response,servlet,request,get,native,response,http,servlet,response,class,if,response,is,committed,if,logger,is,error,enabled,logger,error,async,timeout,for,request,get,method,request,get,request,uri,return,null,return,handle,exception,internal,ex,null,headers,status,web,request
ResponseEntityExceptionHandler -> @Nullable 	protected ResponseEntity<Object> handleAsyncRequestTimeoutException( 			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest webRequest);1496259743;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param webRequest the current request_@return a {@code ResponseEntity} instance_@since 4.2.8;@Nullable_	protected ResponseEntity<Object> handleAsyncRequestTimeoutException(_			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest webRequest) {__		if (webRequest instanceof ServletWebRequest) {_			ServletWebRequest servletRequest = (ServletWebRequest) webRequest__			HttpServletRequest request = servletRequest.getNativeRequest(HttpServletRequest.class)__			HttpServletResponse response = servletRequest.getNativeResponse(HttpServletResponse.class)__			if (response.isCommitted()) {_				if (logger.isErrorEnabled()) {_					logger.error("Async timeout for " + request.getMethod() + " [" + request.getRequestURI() + "]")__				}_				return null__			}_		}__		return handleExceptionInternal(ex, null, headers, status, webRequest)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,web,request,the,current,request,return,a,code,response,entity,instance,since,4,2,8;nullable,protected,response,entity,object,handle,async,request,timeout,exception,async,request,timeout,exception,ex,http,headers,headers,http,status,status,web,request,web,request,if,web,request,instanceof,servlet,web,request,servlet,web,request,servlet,request,servlet,web,request,web,request,http,servlet,request,request,servlet,request,get,native,request,http,servlet,request,class,http,servlet,response,response,servlet,request,get,native,response,http,servlet,response,class,if,response,is,committed,if,logger,is,error,enabled,logger,error,async,timeout,for,request,get,method,request,get,request,uri,return,null,return,handle,exception,internal,ex,null,headers,status,web,request
ResponseEntityExceptionHandler -> @Nullable 	protected ResponseEntity<Object> handleAsyncRequestTimeoutException( 			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest webRequest);1496837955;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param webRequest the current request_@return a {@code ResponseEntity} instance_@since 4.2.8;@Nullable_	protected ResponseEntity<Object> handleAsyncRequestTimeoutException(_			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest webRequest) {__		if (webRequest instanceof ServletWebRequest) {_			ServletWebRequest servletWebRequest = (ServletWebRequest) webRequest__			HttpServletRequest request = servletWebRequest.getRequest()__			HttpServletResponse response = servletWebRequest.getResponse()__			if (response != null && response.isCommitted()) {_				if (logger.isErrorEnabled()) {_					logger.error("Async timeout for " + request.getMethod() + " [" + request.getRequestURI() + "]")__				}_				return null__			}_		}__		return handleExceptionInternal(ex, null, headers, status, webRequest)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,web,request,the,current,request,return,a,code,response,entity,instance,since,4,2,8;nullable,protected,response,entity,object,handle,async,request,timeout,exception,async,request,timeout,exception,ex,http,headers,headers,http,status,status,web,request,web,request,if,web,request,instanceof,servlet,web,request,servlet,web,request,servlet,web,request,servlet,web,request,web,request,http,servlet,request,request,servlet,web,request,get,request,http,servlet,response,response,servlet,web,request,get,response,if,response,null,response,is,committed,if,logger,is,error,enabled,logger,error,async,timeout,for,request,get,method,request,get,request,uri,return,null,return,handle,exception,internal,ex,null,headers,status,web,request
ResponseEntityExceptionHandler -> @Nullable 	protected ResponseEntity<Object> handleAsyncRequestTimeoutException( 			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest webRequest);1519937579;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param webRequest the current request_@return a {@code ResponseEntity} instance_@since 4.2.8;@Nullable_	protected ResponseEntity<Object> handleAsyncRequestTimeoutException(_			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest webRequest) {__		if (webRequest instanceof ServletWebRequest) {_			ServletWebRequest servletWebRequest = (ServletWebRequest) webRequest__			HttpServletRequest request = servletWebRequest.getRequest()__			HttpServletResponse response = servletWebRequest.getResponse()__			if (response != null && response.isCommitted()) {_				if (logger.isDebugEnabled()) {_					logger.debug("Async timeout for " + request.getMethod() + " [" + request.getRequestURI() + "]")__				}_				return null__			}_		}__		return handleExceptionInternal(ex, null, headers, status, webRequest)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,web,request,the,current,request,return,a,code,response,entity,instance,since,4,2,8;nullable,protected,response,entity,object,handle,async,request,timeout,exception,async,request,timeout,exception,ex,http,headers,headers,http,status,status,web,request,web,request,if,web,request,instanceof,servlet,web,request,servlet,web,request,servlet,web,request,servlet,web,request,web,request,http,servlet,request,request,servlet,web,request,get,request,http,servlet,response,response,servlet,web,request,get,response,if,response,null,response,is,committed,if,logger,is,debug,enabled,logger,debug,async,timeout,for,request,get,method,request,get,request,uri,return,null,return,handle,exception,internal,ex,null,headers,status,web,request
ResponseEntityExceptionHandler -> @Nullable 	protected ResponseEntity<Object> handleAsyncRequestTimeoutException( 			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest webRequest);1525517218;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param webRequest the current request_@return a {@code ResponseEntity} instance_@since 4.2.8;@Nullable_	protected ResponseEntity<Object> handleAsyncRequestTimeoutException(_			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest webRequest) {__		if (webRequest instanceof ServletWebRequest) {_			ServletWebRequest servletWebRequest = (ServletWebRequest) webRequest__			HttpServletRequest request = servletWebRequest.getRequest()__			HttpServletResponse response = servletWebRequest.getResponse()__			if (response != null && response.isCommitted()) {_				if (logger.isDebugEnabled()) {_					logger.debug("Async timeout for " + request.getMethod() + " [" + request.getRequestURI() + "]")__				}_				return null__			}_		}__		return handleExceptionInternal(ex, null, headers, status, webRequest)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,web,request,the,current,request,return,a,code,response,entity,instance,since,4,2,8;nullable,protected,response,entity,object,handle,async,request,timeout,exception,async,request,timeout,exception,ex,http,headers,headers,http,status,status,web,request,web,request,if,web,request,instanceof,servlet,web,request,servlet,web,request,servlet,web,request,servlet,web,request,web,request,http,servlet,request,request,servlet,web,request,get,request,http,servlet,response,response,servlet,web,request,get,response,if,response,null,response,is,committed,if,logger,is,debug,enabled,logger,debug,async,timeout,for,request,get,method,request,get,request,uri,return,null,return,handle,exception,internal,ex,null,headers,status,web,request
ResponseEntityExceptionHandler -> @Nullable 	protected ResponseEntity<Object> handleAsyncRequestTimeoutException( 			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest webRequest);1529361191;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param webRequest the current request_@return a {@code ResponseEntity} instance_@since 4.2.8;@Nullable_	protected ResponseEntity<Object> handleAsyncRequestTimeoutException(_			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest webRequest) {__		if (webRequest instanceof ServletWebRequest) {_			ServletWebRequest servletWebRequest = (ServletWebRequest) webRequest__			HttpServletResponse response = servletWebRequest.getResponse()__			if (response != null && response.isCommitted()) {_				if (logger.isWarnEnabled()) {_					logger.warn("Async request timed out")__				}_				return null__			}_		}__		return handleExceptionInternal(ex, null, headers, status, webRequest)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,web,request,the,current,request,return,a,code,response,entity,instance,since,4,2,8;nullable,protected,response,entity,object,handle,async,request,timeout,exception,async,request,timeout,exception,ex,http,headers,headers,http,status,status,web,request,web,request,if,web,request,instanceof,servlet,web,request,servlet,web,request,servlet,web,request,servlet,web,request,web,request,http,servlet,response,response,servlet,web,request,get,response,if,response,null,response,is,committed,if,logger,is,warn,enabled,logger,warn,async,request,timed,out,return,null,return,handle,exception,internal,ex,null,headers,status,web,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal( 			Exception ex, @Nullable Object body, HttpHeaders headers, HttpStatus status, WebRequest request);1525517218;A single place to customize the response body of all Exception types._<p>The default implementation sets the {@link WebUtils#ERROR_EXCEPTION_ATTRIBUTE}_request attribute and creates a {@link ResponseEntity} from the given_body, headers, and status._@param ex the exception_@param body the body for the response_@param headers the headers for the response_@param status the response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(_			Exception ex, @Nullable Object body, HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute(WebUtils.ERROR_EXCEPTION_ATTRIBUTE, ex, WebRequest.SCOPE_REQUEST)__		}_		return new ResponseEntity<>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,p,the,default,implementation,sets,the,link,web,utils,request,attribute,and,creates,a,link,response,entity,from,the,given,body,headers,and,status,param,ex,the,exception,param,body,the,body,for,the,response,param,headers,the,headers,for,the,response,param,status,the,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,nullable,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,web,utils,ex,web,request,return,new,response,entity,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleExceptionInternal( 			Exception ex, @Nullable Object body, HttpHeaders headers, HttpStatus status, WebRequest request);1529361191;A single place to customize the response body of all Exception types._<p>The default implementation sets the {@link WebUtils#ERROR_EXCEPTION_ATTRIBUTE}_request attribute and creates a {@link ResponseEntity} from the given_body, headers, and status._@param ex the exception_@param body the body for the response_@param headers the headers for the response_@param status the response status_@param request the current request;protected ResponseEntity<Object> handleExceptionInternal(_			Exception ex, @Nullable Object body, HttpHeaders headers, HttpStatus status, WebRequest request) {__		if (HttpStatus.INTERNAL_SERVER_ERROR.equals(status)) {_			request.setAttribute(WebUtils.ERROR_EXCEPTION_ATTRIBUTE, ex, WebRequest.SCOPE_REQUEST)__		}_		return new ResponseEntity<>(body, headers, status)__	};a,single,place,to,customize,the,response,body,of,all,exception,types,p,the,default,implementation,sets,the,link,web,utils,request,attribute,and,creates,a,link,response,entity,from,the,given,body,headers,and,status,param,ex,the,exception,param,body,the,body,for,the,response,param,headers,the,headers,for,the,response,param,status,the,response,status,param,request,the,current,request;protected,response,entity,object,handle,exception,internal,exception,ex,nullable,object,body,http,headers,headers,http,status,status,web,request,request,if,http,status,equals,status,request,set,attribute,web,utils,ex,web,request,return,new,response,entity,body,headers,status
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoHandlerFoundException( 			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1458944925;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.0;protected ResponseEntity<Object> handleNoHandlerFoundException(_			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,0;protected,response,entity,object,handle,no,handler,found,exception,no,handler,found,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoHandlerFoundException( 			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1460021854;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.0;protected ResponseEntity<Object> handleNoHandlerFoundException(_			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,0;protected,response,entity,object,handle,no,handler,found,exception,no,handler,found,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoHandlerFoundException( 			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1467726769;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.0;protected ResponseEntity<Object> handleNoHandlerFoundException(_			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,0;protected,response,entity,object,handle,no,handler,found,exception,no,handler,found,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoHandlerFoundException( 			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1467730834;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.0;protected ResponseEntity<Object> handleNoHandlerFoundException(_			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,0;protected,response,entity,object,handle,no,handler,found,exception,no,handler,found,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoHandlerFoundException( 			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1473903270;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.0;protected ResponseEntity<Object> handleNoHandlerFoundException(_			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,0;protected,response,entity,object,handle,no,handler,found,exception,no,handler,found,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoHandlerFoundException( 			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1473922457;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.0;protected ResponseEntity<Object> handleNoHandlerFoundException(_			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,0;protected,response,entity,object,handle,no,handler,found,exception,no,handler,found,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoHandlerFoundException( 			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1476211212;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.0;protected ResponseEntity<Object> handleNoHandlerFoundException(_			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,0;protected,response,entity,object,handle,no,handler,found,exception,no,handler,found,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoHandlerFoundException( 			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1477665930;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.0;protected ResponseEntity<Object> handleNoHandlerFoundException(_			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,0;protected,response,entity,object,handle,no,handler,found,exception,no,handler,found,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoHandlerFoundException( 			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1486062666;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.0;protected ResponseEntity<Object> handleNoHandlerFoundException(_			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,0;protected,response,entity,object,handle,no,handler,found,exception,no,handler,found,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoHandlerFoundException( 			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1490350007;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.0;protected ResponseEntity<Object> handleNoHandlerFoundException(_			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,0;protected,response,entity,object,handle,no,handler,found,exception,no,handler,found,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoHandlerFoundException( 			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1495868221;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.0;protected ResponseEntity<Object> handleNoHandlerFoundException(_			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,0;protected,response,entity,object,handle,no,handler,found,exception,no,handler,found,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoHandlerFoundException( 			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1496259743;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.0;protected ResponseEntity<Object> handleNoHandlerFoundException(_			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,0;protected,response,entity,object,handle,no,handler,found,exception,no,handler,found,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoHandlerFoundException( 			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1496837955;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.0;protected ResponseEntity<Object> handleNoHandlerFoundException(_			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,0;protected,response,entity,object,handle,no,handler,found,exception,no,handler,found,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoHandlerFoundException( 			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1519937579;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.0;protected ResponseEntity<Object> handleNoHandlerFoundException(_			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,0;protected,response,entity,object,handle,no,handler,found,exception,no,handler,found,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoHandlerFoundException( 			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1525517218;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.0;protected ResponseEntity<Object> handleNoHandlerFoundException(_			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,0;protected,response,entity,object,handle,no,handler,found,exception,no,handler,found,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleNoHandlerFoundException( 			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1529361191;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.0;protected ResponseEntity<Object> handleNoHandlerFoundException(_			NoHandlerFoundException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,0;protected,response,entity,object,handle,no,handler,found,exception,no,handler,found,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1346090766;Customize the response for MissingServletRequestPartException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1347316003;Customize the response for MissingServletRequestPartException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1380132768;Customize the response for MissingServletRequestPartException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1413848647;Customize the response for MissingServletRequestPartException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1434398959;Customize the response for MissingServletRequestPartException._This method delegates to {@link #handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,this,method,delegates,to,link,handle,exception,internal,exception,object,http,headers,http,status,web,request,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1444145445;Customize the response for MissingServletRequestPartException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452799530;Customize the response for MissingServletRequestPartException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1452851471;Customize the response for MissingServletRequestPartException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1458944925;Customize the response for MissingServletRequestPartException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1460021854;Customize the response for MissingServletRequestPartException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467726769;Customize the response for MissingServletRequestPartException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1467730834;Customize the response for MissingServletRequestPartException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473903270;Customize the response for MissingServletRequestPartException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1473922457;Customize the response for MissingServletRequestPartException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1476211212;Customize the response for MissingServletRequestPartException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1477665930;Customize the response for MissingServletRequestPartException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1486062666;Customize the response for MissingServletRequestPartException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1490350007;Customize the response for MissingServletRequestPartException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1495868221;Customize the response for MissingServletRequestPartException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496259743;Customize the response for MissingServletRequestPartException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1496837955;Customize the response for MissingServletRequestPartException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex, 			HttpHeaders headers, HttpStatus status, WebRequest request);1519937579;Customize the response for MissingServletRequestPartException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance;protected ResponseEntity<Object> handleMissingServletRequestPart(MissingServletRequestPartException ex,_			HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,missing,servlet,request,part,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance;protected,response,entity,object,handle,missing,servlet,request,part,missing,servlet,request,part,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleAsyncRequestTimeoutException( 			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1473903270;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2.8;protected ResponseEntity<Object> handleAsyncRequestTimeoutException(_			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2,8;protected,response,entity,object,handle,async,request,timeout,exception,async,request,timeout,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleAsyncRequestTimeoutException( 			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1473922457;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2.8;protected ResponseEntity<Object> handleAsyncRequestTimeoutException(_			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2,8;protected,response,entity,object,handle,async,request,timeout,exception,async,request,timeout,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
ResponseEntityExceptionHandler -> protected ResponseEntity<Object> handleAsyncRequestTimeoutException( 			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest request);1476211212;Customize the response for NoHandlerFoundException._<p>This method delegates to {@link #handleExceptionInternal}._@param ex the exception_@param headers the headers to be written to the response_@param status the selected response status_@param request the current request_@return a {@code ResponseEntity} instance_@since 4.2.8;protected ResponseEntity<Object> handleAsyncRequestTimeoutException(_			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {__		return handleExceptionInternal(ex, null, headers, status, request)__	};customize,the,response,for,no,handler,found,exception,p,this,method,delegates,to,link,handle,exception,internal,param,ex,the,exception,param,headers,the,headers,to,be,written,to,the,response,param,status,the,selected,response,status,param,request,the,current,request,return,a,code,response,entity,instance,since,4,2,8;protected,response,entity,object,handle,async,request,timeout,exception,async,request,timeout,exception,ex,http,headers,headers,http,status,status,web,request,request,return,handle,exception,internal,ex,null,headers,status,request
