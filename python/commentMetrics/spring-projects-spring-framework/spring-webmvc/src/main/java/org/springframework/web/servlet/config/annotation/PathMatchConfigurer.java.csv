# id;timestamp;commentText;codeText;commentWords;codeWords
PathMatchConfigurer -> public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper);1393599001;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper) {_		this.urlPathHelper = urlPathHelper__		return this__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,path,match,configurer,set,url,path,helper,url,path,helper,url,path,helper,this,url,path,helper,url,path,helper,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper);1394572186;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper) {_		this.urlPathHelper = urlPathHelper__		return this__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,path,match,configurer,set,url,path,helper,url,path,helper,url,path,helper,this,url,path,helper,url,path,helper,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper);1402499224;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper) {_		this.urlPathHelper = urlPathHelper__		return this__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,path,match,configurer,set,url,path,helper,url,path,helper,url,path,helper,this,url,path,helper,url,path,helper,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper);1414619099;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper) {_		this.urlPathHelper = urlPathHelper__		return this__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,path,match,configurer,set,url,path,helper,url,path,helper,url,path,helper,this,url,path,helper,url,path,helper,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper);1443636308;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper) {_		this.urlPathHelper = urlPathHelper__		return this__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,path,match,configurer,set,url,path,helper,url,path,helper,url,path,helper,this,url,path,helper,url,path,helper,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper);1496334618;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper) {_		this.urlPathHelper = urlPathHelper__		return this__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,path,match,configurer,set,url,path,helper,url,path,helper,url,path,helper,this,url,path,helper,url,path,helper,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper);1496837955;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper) {_		this.urlPathHelper = urlPathHelper__		return this__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,path,match,configurer,set,url,path,helper,url,path,helper,url,path,helper,this,url,path,helper,url,path,helper,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper);1500495740;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper) {_		this.urlPathHelper = urlPathHelper__		return this__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,path,match,configurer,set,url,path,helper,url,path,helper,url,path,helper,this,url,path,helper,url,path,helper,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper);1501587321;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper) {_		this.urlPathHelper = urlPathHelper__		return this__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,path,match,configurer,set,url,path,helper,url,path,helper,url,path,helper,this,url,path,helper,url,path,helper,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper);1506534768;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper) {_		this.urlPathHelper = urlPathHelper__		return this__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,path,match,configurer,set,url,path,helper,url,path,helper,url,path,helper,this,url,path,helper,url,path,helper,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper);1528409922;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper) {_		this.urlPathHelper = urlPathHelper__		return this__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,path,match,configurer,set,url,path,helper,url,path,helper,url,path,helper,this,url,path,helper,url,path,helper,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper);1528486327;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper) {_		this.urlPathHelper = urlPathHelper__		return this__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,path,match,configurer,set,url,path,helper,url,path,helper,url,path,helper,this,url,path,helper,url,path,helper,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper);1530190293;Set the UrlPathHelper to use for resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple HandlerMappings_and MethodNameResolvers.;public PathMatchConfigurer setUrlPathHelper(UrlPathHelper urlPathHelper) {_		this.urlPathHelper = urlPathHelper__		return this__	};set,the,url,path,helper,to,use,for,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,handler,mappings,and,method,name,resolvers;public,path,match,configurer,set,url,path,helper,url,path,helper,url,path,helper,this,url,path,helper,url,path,helper,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch);1443636308;Whether to use suffix pattern match (".*") when matching patterns to_requests. If enabled a method mapped to "/users" also matches to "/users.*"._<p>By default this is set to {@code true}._@see #registeredSuffixPatternMatch;public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch) {_		this.suffixPatternMatch = suffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,when,matching,patterns,to,requests,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,by,default,this,is,set,to,code,true,see,registered,suffix,pattern,match;public,path,match,configurer,set,use,suffix,pattern,match,boolean,suffix,pattern,match,this,suffix,pattern,match,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch);1496334618;Whether to use suffix pattern match (".*") when matching patterns to_requests. If enabled a method mapped to "/users" also matches to "/users.*"._<p>By default this is set to {@code true}._@see #registeredSuffixPatternMatch;public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch) {_		this.suffixPatternMatch = suffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,when,matching,patterns,to,requests,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,by,default,this,is,set,to,code,true,see,registered,suffix,pattern,match;public,path,match,configurer,set,use,suffix,pattern,match,boolean,suffix,pattern,match,this,suffix,pattern,match,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch);1496837955;Whether to use suffix pattern match (".*") when matching patterns to_requests. If enabled a method mapped to "/users" also matches to "/users.*"._<p>By default this is set to {@code true}._@see #registeredSuffixPatternMatch;public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch) {_		this.suffixPatternMatch = suffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,when,matching,patterns,to,requests,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,by,default,this,is,set,to,code,true,see,registered,suffix,pattern,match;public,path,match,configurer,set,use,suffix,pattern,match,boolean,suffix,pattern,match,this,suffix,pattern,match,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch);1500495740;Whether to use suffix pattern match (".*") when matching patterns to_requests. If enabled a method mapped to "/users" also matches to "/users.*"._<p>By default this is set to {@code true}._@see #registeredSuffixPatternMatch;public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch) {_		this.suffixPatternMatch = suffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,when,matching,patterns,to,requests,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,by,default,this,is,set,to,code,true,see,registered,suffix,pattern,match;public,path,match,configurer,set,use,suffix,pattern,match,boolean,suffix,pattern,match,this,suffix,pattern,match,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch);1501587321;Whether to use suffix pattern match (".*") when matching patterns to_requests. If enabled a method mapped to "/users" also matches to "/users.*"._<p>By default this is set to {@code true}._@see #registeredSuffixPatternMatch;public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch) {_		this.suffixPatternMatch = suffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,when,matching,patterns,to,requests,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,by,default,this,is,set,to,code,true,see,registered,suffix,pattern,match;public,path,match,configurer,set,use,suffix,pattern,match,boolean,suffix,pattern,match,this,suffix,pattern,match,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch);1506534768;Whether to use suffix pattern match (".*") when matching patterns to_requests. If enabled a method mapped to "/users" also matches to "/users.*"._<p>By default this is set to {@code true}._@see #registeredSuffixPatternMatch;public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch) {_		this.suffixPatternMatch = suffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,when,matching,patterns,to,requests,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,by,default,this,is,set,to,code,true,see,registered,suffix,pattern,match;public,path,match,configurer,set,use,suffix,pattern,match,boolean,suffix,pattern,match,this,suffix,pattern,match,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch);1528409922;Whether to use suffix pattern match (".*") when matching patterns to_requests. If enabled a method mapped to "/users" also matches to "/users.*"._<p>By default this is set to {@code true}._@see #registeredSuffixPatternMatch;public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch) {_		this.suffixPatternMatch = suffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,when,matching,patterns,to,requests,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,by,default,this,is,set,to,code,true,see,registered,suffix,pattern,match;public,path,match,configurer,set,use,suffix,pattern,match,boolean,suffix,pattern,match,this,suffix,pattern,match,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch);1528486327;Whether to use suffix pattern match (".*") when matching patterns to_requests. If enabled a method mapped to "/users" also matches to "/users.*"._<p>By default this is set to {@code true}._@see #registeredSuffixPatternMatch;public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch) {_		this.suffixPatternMatch = suffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,when,matching,patterns,to,requests,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,by,default,this,is,set,to,code,true,see,registered,suffix,pattern,match;public,path,match,configurer,set,use,suffix,pattern,match,boolean,suffix,pattern,match,this,suffix,pattern,match,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch);1530190293;Whether to use suffix pattern match (".*") when matching patterns to_requests. If enabled a method mapped to "/users" also matches to "/users.*"._<p>By default this is set to {@code true}._@see #registeredSuffixPatternMatch;public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch) {_		this.suffixPatternMatch = suffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,when,matching,patterns,to,requests,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,by,default,this,is,set,to,code,true,see,registered,suffix,pattern,match;public,path,match,configurer,set,use,suffix,pattern,match,boolean,suffix,pattern,match,this,suffix,pattern,match,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch);1506534768;Whether suffix pattern matching should work only against path extensions_explicitly registered when you_{@link WebMvcConfigurer#configureContentNegotiation configure content_negotiation}. This is generally recommended to reduce ambiguity and to_avoid issues such as when a "." appears in the path for other reasons._<p>By default this is set to "false"._@see WebMvcConfigurer#configureContentNegotiation;public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch) {_		this.registeredSuffixPatternMatch = registeredSuffixPatternMatch__		return this__	};whether,suffix,pattern,matching,should,work,only,against,path,extensions,explicitly,registered,when,you,link,web,mvc,configurer,configure,content,negotiation,configure,content,negotiation,this,is,generally,recommended,to,reduce,ambiguity,and,to,avoid,issues,such,as,when,a,appears,in,the,path,for,other,reasons,p,by,default,this,is,set,to,false,see,web,mvc,configurer,configure,content,negotiation;public,path,match,configurer,set,use,registered,suffix,pattern,match,boolean,registered,suffix,pattern,match,this,registered,suffix,pattern,match,registered,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch);1528409922;Whether suffix pattern matching should work only against path extensions_explicitly registered when you_{@link WebMvcConfigurer#configureContentNegotiation configure content_negotiation}. This is generally recommended to reduce ambiguity and to_avoid issues such as when a "." appears in the path for other reasons._<p>By default this is set to "false"._@see WebMvcConfigurer#configureContentNegotiation;public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch) {_		this.registeredSuffixPatternMatch = registeredSuffixPatternMatch__		return this__	};whether,suffix,pattern,matching,should,work,only,against,path,extensions,explicitly,registered,when,you,link,web,mvc,configurer,configure,content,negotiation,configure,content,negotiation,this,is,generally,recommended,to,reduce,ambiguity,and,to,avoid,issues,such,as,when,a,appears,in,the,path,for,other,reasons,p,by,default,this,is,set,to,false,see,web,mvc,configurer,configure,content,negotiation;public,path,match,configurer,set,use,registered,suffix,pattern,match,boolean,registered,suffix,pattern,match,this,registered,suffix,pattern,match,registered,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch);1528486327;Whether suffix pattern matching should work only against path extensions_explicitly registered when you_{@link WebMvcConfigurer#configureContentNegotiation configure content_negotiation}. This is generally recommended to reduce ambiguity and to_avoid issues such as when a "." appears in the path for other reasons._<p>By default this is set to "false"._@see WebMvcConfigurer#configureContentNegotiation;public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch) {_		this.registeredSuffixPatternMatch = registeredSuffixPatternMatch__		return this__	};whether,suffix,pattern,matching,should,work,only,against,path,extensions,explicitly,registered,when,you,link,web,mvc,configurer,configure,content,negotiation,configure,content,negotiation,this,is,generally,recommended,to,reduce,ambiguity,and,to,avoid,issues,such,as,when,a,appears,in,the,path,for,other,reasons,p,by,default,this,is,set,to,false,see,web,mvc,configurer,configure,content,negotiation;public,path,match,configurer,set,use,registered,suffix,pattern,match,boolean,registered,suffix,pattern,match,this,registered,suffix,pattern,match,registered,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch);1530190293;Whether suffix pattern matching should work only against path extensions_explicitly registered when you_{@link WebMvcConfigurer#configureContentNegotiation configure content_negotiation}. This is generally recommended to reduce ambiguity and to_avoid issues such as when a "." appears in the path for other reasons._<p>By default this is set to "false"._@see WebMvcConfigurer#configureContentNegotiation;public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch) {_		this.registeredSuffixPatternMatch = registeredSuffixPatternMatch__		return this__	};whether,suffix,pattern,matching,should,work,only,against,path,extensions,explicitly,registered,when,you,link,web,mvc,configurer,configure,content,negotiation,configure,content,negotiation,this,is,generally,recommended,to,reduce,ambiguity,and,to,avoid,issues,such,as,when,a,appears,in,the,path,for,other,reasons,p,by,default,this,is,set,to,false,see,web,mvc,configurer,configure,content,negotiation;public,path,match,configurer,set,use,registered,suffix,pattern,match,boolean,registered,suffix,pattern,match,this,registered,suffix,pattern,match,registered,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1443636308;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1496334618;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1496837955;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1500495740;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1501587321;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1506534768;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1528409922;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1528486327;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1530190293;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer addPathPrefix(String prefix, Predicate<Class<?>> predicate);1528486327;Configure a path prefix to apply to matching controller methods._<p>Prefixes are used to enrich the mappings of every {@code @RequestMapping}_method whose controller type is matched by the corresponding_{@code Predicate}. The prefix for the first matching predicate is used._<p>Consider using {@link org.springframework.web.method.HandlerTypePredicate_HandlerTypePredicate} to group controllers._@param prefix the prefix to apply_@param predicate a predicate for matching controller types_@since 5.1;public PathMatchConfigurer addPathPrefix(String prefix, Predicate<Class<?>> predicate) {_		this.pathPrefixes = this.pathPrefixes == null ? new LinkedHashMap<>() : this.pathPrefixes__		this.pathPrefixes.put(prefix, predicate)__		return this__	};configure,a,path,prefix,to,apply,to,matching,controller,methods,p,prefixes,are,used,to,enrich,the,mappings,of,every,code,request,mapping,method,whose,controller,type,is,matched,by,the,corresponding,code,predicate,the,prefix,for,the,first,matching,predicate,is,used,p,consider,using,link,org,springframework,web,method,handler,type,predicate,handler,type,predicate,to,group,controllers,param,prefix,the,prefix,to,apply,param,predicate,a,predicate,for,matching,controller,types,since,5,1;public,path,match,configurer,add,path,prefix,string,prefix,predicate,class,predicate,this,path,prefixes,this,path,prefixes,null,new,linked,hash,map,this,path,prefixes,this,path,prefixes,put,prefix,predicate,return,this
PathMatchConfigurer -> public PathMatchConfigurer addPathPrefix(String prefix, Predicate<Class<?>> predicate);1530190293;Configure a path prefix to apply to matching controller methods._<p>Prefixes are used to enrich the mappings of every {@code @RequestMapping}_method whose controller type is matched by the corresponding_{@code Predicate}. The prefix for the first matching predicate is used._<p>Consider using {@link org.springframework.web.method.HandlerTypePredicate_HandlerTypePredicate} to group controllers._@param prefix the prefix to apply_@param predicate a predicate for matching controller types_@since 5.1;public PathMatchConfigurer addPathPrefix(String prefix, Predicate<Class<?>> predicate) {_		if (this.pathPrefixes == null) {_			this.pathPrefixes = new LinkedHashMap<>()__		}_		this.pathPrefixes.put(prefix, predicate)__		return this__	};configure,a,path,prefix,to,apply,to,matching,controller,methods,p,prefixes,are,used,to,enrich,the,mappings,of,every,code,request,mapping,method,whose,controller,type,is,matched,by,the,corresponding,code,predicate,the,prefix,for,the,first,matching,predicate,is,used,p,consider,using,link,org,springframework,web,method,handler,type,predicate,handler,type,predicate,to,group,controllers,param,prefix,the,prefix,to,apply,param,predicate,a,predicate,for,matching,controller,types,since,5,1;public,path,match,configurer,add,path,prefix,string,prefix,predicate,class,predicate,if,this,path,prefixes,null,this,path,prefixes,new,linked,hash,map,this,path,prefixes,put,prefix,predicate,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean useTrailingSlashMatch);1393599001;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean useTrailingSlashMatch) {_		this.useTrailingSlashMatch = useTrailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,use,trailing,slash,match,this,use,trailing,slash,match,use,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean useTrailingSlashMatch);1394572186;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean useTrailingSlashMatch) {_		this.useTrailingSlashMatch = useTrailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,use,trailing,slash,match,this,use,trailing,slash,match,use,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean useTrailingSlashMatch);1402499224;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean useTrailingSlashMatch) {_		this.useTrailingSlashMatch = useTrailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,use,trailing,slash,match,this,use,trailing,slash,match,use,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean useTrailingSlashMatch);1414619099;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean useTrailingSlashMatch) {_		this.useTrailingSlashMatch = useTrailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,use,trailing,slash,match,this,use,trailing,slash,match,use,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher);1393599001;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,path,match,configurer,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher);1394572186;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,path,match,configurer,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher);1402499224;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,path,match,configurer,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher);1414619099;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,path,match,configurer,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher);1443636308;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,path,match,configurer,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher);1496334618;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,path,match,configurer,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher);1496837955;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,path,match,configurer,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher);1500495740;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,path,match,configurer,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher);1501587321;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,path,match,configurer,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher);1506534768;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,path,match,configurer,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher);1528409922;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,path,match,configurer,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher);1528486327;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,path,match,configurer,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher);1530190293;Set the PathMatcher implementation to use for matching URL paths_against registered URL patterns. Default is AntPathMatcher._@see org.springframework.util.AntPathMatcher;public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};set,the,path,matcher,implementation,to,use,for,matching,url,paths,against,registered,url,patterns,default,is,ant,path,matcher,see,org,springframework,util,ant,path,matcher;public,path,match,configurer,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseRegisteredSuffixPatternMatch( 			Boolean registeredSuffixPatternMatch);1443636308;Whether suffix pattern matching should work only against path extensions_explicitly registered when you_{@link WebMvcConfigurer#configureContentNegotiation configure content_negotiation}. This is generally recommended to reduce ambiguity and to_avoid issues such as when a "." appears in the path for other reasons._<p>By default this is set to "false"._@see WebMvcConfigurer#configureContentNegotiation;public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(_			Boolean registeredSuffixPatternMatch) {__		this.registeredSuffixPatternMatch = registeredSuffixPatternMatch__		return this__	};whether,suffix,pattern,matching,should,work,only,against,path,extensions,explicitly,registered,when,you,link,web,mvc,configurer,configure,content,negotiation,configure,content,negotiation,this,is,generally,recommended,to,reduce,ambiguity,and,to,avoid,issues,such,as,when,a,appears,in,the,path,for,other,reasons,p,by,default,this,is,set,to,false,see,web,mvc,configurer,configure,content,negotiation;public,path,match,configurer,set,use,registered,suffix,pattern,match,boolean,registered,suffix,pattern,match,this,registered,suffix,pattern,match,registered,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseRegisteredSuffixPatternMatch( 			Boolean registeredSuffixPatternMatch);1496334618;Whether suffix pattern matching should work only against path extensions_explicitly registered when you_{@link WebMvcConfigurer#configureContentNegotiation configure content_negotiation}. This is generally recommended to reduce ambiguity and to_avoid issues such as when a "." appears in the path for other reasons._<p>By default this is set to "false"._@see WebMvcConfigurer#configureContentNegotiation;public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(_			Boolean registeredSuffixPatternMatch) {__		this.registeredSuffixPatternMatch = registeredSuffixPatternMatch__		return this__	};whether,suffix,pattern,matching,should,work,only,against,path,extensions,explicitly,registered,when,you,link,web,mvc,configurer,configure,content,negotiation,configure,content,negotiation,this,is,generally,recommended,to,reduce,ambiguity,and,to,avoid,issues,such,as,when,a,appears,in,the,path,for,other,reasons,p,by,default,this,is,set,to,false,see,web,mvc,configurer,configure,content,negotiation;public,path,match,configurer,set,use,registered,suffix,pattern,match,boolean,registered,suffix,pattern,match,this,registered,suffix,pattern,match,registered,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseRegisteredSuffixPatternMatch( 			Boolean registeredSuffixPatternMatch);1496837955;Whether suffix pattern matching should work only against path extensions_explicitly registered when you_{@link WebMvcConfigurer#configureContentNegotiation configure content_negotiation}. This is generally recommended to reduce ambiguity and to_avoid issues such as when a "." appears in the path for other reasons._<p>By default this is set to "false"._@see WebMvcConfigurer#configureContentNegotiation;public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(_			Boolean registeredSuffixPatternMatch) {__		this.registeredSuffixPatternMatch = registeredSuffixPatternMatch__		return this__	};whether,suffix,pattern,matching,should,work,only,against,path,extensions,explicitly,registered,when,you,link,web,mvc,configurer,configure,content,negotiation,configure,content,negotiation,this,is,generally,recommended,to,reduce,ambiguity,and,to,avoid,issues,such,as,when,a,appears,in,the,path,for,other,reasons,p,by,default,this,is,set,to,false,see,web,mvc,configurer,configure,content,negotiation;public,path,match,configurer,set,use,registered,suffix,pattern,match,boolean,registered,suffix,pattern,match,this,registered,suffix,pattern,match,registered,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseRegisteredSuffixPatternMatch( 			Boolean registeredSuffixPatternMatch);1500495740;Whether suffix pattern matching should work only against path extensions_explicitly registered when you_{@link WebMvcConfigurer#configureContentNegotiation configure content_negotiation}. This is generally recommended to reduce ambiguity and to_avoid issues such as when a "." appears in the path for other reasons._<p>By default this is set to "false"._@see WebMvcConfigurer#configureContentNegotiation;public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(_			Boolean registeredSuffixPatternMatch) {__		this.registeredSuffixPatternMatch = registeredSuffixPatternMatch__		return this__	};whether,suffix,pattern,matching,should,work,only,against,path,extensions,explicitly,registered,when,you,link,web,mvc,configurer,configure,content,negotiation,configure,content,negotiation,this,is,generally,recommended,to,reduce,ambiguity,and,to,avoid,issues,such,as,when,a,appears,in,the,path,for,other,reasons,p,by,default,this,is,set,to,false,see,web,mvc,configurer,configure,content,negotiation;public,path,match,configurer,set,use,registered,suffix,pattern,match,boolean,registered,suffix,pattern,match,this,registered,suffix,pattern,match,registered,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseRegisteredSuffixPatternMatch( 			Boolean registeredSuffixPatternMatch);1501587321;Whether suffix pattern matching should work only against path extensions_explicitly registered when you_{@link WebMvcConfigurer#configureContentNegotiation configure content_negotiation}. This is generally recommended to reduce ambiguity and to_avoid issues such as when a "." appears in the path for other reasons._<p>By default this is set to "false"._@see WebMvcConfigurer#configureContentNegotiation;public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(_			Boolean registeredSuffixPatternMatch) {__		this.registeredSuffixPatternMatch = registeredSuffixPatternMatch__		return this__	};whether,suffix,pattern,matching,should,work,only,against,path,extensions,explicitly,registered,when,you,link,web,mvc,configurer,configure,content,negotiation,configure,content,negotiation,this,is,generally,recommended,to,reduce,ambiguity,and,to,avoid,issues,such,as,when,a,appears,in,the,path,for,other,reasons,p,by,default,this,is,set,to,false,see,web,mvc,configurer,configure,content,negotiation;public,path,match,configurer,set,use,registered,suffix,pattern,match,boolean,registered,suffix,pattern,match,this,registered,suffix,pattern,match,registered,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseSuffixPatternMatch(Boolean useSuffixPatternMatch);1393599001;Whether to use suffix pattern match (".*") when matching patterns to_requests. If enabled a method mapped to "/users" also matches to "/users.*"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseSuffixPatternMatch(Boolean useSuffixPatternMatch) {_		this.useSuffixPatternMatch = useSuffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,when,matching,patterns,to,requests,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,suffix,pattern,match,boolean,use,suffix,pattern,match,this,use,suffix,pattern,match,use,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseSuffixPatternMatch(Boolean useSuffixPatternMatch);1394572186;Whether to use suffix pattern match (".*") when matching patterns to_requests. If enabled a method mapped to "/users" also matches to "/users.*"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseSuffixPatternMatch(Boolean useSuffixPatternMatch) {_		this.useSuffixPatternMatch = useSuffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,when,matching,patterns,to,requests,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,suffix,pattern,match,boolean,use,suffix,pattern,match,this,use,suffix,pattern,match,use,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseSuffixPatternMatch(Boolean useSuffixPatternMatch);1402499224;Whether to use suffix pattern match (".*") when matching patterns to_requests. If enabled a method mapped to "/users" also matches to "/users.*"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseSuffixPatternMatch(Boolean useSuffixPatternMatch) {_		this.useSuffixPatternMatch = useSuffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,when,matching,patterns,to,requests,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,suffix,pattern,match,boolean,use,suffix,pattern,match,this,use,suffix,pattern,match,use,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseSuffixPatternMatch(Boolean useSuffixPatternMatch);1414619099;Whether to use suffix pattern match (".*") when matching patterns to_requests. If enabled a method mapped to "/users" also matches to "/users.*"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseSuffixPatternMatch(Boolean useSuffixPatternMatch) {_		this.useSuffixPatternMatch = useSuffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,when,matching,patterns,to,requests,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,suffix,pattern,match,boolean,use,suffix,pattern,match,this,use,suffix,pattern,match,use,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean useRegisteredSuffixPatternMatch);1393599001;Whether to use suffix pattern match for registered file extensions only_when matching patterns to requests._<p>If enabled, a controller method mapped to "/users" also matches to_"/users.json" assuming ".json" is a file extension registered with the_provided {@link org.springframework.web.accept.ContentNegotiationManager}.</p>_<p>The {@link org.springframework.web.accept.ContentNegotiationManager} can be customized_using a {@link ContentNegotiationConfigurer}.</p>_<p>If enabled, this flag also enables_{@link #setUseSuffixPatternMatch(Boolean) useSuffixPatternMatch}. The_default value is {@code false}.</p>_@see org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping_@see ContentNegotiationConfigurer;public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean useRegisteredSuffixPatternMatch) {_		this.useRegisteredSuffixPatternMatch = useRegisteredSuffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,for,registered,file,extensions,only,when,matching,patterns,to,requests,p,if,enabled,a,controller,method,mapped,to,users,also,matches,to,users,json,assuming,json,is,a,file,extension,registered,with,the,provided,link,org,springframework,web,accept,content,negotiation,manager,p,p,the,link,org,springframework,web,accept,content,negotiation,manager,can,be,customized,using,a,link,content,negotiation,configurer,p,p,if,enabled,this,flag,also,enables,link,set,use,suffix,pattern,match,boolean,use,suffix,pattern,match,the,default,value,is,code,false,p,see,org,springframework,web,servlet,mvc,method,annotation,request,mapping,handler,mapping,see,content,negotiation,configurer;public,path,match,configurer,set,use,registered,suffix,pattern,match,boolean,use,registered,suffix,pattern,match,this,use,registered,suffix,pattern,match,use,registered,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean useRegisteredSuffixPatternMatch);1394572186;Whether to use suffix pattern match for registered file extensions only_when matching patterns to requests._<p>If enabled, a controller method mapped to "/users" also matches to_"/users.json" assuming ".json" is a file extension registered with the_provided {@link org.springframework.web.accept.ContentNegotiationManager}.</p>_<p>The {@link org.springframework.web.accept.ContentNegotiationManager} can be customized_using a {@link ContentNegotiationConfigurer}.</p>_<p>If enabled, this flag also enables_{@link #setUseSuffixPatternMatch(Boolean) useSuffixPatternMatch}. The_default value is {@code false}.</p>_@see org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping_@see ContentNegotiationConfigurer;public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean useRegisteredSuffixPatternMatch) {_		this.useRegisteredSuffixPatternMatch = useRegisteredSuffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,for,registered,file,extensions,only,when,matching,patterns,to,requests,p,if,enabled,a,controller,method,mapped,to,users,also,matches,to,users,json,assuming,json,is,a,file,extension,registered,with,the,provided,link,org,springframework,web,accept,content,negotiation,manager,p,p,the,link,org,springframework,web,accept,content,negotiation,manager,can,be,customized,using,a,link,content,negotiation,configurer,p,p,if,enabled,this,flag,also,enables,link,set,use,suffix,pattern,match,boolean,use,suffix,pattern,match,the,default,value,is,code,false,p,see,org,springframework,web,servlet,mvc,method,annotation,request,mapping,handler,mapping,see,content,negotiation,configurer;public,path,match,configurer,set,use,registered,suffix,pattern,match,boolean,use,registered,suffix,pattern,match,this,use,registered,suffix,pattern,match,use,registered,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean useRegisteredSuffixPatternMatch);1402499224;Whether to use suffix pattern match for registered file extensions only_when matching patterns to requests._<p>If enabled, a controller method mapped to "/users" also matches to_"/users.json" assuming ".json" is a file extension registered with the_provided {@link org.springframework.web.accept.ContentNegotiationManager}.</p>_<p>The {@link org.springframework.web.accept.ContentNegotiationManager} can be customized_using a {@link ContentNegotiationConfigurer}.</p>_<p>If enabled, this flag also enables_{@link #setUseSuffixPatternMatch(Boolean) useSuffixPatternMatch}. The_default value is {@code false}.</p>_@see org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping_@see ContentNegotiationConfigurer;public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean useRegisteredSuffixPatternMatch) {_		this.useRegisteredSuffixPatternMatch = useRegisteredSuffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,for,registered,file,extensions,only,when,matching,patterns,to,requests,p,if,enabled,a,controller,method,mapped,to,users,also,matches,to,users,json,assuming,json,is,a,file,extension,registered,with,the,provided,link,org,springframework,web,accept,content,negotiation,manager,p,p,the,link,org,springframework,web,accept,content,negotiation,manager,can,be,customized,using,a,link,content,negotiation,configurer,p,p,if,enabled,this,flag,also,enables,link,set,use,suffix,pattern,match,boolean,use,suffix,pattern,match,the,default,value,is,code,false,p,see,org,springframework,web,servlet,mvc,method,annotation,request,mapping,handler,mapping,see,content,negotiation,configurer;public,path,match,configurer,set,use,registered,suffix,pattern,match,boolean,use,registered,suffix,pattern,match,this,use,registered,suffix,pattern,match,use,registered,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean useRegisteredSuffixPatternMatch);1414619099;Whether to use suffix pattern match for registered file extensions only_when matching patterns to requests._<p>If enabled, a controller method mapped to "/users" also matches to_"/users.json" assuming ".json" is a file extension registered with the_provided {@link org.springframework.web.accept.ContentNegotiationManager}.</p>_<p>The {@link org.springframework.web.accept.ContentNegotiationManager} can be customized_using a {@link ContentNegotiationConfigurer}.</p>_<p>If enabled, this flag also enables_{@link #setUseSuffixPatternMatch(Boolean) useSuffixPatternMatch}. The_default value is {@code false}.</p>_@see org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping_@see ContentNegotiationConfigurer;public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean useRegisteredSuffixPatternMatch) {_		this.useRegisteredSuffixPatternMatch = useRegisteredSuffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,for,registered,file,extensions,only,when,matching,patterns,to,requests,p,if,enabled,a,controller,method,mapped,to,users,also,matches,to,users,json,assuming,json,is,a,file,extension,registered,with,the,provided,link,org,springframework,web,accept,content,negotiation,manager,p,p,the,link,org,springframework,web,accept,content,negotiation,manager,can,be,customized,using,a,link,content,negotiation,configurer,p,p,if,enabled,this,flag,also,enables,link,set,use,suffix,pattern,match,boolean,use,suffix,pattern,match,the,default,value,is,code,false,p,see,org,springframework,web,servlet,mvc,method,annotation,request,mapping,handler,mapping,see,content,negotiation,configurer;public,path,match,configurer,set,use,registered,suffix,pattern,match,boolean,use,registered,suffix,pattern,match,this,use,registered,suffix,pattern,match,use,registered,suffix,pattern,match,return,this
