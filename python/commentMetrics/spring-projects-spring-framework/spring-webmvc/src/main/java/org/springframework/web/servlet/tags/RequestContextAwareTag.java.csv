commented;modifiers;parameterAmount;loc;comment;code
true;public,final;0;19;/**  * Create and expose the current RequestContext.  * Delegates to {@link #doStartTagInternal()} for actual work.  * @see #REQUEST_CONTEXT_PAGE_ATTRIBUTE  * @see org.springframework.web.servlet.support.JspAwareRequestContext  */ ;/**  * Create and expose the current RequestContext.  * Delegates to {@link #doStartTagInternal()} for actual work.  * @see #REQUEST_CONTEXT_PAGE_ATTRIBUTE  * @see org.springframework.web.servlet.support.JspAwareRequestContext  */ @Override public final int doStartTag() throws JspException {     try {         this.requestContext = (RequestContext) this.pageContext.getAttribute(REQUEST_CONTEXT_PAGE_ATTRIBUTE).         if (this.requestContext == null) {             this.requestContext = new JspAwareRequestContext(this.pageContext).             this.pageContext.setAttribute(REQUEST_CONTEXT_PAGE_ATTRIBUTE, this.requestContext).         }         return doStartTagInternal().     } catch (JspException | RuntimeException ex) {         logger.error(ex.getMessage(), ex).         throw ex.     } catch (Exception ex) {         logger.error(ex.getMessage(), ex).         throw new JspTagException(ex.getMessage()).     } }
true;protected,final;0;4;/**  * Return the current RequestContext.  */ ;/**  * Return the current RequestContext.  */ protected final RequestContext getRequestContext() {     Assert.state(this.requestContext != null, "No current RequestContext").     return this.requestContext. }
true;protected,abstract;0;1;/**  * Called by doStartTag to perform the actual work.  * @return same as TagSupport.doStartTag  * @throws Exception any exception, any checked one other than  * a JspException gets wrapped in a JspException by doStartTag  * @see javax.servlet.jsp.tagext.TagSupport#doStartTag  */ ;/**  * Called by doStartTag to perform the actual work.  * @return same as TagSupport.doStartTag  * @throws Exception any exception, any checked one other than  * a JspException gets wrapped in a JspException by doStartTag  * @see javax.servlet.jsp.tagext.TagSupport#doStartTag  */ protected abstract int doStartTagInternal() throws Exception.
false;public;1;4;;@Override public void doCatch(Throwable throwable) throws Throwable {     throw throwable. }
false;public;0;4;;@Override public void doFinally() {     this.requestContext = null. }
