# id;timestamp;commentText;codeText;commentWords;codeWords
FrameworkServlet -> public String getContextId();1328020251;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1334781369;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1335774711;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1340398642;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1342803001;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1344035753;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1345223391;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1346877235;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1347908336;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1348061150;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1348531024;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1349904862;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1351289067;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1351648724;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1351857948;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1354911578;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1355313310;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1356735495;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1357119239;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1362408075;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1363208506;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1368051298;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1368482696;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1384955432;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1385412762;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1385507478;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1389820887;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1389827047;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1400256389;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1409363223;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1409870233;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1427815317;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1427983931;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1436254479;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1449660404;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1450439838;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1453684721;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1456332614;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1458852256;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1467667881;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1467730834;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> public String getContextId();1477045587;Return the custom WebApplicationContext id, if any.;public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;public,string,get,context,id,return,this,context,id
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1328020251;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of <code>doHead</code>,_with a <code>NoBodyResponse</code> that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,code,with,a,code,no,body,response,code,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1334781369;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of <code>doHead</code>,_with a <code>NoBodyResponse</code> that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,code,with,a,code,no,body,response,code,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1335774711;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of <code>doHead</code>,_with a <code>NoBodyResponse</code> that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,code,with,a,code,no,body,response,code,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1340398642;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of <code>doHead</code>,_with a <code>NoBodyResponse</code> that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,code,with,a,code,no,body,response,code,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1342803001;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of <code>doHead</code>,_with a <code>NoBodyResponse</code> that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,code,with,a,code,no,body,response,code,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1344035753;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of <code>doHead</code>,_with a <code>NoBodyResponse</code> that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,code,with,a,code,no,body,response,code,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1345223391;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of <code>doHead</code>,_with a <code>NoBodyResponse</code> that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,code,with,a,code,no,body,response,code,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1346877235;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of <code>doHead</code>,_with a <code>NoBodyResponse</code> that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,code,with,a,code,no,body,response,code,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1347908336;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of <code>doHead</code>,_with a <code>NoBodyResponse</code> that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,code,with,a,code,no,body,response,code,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1348061150;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of <code>doHead</code>,_with a <code>NoBodyResponse</code> that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,code,with,a,code,no,body,response,code,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1348531024;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of <code>doHead</code>,_with a <code>NoBodyResponse</code> that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,code,with,a,code,no,body,response,code,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1349904862;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of <code>doHead</code>,_with a <code>NoBodyResponse</code> that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,code,with,a,code,no,body,response,code,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351289067;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of <code>doHead</code>,_with a <code>NoBodyResponse</code> that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,code,with,a,code,no,body,response,code,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351648724;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of <code>doHead</code>,_with a <code>NoBodyResponse</code> that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,code,with,a,code,no,body,response,code,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351857948;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of <code>doHead</code>,_with a <code>NoBodyResponse</code> that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,code,with,a,code,no,body,response,code,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1354911578;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of <code>doHead</code>,_with a <code>NoBodyResponse</code> that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,code,with,a,code,no,body,response,code,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1355313310;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of <code>doHead</code>,_with a <code>NoBodyResponse</code> that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,code,with,a,code,no,body,response,code,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1356735495;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1357119239;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1362408075;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1363208506;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1368051298;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1368482696;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1384955432;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1385412762;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1385507478;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1389820887;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1389827047;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1400256389;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1409363223;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1409870233;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1427815317;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1427983931;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1436254479;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1449660404;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1450439838;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1453684721;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1456332614;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1458852256;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1467667881;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1467730834;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1477045587;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1495868221;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1496259743;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1496837955;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1498505691;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1498780456;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1500448076;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1502952725;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1518987682;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1519732288;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529361191;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529721864;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529948549;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1530174524;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1530174524;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1531321803;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1532555403;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1533160168;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1534488420;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1536962806;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doGet(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1541442463;Delegate GET requests to processRequest/doService._<p>Will also be invoked by HttpServlet's default implementation of {@code doHead},_with a {@code NoBodyResponse} that just captures the content length._@see #doService_@see #doHead;@Override_	protected final void doGet(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,get,requests,to,process,request,do,service,p,will,also,be,invoked,by,http,servlet,s,default,implementation,of,code,do,head,with,a,code,no,body,response,that,just,captures,the,content,length,see,do,service,see,do,head;override,protected,final,void,do,get,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent);1495868221;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent);1496259743;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent);1496837955;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent);1498505691;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent);1498780456;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent);1500448076;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent);1502952725;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent);1518987682;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent);1519732288;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent);1529361191;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent);1529721864;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent);1529948549;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent);1530174524;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent);1530174524;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent);1531321803;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent);1532555403;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent);1533160168;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent);1534488420;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent);1536962806;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent);1541442463;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> public Class<?> getContextClass();1328020251;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1334781369;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1335774711;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1340398642;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1342803001;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1344035753;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1345223391;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1346877235;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1347908336;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1348061150;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1348531024;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1349904862;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1351289067;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1351648724;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1351857948;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1354911578;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1355313310;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1356735495;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1357119239;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1362408075;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1363208506;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1368051298;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1368482696;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1384955432;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1385412762;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1385507478;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1389820887;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1389827047;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1400256389;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1409363223;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1409870233;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1427815317;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1427983931;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1436254479;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1449660404;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1450439838;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1453684721;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1456332614;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1458852256;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1467667881;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1467730834;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1477045587;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1495868221;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1496259743;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1496837955;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1498505691;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1498780456;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1500448076;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1502952725;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1518987682;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1519732288;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1529361191;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1529721864;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1529948549;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1530174524;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1530174524;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1531321803;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1532555403;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1533160168;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1534488420;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1536962806;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public Class<?> getContextClass();1541442463;Return the custom context class.;public Class<?> getContextClass() {_		return this.contextClass__	};return,the,custom,context,class;public,class,get,context,class,return,this,context,class
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1328020251;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1334781369;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1335774711;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1340398642;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1342803001;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1344035753;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1345223391;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1346877235;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1347908336;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1348061150;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1348531024;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1349904862;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1351289067;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1351648724;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1351857948;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1354911578;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1355313310;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1356735495;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1357119239;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1362408075;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1363208506;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1368051298;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1368482696;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1384955432;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1385412762;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1385507478;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1389820887;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1389827047;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1400256389;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1409363223;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1409870233;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1427815317;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1427983931;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1436254479;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1449660404;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1450439838;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1453684721;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1456332614;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1458852256;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1467667881;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1467730834;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1477045587;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1495868221;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1496259743;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1496837955;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1498505691;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(String contextConfigLocation);1498780456;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> @Nullable 	public final WebApplicationContext getWebApplicationContext();1498780456;Return this servlet's WebApplicationContext.;@Nullable_	public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;nullable,public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> @Nullable 	public final WebApplicationContext getWebApplicationContext();1500448076;Return this servlet's WebApplicationContext.;@Nullable_	public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;nullable,public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> @Nullable 	public final WebApplicationContext getWebApplicationContext();1502952725;Return this servlet's WebApplicationContext.;@Nullable_	public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;nullable,public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> @Nullable 	public final WebApplicationContext getWebApplicationContext();1518987682;Return this servlet's WebApplicationContext.;@Nullable_	public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;nullable,public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> @Nullable 	public final WebApplicationContext getWebApplicationContext();1519732288;Return this servlet's WebApplicationContext.;@Nullable_	public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;nullable,public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> @Nullable 	public final WebApplicationContext getWebApplicationContext();1529361191;Return this servlet's WebApplicationContext.;@Nullable_	public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;nullable,public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> @Nullable 	public final WebApplicationContext getWebApplicationContext();1529721864;Return this servlet's WebApplicationContext.;@Nullable_	public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;nullable,public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> @Nullable 	public final WebApplicationContext getWebApplicationContext();1529948549;Return this servlet's WebApplicationContext.;@Nullable_	public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;nullable,public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> @Nullable 	public final WebApplicationContext getWebApplicationContext();1530174524;Return this servlet's WebApplicationContext.;@Nullable_	public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;nullable,public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> @Nullable 	public final WebApplicationContext getWebApplicationContext();1530174524;Return this servlet's WebApplicationContext.;@Nullable_	public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;nullable,public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> @Nullable 	public final WebApplicationContext getWebApplicationContext();1531321803;Return this servlet's WebApplicationContext.;@Nullable_	public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;nullable,public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> @Nullable 	public final WebApplicationContext getWebApplicationContext();1532555403;Return this servlet's WebApplicationContext.;@Nullable_	public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;nullable,public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> @Nullable 	public final WebApplicationContext getWebApplicationContext();1533160168;Return this servlet's WebApplicationContext.;@Nullable_	public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;nullable,public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> @Nullable 	public final WebApplicationContext getWebApplicationContext();1534488420;Return this servlet's WebApplicationContext.;@Nullable_	public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;nullable,public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> @Nullable 	public final WebApplicationContext getWebApplicationContext();1536962806;Return this servlet's WebApplicationContext.;@Nullable_	public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;nullable,public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> @Nullable 	public final WebApplicationContext getWebApplicationContext();1541442463;Return this servlet's WebApplicationContext.;@Nullable_	public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;nullable,public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1328020251;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1334781369;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1335774711;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1340398642;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1342803001;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1344035753;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1345223391;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1346877235;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1347908336;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1348061150;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1348531024;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1349904862;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1351289067;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1351648724;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1351857948;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1354911578;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1355313310;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1356735495;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1357119239;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1362408075;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1363208506;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1368051298;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1368482696;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1384955432;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1385412762;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1385507478;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1389820887;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1389827047;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1400256389;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1409363223;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1409870233;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1427815317;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1427983931;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1436254479;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1449660404;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1450439838;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1453684721;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1456332614;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1458852256;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1467667881;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1467730834;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1477045587;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1495868221;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1496259743;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1496837955;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1498505691;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1498780456;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1500448076;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1502952725;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1518987682;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1519732288;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1529361191;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1529721864;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1529948549;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1530174524;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1530174524;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1531321803;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1532555403;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1533160168;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1534488420;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1536962806;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> public void setContextClass(Class<?> contextClass);1541442463;Set a custom context class. This class must be of type_{@link org.springframework.web.context.WebApplicationContext}._<p>When using the default FrameworkServlet implementation,_the context class must also implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface._@see #createWebApplicationContext;public void setContextClass(Class<?> contextClass) {_		this.contextClass = contextClass__	};set,a,custom,context,class,this,class,must,be,of,type,link,org,springframework,web,context,web,application,context,p,when,using,the,default,framework,servlet,implementation,the,context,class,must,also,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,see,create,web,application,context;public,void,set,context,class,class,context,class,this,context,class,context,class
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1328020251;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1334781369;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1335774711;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1340398642;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1342803001;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1344035753;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1345223391;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1346877235;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1347908336;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1348061150;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1348531024;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1349904862;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351289067;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351648724;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351857948;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1354911578;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1355313310;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1356735495;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1357119239;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1362408075;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1363208506;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1368051298;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1368482696;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1384955432;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1385412762;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1385507478;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1389820887;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1389827047;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1400256389;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1409363223;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1409870233;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1427815317;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1427983931;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1436254479;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1449660404;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1450439838;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1453684721;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1456332614;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1458852256;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1467667881;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1467730834;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1477045587;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1495868221;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1496259743;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1496837955;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1498505691;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1498780456;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1500448076;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1502952725;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1518987682;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1519732288;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529361191;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529721864;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529948549;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1530174524;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1530174524;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1531321803;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1532555403;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1533160168;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1534488420;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1536962806;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doDelete(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1541442463;Delegate DELETE requests to {@link #processRequest}._@see #doService;@Override_	protected final void doDelete(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,delete,requests,to,link,process,request,see,do,service;override,protected,final,void,do,delete,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(ApplicationContextInitializer<?>... initializers);1427815317;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(ApplicationContextInitializer<?>... initializers);1427983931;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(ApplicationContextInitializer<?>... initializers);1436254479;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(ApplicationContextInitializer<?>... initializers);1449660404;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(ApplicationContextInitializer<?>... initializers);1450439838;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(ApplicationContextInitializer<?>... initializers);1453684721;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(ApplicationContextInitializer<?>... initializers);1456332614;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(ApplicationContextInitializer<?>... initializers);1458852256;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(ApplicationContextInitializer<?>... initializers);1467667881;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(ApplicationContextInitializer<?>... initializers);1467730834;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(ApplicationContextInitializer<?>... initializers);1477045587;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(ApplicationContextInitializer<?>... initializers);1495868221;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(ApplicationContextInitializer<?>... initializers);1496259743;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> public String getContextConfigLocation();1328020251;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1334781369;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1335774711;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1340398642;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1342803001;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1344035753;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1345223391;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1346877235;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1347908336;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1348061150;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1348531024;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1349904862;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1351289067;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1351648724;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1351857948;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1354911578;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1355313310;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1356735495;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1357119239;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1362408075;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1363208506;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1368051298;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1368482696;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1384955432;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1385412762;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1385507478;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1389820887;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1389827047;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1400256389;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1409363223;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1409870233;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1427815317;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1427983931;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1436254479;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1449660404;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1450439838;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1453684721;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1456332614;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1458852256;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1467667881;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1467730834;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public String getContextConfigLocation();1477045587;Return the explicit context config location, if any.;public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> public void setPublishContext(boolean publishContext);1328020251;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1334781369;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1335774711;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1340398642;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1342803001;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1344035753;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1345223391;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1346877235;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1347908336;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1348061150;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1348531024;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1349904862;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1351289067;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1351648724;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1351857948;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1354911578;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1355313310;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1356735495;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1357119239;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1362408075;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1363208506;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1368051298;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1368482696;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1384955432;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1385412762;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1385507478;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1389820887;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1389827047;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1400256389;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1409363223;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1409870233;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1427815317;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1427983931;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1436254479;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1449660404;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1450439838;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1453684721;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1456332614;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1458852256;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1467667881;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1467730834;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1477045587;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1495868221;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1496259743;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1496837955;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1498505691;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1498780456;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1500448076;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1502952725;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1518987682;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1519732288;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1529361191;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1529721864;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1529948549;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1530174524;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1530174524;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1531321803;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1532555403;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1533160168;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1534488420;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1536962806;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void setPublishContext(boolean publishContext);1541442463;Set whether to publish this servlet's context as a ServletContext attribute,_available to all objects in the web container. Default is "true"._<p>This is especially handy during testing, although it is debatable whether_it's good practice to let other application objects access the context this way.;public void setPublishContext(boolean publishContext) {_		this.publishContext = publishContext__	};set,whether,to,publish,this,servlet,s,context,as,a,servlet,context,attribute,available,to,all,objects,in,the,web,container,default,is,true,p,this,is,especially,handy,during,testing,although,it,is,debatable,whether,it,s,good,practice,to,let,other,application,objects,access,the,context,this,way;public,void,set,publish,context,boolean,publish,context,this,publish,context,publish,context
FrameworkServlet -> public void refresh();1328020251;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1334781369;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1335774711;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1340398642;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1342803001;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1344035753;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1345223391;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1346877235;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1347908336;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1348061150;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1348531024;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1349904862;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1351289067;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1351648724;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1351857948;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1354911578;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1355313310;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1356735495;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1357119239;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1362408075;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1363208506;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1368051298;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1368482696;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1384955432;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1385412762;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1385507478;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1389820887;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1389827047;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1400256389;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1409363223;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1409870233;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1427815317;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1427983931;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1436254479;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1449660404;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1450439838;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1453684721;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1456332614;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1458852256;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1467667881;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1467730834;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1477045587;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1495868221;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1496259743;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1496837955;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1498505691;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1498780456;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1500448076;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1502952725;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1518987682;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1519732288;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1529361191;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1529721864;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1529948549;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1530174524;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1530174524;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1531321803;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1532555403;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1533160168;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1534488420;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1536962806;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> public void refresh();1541442463;Refresh this servlet's application context, as well as the_dependent state of the servlet._@see #getWebApplicationContext()_@see org.springframework.context.ConfigurableApplicationContext#refresh();public void refresh() {_		WebApplicationContext wac = getWebApplicationContext()__		if (!(wac instanceof ConfigurableApplicationContext)) {_			throw new IllegalStateException("WebApplicationContext does not support refresh: " + wac)__		}_		((ConfigurableApplicationContext) wac).refresh()__	};refresh,this,servlet,s,application,context,as,well,as,the,dependent,state,of,the,servlet,see,get,web,application,context,see,org,springframework,context,configurable,application,context,refresh;public,void,refresh,web,application,context,wac,get,web,application,context,if,wac,instanceof,configurable,application,context,throw,new,illegal,state,exception,web,application,context,does,not,support,refresh,wac,configurable,application,context,wac,refresh
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1389820887;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1389827047;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1400256389;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1409363223;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1409870233;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1427815317;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1427983931;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1436254479;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1449660404;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1450439838;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1453684721;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1456332614;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1458852256;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1467667881;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1467730834;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1477045587;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1495868221;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1496259743;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1496837955;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1498505691;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1498780456;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1500448076;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1502952725;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1518987682;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1519732288;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1529361191;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1529721864;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1529948549;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1530174524;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1530174524;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1531321803;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1532555403;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1533160168;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1534488420;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1536962806;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> protected void applyInitializers(ConfigurableApplicationContext wac);1541442463;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately before this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();protected void applyInitializers(ConfigurableApplicationContext wac) {_		String globalClassNames = getServletContext().getInitParameter(ContextLoader.GLOBAL_INITIALIZER_CLASSES_PARAM)__		if (globalClassNames != null) {_			for (String className : StringUtils.tokenizeToStringArray(globalClassNames, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		if (this.contextInitializerClasses != null) {_			for (String className : StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)) {_				this.contextInitializers.add(loadInitializer(className, wac))__			}_		}__		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,before,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;protected,void,apply,initializers,configurable,application,context,wac,string,global,class,names,get,servlet,context,get,init,parameter,context,loader,if,global,class,names,null,for,string,class,name,string,utils,tokenize,to,string,array,global,class,names,this,context,initializers,add,load,initializer,class,name,wac,if,this,context,initializer,classes,null,for,string,class,name,string,utils,tokenize,to,string,array,this,context,initializer,classes,this,context,initializers,add,load,initializer,class,name,wac,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(ApplicationContextInitializer<? extends ConfigurableApplicationContext>... contextInitializers);1389827047;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);@SuppressWarnings("unchecked")_	public void setContextInitializers(ApplicationContextInitializer<? extends ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<? extends ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;suppress,warnings,unchecked,public,void,set,context,initializers,application,context,initializer,extends,configurable,application,context,context,initializers,for,application,context,initializer,extends,configurable,application,context,initializer,context,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(ApplicationContextInitializer<? extends ConfigurableApplicationContext>... contextInitializers);1400256389;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);@SuppressWarnings("unchecked")_	public void setContextInitializers(ApplicationContextInitializer<? extends ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<? extends ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;suppress,warnings,unchecked,public,void,set,context,initializers,application,context,initializer,extends,configurable,application,context,context,initializers,for,application,context,initializer,extends,configurable,application,context,initializer,context,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(ApplicationContextInitializer<? extends ConfigurableApplicationContext>... contextInitializers);1409363223;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);@SuppressWarnings("unchecked")_	public void setContextInitializers(ApplicationContextInitializer<? extends ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<? extends ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;suppress,warnings,unchecked,public,void,set,context,initializers,application,context,initializer,extends,configurable,application,context,context,initializers,for,application,context,initializer,extends,configurable,application,context,initializer,context,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(ApplicationContextInitializer<? extends ConfigurableApplicationContext>... contextInitializers);1409870233;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);@SuppressWarnings("unchecked")_	public void setContextInitializers(ApplicationContextInitializer<? extends ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<? extends ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;suppress,warnings,unchecked,public,void,set,context,initializers,application,context,initializer,extends,configurable,application,context,context,initializers,for,application,context,initializer,extends,configurable,application,context,initializer,context,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> public void setEnableLoggingRequestDetails(boolean enable);1531321803;Whether to log request params at DEBUG level, and headers at TRACE level._Both may contain sensitive information._<p>By default set to {@code false} so that request details are not shown._@param enable whether to enable or not_@since 5.1;public void setEnableLoggingRequestDetails(boolean enable) {_		this.enableLoggingRequestDetails = enable__	};whether,to,log,request,params,at,debug,level,and,headers,at,trace,level,both,may,contain,sensitive,information,p,by,default,set,to,code,false,so,that,request,details,are,not,shown,param,enable,whether,to,enable,or,not,since,5,1;public,void,set,enable,logging,request,details,boolean,enable,this,enable,logging,request,details,enable
FrameworkServlet -> public void setEnableLoggingRequestDetails(boolean enable);1532555403;Whether to log request params at DEBUG level, and headers at TRACE level._Both may contain sensitive information._<p>By default set to {@code false} so that request details are not shown._@param enable whether to enable or not_@since 5.1;public void setEnableLoggingRequestDetails(boolean enable) {_		this.enableLoggingRequestDetails = enable__	};whether,to,log,request,params,at,debug,level,and,headers,at,trace,level,both,may,contain,sensitive,information,p,by,default,set,to,code,false,so,that,request,details,are,not,shown,param,enable,whether,to,enable,or,not,since,5,1;public,void,set,enable,logging,request,details,boolean,enable,this,enable,logging,request,details,enable
FrameworkServlet -> public void setEnableLoggingRequestDetails(boolean enable);1533160168;Whether to log request params at DEBUG level, and headers at TRACE level._Both may contain sensitive information._<p>By default set to {@code false} so that request details are not shown._@param enable whether to enable or not_@since 5.1;public void setEnableLoggingRequestDetails(boolean enable) {_		this.enableLoggingRequestDetails = enable__	};whether,to,log,request,params,at,debug,level,and,headers,at,trace,level,both,may,contain,sensitive,information,p,by,default,set,to,code,false,so,that,request,details,are,not,shown,param,enable,whether,to,enable,or,not,since,5,1;public,void,set,enable,logging,request,details,boolean,enable,this,enable,logging,request,details,enable
FrameworkServlet -> public void setEnableLoggingRequestDetails(boolean enable);1534488420;Whether to log request params at DEBUG level, and headers at TRACE level._Both may contain sensitive information._<p>By default set to {@code false} so that request details are not shown._@param enable whether to enable or not_@since 5.1;public void setEnableLoggingRequestDetails(boolean enable) {_		this.enableLoggingRequestDetails = enable__	};whether,to,log,request,params,at,debug,level,and,headers,at,trace,level,both,may,contain,sensitive,information,p,by,default,set,to,code,false,so,that,request,details,are,not,shown,param,enable,whether,to,enable,or,not,since,5,1;public,void,set,enable,logging,request,details,boolean,enable,this,enable,logging,request,details,enable
FrameworkServlet -> public void setEnableLoggingRequestDetails(boolean enable);1536962806;Whether to log request params at DEBUG level, and headers at TRACE level._Both may contain sensitive information._<p>By default set to {@code false} so that request details are not shown._@param enable whether to enable or not_@since 5.1;public void setEnableLoggingRequestDetails(boolean enable) {_		this.enableLoggingRequestDetails = enable__	};whether,to,log,request,params,at,debug,level,and,headers,at,trace,level,both,may,contain,sensitive,information,p,by,default,set,to,code,false,so,that,request,details,are,not,shown,param,enable,whether,to,enable,or,not,since,5,1;public,void,set,enable,logging,request,details,boolean,enable,this,enable,logging,request,details,enable
FrameworkServlet -> public void setEnableLoggingRequestDetails(boolean enable);1541442463;Whether to log request params at DEBUG level, and headers at TRACE level._Both may contain sensitive information._<p>By default set to {@code false} so that request details are not shown._@param enable whether to enable or not_@since 5.1;public void setEnableLoggingRequestDetails(boolean enable) {_		this.enableLoggingRequestDetails = enable__	};whether,to,log,request,params,at,debug,level,and,headers,at,trace,level,both,may,contain,sensitive,information,p,by,default,set,to,code,false,so,that,request,details,are,not,shown,param,enable,whether,to,enable,or,not,since,5,1;public,void,set,enable,logging,request,details,boolean,enable,this,enable,logging,request,details,enable
FrameworkServlet -> protected ServletRequestAttributes buildRequestAttributes( 			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes);1363208506;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;protected ServletRequestAttributes buildRequestAttributes(_			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,http,servlet,response,response,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,else,return,null
FrameworkServlet -> protected ServletRequestAttributes buildRequestAttributes( 			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes);1368051298;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;protected ServletRequestAttributes buildRequestAttributes(_			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,http,servlet,response,response,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,else,return,null
FrameworkServlet -> protected ServletRequestAttributes buildRequestAttributes( 			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes);1368482696;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;protected ServletRequestAttributes buildRequestAttributes(_			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,http,servlet,response,response,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,else,return,null
FrameworkServlet -> protected ServletRequestAttributes buildRequestAttributes( 			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes);1384955432;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;protected ServletRequestAttributes buildRequestAttributes(_			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,http,servlet,response,response,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,else,return,null
FrameworkServlet -> protected ServletRequestAttributes buildRequestAttributes( 			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes);1385412762;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;protected ServletRequestAttributes buildRequestAttributes(_			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,http,servlet,response,response,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,else,return,null
FrameworkServlet -> protected ServletRequestAttributes buildRequestAttributes( 			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes);1385507478;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;protected ServletRequestAttributes buildRequestAttributes(_			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,http,servlet,response,response,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,else,return,null
FrameworkServlet -> protected ServletRequestAttributes buildRequestAttributes( 			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes);1389820887;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;protected ServletRequestAttributes buildRequestAttributes(_			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,http,servlet,response,response,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,else,return,null
FrameworkServlet -> protected ServletRequestAttributes buildRequestAttributes( 			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes);1389827047;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;protected ServletRequestAttributes buildRequestAttributes(_			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,http,servlet,response,response,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,else,return,null
FrameworkServlet -> protected ServletRequestAttributes buildRequestAttributes( 			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes);1400256389;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;protected ServletRequestAttributes buildRequestAttributes(_			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,http,servlet,response,response,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> protected ServletRequestAttributes buildRequestAttributes( 			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes);1409363223;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;protected ServletRequestAttributes buildRequestAttributes(_			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,http,servlet,response,response,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> protected ServletRequestAttributes buildRequestAttributes( 			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes);1409870233;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;protected ServletRequestAttributes buildRequestAttributes(_			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,http,servlet,response,response,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> protected ServletRequestAttributes buildRequestAttributes( 			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes);1427815317;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;protected ServletRequestAttributes buildRequestAttributes(_			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,http,servlet,response,response,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> protected ServletRequestAttributes buildRequestAttributes( 			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes);1427983931;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;protected ServletRequestAttributes buildRequestAttributes(_			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,http,servlet,response,response,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> protected ServletRequestAttributes buildRequestAttributes( 			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes);1436254479;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;protected ServletRequestAttributes buildRequestAttributes(_			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,http,servlet,response,response,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> protected ServletRequestAttributes buildRequestAttributes( 			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes);1449660404;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;protected ServletRequestAttributes buildRequestAttributes(_			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,http,servlet,response,response,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> protected ServletRequestAttributes buildRequestAttributes( 			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes);1450439838;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;protected ServletRequestAttributes buildRequestAttributes(_			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,http,servlet,response,response,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> protected ServletRequestAttributes buildRequestAttributes( 			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes);1453684721;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;protected ServletRequestAttributes buildRequestAttributes(_			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,http,servlet,response,response,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> protected ServletRequestAttributes buildRequestAttributes( 			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes);1456332614;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;protected ServletRequestAttributes buildRequestAttributes(_			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,http,servlet,response,response,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> protected ServletRequestAttributes buildRequestAttributes( 			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes);1458852256;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;protected ServletRequestAttributes buildRequestAttributes(_			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,http,servlet,response,response,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> protected ServletRequestAttributes buildRequestAttributes( 			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes);1467667881;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;protected ServletRequestAttributes buildRequestAttributes(_			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,http,servlet,response,response,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> protected ServletRequestAttributes buildRequestAttributes( 			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes);1467730834;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;protected ServletRequestAttributes buildRequestAttributes(_			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,http,servlet,response,response,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> protected ServletRequestAttributes buildRequestAttributes( 			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes);1477045587;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;protected ServletRequestAttributes buildRequestAttributes(_			HttpServletRequest request, HttpServletResponse response, RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,http,servlet,response,response,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1328020251;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		_		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContextHolder.setLocaleContext(buildLocaleContext(request), this.threadContextInheritable)___		_		RequestAttributes previousRequestAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = null__		if (previousRequestAttributes == null || previousRequestAttributes.getClass().equals(ServletRequestAttributes.class)) {_			requestAttributes = new ServletRequestAttributes(request)__			RequestContextHolder.setRequestAttributes(requestAttributes, this.threadContextInheritable)__		}__		if (logger.isTraceEnabled()) {_			logger.trace("Bound request context to thread: " + request)__		}__		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			_			LocaleContextHolder.setLocaleContext(previousLocaleContext, this.threadContextInheritable)__			if (requestAttributes != null) {_				RequestContextHolder.setRequestAttributes(previousRequestAttributes, this.threadContextInheritable)__				requestAttributes.requestCompleted()__			}_			if (logger.isTraceEnabled()) {_				logger.trace("Cleared thread-bound request context: " + request)__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					this.logger.debug("Successfully completed request")__				}_			}_			if (this.publishEvents) {_				_				long processingTime = System.currentTimeMillis() - startTime__				this.webApplicationContext.publishEvent(_						new ServletRequestHandledEvent(this,_								request.getRequestURI(), request.getRemoteAddr(),_								request.getMethod(), getServletConfig().getServletName(),_								WebUtils.getSessionId(request), getUsernameForRequest(request),_								processingTime, failureCause))__			}_		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,holder,set,locale,context,build,locale,context,request,this,thread,context,inheritable,request,attributes,previous,request,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,null,if,previous,request,attributes,null,previous,request,attributes,get,class,equals,servlet,request,attributes,class,request,attributes,new,servlet,request,attributes,request,request,context,holder,set,request,attributes,request,attributes,this,thread,context,inheritable,if,logger,is,trace,enabled,logger,trace,bound,request,context,to,thread,request,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,locale,context,holder,set,locale,context,previous,locale,context,this,thread,context,inheritable,if,request,attributes,null,request,context,holder,set,request,attributes,previous,request,attributes,this,thread,context,inheritable,request,attributes,request,completed,if,logger,is,trace,enabled,logger,trace,cleared,thread,bound,request,context,request,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,this,logger,debug,successfully,completed,request,if,this,publish,events,long,processing,time,system,current,time,millis,start,time,this,web,application,context,publish,event,new,servlet,request,handled,event,this,request,get,request,uri,request,get,remote,addr,request,get,method,get,servlet,config,get,servlet,name,web,utils,get,session,id,request,get,username,for,request,request,processing,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1334781369;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = null__		if (previousAttributes == null || previousAttributes.getClass().equals(ServletRequestAttributes.class)) {_			requestAttributes = new ServletRequestAttributes(request)__		}__		initContextHolders(request, localeContext, requestAttributes)___		AsyncExecutionChain chain = AsyncExecutionChain.getForCurrentRequest(request)__		chain.addDelegatingCallable(getAsyncCallable(startTime, request, response,_				previousLocaleContext, previousAttributes, localeContext, requestAttributes))___		try {_			doService(request, response)__		}_		catch (Throwable t) {_			failureCause = t__		}_		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (chain.isAsyncStarted()) {_				return__			}_			finalizeProcessing(startTime, request, response, requestAttributes, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,null,if,previous,attributes,null,previous,attributes,get,class,equals,servlet,request,attributes,class,request,attributes,new,servlet,request,attributes,request,init,context,holders,request,locale,context,request,attributes,async,execution,chain,chain,async,execution,chain,get,for,current,request,request,chain,add,delegating,callable,get,async,callable,start,time,request,response,previous,locale,context,previous,attributes,locale,context,request,attributes,try,do,service,request,response,catch,throwable,t,failure,cause,t,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,chain,is,async,started,return,finalize,processing,start,time,request,response,request,attributes,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1335774711;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = null__		if (previousAttributes == null || previousAttributes.getClass().equals(ServletRequestAttributes.class)) {_			requestAttributes = new ServletRequestAttributes(request)__		}__		initContextHolders(request, localeContext, requestAttributes)___		AsyncExecutionChain chain = AsyncExecutionChain.getForCurrentRequest(request)__		chain.addDelegatingCallable(getAsyncCallable(startTime, request, response,_				previousLocaleContext, previousAttributes, localeContext, requestAttributes))___		try {_			doService(request, response)__		}_		catch (Throwable t) {_			failureCause = t__		}_		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (chain.isAsyncStarted()) {_				return__			}_			finalizeProcessing(startTime, request, response, requestAttributes, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,null,if,previous,attributes,null,previous,attributes,get,class,equals,servlet,request,attributes,class,request,attributes,new,servlet,request,attributes,request,init,context,holders,request,locale,context,request,attributes,async,execution,chain,chain,async,execution,chain,get,for,current,request,request,chain,add,delegating,callable,get,async,callable,start,time,request,response,previous,locale,context,previous,attributes,locale,context,request,attributes,try,do,service,request,response,catch,throwable,t,failure,cause,t,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,chain,is,async,started,return,finalize,processing,start,time,request,response,request,attributes,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1340398642;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = null__		if (previousAttributes == null || previousAttributes.getClass().equals(ServletRequestAttributes.class)) {_			requestAttributes = new ServletRequestAttributes(request)__		}__		initContextHolders(request, localeContext, requestAttributes)___		AsyncExecutionChain chain = AsyncExecutionChain.getForCurrentRequest(request)__		chain.addDelegatingCallable(getAsyncCallable(startTime, request, response,_				previousLocaleContext, previousAttributes, localeContext, requestAttributes))___		try {_			doService(request, response)__		}_		catch (Throwable t) {_			failureCause = t__		}_		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (chain.isAsyncStarted()) {_				return__			}_			finalizeProcessing(startTime, request, response, requestAttributes, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,null,if,previous,attributes,null,previous,attributes,get,class,equals,servlet,request,attributes,class,request,attributes,new,servlet,request,attributes,request,init,context,holders,request,locale,context,request,attributes,async,execution,chain,chain,async,execution,chain,get,for,current,request,request,chain,add,delegating,callable,get,async,callable,start,time,request,response,previous,locale,context,previous,attributes,locale,context,request,attributes,try,do,service,request,response,catch,throwable,t,failure,cause,t,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,chain,is,async,started,return,finalize,processing,start,time,request,response,request,attributes,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1342803001;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = null__		if (previousAttributes == null || previousAttributes.getClass().equals(ServletRequestAttributes.class)) {_			requestAttributes = new ServletRequestAttributes(request)__		}__		initContextHolders(request, localeContext, requestAttributes)___		AsyncExecutionChain chain = AsyncExecutionChain.getForCurrentRequest(request)__		chain.push(getAsyncCallable(startTime, request, response,_				previousLocaleContext, previousAttributes, localeContext, requestAttributes))___		try {_			doService(request, response)__		}_		catch (Throwable t) {_			failureCause = t__		}_		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (!chain.pop()) {_				return__			}_			finalizeProcessing(startTime, request, response, requestAttributes, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,null,if,previous,attributes,null,previous,attributes,get,class,equals,servlet,request,attributes,class,request,attributes,new,servlet,request,attributes,request,init,context,holders,request,locale,context,request,attributes,async,execution,chain,chain,async,execution,chain,get,for,current,request,request,chain,push,get,async,callable,start,time,request,response,previous,locale,context,previous,attributes,locale,context,request,attributes,try,do,service,request,response,catch,throwable,t,failure,cause,t,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,chain,pop,return,finalize,processing,start,time,request,response,request,attributes,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1344035753;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = null__		if (previousAttributes == null || previousAttributes.getClass().equals(ServletRequestAttributes.class)) {_			requestAttributes = new ServletRequestAttributes(request)__		}__		initContextHolders(request, localeContext, requestAttributes)___		WebAsyncManager asyncManager = AsyncWebUtils.getAsyncManager(request)__		asyncManager.registerAsyncThreadInitializer(this.getClass().getName(), createAsyncThreadInitializer(request))___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				} else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						if (logger.isDebugEnabled()) {_							logger.debug("Leaving response open for concurrent processing")__						}_					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}_			if (this.publishEvents) {_				_				long processingTime = System.currentTimeMillis() - startTime__				this.webApplicationContext.publishEvent(_						new ServletRequestHandledEvent(this,_								request.getRequestURI(), request.getRemoteAddr(),_								request.getMethod(), getServletConfig().getServletName(),_								WebUtils.getSessionId(request), getUsernameForRequest(request),_								processingTime, failureCause))__			}_		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,null,if,previous,attributes,null,previous,attributes,get,class,equals,servlet,request,attributes,class,request,attributes,new,servlet,request,attributes,request,init,context,holders,request,locale,context,request,attributes,web,async,manager,async,manager,async,web,utils,get,async,manager,request,async,manager,register,async,thread,initializer,this,get,class,get,name,create,async,thread,initializer,request,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,if,logger,is,debug,enabled,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,if,this,publish,events,long,processing,time,system,current,time,millis,start,time,this,web,application,context,publish,event,new,servlet,request,handled,event,this,request,get,request,uri,request,get,remote,addr,request,get,method,get,servlet,config,get,servlet,name,web,utils,get,session,id,request,get,username,for,request,request,processing,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1345223391;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = null__		if (previousAttributes == null || previousAttributes.getClass().equals(ServletRequestAttributes.class)) {_			requestAttributes = new ServletRequestAttributes(request)__		}__		initContextHolders(request, localeContext, requestAttributes)___		WebAsyncManager asyncManager = AsyncWebUtils.getAsyncManager(request)__		asyncManager.registerAsyncThreadInitializer(this.getClass().getName(), createAsyncThreadInitializer(request))___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				} else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						if (logger.isDebugEnabled()) {_							logger.debug("Leaving response open for concurrent processing")__						}_					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}_			if (this.publishEvents) {_				_				long processingTime = System.currentTimeMillis() - startTime__				this.webApplicationContext.publishEvent(_						new ServletRequestHandledEvent(this,_								request.getRequestURI(), request.getRemoteAddr(),_								request.getMethod(), getServletConfig().getServletName(),_								WebUtils.getSessionId(request), getUsernameForRequest(request),_								processingTime, failureCause))__			}_		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,null,if,previous,attributes,null,previous,attributes,get,class,equals,servlet,request,attributes,class,request,attributes,new,servlet,request,attributes,request,init,context,holders,request,locale,context,request,attributes,web,async,manager,async,manager,async,web,utils,get,async,manager,request,async,manager,register,async,thread,initializer,this,get,class,get,name,create,async,thread,initializer,request,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,if,logger,is,debug,enabled,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,if,this,publish,events,long,processing,time,system,current,time,millis,start,time,this,web,application,context,publish,event,new,servlet,request,handled,event,this,request,get,request,uri,request,get,remote,addr,request,get,method,get,servlet,config,get,servlet,name,web,utils,get,session,id,request,get,username,for,request,request,processing,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1346877235;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = null__		if (previousAttributes == null || previousAttributes.getClass().equals(ServletRequestAttributes.class)) {_			requestAttributes = new ServletRequestAttributes(request)__		}__		initContextHolders(request, localeContext, requestAttributes)___		WebAsyncManager asyncManager = AsyncWebUtils.getAsyncManager(request)__		asyncManager.registerAsyncThreadInitializer(this.getClass().getName(), createAsyncThreadInitializer(request))___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				} else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						if (logger.isDebugEnabled()) {_							logger.debug("Leaving response open for concurrent processing")__						}_					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}_			if (this.publishEvents) {_				_				long processingTime = System.currentTimeMillis() - startTime__				this.webApplicationContext.publishEvent(_						new ServletRequestHandledEvent(this,_								request.getRequestURI(), request.getRemoteAddr(),_								request.getMethod(), getServletConfig().getServletName(),_								WebUtils.getSessionId(request), getUsernameForRequest(request),_								processingTime, failureCause))__			}_		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,null,if,previous,attributes,null,previous,attributes,get,class,equals,servlet,request,attributes,class,request,attributes,new,servlet,request,attributes,request,init,context,holders,request,locale,context,request,attributes,web,async,manager,async,manager,async,web,utils,get,async,manager,request,async,manager,register,async,thread,initializer,this,get,class,get,name,create,async,thread,initializer,request,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,if,logger,is,debug,enabled,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,if,this,publish,events,long,processing,time,system,current,time,millis,start,time,this,web,application,context,publish,event,new,servlet,request,handled,event,this,request,get,request,uri,request,get,remote,addr,request,get,method,get,servlet,config,get,servlet,name,web,utils,get,session,id,request,get,username,for,request,request,processing,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1347908336;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = null__		if (previousAttributes == null || previousAttributes.getClass().equals(ServletRequestAttributes.class)) {_			requestAttributes = new ServletRequestAttributes(request)__		}__		initContextHolders(request, localeContext, requestAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerAsyncThreadInitializer(this.getClass().getName(), createAsyncThreadInitializer(request))___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				} else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						if (logger.isDebugEnabled()) {_							logger.debug("Leaving response open for concurrent processing")__						}_					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}_			if (this.publishEvents) {_				_				long processingTime = System.currentTimeMillis() - startTime__				this.webApplicationContext.publishEvent(_						new ServletRequestHandledEvent(this,_								request.getRequestURI(), request.getRemoteAddr(),_								request.getMethod(), getServletConfig().getServletName(),_								WebUtils.getSessionId(request), getUsernameForRequest(request),_								processingTime, failureCause))__			}_		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,null,if,previous,attributes,null,previous,attributes,get,class,equals,servlet,request,attributes,class,request,attributes,new,servlet,request,attributes,request,init,context,holders,request,locale,context,request,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,async,thread,initializer,this,get,class,get,name,create,async,thread,initializer,request,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,if,logger,is,debug,enabled,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,if,this,publish,events,long,processing,time,system,current,time,millis,start,time,this,web,application,context,publish,event,new,servlet,request,handled,event,this,request,get,request,uri,request,get,remote,addr,request,get,method,get,servlet,config,get,servlet,name,web,utils,get,session,id,request,get,username,for,request,request,processing,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1348061150;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = null__		if (previousAttributes == null || previousAttributes.getClass().equals(ServletRequestAttributes.class)) {_			requestAttributes = new ServletRequestAttributes(request)__		}__		initContextHolders(request, localeContext, requestAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(this.getClass().getName(), createRequestBindingInterceptor(request))___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				} else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						if (logger.isDebugEnabled()) {_							logger.debug("Leaving response open for concurrent processing")__						}_					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}_			if (this.publishEvents) {_				_				long processingTime = System.currentTimeMillis() - startTime__				this.webApplicationContext.publishEvent(_						new ServletRequestHandledEvent(this,_								request.getRequestURI(), request.getRemoteAddr(),_								request.getMethod(), getServletConfig().getServletName(),_								WebUtils.getSessionId(request), getUsernameForRequest(request),_								processingTime, failureCause))__			}_		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,null,if,previous,attributes,null,previous,attributes,get,class,equals,servlet,request,attributes,class,request,attributes,new,servlet,request,attributes,request,init,context,holders,request,locale,context,request,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,this,get,class,get,name,create,request,binding,interceptor,request,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,if,logger,is,debug,enabled,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,if,this,publish,events,long,processing,time,system,current,time,millis,start,time,this,web,application,context,publish,event,new,servlet,request,handled,event,this,request,get,request,uri,request,get,remote,addr,request,get,method,get,servlet,config,get,servlet,name,web,utils,get,session,id,request,get,username,for,request,request,processing,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1348531024;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = null__		if (previousAttributes == null || previousAttributes.getClass().equals(ServletRequestAttributes.class)) {_			requestAttributes = new ServletRequestAttributes(request)__		}__		initContextHolders(request, localeContext, requestAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(this.getClass().getName(), createRequestBindingInterceptor(request))___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				} else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						if (logger.isDebugEnabled()) {_							logger.debug("Leaving response open for concurrent processing")__						}_					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}_			if (this.publishEvents) {_				_				long processingTime = System.currentTimeMillis() - startTime__				this.webApplicationContext.publishEvent(_						new ServletRequestHandledEvent(this,_								request.getRequestURI(), request.getRemoteAddr(),_								request.getMethod(), getServletConfig().getServletName(),_								WebUtils.getSessionId(request), getUsernameForRequest(request),_								processingTime, failureCause))__			}_		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,null,if,previous,attributes,null,previous,attributes,get,class,equals,servlet,request,attributes,class,request,attributes,new,servlet,request,attributes,request,init,context,holders,request,locale,context,request,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,this,get,class,get,name,create,request,binding,interceptor,request,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,if,logger,is,debug,enabled,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,if,this,publish,events,long,processing,time,system,current,time,millis,start,time,this,web,application,context,publish,event,new,servlet,request,handled,event,this,request,get,request,uri,request,get,remote,addr,request,get,method,get,servlet,config,get,servlet,name,web,utils,get,session,id,request,get,username,for,request,request,processing,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1349904862;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = null__		if (previousAttributes == null || previousAttributes.getClass().equals(ServletRequestAttributes.class)) {_			requestAttributes = new ServletRequestAttributes(request)__		}__		initContextHolders(request, localeContext, requestAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(this.getClass().getName(), createRequestBindingInterceptor(request))___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				} else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						if (logger.isDebugEnabled()) {_							logger.debug("Leaving response open for concurrent processing")__						}_					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}_			if (this.publishEvents) {_				_				long processingTime = System.currentTimeMillis() - startTime__				this.webApplicationContext.publishEvent(_						new ServletRequestHandledEvent(this,_								request.getRequestURI(), request.getRemoteAddr(),_								request.getMethod(), getServletConfig().getServletName(),_								WebUtils.getSessionId(request), getUsernameForRequest(request),_								processingTime, failureCause))__			}_		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,null,if,previous,attributes,null,previous,attributes,get,class,equals,servlet,request,attributes,class,request,attributes,new,servlet,request,attributes,request,init,context,holders,request,locale,context,request,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,this,get,class,get,name,create,request,binding,interceptor,request,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,if,logger,is,debug,enabled,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,if,this,publish,events,long,processing,time,system,current,time,millis,start,time,this,web,application,context,publish,event,new,servlet,request,handled,event,this,request,get,request,uri,request,get,remote,addr,request,get,method,get,servlet,config,get,servlet,name,web,utils,get,session,id,request,get,username,for,request,request,processing,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351289067;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = null__		if (previousAttributes == null || previousAttributes.getClass().equals(ServletRequestAttributes.class)) {_			requestAttributes = new ServletRequestAttributes(request)__		}__		initContextHolders(request, localeContext, requestAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(this.getClass().getName(), createRequestBindingInterceptor(request))___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				} else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						if (logger.isDebugEnabled()) {_							logger.debug("Leaving response open for concurrent processing")__						}_					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}_			if (this.publishEvents) {_				_				long processingTime = System.currentTimeMillis() - startTime__				this.webApplicationContext.publishEvent(_						new ServletRequestHandledEvent(this,_								request.getRequestURI(), request.getRemoteAddr(),_								request.getMethod(), getServletConfig().getServletName(),_								WebUtils.getSessionId(request), getUsernameForRequest(request),_								processingTime, failureCause))__			}_		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,null,if,previous,attributes,null,previous,attributes,get,class,equals,servlet,request,attributes,class,request,attributes,new,servlet,request,attributes,request,init,context,holders,request,locale,context,request,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,this,get,class,get,name,create,request,binding,interceptor,request,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,if,logger,is,debug,enabled,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,if,this,publish,events,long,processing,time,system,current,time,millis,start,time,this,web,application,context,publish,event,new,servlet,request,handled,event,this,request,get,request,uri,request,get,remote,addr,request,get,method,get,servlet,config,get,servlet,name,web,utils,get,session,id,request,get,username,for,request,request,processing,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351648724;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = null__		if (previousAttributes == null || previousAttributes.getClass().equals(ServletRequestAttributes.class)) {_			requestAttributes = new ServletRequestAttributes(request)__		}__		initContextHolders(request, localeContext, requestAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), getRequestBindingInterceptor(request))___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				} else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						if (logger.isDebugEnabled()) {_							logger.debug("Leaving response open for concurrent processing")__						}_					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}_			if (this.publishEvents) {_				_				long processingTime = System.currentTimeMillis() - startTime__				this.webApplicationContext.publishEvent(_						new ServletRequestHandledEvent(this,_								request.getRequestURI(), request.getRemoteAddr(),_								request.getMethod(), getServletConfig().getServletName(),_								WebUtils.getSessionId(request), getUsernameForRequest(request),_								processingTime, failureCause))__			}_		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,null,if,previous,attributes,null,previous,attributes,get,class,equals,servlet,request,attributes,class,request,attributes,new,servlet,request,attributes,request,init,context,holders,request,locale,context,request,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,get,request,binding,interceptor,request,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,if,logger,is,debug,enabled,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,if,this,publish,events,long,processing,time,system,current,time,millis,start,time,this,web,application,context,publish,event,new,servlet,request,handled,event,this,request,get,request,uri,request,get,remote,addr,request,get,method,get,servlet,config,get,servlet,name,web,utils,get,session,id,request,get,username,for,request,request,processing,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351857948;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = null__		if (previousAttributes == null || previousAttributes.getClass().equals(ServletRequestAttributes.class)) {_			requestAttributes = new ServletRequestAttributes(request)__		}__		initContextHolders(request, localeContext, requestAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), getRequestBindingInterceptor(request))___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				} else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						if (logger.isDebugEnabled()) {_							logger.debug("Leaving response open for concurrent processing")__						}_					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}_			if (this.publishEvents) {_				_				long processingTime = System.currentTimeMillis() - startTime__				this.webApplicationContext.publishEvent(_						new ServletRequestHandledEvent(this,_								request.getRequestURI(), request.getRemoteAddr(),_								request.getMethod(), getServletConfig().getServletName(),_								WebUtils.getSessionId(request), getUsernameForRequest(request),_								processingTime, failureCause))__			}_		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,null,if,previous,attributes,null,previous,attributes,get,class,equals,servlet,request,attributes,class,request,attributes,new,servlet,request,attributes,request,init,context,holders,request,locale,context,request,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,get,request,binding,interceptor,request,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,if,logger,is,debug,enabled,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,if,this,publish,events,long,processing,time,system,current,time,millis,start,time,this,web,application,context,publish,event,new,servlet,request,handled,event,this,request,get,request,uri,request,get,remote,addr,request,get,method,get,servlet,config,get,servlet,name,web,utils,get,session,id,request,get,username,for,request,request,processing,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1354911578;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = null__		if (previousAttributes == null || (previousAttributes instanceof ServletRequestAttributes)) {_			requestAttributes = new ServletRequestAttributes(request)__		}__		initContextHolders(request, localeContext, requestAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), getRequestBindingInterceptor(request))___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				} else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						if (logger.isDebugEnabled()) {_							logger.debug("Leaving response open for concurrent processing")__						}_					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}_			if (this.publishEvents) {_				_				long processingTime = System.currentTimeMillis() - startTime__				this.webApplicationContext.publishEvent(_						new ServletRequestHandledEvent(this,_								request.getRequestURI(), request.getRemoteAddr(),_								request.getMethod(), getServletConfig().getServletName(),_								WebUtils.getSessionId(request), getUsernameForRequest(request),_								processingTime, failureCause))__			}_		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,null,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,request,attributes,new,servlet,request,attributes,request,init,context,holders,request,locale,context,request,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,get,request,binding,interceptor,request,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,if,logger,is,debug,enabled,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,if,this,publish,events,long,processing,time,system,current,time,millis,start,time,this,web,application,context,publish,event,new,servlet,request,handled,event,this,request,get,request,uri,request,get,remote,addr,request,get,method,get,servlet,config,get,servlet,name,web,utils,get,session,id,request,get,username,for,request,request,processing,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1355313310;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = null__		if (previousAttributes == null || (previousAttributes instanceof ServletRequestAttributes)) {_			requestAttributes = new ServletRequestAttributes(request)__		}__		initContextHolders(request, localeContext, requestAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), getRequestBindingInterceptor(request))___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				} else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						if (logger.isDebugEnabled()) {_							logger.debug("Leaving response open for concurrent processing")__						}_					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}_			if (this.publishEvents) {_				_				long processingTime = System.currentTimeMillis() - startTime__				this.webApplicationContext.publishEvent(_						new ServletRequestHandledEvent(this,_								request.getRequestURI(), request.getRemoteAddr(),_								request.getMethod(), getServletConfig().getServletName(),_								WebUtils.getSessionId(request), getUsernameForRequest(request),_								processingTime, failureCause))__			}_		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,null,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,request,attributes,new,servlet,request,attributes,request,init,context,holders,request,locale,context,request,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,get,request,binding,interceptor,request,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,if,logger,is,debug,enabled,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,if,this,publish,events,long,processing,time,system,current,time,millis,start,time,this,web,application,context,publish,event,new,servlet,request,handled,event,this,request,get,request,uri,request,get,remote,addr,request,get,method,get,servlet,config,get,servlet,name,web,utils,get,session,id,request,get,username,for,request,request,processing,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1356735495;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = null__		if (previousAttributes == null || (previousAttributes instanceof ServletRequestAttributes)) {_			requestAttributes = new ServletRequestAttributes(request)__		}__		initContextHolders(request, localeContext, requestAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), getRequestBindingInterceptor(request))___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				} else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						if (logger.isDebugEnabled()) {_							logger.debug("Leaving response open for concurrent processing")__						}_					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}_			if (this.publishEvents) {_				_				long processingTime = System.currentTimeMillis() - startTime__				this.webApplicationContext.publishEvent(_						new ServletRequestHandledEvent(this,_								request.getRequestURI(), request.getRemoteAddr(),_								request.getMethod(), getServletConfig().getServletName(),_								WebUtils.getSessionId(request), getUsernameForRequest(request),_								processingTime, failureCause))__			}_		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,null,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,request,attributes,new,servlet,request,attributes,request,init,context,holders,request,locale,context,request,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,get,request,binding,interceptor,request,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,if,logger,is,debug,enabled,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,if,this,publish,events,long,processing,time,system,current,time,millis,start,time,this,web,application,context,publish,event,new,servlet,request,handled,event,this,request,get,request,uri,request,get,remote,addr,request,get,method,get,servlet,config,get,servlet,name,web,utils,get,session,id,request,get,username,for,request,request,processing,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1357119239;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = null__		if (previousAttributes == null || (previousAttributes instanceof ServletRequestAttributes)) {_			requestAttributes = new ServletRequestAttributes(request)__		}__		initContextHolders(request, localeContext, requestAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), getRequestBindingInterceptor(request))___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				} else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						if (logger.isDebugEnabled()) {_							logger.debug("Leaving response open for concurrent processing")__						}_					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}_			if (this.publishEvents) {_				_				long processingTime = System.currentTimeMillis() - startTime__				this.webApplicationContext.publishEvent(_						new ServletRequestHandledEvent(this,_								request.getRequestURI(), request.getRemoteAddr(),_								request.getMethod(), getServletConfig().getServletName(),_								WebUtils.getSessionId(request), getUsernameForRequest(request),_								processingTime, failureCause))__			}_		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,null,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,request,attributes,new,servlet,request,attributes,request,init,context,holders,request,locale,context,request,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,get,request,binding,interceptor,request,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,if,logger,is,debug,enabled,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,if,this,publish,events,long,processing,time,system,current,time,millis,start,time,this,web,application,context,publish,event,new,servlet,request,handled,event,this,request,get,request,uri,request,get,remote,addr,request,get,method,get,servlet,config,get,servlet,name,web,utils,get,session,id,request,get,username,for,request,request,processing,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1362408075;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = null__		if (previousAttributes == null || (previousAttributes instanceof ServletRequestAttributes)) {_			requestAttributes = new ServletRequestAttributes(request)__		}__		initContextHolders(request, localeContext, requestAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), getRequestBindingInterceptor(request))___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				} else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						if (logger.isDebugEnabled()) {_							logger.debug("Leaving response open for concurrent processing")__						}_					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}_			if (this.publishEvents) {_				_				long processingTime = System.currentTimeMillis() - startTime__				this.webApplicationContext.publishEvent(_						new ServletRequestHandledEvent(this,_								request.getRequestURI(), request.getRemoteAddr(),_								request.getMethod(), getServletConfig().getServletName(),_								WebUtils.getSessionId(request), getUsernameForRequest(request),_								processingTime, failureCause))__			}_		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,null,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,request,attributes,new,servlet,request,attributes,request,init,context,holders,request,locale,context,request,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,get,request,binding,interceptor,request,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,if,logger,is,debug,enabled,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,if,this,publish,events,long,processing,time,system,current,time,millis,start,time,this,web,application,context,publish,event,new,servlet,request,handled,event,this,request,get,request,uri,request,get,remote,addr,request,get,method,get,servlet,config,get,servlet,name,web,utils,get,session,id,request,get,username,for,request,request,processing,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1363208506;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1368051298;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1368482696;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1384955432;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1385412762;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1385507478;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1389820887;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1389827047;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1400256389;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1409363223;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1409870233;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1427815317;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1427983931;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1436254479;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1449660404;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1450439838;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1453684721;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1456332614;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1458852256;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1467667881;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1467730834;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1477045587;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1495868221;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1496259743;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException ex) {_			failureCause = ex__			throw ex__		}_		catch (IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ex,failure,cause,ex,throw,ex,catch,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1496837955;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException | IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1498505691;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException | IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1498780456;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException | IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1500448076;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException | IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1502952725;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException | IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1518987682;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException | IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1519732288;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException | IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Leaving response open for concurrent processing")__					}_					else {_						this.logger.debug("Successfully completed request")__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,leaving,response,open,for,concurrent,processing,else,this,logger,debug,successfully,completed,request,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529361191;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException | IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Failed to complete request: ", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Exiting, but response remains open for further handling")__					}_					else {_						HttpStatus status = HttpStatus.resolve(response.getStatus())__						this.logger.debug("Completed " + (status != null ? status : response.getStatus()))__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,failed,to,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,exiting,but,response,remains,open,for,further,handling,else,http,status,status,http,status,resolve,response,get,status,this,logger,debug,completed,status,null,status,response,get,status,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529721864;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException | IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Failed to complete request: ", failureCause)__				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Exiting, but response remains open for further handling")__					}_					else if (logger.isDebugEnabled()) {_						HttpStatus status = HttpStatus.resolve(response.getStatus())__						logger.debug("Completed " + (status != null ? status : response.getStatus()))__					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,failed,to,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,exiting,but,response,remains,open,for,further,handling,else,if,logger,is,debug,enabled,http,status,status,http,status,resolve,response,get,status,logger,debug,completed,status,null,status,response,get,status,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529948549;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException | IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				boolean isRequestDispatch = request.getDispatcherType().equals(DispatcherType.REQUEST)__				String dispatchType = request.getDispatcherType().name()__				if (failureCause != null) {_					if (!isRequestDispatch) {_						logger.debug("Unresolved failure from \"" + dispatchType + "\" dispatch: " + failureCause)__					}_					else if (logger.isTraceEnabled()) {_						logger.trace("Failed to complete request", failureCause)__					}_					else {_						logger.debug("Failed to complete request: " + failureCause)__					}_				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Exiting but response remains open for further handling")__					}_					else {_						int status = response.getStatus()__						if (!isRequestDispatch) {_							logger.debug("Exiting from \"" + dispatchType + "\" dispatch (status " + status + ")")__						}_						else {_							HttpStatus httpStatus = HttpStatus.resolve(status)__							logger.debug("Completed " + (httpStatus != null ? httpStatus : status))__						}_					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,boolean,is,request,dispatch,request,get,dispatcher,type,equals,dispatcher,type,request,string,dispatch,type,request,get,dispatcher,type,name,if,failure,cause,null,if,is,request,dispatch,logger,debug,unresolved,failure,from,dispatch,type,dispatch,failure,cause,else,if,logger,is,trace,enabled,logger,trace,failed,to,complete,request,failure,cause,else,logger,debug,failed,to,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,exiting,but,response,remains,open,for,further,handling,else,int,status,response,get,status,if,is,request,dispatch,logger,debug,exiting,from,dispatch,type,dispatch,status,status,else,http,status,http,status,http,status,resolve,status,logger,debug,completed,http,status,null,http,status,status,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1530174524;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException | IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				boolean isRequestDispatch = request.getDispatcherType().equals(DispatcherType.REQUEST)__				String dispatchType = request.getDispatcherType().name()__				if (failureCause != null) {_					if (!isRequestDispatch) {_						logger.debug("Unresolved failure from \"" + dispatchType + "\" dispatch: " + failureCause)__					}_					else if (logger.isTraceEnabled()) {_						logger.trace("Failed to complete request", failureCause)__					}_					else {_						logger.debug("Failed to complete request: " + failureCause)__					}_				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Exiting but response remains open for further handling")__					}_					else {_						int status = response.getStatus()__						if (!isRequestDispatch) {_							logger.debug("Exiting from \"" + dispatchType + "\" dispatch (status " + status + ")")__						}_						else {_							HttpStatus httpStatus = HttpStatus.resolve(status)__							logger.debug("Completed " + (httpStatus != null ? httpStatus : status))__						}_					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,boolean,is,request,dispatch,request,get,dispatcher,type,equals,dispatcher,type,request,string,dispatch,type,request,get,dispatcher,type,name,if,failure,cause,null,if,is,request,dispatch,logger,debug,unresolved,failure,from,dispatch,type,dispatch,failure,cause,else,if,logger,is,trace,enabled,logger,trace,failed,to,complete,request,failure,cause,else,logger,debug,failed,to,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,exiting,but,response,remains,open,for,further,handling,else,int,status,response,get,status,if,is,request,dispatch,logger,debug,exiting,from,dispatch,type,dispatch,status,status,else,http,status,http,status,http,status,resolve,status,logger,debug,completed,http,status,null,http,status,status,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1530174524;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException | IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}__			if (logger.isDebugEnabled()) {_				boolean isRequestDispatch = request.getDispatcherType().equals(DispatcherType.REQUEST)__				String dispatchType = request.getDispatcherType().name()__				if (failureCause != null) {_					if (!isRequestDispatch) {_						logger.debug("Unresolved failure from \"" + dispatchType + "\" dispatch: " + failureCause)__					}_					else if (logger.isTraceEnabled()) {_						logger.trace("Failed to complete request", failureCause)__					}_					else {_						logger.debug("Failed to complete request: " + failureCause)__					}_				}_				else {_					if (asyncManager.isConcurrentHandlingStarted()) {_						logger.debug("Exiting but response remains open for further handling")__					}_					else {_						int status = response.getStatus()__						if (!isRequestDispatch) {_							logger.debug("Exiting from \"" + dispatchType + "\" dispatch (status " + status + ")")__						}_						else {_							HttpStatus httpStatus = HttpStatus.resolve(status)__							logger.debug("Completed " + (httpStatus != null ? httpStatus : status))__						}_					}_				}_			}__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,boolean,is,request,dispatch,request,get,dispatcher,type,equals,dispatcher,type,request,string,dispatch,type,request,get,dispatcher,type,name,if,failure,cause,null,if,is,request,dispatch,logger,debug,unresolved,failure,from,dispatch,type,dispatch,failure,cause,else,if,logger,is,trace,enabled,logger,trace,failed,to,complete,request,failure,cause,else,logger,debug,failed,to,complete,request,failure,cause,else,if,async,manager,is,concurrent,handling,started,logger,debug,exiting,but,response,remains,open,for,further,handling,else,int,status,response,get,status,if,is,request,dispatch,logger,debug,exiting,from,dispatch,type,dispatch,status,status,else,http,status,http,status,http,status,resolve,status,logger,debug,completed,http,status,null,http,status,status,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1531321803;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException | IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}_			logResult(request, response, failureCause, asyncManager)__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,log,result,request,response,failure,cause,async,manager,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1532555403;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException | IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}_			logResult(request, response, failureCause, asyncManager)__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,log,result,request,response,failure,cause,async,manager,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1533160168;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException | IOException ex) {_			if (!handleFailure(request, response, ex)) {_				failureCause = ex__				throw ex__			}_		}_		catch (Throwable ex) {_			if (!handleFailure(request, response, ex)) {_				failureCause = ex__				throw new NestedServletException("Request processing failed", ex)__			}_		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}_			logResult(request, response, failureCause, asyncManager)__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ioexception,ex,if,handle,failure,request,response,ex,failure,cause,ex,throw,ex,catch,throwable,ex,if,handle,failure,request,response,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,log,result,request,response,failure,cause,async,manager,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1534488420;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException | IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}_			logResult(request, response, failureCause, asyncManager)__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,log,result,request,response,failure,cause,async,manager,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1536962806;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException | IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}_			logResult(request, response, failureCause, asyncManager)__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,log,result,request,response,failure,cause,async,manager,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> protected final void processRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1541442463;Process this request, publishing an event regardless of the outcome._<p>The actual event handling is performed by the abstract_{@link #doService} template method.;protected final void processRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		long startTime = System.currentTimeMillis()__		Throwable failureCause = null___		LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext()__		LocaleContext localeContext = buildLocaleContext(request)___		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes()__		ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes)___		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request)__		asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor())___		initContextHolders(request, localeContext, requestAttributes)___		try {_			doService(request, response)__		}_		catch (ServletException | IOException ex) {_			failureCause = ex__			throw ex__		}_		catch (Throwable ex) {_			failureCause = ex__			throw new NestedServletException("Request processing failed", ex)__		}__		finally {_			resetContextHolders(request, previousLocaleContext, previousAttributes)__			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}_			logResult(request, response, failureCause, asyncManager)__			publishRequestHandledEvent(request, response, startTime, failureCause)__		}_	};process,this,request,publishing,an,event,regardless,of,the,outcome,p,the,actual,event,handling,is,performed,by,the,abstract,link,do,service,template,method;protected,final,void,process,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,long,start,time,system,current,time,millis,throwable,failure,cause,null,locale,context,previous,locale,context,locale,context,holder,get,locale,context,locale,context,locale,context,build,locale,context,request,request,attributes,previous,attributes,request,context,holder,get,request,attributes,servlet,request,attributes,request,attributes,build,request,attributes,request,response,previous,attributes,web,async,manager,async,manager,web,async,utils,get,async,manager,request,async,manager,register,callable,interceptor,framework,servlet,class,get,name,new,request,binding,interceptor,init,context,holders,request,locale,context,request,attributes,try,do,service,request,response,catch,servlet,exception,ioexception,ex,failure,cause,ex,throw,ex,catch,throwable,ex,failure,cause,ex,throw,new,nested,servlet,exception,request,processing,failed,ex,finally,reset,context,holders,request,previous,locale,context,previous,attributes,if,request,attributes,null,request,attributes,request,completed,log,result,request,response,failure,cause,async,manager,publish,request,handled,event,request,response,start,time,failure,cause
FrameworkServlet -> public void setNamespace(String namespace);1328020251;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1334781369;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1335774711;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1340398642;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1342803001;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1344035753;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1345223391;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1346877235;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1347908336;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1348061150;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1348531024;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1349904862;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1351289067;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1351648724;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1351857948;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1354911578;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1355313310;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1356735495;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1357119239;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1362408075;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1363208506;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1368051298;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1368482696;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1384955432;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1385412762;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1385507478;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1389820887;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1389827047;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1400256389;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1409363223;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1409870233;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1427815317;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1427983931;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1436254479;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1449660404;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1450439838;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1453684721;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1456332614;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1458852256;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1467667881;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1467730834;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1477045587;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1495868221;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1496259743;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1496837955;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1498505691;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1498780456;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1500448076;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1502952725;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1518987682;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1519732288;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1529361191;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1529721864;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1529948549;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1530174524;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1530174524;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1531321803;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1532555403;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1533160168;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1534488420;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1536962806;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> public void setNamespace(String namespace);1541442463;Set a custom namespace for this servlet,_to be used for building a default context config location.;public void setNamespace(String namespace) {_		this.namespace = namespace__	};set,a,custom,namespace,for,this,servlet,to,be,used,for,building,a,default,context,config,location;public,void,set,namespace,string,namespace,this,namespace,namespace
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1328020251;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1334781369;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1335774711;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1340398642;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1342803001;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1344035753;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1345223391;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1346877235;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1347908336;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1348061150;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1348531024;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1349904862;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351289067;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351648724;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351857948;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1354911578;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1355313310;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1356735495;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1357119239;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1362408075;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1363208506;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1368051298;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1368482696;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1384955432;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1385412762;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1385507478;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1389820887;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1389827047;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1400256389;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1409363223;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1409870233;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1427815317;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1427983931;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1436254479;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1449660404;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1450439838;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1453684721;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1456332614;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1458852256;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1467667881;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1467730834;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1477045587;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1495868221;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1496259743;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1496837955;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1498505691;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1498780456;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1500448076;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1502952725;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1518987682;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1519732288;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529361191;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529721864;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529948549;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1530174524;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1530174524;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1531321803;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1532555403;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1533160168;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1534488420;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1536962806;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPost(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1541442463;Delegate POST requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPost(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,post,requests,to,link,process,request,see,do,service;override,protected,final,void,do,post,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Nullable 	public String getContextConfigLocation();1495868221;Return the explicit context config location, if any.;@Nullable_	public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;nullable,public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> @Nullable 	public String getContextConfigLocation();1496259743;Return the explicit context config location, if any.;@Nullable_	public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;nullable,public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> @Nullable 	public String getContextConfigLocation();1496837955;Return the explicit context config location, if any.;@Nullable_	public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;nullable,public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> @Nullable 	public String getContextConfigLocation();1498505691;Return the explicit context config location, if any.;@Nullable_	public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;nullable,public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> @Nullable 	public String getContextConfigLocation();1498780456;Return the explicit context config location, if any.;@Nullable_	public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;nullable,public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> @Nullable 	public String getContextConfigLocation();1500448076;Return the explicit context config location, if any.;@Nullable_	public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;nullable,public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> @Nullable 	public String getContextConfigLocation();1502952725;Return the explicit context config location, if any.;@Nullable_	public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;nullable,public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> @Nullable 	public String getContextConfigLocation();1518987682;Return the explicit context config location, if any.;@Nullable_	public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;nullable,public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> @Nullable 	public String getContextConfigLocation();1519732288;Return the explicit context config location, if any.;@Nullable_	public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;nullable,public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> @Nullable 	public String getContextConfigLocation();1529361191;Return the explicit context config location, if any.;@Nullable_	public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;nullable,public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> @Nullable 	public String getContextConfigLocation();1529721864;Return the explicit context config location, if any.;@Nullable_	public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;nullable,public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> @Nullable 	public String getContextConfigLocation();1529948549;Return the explicit context config location, if any.;@Nullable_	public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;nullable,public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> @Nullable 	public String getContextConfigLocation();1530174524;Return the explicit context config location, if any.;@Nullable_	public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;nullable,public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> @Nullable 	public String getContextConfigLocation();1530174524;Return the explicit context config location, if any.;@Nullable_	public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;nullable,public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> @Nullable 	public String getContextConfigLocation();1531321803;Return the explicit context config location, if any.;@Nullable_	public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;nullable,public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> @Nullable 	public String getContextConfigLocation();1532555403;Return the explicit context config location, if any.;@Nullable_	public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;nullable,public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> @Nullable 	public String getContextConfigLocation();1533160168;Return the explicit context config location, if any.;@Nullable_	public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;nullable,public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> @Nullable 	public String getContextConfigLocation();1534488420;Return the explicit context config location, if any.;@Nullable_	public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;nullable,public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> @Nullable 	public String getContextConfigLocation();1536962806;Return the explicit context config location, if any.;@Nullable_	public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;nullable,public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> @Nullable 	public String getContextConfigLocation();1541442463;Return the explicit context config location, if any.;@Nullable_	public String getContextConfigLocation() {_		return this.contextConfigLocation__	};return,the,explicit,context,config,location,if,any;nullable,public,string,get,context,config,location,return,this,context,config,location
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1328020251;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or <code>null</code> if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,code,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1334781369;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or <code>null</code> if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,code,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1335774711;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or <code>null</code> if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,code,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1340398642;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or <code>null</code> if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,code,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1342803001;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or <code>null</code> if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,code,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1344035753;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or <code>null</code> if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,code,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1345223391;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or <code>null</code> if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,code,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1346877235;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or <code>null</code> if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,code,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1347908336;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or <code>null</code> if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,code,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1348061150;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or <code>null</code> if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,code,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1348531024;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or <code>null</code> if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,code,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1349904862;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or <code>null</code> if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,code,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1351289067;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or <code>null</code> if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,code,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1351648724;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or <code>null</code> if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,code,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1351857948;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or <code>null</code> if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,code,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1354911578;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or <code>null</code> if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,code,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1355313310;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or <code>null</code> if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,code,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1356735495;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1357119239;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1362408075;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1363208506;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1368051298;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1368482696;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1384955432;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1385412762;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1385507478;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1389820887;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1389827047;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1400256389;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1409363223;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1409870233;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1427815317;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1427983931;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1436254479;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1449660404;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1450439838;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1453684721;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1456332614;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1458852256;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1467667881;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1467730834;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> protected String getUsernameForRequest(HttpServletRequest request);1477045587;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> @Nullable 	protected WebApplicationContext findWebApplicationContext();1495868221;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();@Nullable_	protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;nullable,protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> @Nullable 	protected WebApplicationContext findWebApplicationContext();1496259743;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();@Nullable_	protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;nullable,protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> @Nullable 	protected WebApplicationContext findWebApplicationContext();1496837955;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();@Nullable_	protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;nullable,protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> @Nullable 	protected WebApplicationContext findWebApplicationContext();1498505691;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();@Nullable_	protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;nullable,protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> @Nullable 	protected WebApplicationContext findWebApplicationContext();1498780456;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();@Nullable_	protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;nullable,protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> @Nullable 	protected WebApplicationContext findWebApplicationContext();1500448076;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();@Nullable_	protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;nullable,protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> @Nullable 	protected WebApplicationContext findWebApplicationContext();1502952725;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();@Nullable_	protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;nullable,protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> @Nullable 	protected WebApplicationContext findWebApplicationContext();1518987682;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();@Nullable_	protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;nullable,protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> @Nullable 	protected WebApplicationContext findWebApplicationContext();1519732288;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();@Nullable_	protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;nullable,protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> @Nullable 	protected WebApplicationContext findWebApplicationContext();1529361191;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();@Nullable_	protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;nullable,protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> @Nullable 	protected WebApplicationContext findWebApplicationContext();1529721864;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();@Nullable_	protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;nullable,protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> @Nullable 	protected WebApplicationContext findWebApplicationContext();1529948549;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();@Nullable_	protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;nullable,protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> @Nullable 	protected WebApplicationContext findWebApplicationContext();1530174524;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();@Nullable_	protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;nullable,protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> @Nullable 	protected WebApplicationContext findWebApplicationContext();1530174524;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();@Nullable_	protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;nullable,protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> @Nullable 	protected WebApplicationContext findWebApplicationContext();1531321803;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();@Nullable_	protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;nullable,protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> @Nullable 	protected WebApplicationContext findWebApplicationContext();1532555403;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();@Nullable_	protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;nullable,protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> @Nullable 	protected WebApplicationContext findWebApplicationContext();1533160168;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();@Nullable_	protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;nullable,protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> @Nullable 	protected WebApplicationContext findWebApplicationContext();1534488420;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();@Nullable_	protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;nullable,protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> @Nullable 	protected WebApplicationContext findWebApplicationContext();1536962806;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();@Nullable_	protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;nullable,protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> @Nullable 	protected WebApplicationContext findWebApplicationContext();1541442463;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();@Nullable_	protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;nullable,protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1328020251;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1334781369;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1335774711;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1340398642;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1342803001;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1344035753;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1345223391;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1346877235;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1347908336;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1348061150;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1348531024;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1349904862;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1351289067;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1351648724;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1351857948;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1354911578;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1355313310;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1356735495;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1357119239;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1362408075;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1363208506;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1368051298;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1368482696;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1384955432;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1385412762;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1385507478;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1389820887;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1389827047;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1400256389;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1409363223;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1409870233;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1427815317;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1427983931;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1436254479;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1449660404;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1450439838;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1453684721;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1456332614;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1458852256;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1467667881;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1467730834;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1477045587;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1495868221;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1496259743;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1496837955;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1498505691;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(String contextAttribute);1498780456;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextConfigLocation(@Nullable String contextConfigLocation);1500448076;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(@Nullable String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,nullable,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(@Nullable String contextConfigLocation);1502952725;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(@Nullable String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,nullable,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(@Nullable String contextConfigLocation);1518987682;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(@Nullable String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,nullable,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(@Nullable String contextConfigLocation);1519732288;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(@Nullable String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,nullable,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(@Nullable String contextConfigLocation);1529361191;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(@Nullable String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,nullable,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(@Nullable String contextConfigLocation);1529721864;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(@Nullable String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,nullable,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(@Nullable String contextConfigLocation);1529948549;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(@Nullable String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,nullable,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(@Nullable String contextConfigLocation);1530174524;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(@Nullable String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,nullable,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(@Nullable String contextConfigLocation);1530174524;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(@Nullable String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,nullable,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(@Nullable String contextConfigLocation);1531321803;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(@Nullable String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,nullable,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(@Nullable String contextConfigLocation);1532555403;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(@Nullable String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,nullable,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(@Nullable String contextConfigLocation);1533160168;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(@Nullable String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,nullable,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(@Nullable String contextConfigLocation);1534488420;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(@Nullable String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,nullable,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(@Nullable String contextConfigLocation);1536962806;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(@Nullable String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,nullable,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void setContextConfigLocation(@Nullable String contextConfigLocation);1541442463;Set the context config location explicitly, instead of relying on the default_location built from the namespace. This location string can consist of_multiple locations separated by any number of commas and spaces.;public void setContextConfigLocation(@Nullable String contextConfigLocation) {_		this.contextConfigLocation = contextConfigLocation__	};set,the,context,config,location,explicitly,instead,of,relying,on,the,default,location,built,from,the,namespace,this,location,string,can,consist,of,multiple,locations,separated,by,any,number,of,commas,and,spaces;public,void,set,context,config,location,nullable,string,context,config,location,this,context,config,location,context,config,location
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1328020251;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1334781369;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1335774711;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1340398642;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1342803001;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1344035753;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1345223391;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1346877235;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1347908336;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1348061150;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1348531024;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1349904862;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1351289067;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1351648724;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1351857948;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1354911578;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1355313310;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1356735495;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1357119239;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1362408075;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1363208506;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1368051298;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1368482696;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1384955432;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1385412762;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1385507478;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1389820887;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1389827047;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1400256389;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1409363223;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1409870233;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1427815317;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1427983931;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1436254479;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1449660404;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1450439838;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1453684721;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1456332614;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1458852256;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1467667881;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1467730834;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1477045587;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1495868221;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1496259743;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1496837955;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1498505691;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1498780456;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1500448076;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1502952725;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1518987682;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1519732288;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1529361191;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1529721864;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1529948549;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1530174524;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1530174524;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1531321803;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1532555403;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1533160168;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1534488420;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1536962806;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		onRefresh(event.getApplicationContext())__	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,on,refresh,event,get,application,context
FrameworkServlet -> public void onApplicationEvent(ContextRefreshedEvent event);1541442463;Callback that receives refresh events from this servlet's WebApplicationContext._<p>The default implementation calls {@link #onRefresh},_triggering a refresh of this servlet's context-dependent state._@param event the incoming ApplicationContext event;public void onApplicationEvent(ContextRefreshedEvent event) {_		this.refreshEventReceived = true__		synchronized (this.onRefreshMonitor) {_			onRefresh(event.getApplicationContext())__		}_	};callback,that,receives,refresh,events,from,this,servlet,s,web,application,context,p,the,default,implementation,calls,link,on,refresh,triggering,a,refresh,of,this,servlet,s,context,dependent,state,param,event,the,incoming,application,context,event;public,void,on,application,event,context,refreshed,event,event,this,refresh,event,received,true,synchronized,this,on,refresh,monitor,on,refresh,event,get,application,context
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers);1496837955;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,nullable,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers);1498505691;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,nullable,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers);1498780456;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,nullable,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers);1500448076;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,nullable,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers);1502952725;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,nullable,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers);1518987682;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,nullable,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers);1519732288;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,nullable,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers);1529361191;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,nullable,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers);1529721864;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,nullable,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers);1529948549;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,nullable,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers);1530174524;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,nullable,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers);1530174524;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,nullable,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers);1531321803;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,nullable,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers);1532555403;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,nullable,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers);1533160168;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,nullable,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers);1534488420;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,nullable,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers);1536962806;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,nullable,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers);1541442463;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext_@see #applyInitializers;@SuppressWarnings("unchecked")_	public void setContextInitializers(@Nullable ApplicationContextInitializer<?>... initializers) {_		if (initializers != null) {_			for (ApplicationContextInitializer<?> initializer : initializers) {_				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer)__			}_		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,see,apply,initializers;suppress,warnings,unchecked,public,void,set,context,initializers,nullable,application,context,initializer,initializers,if,initializers,null,for,application,context,initializer,initializer,initializers,this,context,initializers,add,application,context,initializer,configurable,application,context,initializer
FrameworkServlet -> private void finalizeProcessing(long startTime, HttpServletRequest request, HttpServletResponse response, 			ServletRequestAttributes requestAttributes, Throwable t) throws ServletException, IOException;1334781369;Log and re-throw unhandled exceptions, publish a ServletRequestHandledEvent, etc.;private void finalizeProcessing(long startTime, HttpServletRequest request, HttpServletResponse response,_			ServletRequestAttributes requestAttributes, Throwable t) throws ServletException, IOException {__		Throwable failureCause = null__		try {_			if (t != null) {_				if (t instanceof ServletException) {_					failureCause = t__					throw (ServletException) t__				}_				else if (t instanceof IOException) {_					failureCause = t__					throw (IOException) t__				}_				else {_					NestedServletException ex = new NestedServletException("Request processing failed", t)__					failureCause = ex__					throw ex__				}_			}_		}_		finally {_			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}_			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					this.logger.debug("Successfully completed request")__				}_			}_			if (this.publishEvents) {_				_				long processingTime = System.currentTimeMillis() - startTime__				this.webApplicationContext.publishEvent(_						new ServletRequestHandledEvent(this,_								request.getRequestURI(), request.getRemoteAddr(),_								request.getMethod(), getServletConfig().getServletName(),_								WebUtils.getSessionId(request), getUsernameForRequest(request),_								processingTime, failureCause))__			}_		}_	};log,and,re,throw,unhandled,exceptions,publish,a,servlet,request,handled,event,etc;private,void,finalize,processing,long,start,time,http,servlet,request,request,http,servlet,response,response,servlet,request,attributes,request,attributes,throwable,t,throws,servlet,exception,ioexception,throwable,failure,cause,null,try,if,t,null,if,t,instanceof,servlet,exception,failure,cause,t,throw,servlet,exception,t,else,if,t,instanceof,ioexception,failure,cause,t,throw,ioexception,t,else,nested,servlet,exception,ex,new,nested,servlet,exception,request,processing,failed,t,failure,cause,ex,throw,ex,finally,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,this,logger,debug,successfully,completed,request,if,this,publish,events,long,processing,time,system,current,time,millis,start,time,this,web,application,context,publish,event,new,servlet,request,handled,event,this,request,get,request,uri,request,get,remote,addr,request,get,method,get,servlet,config,get,servlet,name,web,utils,get,session,id,request,get,username,for,request,request,processing,time,failure,cause
FrameworkServlet -> private void finalizeProcessing(long startTime, HttpServletRequest request, HttpServletResponse response, 			ServletRequestAttributes requestAttributes, Throwable t) throws ServletException, IOException;1335774711;Log and re-throw unhandled exceptions, publish a ServletRequestHandledEvent, etc.;private void finalizeProcessing(long startTime, HttpServletRequest request, HttpServletResponse response,_			ServletRequestAttributes requestAttributes, Throwable t) throws ServletException, IOException {__		Throwable failureCause = null__		try {_			if (t != null) {_				if (t instanceof ServletException) {_					failureCause = t__					throw (ServletException) t__				}_				else if (t instanceof IOException) {_					failureCause = t__					throw (IOException) t__				}_				else {_					NestedServletException ex = new NestedServletException("Request processing failed", t)__					failureCause = ex__					throw ex__				}_			}_		}_		finally {_			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}_			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					this.logger.debug("Successfully completed request")__				}_			}_			if (this.publishEvents) {_				_				long processingTime = System.currentTimeMillis() - startTime__				this.webApplicationContext.publishEvent(_						new ServletRequestHandledEvent(this,_								request.getRequestURI(), request.getRemoteAddr(),_								request.getMethod(), getServletConfig().getServletName(),_								WebUtils.getSessionId(request), getUsernameForRequest(request),_								processingTime, failureCause))__			}_		}_	};log,and,re,throw,unhandled,exceptions,publish,a,servlet,request,handled,event,etc;private,void,finalize,processing,long,start,time,http,servlet,request,request,http,servlet,response,response,servlet,request,attributes,request,attributes,throwable,t,throws,servlet,exception,ioexception,throwable,failure,cause,null,try,if,t,null,if,t,instanceof,servlet,exception,failure,cause,t,throw,servlet,exception,t,else,if,t,instanceof,ioexception,failure,cause,t,throw,ioexception,t,else,nested,servlet,exception,ex,new,nested,servlet,exception,request,processing,failed,t,failure,cause,ex,throw,ex,finally,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,this,logger,debug,successfully,completed,request,if,this,publish,events,long,processing,time,system,current,time,millis,start,time,this,web,application,context,publish,event,new,servlet,request,handled,event,this,request,get,request,uri,request,get,remote,addr,request,get,method,get,servlet,config,get,servlet,name,web,utils,get,session,id,request,get,username,for,request,request,processing,time,failure,cause
FrameworkServlet -> private void finalizeProcessing(long startTime, HttpServletRequest request, HttpServletResponse response, 			ServletRequestAttributes requestAttributes, Throwable t) throws ServletException, IOException;1340398642;Log and re-throw unhandled exceptions, publish a ServletRequestHandledEvent, etc.;private void finalizeProcessing(long startTime, HttpServletRequest request, HttpServletResponse response,_			ServletRequestAttributes requestAttributes, Throwable t) throws ServletException, IOException {__		Throwable failureCause = null__		try {_			if (t != null) {_				if (t instanceof ServletException) {_					failureCause = t__					throw (ServletException) t__				}_				else if (t instanceof IOException) {_					failureCause = t__					throw (IOException) t__				}_				else {_					NestedServletException ex = new NestedServletException("Request processing failed", t)__					failureCause = ex__					throw ex__				}_			}_		}_		finally {_			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}_			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					this.logger.debug("Successfully completed request")__				}_			}_			if (this.publishEvents) {_				_				long processingTime = System.currentTimeMillis() - startTime__				this.webApplicationContext.publishEvent(_						new ServletRequestHandledEvent(this,_								request.getRequestURI(), request.getRemoteAddr(),_								request.getMethod(), getServletConfig().getServletName(),_								WebUtils.getSessionId(request), getUsernameForRequest(request),_								processingTime, failureCause))__			}_		}_	};log,and,re,throw,unhandled,exceptions,publish,a,servlet,request,handled,event,etc;private,void,finalize,processing,long,start,time,http,servlet,request,request,http,servlet,response,response,servlet,request,attributes,request,attributes,throwable,t,throws,servlet,exception,ioexception,throwable,failure,cause,null,try,if,t,null,if,t,instanceof,servlet,exception,failure,cause,t,throw,servlet,exception,t,else,if,t,instanceof,ioexception,failure,cause,t,throw,ioexception,t,else,nested,servlet,exception,ex,new,nested,servlet,exception,request,processing,failed,t,failure,cause,ex,throw,ex,finally,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,this,logger,debug,successfully,completed,request,if,this,publish,events,long,processing,time,system,current,time,millis,start,time,this,web,application,context,publish,event,new,servlet,request,handled,event,this,request,get,request,uri,request,get,remote,addr,request,get,method,get,servlet,config,get,servlet,name,web,utils,get,session,id,request,get,username,for,request,request,processing,time,failure,cause
FrameworkServlet -> private void finalizeProcessing(long startTime, HttpServletRequest request, HttpServletResponse response, 			ServletRequestAttributes requestAttributes, Throwable t) throws ServletException, IOException;1342803001;Log and re-throw unhandled exceptions, publish a ServletRequestHandledEvent, etc.;private void finalizeProcessing(long startTime, HttpServletRequest request, HttpServletResponse response,_			ServletRequestAttributes requestAttributes, Throwable t) throws ServletException, IOException {__		Throwable failureCause = null__		try {_			if (t != null) {_				if (t instanceof ServletException) {_					failureCause = t__					throw (ServletException) t__				}_				else if (t instanceof IOException) {_					failureCause = t__					throw (IOException) t__				}_				else {_					NestedServletException ex = new NestedServletException("Request processing failed", t)__					failureCause = ex__					throw ex__				}_			}_		}_		finally {_			if (requestAttributes != null) {_				requestAttributes.requestCompleted()__			}_			if (logger.isDebugEnabled()) {_				if (failureCause != null) {_					this.logger.debug("Could not complete request", failureCause)__				}_				else {_					this.logger.debug("Successfully completed request")__				}_			}_			if (this.publishEvents) {_				_				long processingTime = System.currentTimeMillis() - startTime__				this.webApplicationContext.publishEvent(_						new ServletRequestHandledEvent(this,_								request.getRequestURI(), request.getRemoteAddr(),_								request.getMethod(), getServletConfig().getServletName(),_								WebUtils.getSessionId(request), getUsernameForRequest(request),_								processingTime, failureCause))__			}_		}_	};log,and,re,throw,unhandled,exceptions,publish,a,servlet,request,handled,event,etc;private,void,finalize,processing,long,start,time,http,servlet,request,request,http,servlet,response,response,servlet,request,attributes,request,attributes,throwable,t,throws,servlet,exception,ioexception,throwable,failure,cause,null,try,if,t,null,if,t,instanceof,servlet,exception,failure,cause,t,throw,servlet,exception,t,else,if,t,instanceof,ioexception,failure,cause,t,throw,ioexception,t,else,nested,servlet,exception,ex,new,nested,servlet,exception,request,processing,failed,t,failure,cause,ex,throw,ex,finally,if,request,attributes,null,request,attributes,request,completed,if,logger,is,debug,enabled,if,failure,cause,null,this,logger,debug,could,not,complete,request,failure,cause,else,this,logger,debug,successfully,completed,request,if,this,publish,events,long,processing,time,system,current,time,millis,start,time,this,web,application,context,publish,event,new,servlet,request,handled,event,this,request,get,request,uri,request,get,remote,addr,request,get,method,get,servlet,config,get,servlet,name,web,utils,get,session,id,request,get,username,for,request,request,processing,time,failure,cause
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1328020251;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1334781369;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1335774711;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1340398642;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1342803001;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1344035753;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1345223391;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1346877235;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1347908336;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1348061150;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1348531024;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1349904862;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351289067;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351648724;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351857948;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1354911578;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1355313310;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1356735495;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1357119239;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1362408075;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1363208506;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1368051298;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1368482696;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1384955432;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1385412762;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1385507478;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1389820887;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1389827047;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1400256389;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1409363223;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1409870233;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1427815317;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1427983931;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1436254479;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1449660404;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1450439838;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1453684721;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1456332614;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1458852256;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1467667881;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1467730834;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1477045587;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1495868221;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1496259743;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1496837955;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1498505691;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1498780456;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1500448076;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1502952725;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1518987682;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1519732288;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529361191;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529721864;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529948549;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1530174524;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1530174524;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1531321803;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1532555403;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1533160168;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1534488420;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1536962806;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	protected void doTrace(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1541442463;Delegate TRACE requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard TRACE processing otherwise._@see #doService;@Override_	protected void doTrace(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchTraceRequest) {_			processRequest(request, response)__			if ("message/http".equals(response.getContentType())) {_				_				return__			}_		}_		super.doTrace(request, response)__	};delegate,trace,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,trace,processing,otherwise,see,do,service;override,protected,void,do,trace,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,trace,request,process,request,request,response,if,message,http,equals,response,get,content,type,return,super,do,trace,request,response
FrameworkServlet -> @Override 	public void destroy();1328020251;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1334781369;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1335774711;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1340398642;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1342803001;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1344035753;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1345223391;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1346877235;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1347908336;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1348061150;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1348531024;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1349904862;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1351289067;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1351648724;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1351857948;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1354911578;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1355313310;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1356735495;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1357119239;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1362408075;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1363208506;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1368051298;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		if (this.webApplicationContextInjected) {_			return__		}_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,if,this,web,application,context,injected,return,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1368482696;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		if (this.webApplicationContextInjected) {_			return__		}_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,if,this,web,application,context,injected,return,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1384955432;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		if (this.webApplicationContextInjected) {_			return__		}_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,if,this,web,application,context,injected,return,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1385412762;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		if (this.webApplicationContextInjected) {_			return__		}_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,if,this,web,application,context,injected,return,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1385507478;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		if (this.webApplicationContextInjected) {_			return__		}_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,if,this,web,application,context,injected,return,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1389820887;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		if (this.webApplicationContextInjected) {_			return__		}_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		if (this.webApplicationContext instanceof ConfigurableApplicationContext) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,if,this,web,application,context,injected,return,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1389827047;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1400256389;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1409363223;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1409870233;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1427815317;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1427983931;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1436254479;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1449660404;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1450439838;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1453684721;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1456332614;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1458852256;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1467667881;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1467730834;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1477045587;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1495868221;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1496259743;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1496837955;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1498505691;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1498780456;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1500448076;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1502952725;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1518987682;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1519732288;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1529361191;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1529721864;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1529948549;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1530174524;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1530174524;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1531321803;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1532555403;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1533160168;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1534488420;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1536962806;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> @Override 	public void destroy();1541442463;Close the WebApplicationContext of this servlet._@see org.springframework.context.ConfigurableApplicationContext#close();@Override_	public void destroy() {_		getServletContext().log("Destroying Spring FrameworkServlet '" + getServletName() + "'")__		_		if (this.webApplicationContext instanceof ConfigurableApplicationContext && !this.webApplicationContextInjected) {_			((ConfigurableApplicationContext) this.webApplicationContext).close()__		}_	};close,the,web,application,context,of,this,servlet,see,org,springframework,context,configurable,application,context,close;override,public,void,destroy,get,servlet,context,log,destroying,spring,framework,servlet,get,servlet,name,if,this,web,application,context,instanceof,configurable,application,context,this,web,application,context,injected,configurable,application,context,this,web,application,context,close
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1328020251;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1334781369;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1335774711;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1340398642;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1342803001;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1344035753;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1345223391;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1346877235;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1347908336;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1348061150;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1348531024;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1349904862;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1351289067;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1351648724;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1351857948;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1354911578;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1355313310;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1356735495;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1357119239;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1362408075;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1363208506;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1368051298;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1368482696;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1384955432;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1385412762;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1385507478;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1389820887;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1389827047;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1400256389;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1409363223;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1409870233;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1427815317;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1427983931;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1436254479;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1449660404;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1450439838;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1453684721;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1456332614;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1458852256;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1467667881;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1467730834;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1477045587;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1495868221;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1496259743;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1496837955;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1498505691;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1498780456;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1500448076;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1502952725;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1518987682;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1519732288;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1529361191;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1529721864;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1529948549;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1530174524;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1530174524;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1531321803;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1532555403;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1533160168;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1534488420;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1536962806;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> public void setPublishEvents(boolean publishEvents);1541442463;Set whether this servlet should publish a ServletRequestHandledEvent at the end_of each request. Default is "true"_ can be turned off for a slight performance_improvement, provided that no ApplicationListeners rely on such events._@see org.springframework.web.context.support.ServletRequestHandledEvent;public void setPublishEvents(boolean publishEvents) {_		this.publishEvents = publishEvents__	};set,whether,this,servlet,should,publish,a,servlet,request,handled,event,at,the,end,of,each,request,default,is,true,can,be,turned,off,for,a,slight,performance,improvement,provided,that,no,application,listeners,rely,on,such,events,see,org,springframework,web,context,support,servlet,request,handled,event;public,void,set,publish,events,boolean,publish,events,this,publish,events,publish,events
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1328020251;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1334781369;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1335774711;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1340398642;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1342803001;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1344035753;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1345223391;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1346877235;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1347908336;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1348061150;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1348531024;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1349904862;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1351289067;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1351648724;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1351857948;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1354911578;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1355313310;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1356735495;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1357119239;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1362408075;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1363208506;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1368051298;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1368482696;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1384955432;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1385412762;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1385507478;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1389820887;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1389827047;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1400256389;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1409363223;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1409870233;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1427815317;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1427983931;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1436254479;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1449660404;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1450439838;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1453684721;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1456332614;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1458852256;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1467667881;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1467730834;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1477045587;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1495868221;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1496259743;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1496837955;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1498505691;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1498780456;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1500448076;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1502952725;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1518987682;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}_		catch (RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,catch,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1519732288;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException | RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1529361191;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException | RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1529721864;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException | RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1529948549;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException | RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1530174524;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (this.logger.isInfoEnabled()) {_			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException | RuntimeException ex) {_			this.logger.error("Context initialization failed", ex)__			throw ex__		}__		if (this.logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			this.logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,this,logger,is,info,enabled,this,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,runtime,exception,ex,this,logger,error,context,initialization,failed,ex,throw,ex,if,this,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,this,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1530174524;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (logger.isInfoEnabled()) {_			logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException | RuntimeException ex) {_			logger.error("Context initialization failed", ex)__			throw ex__		}__		if (logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,logger,is,info,enabled,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,runtime,exception,ex,logger,error,context,initialization,failed,ex,throw,ex,if,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1531321803;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring FrameworkServlet '" + getServletName() + "'")__		if (logger.isInfoEnabled()) {_			logger.info("FrameworkServlet '" + getServletName() + "': initialization started")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException | RuntimeException ex) {_			logger.error("Context initialization failed", ex)__			throw ex__		}__		if (logger.isDebugEnabled()) {_			String value = this.enableLoggingRequestDetails ?_					"shown which may lead to unsafe logging of potentially sensitive data" :_					"masked to prevent unsafe logging of potentially sensitive data"__			logger.debug("enableLoggingRequestDetails='" + this.enableLoggingRequestDetails +_					"': request parameters and headers will be " + value)__		}__		if (logger.isInfoEnabled()) {_			long elapsedTime = System.currentTimeMillis() - startTime__			logger.info("FrameworkServlet '" + getServletName() + "': initialization completed in " +_					elapsedTime + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,framework,servlet,get,servlet,name,if,logger,is,info,enabled,logger,info,framework,servlet,get,servlet,name,initialization,started,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,runtime,exception,ex,logger,error,context,initialization,failed,ex,throw,ex,if,logger,is,debug,enabled,string,value,this,enable,logging,request,details,shown,which,may,lead,to,unsafe,logging,of,potentially,sensitive,data,masked,to,prevent,unsafe,logging,of,potentially,sensitive,data,logger,debug,enable,logging,request,details,this,enable,logging,request,details,request,parameters,and,headers,will,be,value,if,logger,is,info,enabled,long,elapsed,time,system,current,time,millis,start,time,logger,info,framework,servlet,get,servlet,name,initialization,completed,in,elapsed,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1532555403;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring " + getClass().getSimpleName() + " '" + getServletName() + "'")__		if (logger.isInfoEnabled()) {_			logger.info("Initializing Servlet '" + getServletName() + "'")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException | RuntimeException ex) {_			logger.error("Context initialization failed", ex)__			throw ex__		}__		if (logger.isDebugEnabled()) {_			String value = this.enableLoggingRequestDetails ?_					"shown which may lead to unsafe logging of potentially sensitive data" :_					"masked to prevent unsafe logging of potentially sensitive data"__			logger.debug("enableLoggingRequestDetails='" + this.enableLoggingRequestDetails +_					"': request parameters and headers will be " + value)__		}__		if (logger.isInfoEnabled()) {_			logger.info("Completed initialization in " + (System.currentTimeMillis() - startTime) + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,get,class,get,simple,name,get,servlet,name,if,logger,is,info,enabled,logger,info,initializing,servlet,get,servlet,name,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,runtime,exception,ex,logger,error,context,initialization,failed,ex,throw,ex,if,logger,is,debug,enabled,string,value,this,enable,logging,request,details,shown,which,may,lead,to,unsafe,logging,of,potentially,sensitive,data,masked,to,prevent,unsafe,logging,of,potentially,sensitive,data,logger,debug,enable,logging,request,details,this,enable,logging,request,details,request,parameters,and,headers,will,be,value,if,logger,is,info,enabled,logger,info,completed,initialization,in,system,current,time,millis,start,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1533160168;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring " + getClass().getSimpleName() + " '" + getServletName() + "'")__		if (logger.isInfoEnabled()) {_			logger.info("Initializing Servlet '" + getServletName() + "'")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException | RuntimeException ex) {_			logger.error("Context initialization failed", ex)__			throw ex__		}__		if (logger.isDebugEnabled()) {_			String value = this.enableLoggingRequestDetails ?_					"shown which may lead to unsafe logging of potentially sensitive data" :_					"masked to prevent unsafe logging of potentially sensitive data"__			logger.debug("enableLoggingRequestDetails='" + this.enableLoggingRequestDetails +_					"': request parameters and headers will be " + value)__		}__		if (logger.isInfoEnabled()) {_			logger.info("Completed initialization in " + (System.currentTimeMillis() - startTime) + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,get,class,get,simple,name,get,servlet,name,if,logger,is,info,enabled,logger,info,initializing,servlet,get,servlet,name,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,runtime,exception,ex,logger,error,context,initialization,failed,ex,throw,ex,if,logger,is,debug,enabled,string,value,this,enable,logging,request,details,shown,which,may,lead,to,unsafe,logging,of,potentially,sensitive,data,masked,to,prevent,unsafe,logging,of,potentially,sensitive,data,logger,debug,enable,logging,request,details,this,enable,logging,request,details,request,parameters,and,headers,will,be,value,if,logger,is,info,enabled,logger,info,completed,initialization,in,system,current,time,millis,start,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1534488420;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring " + getClass().getSimpleName() + " '" + getServletName() + "'")__		if (logger.isInfoEnabled()) {_			logger.info("Initializing Servlet '" + getServletName() + "'")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException | RuntimeException ex) {_			logger.error("Context initialization failed", ex)__			throw ex__		}__		if (logger.isDebugEnabled()) {_			String value = this.enableLoggingRequestDetails ?_					"shown which may lead to unsafe logging of potentially sensitive data" :_					"masked to prevent unsafe logging of potentially sensitive data"__			logger.debug("enableLoggingRequestDetails='" + this.enableLoggingRequestDetails +_					"': request parameters and headers will be " + value)__		}__		if (logger.isInfoEnabled()) {_			logger.info("Completed initialization in " + (System.currentTimeMillis() - startTime) + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,get,class,get,simple,name,get,servlet,name,if,logger,is,info,enabled,logger,info,initializing,servlet,get,servlet,name,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,runtime,exception,ex,logger,error,context,initialization,failed,ex,throw,ex,if,logger,is,debug,enabled,string,value,this,enable,logging,request,details,shown,which,may,lead,to,unsafe,logging,of,potentially,sensitive,data,masked,to,prevent,unsafe,logging,of,potentially,sensitive,data,logger,debug,enable,logging,request,details,this,enable,logging,request,details,request,parameters,and,headers,will,be,value,if,logger,is,info,enabled,logger,info,completed,initialization,in,system,current,time,millis,start,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1536962806;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring " + getClass().getSimpleName() + " '" + getServletName() + "'")__		if (logger.isInfoEnabled()) {_			logger.info("Initializing Servlet '" + getServletName() + "'")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException | RuntimeException ex) {_			logger.error("Context initialization failed", ex)__			throw ex__		}__		if (logger.isDebugEnabled()) {_			String value = this.enableLoggingRequestDetails ?_					"shown which may lead to unsafe logging of potentially sensitive data" :_					"masked to prevent unsafe logging of potentially sensitive data"__			logger.debug("enableLoggingRequestDetails='" + this.enableLoggingRequestDetails +_					"': request parameters and headers will be " + value)__		}__		if (logger.isInfoEnabled()) {_			logger.info("Completed initialization in " + (System.currentTimeMillis() - startTime) + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,get,class,get,simple,name,get,servlet,name,if,logger,is,info,enabled,logger,info,initializing,servlet,get,servlet,name,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,runtime,exception,ex,logger,error,context,initialization,failed,ex,throw,ex,if,logger,is,debug,enabled,string,value,this,enable,logging,request,details,shown,which,may,lead,to,unsafe,logging,of,potentially,sensitive,data,masked,to,prevent,unsafe,logging,of,potentially,sensitive,data,logger,debug,enable,logging,request,details,this,enable,logging,request,details,request,parameters,and,headers,will,be,value,if,logger,is,info,enabled,logger,info,completed,initialization,in,system,current,time,millis,start,time,ms
FrameworkServlet -> @Override 	protected final void initServletBean() throws ServletException;1541442463;Overridden method of {@link HttpServletBean}, invoked after any bean properties_have been set. Creates this servlet's WebApplicationContext.;@Override_	protected final void initServletBean() throws ServletException {_		getServletContext().log("Initializing Spring " + getClass().getSimpleName() + " '" + getServletName() + "'")__		if (logger.isInfoEnabled()) {_			logger.info("Initializing Servlet '" + getServletName() + "'")__		}_		long startTime = System.currentTimeMillis()___		try {_			this.webApplicationContext = initWebApplicationContext()__			initFrameworkServlet()__		}_		catch (ServletException | RuntimeException ex) {_			logger.error("Context initialization failed", ex)__			throw ex__		}__		if (logger.isDebugEnabled()) {_			String value = this.enableLoggingRequestDetails ?_					"shown which may lead to unsafe logging of potentially sensitive data" :_					"masked to prevent unsafe logging of potentially sensitive data"__			logger.debug("enableLoggingRequestDetails='" + this.enableLoggingRequestDetails +_					"': request parameters and headers will be " + value)__		}__		if (logger.isInfoEnabled()) {_			logger.info("Completed initialization in " + (System.currentTimeMillis() - startTime) + " ms")__		}_	};overridden,method,of,link,http,servlet,bean,invoked,after,any,bean,properties,have,been,set,creates,this,servlet,s,web,application,context;override,protected,final,void,init,servlet,bean,throws,servlet,exception,get,servlet,context,log,initializing,spring,get,class,get,simple,name,get,servlet,name,if,logger,is,info,enabled,logger,info,initializing,servlet,get,servlet,name,long,start,time,system,current,time,millis,try,this,web,application,context,init,web,application,context,init,framework,servlet,catch,servlet,exception,runtime,exception,ex,logger,error,context,initialization,failed,ex,throw,ex,if,logger,is,debug,enabled,string,value,this,enable,logging,request,details,shown,which,may,lead,to,unsafe,logging,of,potentially,sensitive,data,masked,to,prevent,unsafe,logging,of,potentially,sensitive,data,logger,debug,enable,logging,request,details,this,enable,logging,request,details,request,parameters,and,headers,will,be,value,if,logger,is,info,enabled,logger,info,completed,initialization,in,system,current,time,millis,start,time,ms
FrameworkServlet -> @Nullable 	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request, 			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes);1496837955;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;@Nullable_	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request,_			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;nullable,protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,nullable,http,servlet,response,response,nullable,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> @Nullable 	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request, 			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes);1498505691;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;@Nullable_	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request,_			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;nullable,protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,nullable,http,servlet,response,response,nullable,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> @Nullable 	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request, 			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes);1498780456;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;@Nullable_	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request,_			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;nullable,protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,nullable,http,servlet,response,response,nullable,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> @Nullable 	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request, 			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes);1500448076;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;@Nullable_	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request,_			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;nullable,protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,nullable,http,servlet,response,response,nullable,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> @Nullable 	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request, 			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes);1502952725;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;@Nullable_	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request,_			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;nullable,protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,nullable,http,servlet,response,response,nullable,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> @Nullable 	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request, 			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes);1518987682;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;@Nullable_	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request,_			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;nullable,protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,nullable,http,servlet,response,response,nullable,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> @Nullable 	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request, 			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes);1519732288;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;@Nullable_	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request,_			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;nullable,protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,nullable,http,servlet,response,response,nullable,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> @Nullable 	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request, 			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes);1529361191;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;@Nullable_	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request,_			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;nullable,protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,nullable,http,servlet,response,response,nullable,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> @Nullable 	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request, 			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes);1529721864;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;@Nullable_	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request,_			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;nullable,protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,nullable,http,servlet,response,response,nullable,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> @Nullable 	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request, 			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes);1529948549;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;@Nullable_	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request,_			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;nullable,protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,nullable,http,servlet,response,response,nullable,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> @Nullable 	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request, 			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes);1530174524;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;@Nullable_	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request,_			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;nullable,protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,nullable,http,servlet,response,response,nullable,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> @Nullable 	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request, 			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes);1530174524;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;@Nullable_	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request,_			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;nullable,protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,nullable,http,servlet,response,response,nullable,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> @Nullable 	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request, 			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes);1531321803;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;@Nullable_	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request,_			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;nullable,protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,nullable,http,servlet,response,response,nullable,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> @Nullable 	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request, 			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes);1532555403;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;@Nullable_	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request,_			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;nullable,protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,nullable,http,servlet,response,response,nullable,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> @Nullable 	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request, 			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes);1533160168;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;@Nullable_	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request,_			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;nullable,protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,nullable,http,servlet,response,response,nullable,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> @Nullable 	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request, 			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes);1534488420;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;@Nullable_	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request,_			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;nullable,protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,nullable,http,servlet,response,response,nullable,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> @Nullable 	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request, 			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes);1536962806;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;@Nullable_	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request,_			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;nullable,protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,nullable,http,servlet,response,response,nullable,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> @Nullable 	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request, 			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes);1541442463;Build ServletRequestAttributes for the given request (potentially also_holding a reference to the response), taking pre-bound attributes_(and their type) into consideration._@param request current HTTP request_@param response current HTTP response_@param previousAttributes pre-bound RequestAttributes instance, if any_@return the ServletRequestAttributes to bind, or {@code null} to preserve_the previously bound instance (or not binding any, if none bound before)_@see RequestContextHolder#setRequestAttributes;@Nullable_	protected ServletRequestAttributes buildRequestAttributes(HttpServletRequest request,_			@Nullable HttpServletResponse response, @Nullable RequestAttributes previousAttributes) {__		if (previousAttributes == null || previousAttributes instanceof ServletRequestAttributes) {_			return new ServletRequestAttributes(request, response)__		}_		else {_			return null_  _		}_	};build,servlet,request,attributes,for,the,given,request,potentially,also,holding,a,reference,to,the,response,taking,pre,bound,attributes,and,their,type,into,consideration,param,request,current,http,request,param,response,current,http,response,param,previous,attributes,pre,bound,request,attributes,instance,if,any,return,the,servlet,request,attributes,to,bind,or,code,null,to,preserve,the,previously,bound,instance,or,not,binding,any,if,none,bound,before,see,request,context,holder,set,request,attributes;nullable,protected,servlet,request,attributes,build,request,attributes,http,servlet,request,request,nullable,http,servlet,response,response,nullable,request,attributes,previous,attributes,if,previous,attributes,null,previous,attributes,instanceof,servlet,request,attributes,return,new,servlet,request,attributes,request,response,else,return,null
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1328020251;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1334781369;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1335774711;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1340398642;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1342803001;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1344035753;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1345223391;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1346877235;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1347908336;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1348061150;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1348531024;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1349904862;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1351289067;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1351648724;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1351857948;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1354911578;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1355313310;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1356735495;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1357119239;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1362408075;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1363208506;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1368051298;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1368482696;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1384955432;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1385412762;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1385507478;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1389820887;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1389827047;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1400256389;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1409363223;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1409870233;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1427815317;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1427983931;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1436254479;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1449660404;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1450439838;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1453684721;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1456332614;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1458852256;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1467667881;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1467730834;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1477045587;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1495868221;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1496259743;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1496837955;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1498505691;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1498780456;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1500448076;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1502952725;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1518987682;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1519732288;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1529361191;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1529721864;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1529948549;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1530174524;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1530174524;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1531321803;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1532555403;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1533160168;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1534488420;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1536962806;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public void setDispatchTraceRequest(boolean dispatchTraceRequest);1541442463;Set whether this servlet should dispatch an HTTP TRACE request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. reflecting the message received back to the client)._<p>Turn this flag on if you prefer TRACE requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle a TRACE request._<p>Note that HttpServlet's default TRACE processing will be applied_in any case if your controllers happen to not generate a response_of content type 'message/http' (as required for a TRACE response).;public void setDispatchTraceRequest(boolean dispatchTraceRequest) {_		this.dispatchTraceRequest = dispatchTraceRequest__	};set,whether,this,servlet,should,dispatch,an,http,trace,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,reflecting,the,message,received,back,to,the,client,p,turn,this,flag,on,if,you,prefer,trace,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,a,trace,request,p,note,that,http,servlet,s,default,trace,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,generate,a,response,of,content,type,message,http,as,required,for,a,trace,response;public,void,set,dispatch,trace,request,boolean,dispatch,trace,request,this,dispatch,trace,request,dispatch,trace,request
FrameworkServlet -> public String getNamespace();1328020251;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1334781369;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1335774711;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1340398642;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1342803001;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1344035753;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1345223391;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1346877235;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1347908336;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1348061150;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1348531024;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1349904862;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1351289067;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1351648724;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1351857948;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1354911578;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1355313310;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1356735495;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1357119239;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1362408075;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1363208506;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1368051298;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1368482696;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1384955432;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1385412762;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1385507478;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1389820887;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1389827047;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1400256389;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1409363223;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1409870233;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1427815317;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1427983931;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1436254479;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1449660404;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1450439838;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1453684721;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1456332614;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1458852256;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1467667881;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1467730834;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1477045587;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1495868221;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1496259743;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1496837955;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1498505691;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1498780456;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1500448076;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1502952725;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1518987682;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1519732288;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1529361191;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1529721864;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1529948549;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1530174524;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1530174524;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1531321803;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1532555403;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1533160168;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1534488420;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1536962806;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> public String getNamespace();1541442463;Return the namespace for this servlet, falling back to default scheme if_no custom namespace was set: e.g. "test-servlet" for a servlet named "test".;public String getNamespace() {_		return (this.namespace != null ? this.namespace : getServletName() + DEFAULT_NAMESPACE_SUFFIX)__	};return,the,namespace,for,this,servlet,falling,back,to,default,scheme,if,no,custom,namespace,was,set,e,g,test,servlet,for,a,servlet,named,test;public,string,get,namespace,return,this,namespace,null,this,namespace,get,servlet,name
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent);1495868221;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,nullable,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent);1496259743;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,nullable,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent);1496837955;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		String configLocation = getContextConfigLocation()__		if (configLocation != null) {_			wac.setConfigLocation(configLocation)__		}_		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,nullable,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,string,config,location,get,context,config,location,if,config,location,null,wac,set,config,location,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent);1498505691;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		String configLocation = getContextConfigLocation()__		if (configLocation != null) {_			wac.setConfigLocation(configLocation)__		}_		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,nullable,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,string,config,location,get,context,config,location,if,config,location,null,wac,set,config,location,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent);1498780456;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		String configLocation = getContextConfigLocation()__		if (configLocation != null) {_			wac.setConfigLocation(configLocation)__		}_		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,nullable,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,string,config,location,get,context,config,location,if,config,location,null,wac,set,config,location,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent);1500448076;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		String configLocation = getContextConfigLocation()__		if (configLocation != null) {_			wac.setConfigLocation(configLocation)__		}_		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,nullable,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,string,config,location,get,context,config,location,if,config,location,null,wac,set,config,location,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent);1502952725;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		String configLocation = getContextConfigLocation()__		if (configLocation != null) {_			wac.setConfigLocation(configLocation)__		}_		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,nullable,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,string,config,location,get,context,config,location,if,config,location,null,wac,set,config,location,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent);1518987682;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		String configLocation = getContextConfigLocation()__		if (configLocation != null) {_			wac.setConfigLocation(configLocation)__		}_		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,nullable,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,string,config,location,get,context,config,location,if,config,location,null,wac,set,config,location,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent);1519732288;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		String configLocation = getContextConfigLocation()__		if (configLocation != null) {_			wac.setConfigLocation(configLocation)__		}_		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,nullable,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,string,config,location,get,context,config,location,if,config,location,null,wac,set,config,location,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent);1529361191;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isTraceEnabled()) {_			this.logger.trace("Servlet '" + getServletName() +_					"' will create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		String configLocation = getContextConfigLocation()__		if (configLocation != null) {_			wac.setConfigLocation(configLocation)__		}_		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,nullable,application,context,parent,class,context,class,get,context,class,if,this,logger,is,trace,enabled,this,logger,trace,servlet,get,servlet,name,will,create,custom,web,application,context,context,of,class,context,class,get,name,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,string,config,location,get,context,config,location,if,config,location,null,wac,set,config,location,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent);1529721864;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isTraceEnabled()) {_			this.logger.trace("Servlet '" + getServletName() +_					"' will create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		String configLocation = getContextConfigLocation()__		if (configLocation != null) {_			wac.setConfigLocation(configLocation)__		}_		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,nullable,application,context,parent,class,context,class,get,context,class,if,this,logger,is,trace,enabled,this,logger,trace,servlet,get,servlet,name,will,create,custom,web,application,context,context,of,class,context,class,get,name,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,string,config,location,get,context,config,location,if,config,location,null,wac,set,config,location,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent);1529948549;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isTraceEnabled()) {_			this.logger.trace("Servlet '" + getServletName() +_					"' will create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		String configLocation = getContextConfigLocation()__		if (configLocation != null) {_			wac.setConfigLocation(configLocation)__		}_		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,nullable,application,context,parent,class,context,class,get,context,class,if,this,logger,is,trace,enabled,this,logger,trace,servlet,get,servlet,name,will,create,custom,web,application,context,context,of,class,context,class,get,name,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,string,config,location,get,context,config,location,if,config,location,null,wac,set,config,location,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent);1530174524;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isTraceEnabled()) {_			this.logger.trace("Servlet '" + getServletName() +_					"' will create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		String configLocation = getContextConfigLocation()__		if (configLocation != null) {_			wac.setConfigLocation(configLocation)__		}_		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,nullable,application,context,parent,class,context,class,get,context,class,if,this,logger,is,trace,enabled,this,logger,trace,servlet,get,servlet,name,will,create,custom,web,application,context,context,of,class,context,class,get,name,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,string,config,location,get,context,config,location,if,config,location,null,wac,set,config,location,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent);1530174524;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (logger.isTraceEnabled()) {_			logger.trace("Servlet '" + getServletName() +_					"' will create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		String configLocation = getContextConfigLocation()__		if (configLocation != null) {_			wac.setConfigLocation(configLocation)__		}_		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,nullable,application,context,parent,class,context,class,get,context,class,if,logger,is,trace,enabled,logger,trace,servlet,get,servlet,name,will,create,custom,web,application,context,context,of,class,context,class,get,name,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,string,config,location,get,context,config,location,if,config,location,null,wac,set,config,location,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent);1531321803;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (logger.isTraceEnabled()) {_			logger.trace("Servlet '" + getServletName() +_					"' will create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		String configLocation = getContextConfigLocation()__		if (configLocation != null) {_			wac.setConfigLocation(configLocation)__		}_		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,nullable,application,context,parent,class,context,class,get,context,class,if,logger,is,trace,enabled,logger,trace,servlet,get,servlet,name,will,create,custom,web,application,context,context,of,class,context,class,get,name,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,string,config,location,get,context,config,location,if,config,location,null,wac,set,config,location,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent);1532555403;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		String configLocation = getContextConfigLocation()__		if (configLocation != null) {_			wac.setConfigLocation(configLocation)__		}_		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,nullable,application,context,parent,class,context,class,get,context,class,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,string,config,location,get,context,config,location,if,config,location,null,wac,set,config,location,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent);1533160168;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		String configLocation = getContextConfigLocation()__		if (configLocation != null) {_			wac.setConfigLocation(configLocation)__		}_		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,nullable,application,context,parent,class,context,class,get,context,class,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,string,config,location,get,context,config,location,if,config,location,null,wac,set,config,location,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent);1534488420;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		String configLocation = getContextConfigLocation()__		if (configLocation != null) {_			wac.setConfigLocation(configLocation)__		}_		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,nullable,application,context,parent,class,context,class,get,context,class,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,string,config,location,get,context,config,location,if,config,location,null,wac,set,config,location,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent);1536962806;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		String configLocation = getContextConfigLocation()__		if (configLocation != null) {_			wac.setConfigLocation(configLocation)__		}_		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,nullable,application,context,parent,class,context,class,get,context,class,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,string,config,location,get,context,config,location,if,config,location,null,wac,set,config,location,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent);1541442463;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(@Nullable ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		String configLocation = getContextConfigLocation()__		if (configLocation != null) {_			wac.setConfigLocation(configLocation)__		}_		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,nullable,application,context,parent,class,context,class,get,context,class,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,string,config,location,get,context,config,location,if,config,location,null,wac,set,config,location,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> public String getContextAttribute();1328020251;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1334781369;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1335774711;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1340398642;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1342803001;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1344035753;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1345223391;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1346877235;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1347908336;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1348061150;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1348531024;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1349904862;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1351289067;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1351648724;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1351857948;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1354911578;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1355313310;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1356735495;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1357119239;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1362408075;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1363208506;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1368051298;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1368482696;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1384955432;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1385412762;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1385507478;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1389820887;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1389827047;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1400256389;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1409363223;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1409870233;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1427815317;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1427983931;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1436254479;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1449660404;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1450439838;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1453684721;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1456332614;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1458852256;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1467667881;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1467730834;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1477045587;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1495868221;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public String getContextAttribute();1496259743;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1328020251;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1334781369;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1335774711;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1340398642;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1342803001;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1344035753;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1345223391;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1346877235;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1347908336;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1348061150;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1348531024;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1349904862;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1351289067;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1351648724;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1351857948;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1354911578;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1355313310;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1356735495;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1357119239;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1362408075;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1363208506;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1368051298;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1368482696;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		Collections.sort(this.contextInitializers, new AnnotationAwareOrderComparator())__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,collections,sort,this,context,initializers,new,annotation,aware,order,comparator,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1384955432;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1385412762;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @SuppressWarnings("unchecked") 	protected void applyInitializers(ConfigurableApplicationContext wac);1385507478;Delegate the WebApplicationContext before it is refreshed to any_{@link ApplicationContextInitializer} instances specified by the_"contextInitializerClasses" servlet init-param._<p>See also {@link #postProcessWebApplicationContext}, which is designed to allow_subclasses (as opposed to end-users) to modify the application context, and is_called immediately after this method._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #postProcessWebApplicationContext_@see ConfigurableApplicationContext#refresh();@SuppressWarnings("unchecked")_	protected void applyInitializers(ConfigurableApplicationContext wac) {_		if (this.contextInitializerClasses != null) {_			String[] initializerClassNames =_					StringUtils.tokenizeToStringArray(this.contextInitializerClasses, INIT_PARAM_DELIMITERS)__			for (String initializerClassName : initializerClassNames) {_				ApplicationContextInitializer<ConfigurableApplicationContext> initializer__				try {_					Class<?> initializerClass = ClassUtils.forName(initializerClassName, wac.getClassLoader())__					initializer = BeanUtils.instantiateClass(initializerClass, ApplicationContextInitializer.class)__				}_				catch (Exception ex) {_					throw new IllegalArgumentException(_							String.format("Could not instantiate class [%s] specified via " +_							"'contextInitializerClasses' init-param", initializerClassName), ex)__				}_				this.contextInitializers.add(initializer)__			}_		}_		AnnotationAwareOrderComparator.sort(this.contextInitializers)__		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {_			initializer.initialize(wac)__		}_	};delegate,the,web,application,context,before,it,is,refreshed,to,any,link,application,context,initializer,instances,specified,by,the,context,initializer,classes,servlet,init,param,p,see,also,link,post,process,web,application,context,which,is,designed,to,allow,subclasses,as,opposed,to,end,users,to,modify,the,application,context,and,is,called,immediately,after,this,method,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,post,process,web,application,context,see,configurable,application,context,refresh;suppress,warnings,unchecked,protected,void,apply,initializers,configurable,application,context,wac,if,this,context,initializer,classes,null,string,initializer,class,names,string,utils,tokenize,to,string,array,this,context,initializer,classes,for,string,initializer,class,name,initializer,class,names,application,context,initializer,configurable,application,context,initializer,try,class,initializer,class,class,utils,for,name,initializer,class,name,wac,get,class,loader,initializer,bean,utils,instantiate,class,initializer,class,application,context,initializer,class,catch,exception,ex,throw,new,illegal,argument,exception,string,format,could,not,instantiate,class,s,specified,via,context,initializer,classes,init,param,initializer,class,name,ex,this,context,initializers,add,initializer,annotation,aware,order,comparator,sort,this,context,initializers,for,application,context,initializer,configurable,application,context,initializer,this,context,initializers,initializer,initialize,wac
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1328020251;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}_		super.doOptions(request, response)__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,response
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1334781369;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}_		super.doOptions(request, response)__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,response
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1335774711;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}_		super.doOptions(request, response)__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,response
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1340398642;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}_		super.doOptions(request, response)__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,response
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1342803001;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}_		super.doOptions(request, response)__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,response
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1344035753;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}_		super.doOptions(request, response)__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,response
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1345223391;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}_		super.doOptions(request, response)__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,response
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1346877235;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}_		super.doOptions(request, response)__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,response
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1347908336;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}_		super.doOptions(request, response)__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,response
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1348061150;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}_		super.doOptions(request, response)__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,response
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1348531024;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}_		super.doOptions(request, response)__		String allowedMethods = response.getHeader("Allow")__		allowedMethods += ", " + RequestMethod.PATCH.name()__		response.setHeader("Allow", allowedMethods)__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,response,string,allowed,methods,response,get,header,allow,allowed,methods,request,method,patch,name,response,set,header,allow,allowed,methods
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1349904862;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}_		super.doOptions(request, response)__		String allowedMethods = response.getHeader("Allow")__		allowedMethods += ", " + RequestMethod.PATCH.name()__		response.setHeader("Allow", allowedMethods)__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,response,string,allowed,methods,response,get,header,allow,allowed,methods,request,method,patch,name,response,set,header,allow,allowed,methods
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351289067;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}_		super.doOptions(request, response)__		String allowedMethods = response.getHeader("Allow")__		allowedMethods += ", " + RequestMethod.PATCH.name()__		response.setHeader("Allow", allowedMethods)__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,response,string,allowed,methods,response,get,header,allow,allowed,methods,request,method,patch,name,response,set,header,allow,allowed,methods
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351648724;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}_		super.doOptions(request, response)__		String allowedMethods = response.getHeader("Allow")__		allowedMethods += ", " + RequestMethod.PATCH.name()__		response.setHeader("Allow", allowedMethods)__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,response,string,allowed,methods,response,get,header,allow,allowed,methods,request,method,patch,name,response,set,header,allow,allowed,methods
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351857948;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}_		super.doOptions(request, response)__		String allowedMethods = response.getHeader("Allow")__		allowedMethods += ", " + RequestMethod.PATCH.name()__		response.setHeader("Allow", allowedMethods)__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,response,string,allowed,methods,response,get,header,allow,allowed,methods,request,method,patch,name,response,set,header,allow,allowed,methods
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1354911578;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}_		super.doOptions(request, response)__		String allowedMethods = response.getHeader("Allow")__		allowedMethods += ", " + RequestMethod.PATCH.name()__		response.setHeader("Allow", allowedMethods)__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,response,string,allowed,methods,response,get,header,allow,allowed,methods,request,method,patch,name,response,set,header,allow,allowed,methods
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1355313310;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}_		super.doOptions(request, response)__		String allowedMethods = response.getHeader("Allow")__		allowedMethods += ", " + RequestMethod.PATCH.name()__		response.setHeader("Allow", allowedMethods)__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,response,string,allowed,methods,response,get,header,allow,allowed,methods,request,method,patch,name,response,set,header,allow,allowed,methods
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1356735495;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}_		super.doOptions(request, response)__		String allowedMethods = response.getHeader("Allow")__		allowedMethods += ", " + RequestMethod.PATCH.name()__		response.setHeader("Allow", allowedMethods)__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,response,string,allowed,methods,response,get,header,allow,allowed,methods,request,method,patch,name,response,set,header,allow,allowed,methods
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1357119239;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}_		super.doOptions(request, response)__		String allowedMethods = response.getHeader("Allow")__		allowedMethods += ", " + RequestMethod.PATCH.name()__		response.setHeader("Allow", allowedMethods)__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,response,string,allowed,methods,response,get,header,allow,allowed,methods,request,method,patch,name,response,set,header,allow,allowed,methods
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1362408075;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + RequestMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,request,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1363208506;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + RequestMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,request,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1368051298;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + RequestMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,request,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1368482696;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + RequestMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,request,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1384955432;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + RequestMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,request,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1385412762;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + RequestMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,request,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1385507478;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + RequestMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,request,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1389820887;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + RequestMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,request,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1389827047;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + RequestMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,request,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1400256389;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + RequestMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,request,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1409363223;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + RequestMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,request,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1409870233;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + RequestMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,request,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1427815317;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + RequestMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,request,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1427983931;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || request.getHeader("Origin") != null) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + RequestMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,request,get,header,origin,null,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,request,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1436254479;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + RequestMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,request,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1449660404;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + RequestMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,request,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1450439838;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + RequestMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,request,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1453684721;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + RequestMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,request,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1456332614;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + RequestMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,request,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1458852256;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1467667881;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1467730834;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1477045587;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1495868221;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1496259743;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1496837955;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1498505691;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1498780456;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1500448076;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1502952725;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1518987682;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1519732288;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529361191;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529721864;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529948549;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1530174524;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1530174524;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1531321803;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1532555403;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1533160168;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1534488420;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1536962806;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> @Override 	protected void doOptions(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1541442463;Delegate OPTIONS requests to {@link #processRequest}, if desired._<p>Applies HttpServlet's standard OPTIONS processing otherwise,_and also if there is still no 'Allow' header set after dispatching._@see #doService;@Override_	protected void doOptions(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {_			processRequest(request, response)__			if (response.containsHeader("Allow")) {_				_				return__			}_		}__		_		super.doOptions(request, new HttpServletResponseWrapper(response) {_			@Override_			public void setHeader(String name, String value) {_				if ("Allow".equals(name)) {_					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name()__				}_				super.setHeader(name, value)__			}_		})__	};delegate,options,requests,to,link,process,request,if,desired,p,applies,http,servlet,s,standard,options,processing,otherwise,and,also,if,there,is,still,no,allow,header,set,after,dispatching,see,do,service;override,protected,void,do,options,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,this,dispatch,options,request,cors,utils,is,pre,flight,request,request,process,request,request,response,if,response,contains,header,allow,return,super,do,options,request,new,http,servlet,response,wrapper,response,override,public,void,set,header,string,name,string,value,if,allow,equals,name,value,string,utils,has,length,value,value,http,method,patch,name,super,set,header,name,value
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1328020251;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_<code>doGet</code> or <code>doPost</code> methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,code,or,code,do,post,code,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1334781369;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_<code>doGet</code> or <code>doPost</code> methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,code,or,code,do,post,code,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1335774711;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_<code>doGet</code> or <code>doPost</code> methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,code,or,code,do,post,code,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1340398642;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_<code>doGet</code> or <code>doPost</code> methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,code,or,code,do,post,code,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1342803001;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_<code>doGet</code> or <code>doPost</code> methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,code,or,code,do,post,code,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1344035753;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_<code>doGet</code> or <code>doPost</code> methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,code,or,code,do,post,code,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1345223391;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_<code>doGet</code> or <code>doPost</code> methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,code,or,code,do,post,code,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1346877235;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_<code>doGet</code> or <code>doPost</code> methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,code,or,code,do,post,code,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1347908336;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_<code>doGet</code> or <code>doPost</code> methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,code,or,code,do,post,code,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1348061150;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_<code>doGet</code> or <code>doPost</code> methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,code,or,code,do,post,code,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1348531024;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_<code>doGet</code> or <code>doPost</code> methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,code,or,code,do,post,code,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1349904862;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_<code>doGet</code> or <code>doPost</code> methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,code,or,code,do,post,code,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1351289067;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_<code>doGet</code> or <code>doPost</code> methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,code,or,code,do,post,code,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1351648724;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_<code>doGet</code> or <code>doPost</code> methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,code,or,code,do,post,code,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1351857948;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_<code>doGet</code> or <code>doPost</code> methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,code,or,code,do,post,code,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1354911578;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_<code>doGet</code> or <code>doPost</code> methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,code,or,code,do,post,code,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1355313310;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_<code>doGet</code> or <code>doPost</code> methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,code,or,code,do,post,code,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1356735495;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1357119239;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1362408075;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1363208506;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1368051298;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1368482696;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1384955432;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1385412762;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1385507478;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1389820887;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1389827047;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1400256389;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1409363223;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1409870233;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1427815317;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1427983931;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1436254479;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1449660404;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1450439838;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1453684721;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1456332614;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1458852256;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1467667881;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1467730834;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1477045587;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1495868221;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1496259743;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1496837955;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1498505691;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1498780456;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1500448076;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1502952725;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1518987682;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1519732288;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1529361191;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1529721864;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1529948549;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1530174524;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1530174524;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1531321803;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1532555403;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1533160168;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1534488420;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1536962806;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected abstract void doService(HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1541442463;Subclasses must implement this method to do the work of request handling,_receiving a centralized callback for GET, POST, PUT and DELETE._<p>The contract is essentially the same as that for the commonly overridden_{@code doGet} or {@code doPost} methods of HttpServlet._<p>This class intercepts calls to ensure that exception handling and_event publication takes place._@param request current HTTP request_@param response current HTTP response_@throws Exception in case of any kind of processing failure_@see javax.servlet.http.HttpServlet#doGet_@see javax.servlet.http.HttpServlet#doPost;protected abstract void doService(HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,do,the,work,of,request,handling,receiving,a,centralized,callback,for,get,post,put,and,delete,p,the,contract,is,essentially,the,same,as,that,for,the,commonly,overridden,code,do,get,or,code,do,post,methods,of,http,servlet,p,this,class,intercepts,calls,to,ensure,that,exception,handling,and,event,publication,takes,place,param,request,current,http,request,param,response,current,http,response,throws,exception,in,case,of,any,kind,of,processing,failure,see,javax,servlet,http,http,servlet,do,get,see,javax,servlet,http,http,servlet,do,post;protected,abstract,void,do,service,http,servlet,request,request,http,servlet,response,response,throws,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1328020251;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1334781369;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1335774711;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1340398642;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1342803001;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1344035753;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1345223391;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1346877235;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1347908336;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1348061150;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1348531024;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1349904862;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1351289067;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1351648724;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1351857948;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1354911578;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1355313310;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1356735495;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1357119239;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1362408075;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1363208506;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1368051298;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1368482696;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1384955432;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1385412762;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1385507478;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1389820887;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1389827047;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1400256389;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1409363223;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1409870233;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1427815317;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1427983931;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1436254479;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1449660404;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1450439838;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1453684721;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1456332614;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1458852256;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1467667881;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1467730834;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1477045587;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1495868221;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1496259743;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1496837955;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1498505691;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1498780456;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1500448076;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1502952725;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1518987682;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1519732288;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1529361191;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1529721864;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1529948549;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1530174524;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1530174524;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1531321803;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1532555403;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1533160168;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1534488420;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1536962806;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> protected void initFrameworkServlet() throws ServletException;1541442463;This method will be invoked after any bean properties have been set and_the WebApplicationContext has been loaded. The default implementation is empty__subclasses may override this method to perform any initialization they require._@throws ServletException in case of an initialization exception;protected void initFrameworkServlet() throws ServletException {_	};this,method,will,be,invoked,after,any,bean,properties,have,been,set,and,the,web,application,context,has,been,loaded,the,default,implementation,is,empty,subclasses,may,override,this,method,to,perform,any,initialization,they,require,throws,servlet,exception,in,case,of,an,initialization,exception;protected,void,init,framework,servlet,throws,servlet,exception
FrameworkServlet -> public void setContextId(String contextId);1328020251;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1334781369;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1335774711;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1340398642;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1342803001;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1344035753;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1345223391;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1346877235;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1347908336;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1348061150;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1348531024;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1349904862;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1351289067;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1351648724;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1351857948;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1354911578;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1355313310;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1356735495;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1357119239;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1362408075;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1363208506;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1368051298;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1368482696;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1384955432;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1385412762;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1385507478;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1389820887;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1389827047;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1400256389;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1409363223;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1409870233;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1427815317;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1427983931;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1436254479;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1449660404;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1450439838;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1453684721;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1456332614;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1458852256;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1467667881;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1467730834;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1477045587;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1495868221;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1496259743;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1496837955;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1498505691;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(String contextId);1498780456;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,string,context,id,this,context,id,context,id
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1328020251;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1334781369;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1335774711;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1340398642;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1342803001;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1344035753;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1345223391;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1346877235;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1347908336;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1348061150;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1348531024;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1349904862;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351289067;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351648724;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351857948;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1354911578;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1355313310;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1356735495;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1357119239;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1362408075;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1363208506;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1368051298;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1368482696;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1384955432;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1385412762;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1385507478;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1389820887;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1389827047;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1400256389;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1409363223;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1409870233;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1427815317;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1427983931;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1436254479;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1449660404;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1450439838;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1453684721;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1456332614;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1458852256;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1467667881;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1467730834;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1477045587;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1495868221;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1496259743;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1496837955;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1498505691;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1498780456;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1500448076;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1502952725;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1518987682;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1519732288;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529361191;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529721864;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529948549;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1530174524;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1530174524;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1531321803;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1532555403;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1533160168;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1534488420;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1536962806;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	protected final void doPut(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1541442463;Delegate PUT requests to {@link #processRequest}._@see #doService;@Override_	protected final void doPut(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,put,requests,to,link,process,request,see,do,service;override,protected,final,void,do,put,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext) 			throws BeansException;1368482696;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring Beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context.__<p>Primarily added to support use in embedded servlet containers, this method is not_intended to be called directly.__@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext)_			throws BeansException {_		if (this.webApplicationContext == null_				&& applicationContext instanceof WebApplicationContext) {_			if (logger.isDebugEnabled()) {_				logger.debug("Using existing application context for "_						+ ClassUtils.getShortName(getClass()))__			}_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,this,method,is,not,intended,to,be,called,directly,since,4,0;override,public,void,set,application,context,application,context,application,context,throws,beans,exception,if,this,web,application,context,null,application,context,instanceof,web,application,context,if,logger,is,debug,enabled,logger,debug,using,existing,application,context,for,class,utils,get,short,name,get,class,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext) 			throws BeansException;1384955432;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring Beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context.__<p>Primarily added to support use in embedded servlet containers, this method is not_intended to be called directly.__@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext)_			throws BeansException {_		if (this.webApplicationContext == null_				&& applicationContext instanceof WebApplicationContext) {_			if (logger.isDebugEnabled()) {_				logger.debug("Using existing application context for "_						+ ClassUtils.getShortName(getClass()))__			}_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,this,method,is,not,intended,to,be,called,directly,since,4,0;override,public,void,set,application,context,application,context,application,context,throws,beans,exception,if,this,web,application,context,null,application,context,instanceof,web,application,context,if,logger,is,debug,enabled,logger,debug,using,existing,application,context,for,class,utils,get,short,name,get,class,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext) 			throws BeansException;1385412762;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring Beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context.__<p>Primarily added to support use in embedded servlet containers, this method is not_intended to be called directly.__@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext)_			throws BeansException {_		if (this.webApplicationContext == null_				&& applicationContext instanceof WebApplicationContext) {_			if (logger.isDebugEnabled()) {_				logger.debug("Using existing application context for "_						+ ClassUtils.getShortName(getClass()))__			}_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,this,method,is,not,intended,to,be,called,directly,since,4,0;override,public,void,set,application,context,application,context,application,context,throws,beans,exception,if,this,web,application,context,null,application,context,instanceof,web,application,context,if,logger,is,debug,enabled,logger,debug,using,existing,application,context,for,class,utils,get,short,name,get,class,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext) 			throws BeansException;1385507478;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring Beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers, this method is not_intended to be called directly._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext)_			throws BeansException {_		if (this.webApplicationContext == null_				&& applicationContext instanceof WebApplicationContext) {_			if (logger.isDebugEnabled()) {_				logger.debug("Using existing application context for "_						+ ClassUtils.getShortName(getClass()))__			}_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,this,method,is,not,intended,to,be,called,directly,since,4,0;override,public,void,set,application,context,application,context,application,context,throws,beans,exception,if,this,web,application,context,null,application,context,instanceof,web,application,context,if,logger,is,debug,enabled,logger,debug,using,existing,application,context,for,class,utils,get,short,name,get,class,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext) 			throws BeansException;1389820887;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring Beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers, this method is not_intended to be called directly._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext)_			throws BeansException {_		if (this.webApplicationContext == null_				&& applicationContext instanceof WebApplicationContext) {_			if (logger.isDebugEnabled()) {_				logger.debug("Using existing application context for "_						+ ClassUtils.getShortName(getClass()))__			}_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,this,method,is,not,intended,to,be,called,directly,since,4,0;override,public,void,set,application,context,application,context,application,context,throws,beans,exception,if,this,web,application,context,null,application,context,instanceof,web,application,context,if,logger,is,debug,enabled,logger,debug,using,existing,application,context,for,class,utils,get,short,name,get,class,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1328020251;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1334781369;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1335774711;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1340398642;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1342803001;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1344035753;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1345223391;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1346877235;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1347908336;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1348061150;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1348531024;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1349904862;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1351289067;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1351648724;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1351857948;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1354911578;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1355313310;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1356735495;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1357119239;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1362408075;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1363208506;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1368051298;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1368482696;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1384955432;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1385412762;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1385507478;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1389820887;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1389827047;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1400256389;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1409363223;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1409870233;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1427815317;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1427983931;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1436254479;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1449660404;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1450439838;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1453684721;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1456332614;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1458852256;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1467667881;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1467730834;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1477045587;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1495868221;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1496259743;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1496837955;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1498505691;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1498780456;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1500448076;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1502952725;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1518987682;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1519732288;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1529361191;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1529721864;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1529948549;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1530174524;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1530174524;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1531321803;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1532555403;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1533160168;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1534488420;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1536962806;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> protected void onRefresh(ApplicationContext context);1541442463;Template method which can be overridden to add servlet-specific refresh work._Called after successful context refresh._<p>This implementation is empty._@param context the current WebApplicationContext_@see #refresh();protected void onRefresh(ApplicationContext context) {_		_	};template,method,which,can,be,overridden,to,add,servlet,specific,refresh,work,called,after,successful,context,refresh,p,this,implementation,is,empty,param,context,the,current,web,application,context,see,refresh;protected,void,on,refresh,application,context,context
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1328020251;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableWebApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,web,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1334781369;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableWebApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,web,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1335774711;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1340398642;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1342803001;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1344035753;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1345223391;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1346877235;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1347908336;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1348061150;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1348531024;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1349904862;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1351289067;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1351648724;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1351857948;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1354911578;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1355313310;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1356735495;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1357119239;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1362408075;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1363208506;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1368051298;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1368482696;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1384955432;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1385412762;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1385507478;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1389820887;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1389827047;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1400256389;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1409363223;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1409870233;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1427815317;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1427983931;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1436254479;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1449660404;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1450439838;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1453684721;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1456332614;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1458852256;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1467667881;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1467730834;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1477045587;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1495868221;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1496259743;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1496837955;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1498505691;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1498780456;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1500448076;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1502952725;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1518987682;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1519732288;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1529361191;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1529721864;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1529948549;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1530174524;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1530174524;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1531321803;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1532555403;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1533160168;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1534488420;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1536962806;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> public void setContextInitializerClasses(String contextInitializerClasses);1541442463;Specify the set of fully-qualified {@link ApplicationContextInitializer} class_names, per the optional "contextInitializerClasses" servlet init-param._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializerClasses(String contextInitializerClasses) {_		this.contextInitializerClasses = contextInitializerClasses__	};specify,the,set,of,fully,qualified,link,application,context,initializer,class,names,per,the,optional,context,initializer,classes,servlet,init,param,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializer,classes,string,context,initializer,classes,this,context,initializer,classes,context,initializer,classes
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1328020251;Retrieve a <code>WebApplicationContext</code> from the <code>ServletContext</code>_attribute with the {@link #setContextAttribute configured name}. The_<code>WebApplicationContext</code> must have already been loaded and stored in the_<code>ServletContext</code> before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_<code>WebApplicationContext</code> retrieval strategy._@return the WebApplicationContext for this servlet, or <code>null</code> if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,code,from,the,code,servlet,context,code,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,code,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,code,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,code,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,code,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1334781369;Retrieve a <code>WebApplicationContext</code> from the <code>ServletContext</code>_attribute with the {@link #setContextAttribute configured name}. The_<code>WebApplicationContext</code> must have already been loaded and stored in the_<code>ServletContext</code> before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_<code>WebApplicationContext</code> retrieval strategy._@return the WebApplicationContext for this servlet, or <code>null</code> if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,code,from,the,code,servlet,context,code,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,code,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,code,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,code,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,code,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1335774711;Retrieve a <code>WebApplicationContext</code> from the <code>ServletContext</code>_attribute with the {@link #setContextAttribute configured name}. The_<code>WebApplicationContext</code> must have already been loaded and stored in the_<code>ServletContext</code> before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_<code>WebApplicationContext</code> retrieval strategy._@return the WebApplicationContext for this servlet, or <code>null</code> if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,code,from,the,code,servlet,context,code,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,code,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,code,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,code,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,code,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1340398642;Retrieve a <code>WebApplicationContext</code> from the <code>ServletContext</code>_attribute with the {@link #setContextAttribute configured name}. The_<code>WebApplicationContext</code> must have already been loaded and stored in the_<code>ServletContext</code> before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_<code>WebApplicationContext</code> retrieval strategy._@return the WebApplicationContext for this servlet, or <code>null</code> if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,code,from,the,code,servlet,context,code,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,code,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,code,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,code,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,code,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1342803001;Retrieve a <code>WebApplicationContext</code> from the <code>ServletContext</code>_attribute with the {@link #setContextAttribute configured name}. The_<code>WebApplicationContext</code> must have already been loaded and stored in the_<code>ServletContext</code> before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_<code>WebApplicationContext</code> retrieval strategy._@return the WebApplicationContext for this servlet, or <code>null</code> if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,code,from,the,code,servlet,context,code,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,code,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,code,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,code,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,code,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1344035753;Retrieve a <code>WebApplicationContext</code> from the <code>ServletContext</code>_attribute with the {@link #setContextAttribute configured name}. The_<code>WebApplicationContext</code> must have already been loaded and stored in the_<code>ServletContext</code> before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_<code>WebApplicationContext</code> retrieval strategy._@return the WebApplicationContext for this servlet, or <code>null</code> if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,code,from,the,code,servlet,context,code,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,code,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,code,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,code,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,code,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1345223391;Retrieve a <code>WebApplicationContext</code> from the <code>ServletContext</code>_attribute with the {@link #setContextAttribute configured name}. The_<code>WebApplicationContext</code> must have already been loaded and stored in the_<code>ServletContext</code> before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_<code>WebApplicationContext</code> retrieval strategy._@return the WebApplicationContext for this servlet, or <code>null</code> if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,code,from,the,code,servlet,context,code,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,code,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,code,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,code,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,code,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1346877235;Retrieve a <code>WebApplicationContext</code> from the <code>ServletContext</code>_attribute with the {@link #setContextAttribute configured name}. The_<code>WebApplicationContext</code> must have already been loaded and stored in the_<code>ServletContext</code> before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_<code>WebApplicationContext</code> retrieval strategy._@return the WebApplicationContext for this servlet, or <code>null</code> if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,code,from,the,code,servlet,context,code,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,code,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,code,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,code,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,code,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1347908336;Retrieve a <code>WebApplicationContext</code> from the <code>ServletContext</code>_attribute with the {@link #setContextAttribute configured name}. The_<code>WebApplicationContext</code> must have already been loaded and stored in the_<code>ServletContext</code> before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_<code>WebApplicationContext</code> retrieval strategy._@return the WebApplicationContext for this servlet, or <code>null</code> if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,code,from,the,code,servlet,context,code,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,code,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,code,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,code,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,code,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1348061150;Retrieve a <code>WebApplicationContext</code> from the <code>ServletContext</code>_attribute with the {@link #setContextAttribute configured name}. The_<code>WebApplicationContext</code> must have already been loaded and stored in the_<code>ServletContext</code> before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_<code>WebApplicationContext</code> retrieval strategy._@return the WebApplicationContext for this servlet, or <code>null</code> if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,code,from,the,code,servlet,context,code,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,code,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,code,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,code,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,code,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1348531024;Retrieve a <code>WebApplicationContext</code> from the <code>ServletContext</code>_attribute with the {@link #setContextAttribute configured name}. The_<code>WebApplicationContext</code> must have already been loaded and stored in the_<code>ServletContext</code> before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_<code>WebApplicationContext</code> retrieval strategy._@return the WebApplicationContext for this servlet, or <code>null</code> if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,code,from,the,code,servlet,context,code,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,code,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,code,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,code,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,code,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1349904862;Retrieve a <code>WebApplicationContext</code> from the <code>ServletContext</code>_attribute with the {@link #setContextAttribute configured name}. The_<code>WebApplicationContext</code> must have already been loaded and stored in the_<code>ServletContext</code> before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_<code>WebApplicationContext</code> retrieval strategy._@return the WebApplicationContext for this servlet, or <code>null</code> if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,code,from,the,code,servlet,context,code,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,code,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,code,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,code,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,code,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1351289067;Retrieve a <code>WebApplicationContext</code> from the <code>ServletContext</code>_attribute with the {@link #setContextAttribute configured name}. The_<code>WebApplicationContext</code> must have already been loaded and stored in the_<code>ServletContext</code> before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_<code>WebApplicationContext</code> retrieval strategy._@return the WebApplicationContext for this servlet, or <code>null</code> if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,code,from,the,code,servlet,context,code,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,code,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,code,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,code,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,code,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1351648724;Retrieve a <code>WebApplicationContext</code> from the <code>ServletContext</code>_attribute with the {@link #setContextAttribute configured name}. The_<code>WebApplicationContext</code> must have already been loaded and stored in the_<code>ServletContext</code> before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_<code>WebApplicationContext</code> retrieval strategy._@return the WebApplicationContext for this servlet, or <code>null</code> if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,code,from,the,code,servlet,context,code,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,code,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,code,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,code,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,code,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1351857948;Retrieve a <code>WebApplicationContext</code> from the <code>ServletContext</code>_attribute with the {@link #setContextAttribute configured name}. The_<code>WebApplicationContext</code> must have already been loaded and stored in the_<code>ServletContext</code> before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_<code>WebApplicationContext</code> retrieval strategy._@return the WebApplicationContext for this servlet, or <code>null</code> if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,code,from,the,code,servlet,context,code,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,code,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,code,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,code,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,code,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1354911578;Retrieve a <code>WebApplicationContext</code> from the <code>ServletContext</code>_attribute with the {@link #setContextAttribute configured name}. The_<code>WebApplicationContext</code> must have already been loaded and stored in the_<code>ServletContext</code> before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_<code>WebApplicationContext</code> retrieval strategy._@return the WebApplicationContext for this servlet, or <code>null</code> if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,code,from,the,code,servlet,context,code,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,code,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,code,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,code,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,code,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1355313310;Retrieve a <code>WebApplicationContext</code> from the <code>ServletContext</code>_attribute with the {@link #setContextAttribute configured name}. The_<code>WebApplicationContext</code> must have already been loaded and stored in the_<code>ServletContext</code> before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_<code>WebApplicationContext</code> retrieval strategy._@return the WebApplicationContext for this servlet, or <code>null</code> if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,code,from,the,code,servlet,context,code,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,code,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,code,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,code,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,code,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1356735495;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1357119239;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1362408075;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1363208506;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1368051298;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1368482696;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1384955432;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1385412762;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1385507478;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1389820887;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1389827047;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1400256389;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1409363223;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1409870233;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1427815317;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1427983931;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1436254479;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1449660404;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1450439838;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1453684721;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1456332614;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1458852256;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1467667881;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1467730834;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> protected WebApplicationContext findWebApplicationContext();1477045587;Retrieve a {@code WebApplicationContext} from the {@code ServletContext}_attribute with the {@link #setContextAttribute configured name}. The_{@code WebApplicationContext} must have already been loaded and stored in the_{@code ServletContext} before this servlet gets initialized (or invoked)._<p>Subclasses may override this method to provide a different_{@code WebApplicationContext} retrieval strategy._@return the WebApplicationContext for this servlet, or {@code null} if not found_@see #getContextAttribute();protected WebApplicationContext findWebApplicationContext() {_		String attrName = getContextAttribute()__		if (attrName == null) {_			return null__		}_		WebApplicationContext wac =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext(), attrName)__		if (wac == null) {_			throw new IllegalStateException("No WebApplicationContext found: initializer not registered?")__		}_		return wac__	};retrieve,a,code,web,application,context,from,the,code,servlet,context,attribute,with,the,link,set,context,attribute,configured,name,the,code,web,application,context,must,have,already,been,loaded,and,stored,in,the,code,servlet,context,before,this,servlet,gets,initialized,or,invoked,p,subclasses,may,override,this,method,to,provide,a,different,code,web,application,context,retrieval,strategy,return,the,web,application,context,for,this,servlet,or,code,null,if,not,found,see,get,context,attribute;protected,web,application,context,find,web,application,context,string,attr,name,get,context,attribute,if,attr,name,null,return,null,web,application,context,wac,web,application,context,utils,get,web,application,context,get,servlet,context,attr,name,if,wac,null,throw,new,illegal,state,exception,no,web,application,context,found,initializer,not,registered,return,wac
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1328020251;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1334781369;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1335774711;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1340398642;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1342803001;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1344035753;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1345223391;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1346877235;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1347908336;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1348061150;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1348531024;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1349904862;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1351289067;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1351648724;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1351857948;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1354911578;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1355313310;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1356735495;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1357119239;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1362408075;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1363208506;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1368051298;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1368482696;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1384955432;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1385412762;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1385507478;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1389820887;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1389827047;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1400256389;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1409363223;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1409870233;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1427815317;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1427983931;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1436254479;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1449660404;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1450439838;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1453684721;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1456332614;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1458852256;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1467667881;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1467730834;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1477045587;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1495868221;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1496259743;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1496837955;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1498505691;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1498780456;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1500448076;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1502952725;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1518987682;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1519732288;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1529361191;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1529721864;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1529948549;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer}s specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,s,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1530174524;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer ApplicationContextInitializers} specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,application,context,initializers,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1530174524;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer ApplicationContextInitializers} specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,application,context,initializers,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1531321803;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer ApplicationContextInitializers} specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,application,context,initializers,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1532555403;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer ApplicationContextInitializers} specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,application,context,initializers,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1533160168;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer ApplicationContextInitializers} specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,application,context,initializers,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1534488420;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer ApplicationContextInitializers} specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,application,context,initializers,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1536962806;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer ApplicationContextInitializers} specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,application,context,initializers,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public FrameworkServlet(WebApplicationContext webApplicationContext);1541442463;Create a new {@code FrameworkServlet} with the given web application context. This_constructor is useful in Servlet 3.0+ environments where instance-based registration_of servlets is possible through the {@link ServletContext#addServlet} API._<p>Using this constructor indicates that the following properties / init-params_will be ignored:_<ul>_<li>{@link #setContextClass(Class)} / 'contextClass'</li>_<li>{@link #setContextConfigLocation(String)} / 'contextConfigLocation'</li>_<li>{@link #setContextAttribute(String)} / 'contextAttribute'</li>_<li>{@link #setNamespace(String)} / 'namespace'</li>_</ul>_<p>The given web application context may or may not yet be {@linkplain_ConfigurableApplicationContext#refresh() refreshed}. If it (a) is an implementation_of {@link ConfigurableWebApplicationContext} and (b) has <strong>not</strong>_already been refreshed (the recommended approach), then the following will occur:_<ul>_<li>If the given context does not already have a {@linkplain_ConfigurableApplicationContext#setParent parent}, the root application context_will be set as the parent.</li>_<li>If the given context has not already been assigned an {@linkplain_ConfigurableApplicationContext#setId id}, one will be assigned to it</li>_<li>{@code ServletContext} and {@code ServletConfig} objects will be delegated to_the application context</li>_<li>{@link #postProcessWebApplicationContext} will be called</li>_<li>Any {@link ApplicationContextInitializer ApplicationContextInitializers} specified through the_"contextInitializerClasses" init-param or through the {@link_#setContextInitializers} property will be applied.</li>_<li>{@link ConfigurableApplicationContext#refresh refresh()} will be called</li>_</ul>_If the context has already been refreshed or does not implement_{@code ConfigurableWebApplicationContext}, none of the above will occur under the_assumption that the user has performed these actions (or not) per his or her_specific needs._<p>See {@link org.springframework.web.WebApplicationInitializer} for usage examples._@param webApplicationContext the context to use_@see #initWebApplicationContext_@see #configureAndRefreshWebApplicationContext_@see org.springframework.web.WebApplicationInitializer;public FrameworkServlet(WebApplicationContext webApplicationContext) {_		this.webApplicationContext = webApplicationContext__	};create,a,new,code,framework,servlet,with,the,given,web,application,context,this,constructor,is,useful,in,servlet,3,0,environments,where,instance,based,registration,of,servlets,is,possible,through,the,link,servlet,context,add,servlet,api,p,using,this,constructor,indicates,that,the,following,properties,init,params,will,be,ignored,ul,li,link,set,context,class,class,context,class,li,li,link,set,context,config,location,string,context,config,location,li,li,link,set,context,attribute,string,context,attribute,li,li,link,set,namespace,string,namespace,li,ul,p,the,given,web,application,context,may,or,may,not,yet,be,linkplain,configurable,application,context,refresh,refreshed,if,it,a,is,an,implementation,of,link,configurable,web,application,context,and,b,has,strong,not,strong,already,been,refreshed,the,recommended,approach,then,the,following,will,occur,ul,li,if,the,given,context,does,not,already,have,a,linkplain,configurable,application,context,set,parent,parent,the,root,application,context,will,be,set,as,the,parent,li,li,if,the,given,context,has,not,already,been,assigned,an,linkplain,configurable,application,context,set,id,id,one,will,be,assigned,to,it,li,li,code,servlet,context,and,code,servlet,config,objects,will,be,delegated,to,the,application,context,li,li,link,post,process,web,application,context,will,be,called,li,li,any,link,application,context,initializer,application,context,initializers,specified,through,the,context,initializer,classes,init,param,or,through,the,link,set,context,initializers,property,will,be,applied,li,li,link,configurable,application,context,refresh,refresh,will,be,called,li,ul,if,the,context,has,already,been,refreshed,or,does,not,implement,code,configurable,web,application,context,none,of,the,above,will,occur,under,the,assumption,that,the,user,has,performed,these,actions,or,not,per,his,or,her,specific,needs,p,see,link,org,springframework,web,web,application,initializer,for,usage,examples,param,web,application,context,the,context,to,use,see,init,web,application,context,see,configure,and,refresh,web,application,context,see,org,springframework,web,web,application,initializer;public,framework,servlet,web,application,context,web,application,context,this,web,application,context,web,application,context
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1328020251;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1334781369;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1335774711;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1340398642;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1342803001;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1344035753;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1345223391;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1346877235;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1347908336;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1348061150;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1348531024;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1349904862;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1351289067;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1351648724;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1351857948;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1354911578;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1355313310;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1356735495;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1357119239;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1362408075;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1363208506;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1368051298;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1368482696;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1384955432;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1385412762;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1385507478;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1389820887;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1389827047;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1400256389;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1409363223;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1409870233;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1427815317;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1427983931;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1436254479;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1449660404;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1450439838;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default is "false", applying {@link javax.servlet.http.HttpServlet}'s_default behavior (i.e. enumerating all standard HTTP request methods_as a response to the OPTIONS request)._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1453684721;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1456332614;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1458852256;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1467667881;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1467730834;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1477045587;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1495868221;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1496259743;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1496837955;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1498505691;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1498780456;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1500448076;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1502952725;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1518987682;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1519732288;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1529361191;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1529721864;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1529948549;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1530174524;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1530174524;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1531321803;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1532555403;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1533160168;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1534488420;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1536962806;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> public void setDispatchOptionsRequest(boolean dispatchOptionsRequest);1541442463;Set whether this servlet should dispatch an HTTP OPTIONS request to_the {@link #doService} method._<p>Default in the {@code FrameworkServlet} is "false", applying_{@link javax.servlet.http.HttpServlet}'s default behavior (i.e.enumerating_all standard HTTP request methods as a response to the OPTIONS request)._Note however that as of 4.3 the {@code DispatcherServlet} sets this_property to "true" by default due to its built-in support for OPTIONS._<p>Turn this flag on if you prefer OPTIONS requests to go through the_regular dispatching chain, just like other HTTP requests. This usually_means that your controllers will receive those requests_ make sure_that those endpoints are actually able to handle an OPTIONS request._<p>Note that HttpServlet's default OPTIONS processing will be applied_in any case if your controllers happen to not set the 'Allow' header_(as required for an OPTIONS response).;public void setDispatchOptionsRequest(boolean dispatchOptionsRequest) {_		this.dispatchOptionsRequest = dispatchOptionsRequest__	};set,whether,this,servlet,should,dispatch,an,http,options,request,to,the,link,do,service,method,p,default,in,the,code,framework,servlet,is,false,applying,link,javax,servlet,http,http,servlet,s,default,behavior,i,e,enumerating,all,standard,http,request,methods,as,a,response,to,the,options,request,note,however,that,as,of,4,3,the,code,dispatcher,servlet,sets,this,property,to,true,by,default,due,to,its,built,in,support,for,options,p,turn,this,flag,on,if,you,prefer,options,requests,to,go,through,the,regular,dispatching,chain,just,like,other,http,requests,this,usually,means,that,your,controllers,will,receive,those,requests,make,sure,that,those,endpoints,are,actually,able,to,handle,an,options,request,p,note,that,http,servlet,s,default,options,processing,will,be,applied,in,any,case,if,your,controllers,happen,to,not,set,the,allow,header,as,required,for,an,options,response;public,void,set,dispatch,options,request,boolean,dispatch,options,request,this,dispatch,options,request,dispatch,options,request
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1389827047;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1400256389;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1409363223;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1409870233;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1427815317;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1427983931;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1436254479;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1449660404;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1450439838;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1453684721;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1456332614;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1458852256;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1467667881;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1467730834;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1477045587;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1495868221;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1496259743;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1496837955;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1498505691;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1498780456;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1500448076;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1502952725;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1518987682;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1519732288;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1529361191;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1529721864;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1529948549;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1530174524;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1530174524;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1531321803;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1532555403;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1533160168;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1534488420;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1536962806;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> @Override 	public void setApplicationContext(ApplicationContext applicationContext);1541442463;Called by Spring via {@link ApplicationContextAware} to inject the current_application context. This method allows FrameworkServlets to be registered as_Spring beans inside an existing {@link WebApplicationContext} rather than_{@link #findWebApplicationContext() finding} a_{@link org.springframework.web.context.ContextLoaderListener bootstrapped} context._<p>Primarily added to support use in embedded servlet containers._@since 4.0;@Override_	public void setApplicationContext(ApplicationContext applicationContext) {_		if (this.webApplicationContext == null && applicationContext instanceof WebApplicationContext) {_			this.webApplicationContext = (WebApplicationContext) applicationContext__			this.webApplicationContextInjected = true__		}_	};called,by,spring,via,link,application,context,aware,to,inject,the,current,application,context,this,method,allows,framework,servlets,to,be,registered,as,spring,beans,inside,an,existing,link,web,application,context,rather,than,link,find,web,application,context,finding,a,link,org,springframework,web,context,context,loader,listener,bootstrapped,context,p,primarily,added,to,support,use,in,embedded,servlet,containers,since,4,0;override,public,void,set,application,context,application,context,application,context,if,this,web,application,context,null,application,context,instanceof,web,application,context,this,web,application,context,web,application,context,application,context,this,web,application,context,injected,true
FrameworkServlet -> protected final void doPatch(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1340398642;Delegate PATCH requests to {@link #processRequest}._@see #doService;protected final void doPatch(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,patch,requests,to,link,process,request,see,do,service;protected,final,void,do,patch,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> protected final void doPatch(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1342803001;Delegate PATCH requests to {@link #processRequest}._@see #doService;protected final void doPatch(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,patch,requests,to,link,process,request,see,do,service;protected,final,void,do,patch,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> protected final void doPatch(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1344035753;Delegate PATCH requests to {@link #processRequest}._@see #doService;protected final void doPatch(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,patch,requests,to,link,process,request,see,do,service;protected,final,void,do,patch,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> protected final void doPatch(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1345223391;Delegate PATCH requests to {@link #processRequest}._@see #doService;protected final void doPatch(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,patch,requests,to,link,process,request,see,do,service;protected,final,void,do,patch,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> protected final void doPatch(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1346877235;Delegate PATCH requests to {@link #processRequest}._@see #doService;protected final void doPatch(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,patch,requests,to,link,process,request,see,do,service;protected,final,void,do,patch,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> protected final void doPatch(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1347908336;Delegate PATCH requests to {@link #processRequest}._@see #doService;protected final void doPatch(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,patch,requests,to,link,process,request,see,do,service;protected,final,void,do,patch,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> protected final void doPatch(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1348061150;Delegate PATCH requests to {@link #processRequest}._@see #doService;protected final void doPatch(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		processRequest(request, response)__	};delegate,patch,requests,to,link,process,request,see,do,service;protected,final,void,do,patch,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,process,request,request,response
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1328020251;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1334781369;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1335774711;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1340398642;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1342803001;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1344035753;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1345223391;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1346877235;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1347908336;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1348061150;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1348531024;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1349904862;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1351289067;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1351648724;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1351857948;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1354911578;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1355313310;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1356735495;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1357119239;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1362408075;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1363208506;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1368051298;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1368482696;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1384955432;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1385412762;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1385507478;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1389820887;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1389827047;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1400256389;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1409363223;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1409870233;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1427815317;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1427983931;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1436254479;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1449660404;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1450439838;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1453684721;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1456332614;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1458852256;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1467667881;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1467730834;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1477045587;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1495868221;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1496259743;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1496837955;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> public final WebApplicationContext getWebApplicationContext();1498505691;Return this servlet's WebApplicationContext.;public final WebApplicationContext getWebApplicationContext() {_		return this.webApplicationContext__	};return,this,servlet,s,web,application,context;public,final,web,application,context,get,web,application,context,return,this,web,application,context
FrameworkServlet -> @Nullable 	public String getContextId();1495868221;Return the custom WebApplicationContext id, if any.;@Nullable_	public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;nullable,public,string,get,context,id,return,this,context,id
FrameworkServlet -> @Nullable 	public String getContextId();1496259743;Return the custom WebApplicationContext id, if any.;@Nullable_	public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;nullable,public,string,get,context,id,return,this,context,id
FrameworkServlet -> @Nullable 	public String getContextId();1496837955;Return the custom WebApplicationContext id, if any.;@Nullable_	public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;nullable,public,string,get,context,id,return,this,context,id
FrameworkServlet -> @Nullable 	public String getContextId();1498505691;Return the custom WebApplicationContext id, if any.;@Nullable_	public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;nullable,public,string,get,context,id,return,this,context,id
FrameworkServlet -> @Nullable 	public String getContextId();1498780456;Return the custom WebApplicationContext id, if any.;@Nullable_	public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;nullable,public,string,get,context,id,return,this,context,id
FrameworkServlet -> @Nullable 	public String getContextId();1500448076;Return the custom WebApplicationContext id, if any.;@Nullable_	public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;nullable,public,string,get,context,id,return,this,context,id
FrameworkServlet -> @Nullable 	public String getContextId();1502952725;Return the custom WebApplicationContext id, if any.;@Nullable_	public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;nullable,public,string,get,context,id,return,this,context,id
FrameworkServlet -> @Nullable 	public String getContextId();1518987682;Return the custom WebApplicationContext id, if any.;@Nullable_	public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;nullable,public,string,get,context,id,return,this,context,id
FrameworkServlet -> @Nullable 	public String getContextId();1519732288;Return the custom WebApplicationContext id, if any.;@Nullable_	public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;nullable,public,string,get,context,id,return,this,context,id
FrameworkServlet -> @Nullable 	public String getContextId();1529361191;Return the custom WebApplicationContext id, if any.;@Nullable_	public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;nullable,public,string,get,context,id,return,this,context,id
FrameworkServlet -> @Nullable 	public String getContextId();1529721864;Return the custom WebApplicationContext id, if any.;@Nullable_	public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;nullable,public,string,get,context,id,return,this,context,id
FrameworkServlet -> @Nullable 	public String getContextId();1529948549;Return the custom WebApplicationContext id, if any.;@Nullable_	public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;nullable,public,string,get,context,id,return,this,context,id
FrameworkServlet -> @Nullable 	public String getContextId();1530174524;Return the custom WebApplicationContext id, if any.;@Nullable_	public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;nullable,public,string,get,context,id,return,this,context,id
FrameworkServlet -> @Nullable 	public String getContextId();1530174524;Return the custom WebApplicationContext id, if any.;@Nullable_	public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;nullable,public,string,get,context,id,return,this,context,id
FrameworkServlet -> @Nullable 	public String getContextId();1531321803;Return the custom WebApplicationContext id, if any.;@Nullable_	public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;nullable,public,string,get,context,id,return,this,context,id
FrameworkServlet -> @Nullable 	public String getContextId();1532555403;Return the custom WebApplicationContext id, if any.;@Nullable_	public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;nullable,public,string,get,context,id,return,this,context,id
FrameworkServlet -> @Nullable 	public String getContextId();1533160168;Return the custom WebApplicationContext id, if any.;@Nullable_	public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;nullable,public,string,get,context,id,return,this,context,id
FrameworkServlet -> @Nullable 	public String getContextId();1534488420;Return the custom WebApplicationContext id, if any.;@Nullable_	public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;nullable,public,string,get,context,id,return,this,context,id
FrameworkServlet -> @Nullable 	public String getContextId();1536962806;Return the custom WebApplicationContext id, if any.;@Nullable_	public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;nullable,public,string,get,context,id,return,this,context,id
FrameworkServlet -> @Nullable 	public String getContextId();1541442463;Return the custom WebApplicationContext id, if any.;@Nullable_	public String getContextId() {_		return this.contextId__	};return,the,custom,web,application,context,id,if,any;nullable,public,string,get,context,id,return,this,context,id
FrameworkServlet -> public FrameworkServlet();1328020251;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1334781369;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1335774711;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1340398642;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1342803001;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1344035753;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1345223391;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1346877235;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1347908336;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1348061150;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1348531024;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1349904862;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1351289067;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1351648724;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1351857948;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1354911578;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1355313310;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1356735495;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1357119239;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1362408075;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1363208506;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1368051298;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1368482696;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1384955432;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1385412762;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1385507478;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1389820887;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1389827047;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1400256389;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1409363223;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1409870233;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1427815317;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1427983931;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1436254479;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1449660404;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1450439838;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1453684721;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1456332614;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1458852256;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1467667881;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1467730834;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1477045587;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1495868221;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1496259743;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1496837955;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1498505691;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1498780456;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1500448076;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1502952725;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1518987682;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1519732288;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1529361191;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1529721864;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1529948549;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1530174524;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1530174524;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1531321803;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1532555403;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1533160168;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1534488420;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1536962806;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public FrameworkServlet();1541442463;Create a new {@code FrameworkServlet} that will create its own internal web_application context based on defaults and values provided through servlet_init-params. Typically used in Servlet 2.5 or earlier environments, where the only_option for servlet registration is through {@code web.xml} which requires the use_of a no-arg constructor._<p>Calling {@link #setContextConfigLocation} (init-param 'contextConfigLocation')_will dictate which XML files will be loaded by the_{@linkplain #DEFAULT_CONTEXT_CLASS default XmlWebApplicationContext}_<p>Calling {@link #setContextClass} (init-param 'contextClass') overrides the_default {@code XmlWebApplicationContext} and allows for specifying an alternative class,_such as {@code AnnotationConfigWebApplicationContext}._<p>Calling {@link #setContextInitializerClasses} (init-param 'contextInitializerClasses')_indicates which {@link ApplicationContextInitializer} classes should be used to_further configure the internal application context prior to refresh()._@see #FrameworkServlet(WebApplicationContext);public FrameworkServlet() {_	};create,a,new,code,framework,servlet,that,will,create,its,own,internal,web,application,context,based,on,defaults,and,values,provided,through,servlet,init,params,typically,used,in,servlet,2,5,or,earlier,environments,where,the,only,option,for,servlet,registration,is,through,code,web,xml,which,requires,the,use,of,a,no,arg,constructor,p,calling,link,set,context,config,location,init,param,context,config,location,will,dictate,which,xml,files,will,be,loaded,by,the,linkplain,default,xml,web,application,context,p,calling,link,set,context,class,init,param,context,class,overrides,the,default,code,xml,web,application,context,and,allows,for,specifying,an,alternative,class,such,as,code,annotation,config,web,application,context,p,calling,link,set,context,initializer,classes,init,param,context,initializer,classes,indicates,which,link,application,context,initializer,classes,should,be,used,to,further,configure,the,internal,application,context,prior,to,refresh,see,framework,servlet,web,application,context;public,framework,servlet
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1328020251;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableWebApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,web,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1334781369;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableWebApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,web,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1335774711;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1340398642;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1342803001;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1344035753;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1345223391;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1346877235;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1347908336;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1348061150;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1348531024;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1349904862;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1351289067;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1351648724;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1351857948;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1354911578;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1355313310;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1356735495;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1357119239;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1362408075;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1363208506;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1368051298;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1368482696;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1384955432;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1389820887;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public String getServletContextAttributeName();1328020251;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_<code>SERVLET_CONTEXT_PREFIX + servlet name</code>._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,code,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1334781369;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_<code>SERVLET_CONTEXT_PREFIX + servlet name</code>._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,code,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1335774711;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_<code>SERVLET_CONTEXT_PREFIX + servlet name</code>._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,code,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1340398642;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_<code>SERVLET_CONTEXT_PREFIX + servlet name</code>._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,code,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1342803001;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_<code>SERVLET_CONTEXT_PREFIX + servlet name</code>._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,code,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1344035753;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_<code>SERVLET_CONTEXT_PREFIX + servlet name</code>._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,code,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1345223391;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_<code>SERVLET_CONTEXT_PREFIX + servlet name</code>._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,code,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1346877235;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_<code>SERVLET_CONTEXT_PREFIX + servlet name</code>._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,code,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1347908336;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_<code>SERVLET_CONTEXT_PREFIX + servlet name</code>._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,code,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1348061150;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_<code>SERVLET_CONTEXT_PREFIX + servlet name</code>._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,code,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1348531024;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_<code>SERVLET_CONTEXT_PREFIX + servlet name</code>._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,code,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1349904862;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_<code>SERVLET_CONTEXT_PREFIX + servlet name</code>._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,code,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1351289067;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_<code>SERVLET_CONTEXT_PREFIX + servlet name</code>._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,code,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1351648724;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_<code>SERVLET_CONTEXT_PREFIX + servlet name</code>._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,code,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1351857948;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_<code>SERVLET_CONTEXT_PREFIX + servlet name</code>._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,code,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1354911578;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_<code>SERVLET_CONTEXT_PREFIX + servlet name</code>._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,code,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1355313310;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_<code>SERVLET_CONTEXT_PREFIX + servlet name</code>._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,code,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1356735495;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1357119239;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1362408075;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1363208506;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1368051298;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1368482696;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1384955432;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1385412762;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1385507478;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1389820887;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1389827047;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1400256389;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1409363223;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1409870233;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1427815317;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1427983931;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1436254479;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1449660404;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1450439838;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1453684721;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1456332614;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1458852256;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1467667881;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1467730834;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1477045587;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1495868221;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1496259743;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1496837955;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1498505691;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1498780456;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1500448076;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1502952725;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1518987682;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1519732288;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1529361191;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1529721864;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1529948549;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1530174524;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1530174524;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1531321803;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1532555403;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1533160168;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1534488420;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1536962806;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> public String getServletContextAttributeName();1541442463;Return the ServletContext attribute name for this servlet's WebApplicationContext._<p>The default implementation returns_{@code SERVLET_CONTEXT_PREFIX + servlet name}._@see #SERVLET_CONTEXT_PREFIX_@see #getServletName;public String getServletContextAttributeName() {_		return SERVLET_CONTEXT_PREFIX + getServletName()__	};return,the,servlet,context,attribute,name,for,this,servlet,s,web,application,context,p,the,default,implementation,returns,code,servlet,name,see,see,get,servlet,name;public,string,get,servlet,context,attribute,name,return,get,servlet,name
FrameworkServlet -> @Nullable 	public String getContextAttribute();1496837955;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;@Nullable_	public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;nullable,public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> @Nullable 	public String getContextAttribute();1498505691;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;@Nullable_	public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;nullable,public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> @Nullable 	public String getContextAttribute();1498780456;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;@Nullable_	public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;nullable,public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> @Nullable 	public String getContextAttribute();1500448076;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;@Nullable_	public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;nullable,public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> @Nullable 	public String getContextAttribute();1502952725;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;@Nullable_	public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;nullable,public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> @Nullable 	public String getContextAttribute();1518987682;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;@Nullable_	public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;nullable,public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> @Nullable 	public String getContextAttribute();1519732288;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;@Nullable_	public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;nullable,public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> @Nullable 	public String getContextAttribute();1529361191;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;@Nullable_	public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;nullable,public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> @Nullable 	public String getContextAttribute();1529721864;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;@Nullable_	public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;nullable,public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> @Nullable 	public String getContextAttribute();1529948549;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;@Nullable_	public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;nullable,public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> @Nullable 	public String getContextAttribute();1530174524;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;@Nullable_	public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;nullable,public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> @Nullable 	public String getContextAttribute();1530174524;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;@Nullable_	public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;nullable,public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> @Nullable 	public String getContextAttribute();1531321803;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;@Nullable_	public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;nullable,public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> @Nullable 	public String getContextAttribute();1532555403;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;@Nullable_	public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;nullable,public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> @Nullable 	public String getContextAttribute();1533160168;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;@Nullable_	public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;nullable,public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> @Nullable 	public String getContextAttribute();1534488420;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;@Nullable_	public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;nullable,public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> @Nullable 	public String getContextAttribute();1536962806;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;@Nullable_	public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;nullable,public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> @Nullable 	public String getContextAttribute();1541442463;Return the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;@Nullable_	public String getContextAttribute() {_		return this.contextAttribute__	};return,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;nullable,public,string,get,context,attribute,return,this,context,attribute
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1328020251;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1334781369;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1335774711;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1340398642;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1342803001;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1344035753;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1345223391;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1346877235;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1347908336;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1348061150;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1348531024;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1349904862;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1351289067;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1351648724;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1351857948;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1354911578;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1355313310;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1356735495;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1357119239;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1362408075;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1363208506;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1368051298;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1368482696;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1384955432;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1385412762;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1385507478;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1389820887;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1389827047;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1400256389;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1409363223;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1409870233;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1427815317;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1427983931;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1436254479;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1449660404;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1450439838;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1453684721;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1456332614;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1458852256;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1467667881;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1467730834;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1477045587;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1495868221;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1496259743;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1496837955;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1498505691;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1498780456;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1500448076;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1502952725;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1518987682;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1519732288;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1529361191;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1529721864;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1529948549;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1530174524;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1530174524;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1531321803;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1532555403;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1533160168;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1534488420;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1536962806;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> public void setThreadContextInheritable(boolean threadContextInheritable);1541442463;Set whether to expose the LocaleContext and RequestAttributes as inheritable_for child threads (using an {@link java.lang.InheritableThreadLocal})._<p>Default is "false", to avoid side effects on spawned background threads._Switch this to "true" to enable inheritance for custom child threads which_are spawned during request processing and only used for this request_(that is, ending after their initial task, without reuse of the thread)._<p><b>WARNING:</b> Do not use inheritance for child threads if you are_accessing a thread pool which is configured to potentially add new threads_on demand (e.g. a JDK {@link java.util.concurrent.ThreadPoolExecutor}),_since this will expose the inherited context to such a pooled thread.;public void setThreadContextInheritable(boolean threadContextInheritable) {_		this.threadContextInheritable = threadContextInheritable__	};set,whether,to,expose,the,locale,context,and,request,attributes,as,inheritable,for,child,threads,using,an,link,java,lang,inheritable,thread,local,p,default,is,false,to,avoid,side,effects,on,spawned,background,threads,switch,this,to,true,to,enable,inheritance,for,custom,child,threads,which,are,spawned,during,request,processing,and,only,used,for,this,request,that,is,ending,after,their,initial,task,without,reuse,of,the,thread,p,b,warning,b,do,not,use,inheritance,for,child,threads,if,you,are,accessing,a,thread,pool,which,is,configured,to,potentially,add,new,threads,on,demand,e,g,a,jdk,link,java,util,concurrent,thread,pool,executor,since,this,will,expose,the,inherited,context,to,such,a,pooled,thread;public,void,set,thread,context,inheritable,boolean,thread,context,inheritable,this,thread,context,inheritable,thread,context,inheritable
FrameworkServlet -> private AbstractDelegatingCallable getAsyncCallable(final long startTime, 			final HttpServletRequest request, final HttpServletResponse response, 			final LocaleContext previousLocaleContext, final RequestAttributes previousAttributes, 			final LocaleContext localeContext, final ServletRequestAttributes requestAttributes);1334781369;Create a Callable to use to complete processing in an async execution chain.;private AbstractDelegatingCallable getAsyncCallable(final long startTime,_			final HttpServletRequest request, final HttpServletResponse response,_			final LocaleContext previousLocaleContext, final RequestAttributes previousAttributes,_			final LocaleContext localeContext, final ServletRequestAttributes requestAttributes) {__		return new AbstractDelegatingCallable() {_			public Object call() throws Exception {_				initContextHolders(request, localeContext, requestAttributes)__				Throwable unhandledFailure = null__				try {_					getNextCallable().call()__				}_				catch (Throwable t) {_					unhandledFailure = t__				}_				finally {_					resetContextHolders(request, previousLocaleContext, previousAttributes)__					finalizeProcessing(startTime, request, response, requestAttributes, unhandledFailure)__				}_				return null__			}_		}__	};create,a,callable,to,use,to,complete,processing,in,an,async,execution,chain;private,abstract,delegating,callable,get,async,callable,final,long,start,time,final,http,servlet,request,request,final,http,servlet,response,response,final,locale,context,previous,locale,context,final,request,attributes,previous,attributes,final,locale,context,locale,context,final,servlet,request,attributes,request,attributes,return,new,abstract,delegating,callable,public,object,call,throws,exception,init,context,holders,request,locale,context,request,attributes,throwable,unhandled,failure,null,try,get,next,callable,call,catch,throwable,t,unhandled,failure,t,finally,reset,context,holders,request,previous,locale,context,previous,attributes,finalize,processing,start,time,request,response,request,attributes,unhandled,failure,return,null
FrameworkServlet -> private AbstractDelegatingCallable getAsyncCallable(final long startTime, 			final HttpServletRequest request, final HttpServletResponse response, 			final LocaleContext previousLocaleContext, final RequestAttributes previousAttributes, 			final LocaleContext localeContext, final ServletRequestAttributes requestAttributes);1335774711;Create a Callable to use to complete processing in an async execution chain.;private AbstractDelegatingCallable getAsyncCallable(final long startTime,_			final HttpServletRequest request, final HttpServletResponse response,_			final LocaleContext previousLocaleContext, final RequestAttributes previousAttributes,_			final LocaleContext localeContext, final ServletRequestAttributes requestAttributes) {__		return new AbstractDelegatingCallable() {_			public Object call() throws Exception {_				initContextHolders(request, localeContext, requestAttributes)__				Throwable unhandledFailure = null__				try {_					getNextCallable().call()__				}_				catch (Throwable t) {_					unhandledFailure = t__				}_				finally {_					resetContextHolders(request, previousLocaleContext, previousAttributes)__					finalizeProcessing(startTime, request, response, requestAttributes, unhandledFailure)__				}_				return null__			}_		}__	};create,a,callable,to,use,to,complete,processing,in,an,async,execution,chain;private,abstract,delegating,callable,get,async,callable,final,long,start,time,final,http,servlet,request,request,final,http,servlet,response,response,final,locale,context,previous,locale,context,final,request,attributes,previous,attributes,final,locale,context,locale,context,final,servlet,request,attributes,request,attributes,return,new,abstract,delegating,callable,public,object,call,throws,exception,init,context,holders,request,locale,context,request,attributes,throwable,unhandled,failure,null,try,get,next,callable,call,catch,throwable,t,unhandled,failure,t,finally,reset,context,holders,request,previous,locale,context,previous,attributes,finalize,processing,start,time,request,response,request,attributes,unhandled,failure,return,null
FrameworkServlet -> private AbstractDelegatingCallable getAsyncCallable(final long startTime, 			final HttpServletRequest request, final HttpServletResponse response, 			final LocaleContext previousLocaleContext, final RequestAttributes previousAttributes, 			final LocaleContext localeContext, final ServletRequestAttributes requestAttributes);1340398642;Create a Callable to use to complete processing in an async execution chain.;private AbstractDelegatingCallable getAsyncCallable(final long startTime,_			final HttpServletRequest request, final HttpServletResponse response,_			final LocaleContext previousLocaleContext, final RequestAttributes previousAttributes,_			final LocaleContext localeContext, final ServletRequestAttributes requestAttributes) {__		return new AbstractDelegatingCallable() {_			public Object call() throws Exception {_				initContextHolders(request, localeContext, requestAttributes)__				Throwable unhandledFailure = null__				try {_					getNextCallable().call()__				}_				catch (Throwable t) {_					unhandledFailure = t__				}_				finally {_					resetContextHolders(request, previousLocaleContext, previousAttributes)__					finalizeProcessing(startTime, request, response, requestAttributes, unhandledFailure)__				}_				return null__			}_		}__	};create,a,callable,to,use,to,complete,processing,in,an,async,execution,chain;private,abstract,delegating,callable,get,async,callable,final,long,start,time,final,http,servlet,request,request,final,http,servlet,response,response,final,locale,context,previous,locale,context,final,request,attributes,previous,attributes,final,locale,context,locale,context,final,servlet,request,attributes,request,attributes,return,new,abstract,delegating,callable,public,object,call,throws,exception,init,context,holders,request,locale,context,request,attributes,throwable,unhandled,failure,null,try,get,next,callable,call,catch,throwable,t,unhandled,failure,t,finally,reset,context,holders,request,previous,locale,context,previous,attributes,finalize,processing,start,time,request,response,request,attributes,unhandled,failure,return,null
FrameworkServlet -> private AbstractDelegatingCallable getAsyncCallable(final long startTime, 			final HttpServletRequest request, final HttpServletResponse response, 			final LocaleContext previousLocaleContext, final RequestAttributes previousAttributes, 			final LocaleContext localeContext, final ServletRequestAttributes requestAttributes);1342803001;Create a Callable to use to complete processing in an async execution chain.;private AbstractDelegatingCallable getAsyncCallable(final long startTime,_			final HttpServletRequest request, final HttpServletResponse response,_			final LocaleContext previousLocaleContext, final RequestAttributes previousAttributes,_			final LocaleContext localeContext, final ServletRequestAttributes requestAttributes) {__		return new AbstractDelegatingCallable() {_			public Object call() throws Exception {_				initContextHolders(request, localeContext, requestAttributes)__				Throwable unhandledFailure = null__				try {_					getNext().call()__				}_				catch (Throwable t) {_					unhandledFailure = t__				}_				finally {_					resetContextHolders(request, previousLocaleContext, previousAttributes)__					finalizeProcessing(startTime, request, response, requestAttributes, unhandledFailure)__				}_				return null__			}_		}__	};create,a,callable,to,use,to,complete,processing,in,an,async,execution,chain;private,abstract,delegating,callable,get,async,callable,final,long,start,time,final,http,servlet,request,request,final,http,servlet,response,response,final,locale,context,previous,locale,context,final,request,attributes,previous,attributes,final,locale,context,locale,context,final,servlet,request,attributes,request,attributes,return,new,abstract,delegating,callable,public,object,call,throws,exception,init,context,holders,request,locale,context,request,attributes,throwable,unhandled,failure,null,try,get,next,call,catch,throwable,t,unhandled,failure,t,finally,reset,context,holders,request,previous,locale,context,previous,attributes,finalize,processing,start,time,request,response,request,attributes,unhandled,failure,return,null
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1328020251;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1334781369;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1335774711;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1340398642;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1342803001;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1344035753;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1345223391;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1346877235;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1347908336;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1348061150;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1348531024;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1349904862;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1351289067;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1351648724;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1351857948;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1354911578;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1355313310;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1356735495;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1357119239;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1362408075;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1363208506;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1368051298;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1368482696;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1384955432;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1385412762;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1385507478;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1389820887;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1389827047;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1400256389;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1409363223;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1409870233;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1427815317;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1427983931;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1436254479;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1449660404;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1450439838;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1453684721;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1456332614;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1458852256;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1467667881;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1467730834;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent);1477045587;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._Delegates to #createWebApplicationContext(ApplicationContext)._@param parent the parent WebApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext_@see #createWebApplicationContext(ApplicationContext);protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_		return createWebApplicationContext((ApplicationContext) parent)__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,delegates,to,create,web,application,context,application,context,param,parent,the,parent,web,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context,see,create,web,application,context,application,context;protected,web,application,context,create,web,application,context,web,application,context,parent,return,create,web,application,context,application,context,parent
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1328020251;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. <code>refresh()</code> will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initializeWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initializeWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,code,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,initialize,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,initialize,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1334781369;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. <code>refresh()</code> will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initializeWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initializeWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,code,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,initialize,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,initialize,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1335774711;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. <code>refresh()</code> will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,code,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1340398642;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. <code>refresh()</code> will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,code,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1342803001;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. <code>refresh()</code> will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,code,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1344035753;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. <code>refresh()</code> will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,code,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1345223391;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. <code>refresh()</code> will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,code,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1346877235;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. <code>refresh()</code> will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,code,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1347908336;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. <code>refresh()</code> will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,code,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1348061150;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. <code>refresh()</code> will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,code,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1348531024;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. <code>refresh()</code> will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,code,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1349904862;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. <code>refresh()</code> will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,code,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1351289067;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. <code>refresh()</code> will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,code,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1351648724;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. <code>refresh()</code> will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,code,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1351857948;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. <code>refresh()</code> will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,code,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1354911578;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. <code>refresh()</code> will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,code,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1355313310;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. <code>refresh()</code> will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,code,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1356735495;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1357119239;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1362408075;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1363208506;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1368051298;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1368482696;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1384955432;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1385412762;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1385507478;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1389820887;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1389827047;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1400256389;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1409363223;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1409870233;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1427815317;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1427983931;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1436254479;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1449660404;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1450439838;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1453684721;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1456332614;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1458852256;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1467667881;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1467730834;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1477045587;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1495868221;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1496259743;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1496837955;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1498505691;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1498780456;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1500448076;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1502952725;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1518987682;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1519732288;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1529361191;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1529721864;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1529948549;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer}s._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,s,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1530174524;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer ApplicationContextInitializers}._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,application,context,initializers,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1530174524;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer ApplicationContextInitializers}._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,application,context,initializers,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1531321803;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer ApplicationContextInitializers}._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,application,context,initializers,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1532555403;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer ApplicationContextInitializers}._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,application,context,initializers,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1533160168;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer ApplicationContextInitializers}._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,application,context,initializers,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1534488420;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer ApplicationContextInitializers}._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,application,context,initializers,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1536962806;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer ApplicationContextInitializers}._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,application,context,initializers,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac);1541442463;Post-process the given WebApplicationContext before it is refreshed_and activated as context for this servlet._<p>The default implementation is empty. {@code refresh()} will_be called automatically after this method returns._<p>Note that this method is designed to allow subclasses to modify the application_context, while {@link #initWebApplicationContext} is designed to allow_end-users to modify the context through the use of_{@link ApplicationContextInitializer ApplicationContextInitializers}._@param wac the configured WebApplicationContext (not refreshed yet)_@see #createWebApplicationContext_@see #initWebApplicationContext_@see ConfigurableWebApplicationContext#refresh();protected void postProcessWebApplicationContext(ConfigurableWebApplicationContext wac) {_	};post,process,the,given,web,application,context,before,it,is,refreshed,and,activated,as,context,for,this,servlet,p,the,default,implementation,is,empty,code,refresh,will,be,called,automatically,after,this,method,returns,p,note,that,this,method,is,designed,to,allow,subclasses,to,modify,the,application,context,while,link,init,web,application,context,is,designed,to,allow,end,users,to,modify,the,context,through,the,use,of,link,application,context,initializer,application,context,initializers,param,wac,the,configured,web,application,context,not,refreshed,yet,see,create,web,application,context,see,init,web,application,context,see,configurable,web,application,context,refresh;protected,void,post,process,web,application,context,configurable,web,application,context,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1328020251;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1334781369;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1335774711;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1340398642;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1342803001;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1344035753;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1345223391;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1346877235;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(this.getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,this,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1347908336;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(this.getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,this,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1348061150;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(this.getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,this,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1348531024;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(this.getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,this,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1349904862;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1351289067;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1351648724;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1351857948;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1354911578;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1355313310;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or <code>null</code> if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,code,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1356735495;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1357119239;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1362408075;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1363208506;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1368051298;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1368482696;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1384955432;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1385412762;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1385507478;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1389820887;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1389827047;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1400256389;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1409363223;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1409870233;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1427815317;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1427983931;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1436254479;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1449660404;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1450439838;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1453684721;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1456332614;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1458852256;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1467667881;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1467730834;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> protected WebApplicationContext createWebApplicationContext(ApplicationContext parent);1477045587;Instantiate the WebApplicationContext for this servlet, either a default_{@link org.springframework.web.context.support.XmlWebApplicationContext}_or a {@link #setContextClass custom context class}, if set._<p>This implementation expects custom contexts to implement the_{@link org.springframework.web.context.ConfigurableWebApplicationContext}_interface. Can be overridden in subclasses._<p>Do not forget to register this servlet instance as application listener on the_created context (for triggering its {@link #onRefresh callback}, and to call_{@link org.springframework.context.ConfigurableApplicationContext#refresh()}_before returning the context instance._@param parent the parent ApplicationContext to use, or {@code null} if none_@return the WebApplicationContext for this servlet_@see org.springframework.web.context.support.XmlWebApplicationContext;protected WebApplicationContext createWebApplicationContext(ApplicationContext parent) {_		Class<?> contextClass = getContextClass()__		if (this.logger.isDebugEnabled()) {_			this.logger.debug("Servlet with name '" + getServletName() +_					"' will try to create custom WebApplicationContext context of class '" +_					contextClass.getName() + "'" + ", using parent context [" + parent + "]")__		}_		if (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) {_			throw new ApplicationContextException(_					"Fatal initialization error in servlet with name '" + getServletName() +_					"': custom WebApplicationContext class [" + contextClass.getName() +_					"] is not of type ConfigurableWebApplicationContext")__		}_		ConfigurableWebApplicationContext wac =_				(ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass)___		wac.setEnvironment(getEnvironment())__		wac.setParent(parent)__		wac.setConfigLocation(getContextConfigLocation())___		configureAndRefreshWebApplicationContext(wac)___		return wac__	};instantiate,the,web,application,context,for,this,servlet,either,a,default,link,org,springframework,web,context,support,xml,web,application,context,or,a,link,set,context,class,custom,context,class,if,set,p,this,implementation,expects,custom,contexts,to,implement,the,link,org,springframework,web,context,configurable,web,application,context,interface,can,be,overridden,in,subclasses,p,do,not,forget,to,register,this,servlet,instance,as,application,listener,on,the,created,context,for,triggering,its,link,on,refresh,callback,and,to,call,link,org,springframework,context,configurable,application,context,refresh,before,returning,the,context,instance,param,parent,the,parent,application,context,to,use,or,code,null,if,none,return,the,web,application,context,for,this,servlet,see,org,springframework,web,context,support,xml,web,application,context;protected,web,application,context,create,web,application,context,application,context,parent,class,context,class,get,context,class,if,this,logger,is,debug,enabled,this,logger,debug,servlet,with,name,get,servlet,name,will,try,to,create,custom,web,application,context,context,of,class,context,class,get,name,using,parent,context,parent,if,configurable,web,application,context,class,is,assignable,from,context,class,throw,new,application,context,exception,fatal,initialization,error,in,servlet,with,name,get,servlet,name,custom,web,application,context,class,context,class,get,name,is,not,of,type,configurable,web,application,context,configurable,web,application,context,wac,configurable,web,application,context,bean,utils,instantiate,class,context,class,wac,set,environment,get,environment,wac,set,parent,parent,wac,set,config,location,get,context,config,location,configure,and,refresh,web,application,context,wac,return,wac
FrameworkServlet -> public void setContextAttribute(@Nullable String contextAttribute);1500448076;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(@Nullable String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,nullable,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(@Nullable String contextAttribute);1502952725;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(@Nullable String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,nullable,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(@Nullable String contextAttribute);1518987682;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(@Nullable String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,nullable,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(@Nullable String contextAttribute);1519732288;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(@Nullable String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,nullable,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(@Nullable String contextAttribute);1529361191;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(@Nullable String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,nullable,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(@Nullable String contextAttribute);1529721864;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(@Nullable String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,nullable,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(@Nullable String contextAttribute);1529948549;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(@Nullable String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,nullable,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(@Nullable String contextAttribute);1530174524;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(@Nullable String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,nullable,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(@Nullable String contextAttribute);1530174524;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(@Nullable String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,nullable,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(@Nullable String contextAttribute);1531321803;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(@Nullable String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,nullable,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(@Nullable String contextAttribute);1532555403;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(@Nullable String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,nullable,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(@Nullable String contextAttribute);1533160168;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(@Nullable String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,nullable,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(@Nullable String contextAttribute);1534488420;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(@Nullable String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,nullable,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(@Nullable String contextAttribute);1536962806;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(@Nullable String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,nullable,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> public void setContextAttribute(@Nullable String contextAttribute);1541442463;Set the name of the ServletContext attribute which should be used to retrieve the_{@link WebApplicationContext} that this servlet is supposed to use.;public void setContextAttribute(@Nullable String contextAttribute) {_		this.contextAttribute = contextAttribute__	};set,the,name,of,the,servlet,context,attribute,which,should,be,used,to,retrieve,the,link,web,application,context,that,this,servlet,is,supposed,to,use;public,void,set,context,attribute,nullable,string,context,attribute,this,context,attribute,context,attribute
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1385412762;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);@SuppressWarnings("unchecked")_	public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;suppress,warnings,unchecked,public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> @SuppressWarnings("unchecked") 	public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers);1385507478;Specify which {@link ApplicationContextInitializer} instances should be used_to initialize the application context used by this {@code FrameworkServlet}._@see #configureAndRefreshWebApplicationContext(ConfigurableWebApplicationContext)_@see #applyInitializers(ConfigurableApplicationContext);@SuppressWarnings("unchecked")_	public void setContextInitializers(ApplicationContextInitializer<ConfigurableApplicationContext>... contextInitializers) {_		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : contextInitializers) {_			this.contextInitializers.add(initializer)__		}_	};specify,which,link,application,context,initializer,instances,should,be,used,to,initialize,the,application,context,used,by,this,code,framework,servlet,see,configure,and,refresh,web,application,context,configurable,web,application,context,see,apply,initializers,configurable,application,context;suppress,warnings,unchecked,public,void,set,context,initializers,application,context,initializer,configurable,application,context,context,initializers,for,application,context,initializer,configurable,application,context,initializer,context,initializers,this,context,initializers,add,initializer
FrameworkServlet -> public boolean isEnableLoggingRequestDetails();1531321803;Whether logging of potentially sensitive, request details at DEBUG and_TRACE level is allowed._@since 5.1;public boolean isEnableLoggingRequestDetails() {_		return this.enableLoggingRequestDetails__	};whether,logging,of,potentially,sensitive,request,details,at,debug,and,trace,level,is,allowed,since,5,1;public,boolean,is,enable,logging,request,details,return,this,enable,logging,request,details
FrameworkServlet -> public boolean isEnableLoggingRequestDetails();1532555403;Whether logging of potentially sensitive, request details at DEBUG and_TRACE level is allowed._@since 5.1;public boolean isEnableLoggingRequestDetails() {_		return this.enableLoggingRequestDetails__	};whether,logging,of,potentially,sensitive,request,details,at,debug,and,trace,level,is,allowed,since,5,1;public,boolean,is,enable,logging,request,details,return,this,enable,logging,request,details
FrameworkServlet -> public boolean isEnableLoggingRequestDetails();1533160168;Whether logging of potentially sensitive, request details at DEBUG and_TRACE level is allowed._@since 5.1;public boolean isEnableLoggingRequestDetails() {_		return this.enableLoggingRequestDetails__	};whether,logging,of,potentially,sensitive,request,details,at,debug,and,trace,level,is,allowed,since,5,1;public,boolean,is,enable,logging,request,details,return,this,enable,logging,request,details
FrameworkServlet -> public boolean isEnableLoggingRequestDetails();1534488420;Whether logging of potentially sensitive, request details at DEBUG and_TRACE level is allowed._@since 5.1;public boolean isEnableLoggingRequestDetails() {_		return this.enableLoggingRequestDetails__	};whether,logging,of,potentially,sensitive,request,details,at,debug,and,trace,level,is,allowed,since,5,1;public,boolean,is,enable,logging,request,details,return,this,enable,logging,request,details
FrameworkServlet -> public boolean isEnableLoggingRequestDetails();1536962806;Whether logging of potentially sensitive, request details at DEBUG and_TRACE level is allowed._@since 5.1;public boolean isEnableLoggingRequestDetails() {_		return this.enableLoggingRequestDetails__	};whether,logging,of,potentially,sensitive,request,details,at,debug,and,trace,level,is,allowed,since,5,1;public,boolean,is,enable,logging,request,details,return,this,enable,logging,request,details
FrameworkServlet -> public boolean isEnableLoggingRequestDetails();1541442463;Whether logging of potentially sensitive, request details at DEBUG and_TRACE level is allowed._@since 5.1;public boolean isEnableLoggingRequestDetails() {_		return this.enableLoggingRequestDetails__	};whether,logging,of,potentially,sensitive,request,details,at,debug,and,trace,level,is,allowed,since,5,1;public,boolean,is,enable,logging,request,details,return,this,enable,logging,request,details
FrameworkServlet -> public void setContextId(@Nullable String contextId);1500448076;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(@Nullable String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,nullable,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(@Nullable String contextId);1502952725;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(@Nullable String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,nullable,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(@Nullable String contextId);1518987682;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(@Nullable String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,nullable,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(@Nullable String contextId);1519732288;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(@Nullable String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,nullable,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(@Nullable String contextId);1529361191;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(@Nullable String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,nullable,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(@Nullable String contextId);1529721864;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(@Nullable String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,nullable,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(@Nullable String contextId);1529948549;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(@Nullable String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,nullable,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(@Nullable String contextId);1530174524;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(@Nullable String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,nullable,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(@Nullable String contextId);1530174524;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(@Nullable String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,nullable,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(@Nullable String contextId);1531321803;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(@Nullable String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,nullable,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(@Nullable String contextId);1532555403;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(@Nullable String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,nullable,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(@Nullable String contextId);1533160168;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(@Nullable String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,nullable,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(@Nullable String contextId);1534488420;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(@Nullable String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,nullable,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(@Nullable String contextId);1536962806;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(@Nullable String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,nullable,string,context,id,this,context,id,context,id
FrameworkServlet -> public void setContextId(@Nullable String contextId);1541442463;Specify a custom WebApplicationContext id,_to be used as serialization id for the underlying BeanFactory.;public void setContextId(@Nullable String contextId) {_		this.contextId = contextId__	};specify,a,custom,web,application,context,id,to,be,used,as,serialization,id,for,the,underlying,bean,factory;public,void,set,context,id,nullable,string,context,id,this,context,id,context,id
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1328020251;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1334781369;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1335774711;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1340398642;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1342803001;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1344035753;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1345223391;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1346877235;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1347908336;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1348061150;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1348531024;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1349904862;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1351289067;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1351648724;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1351857948;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1354911578;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1355313310;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1356735495;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1357119239;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1362408075;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1363208506;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1368051298;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1368482696;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1384955432;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1385412762;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1385507478;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1389820887;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1389827047;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1400256389;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1409363223;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1409870233;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1427815317;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1427983931;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1436254479;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1449660404;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1450439838;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1453684721;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1456332614;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1458852256;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1467667881;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1467730834;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1477045587;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1495868221;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1496259743;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1496837955;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1498505691;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1498780456;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1500448076;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1502952725;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1518987682;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1519732288;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isDebugEnabled()) {_				this.logger.debug("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute with name [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,debug,enabled,this,logger,debug,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,with,name,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1529361191;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isTraceEnabled()) {_				this.logger.trace("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,trace,enabled,this,logger,trace,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1529721864;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isTraceEnabled()) {_				this.logger.trace("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,trace,enabled,this,logger,trace,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1529948549;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isTraceEnabled()) {_				this.logger.trace("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,trace,enabled,this,logger,trace,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1530174524;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (this.logger.isTraceEnabled()) {_				this.logger.trace("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,this,logger,is,trace,enabled,this,logger,trace,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1530174524;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (logger.isTraceEnabled()) {_				logger.trace("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,logger,is,trace,enabled,logger,trace,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1531321803;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__			if (logger.isTraceEnabled()) {_				logger.trace("Published WebApplicationContext of servlet '" + getServletName() +_						"' as ServletContext attribute [" + attrName + "]")__			}_		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,if,logger,is,trace,enabled,logger,trace,published,web,application,context,of,servlet,get,servlet,name,as,servlet,context,attribute,attr,name,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1532555403;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1533160168;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1534488420;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1536962806;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			onRefresh(wac)__		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,return,wac
FrameworkServlet -> protected WebApplicationContext initWebApplicationContext();1541442463;Initialize and publish the WebApplicationContext for this servlet._<p>Delegates to {@link #createWebApplicationContext} for actual creation_of the context. Can be overridden in subclasses._@return the WebApplicationContext instance_@see #FrameworkServlet(WebApplicationContext)_@see #setContextClass_@see #setContextConfigLocation;protected WebApplicationContext initWebApplicationContext() {_		WebApplicationContext rootContext =_				WebApplicationContextUtils.getWebApplicationContext(getServletContext())__		WebApplicationContext wac = null___		if (this.webApplicationContext != null) {_			_			wac = this.webApplicationContext__			if (wac instanceof ConfigurableWebApplicationContext) {_				ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac__				if (!cwac.isActive()) {_					_					_					if (cwac.getParent() == null) {_						_						_						cwac.setParent(rootContext)__					}_					configureAndRefreshWebApplicationContext(cwac)__				}_			}_		}_		if (wac == null) {_			_			_			_			_			wac = findWebApplicationContext()__		}_		if (wac == null) {_			_			wac = createWebApplicationContext(rootContext)__		}__		if (!this.refreshEventReceived) {_			_			_			_			synchronized (this.onRefreshMonitor) {_				onRefresh(wac)__			}_		}__		if (this.publishContext) {_			_			String attrName = getServletContextAttributeName()__			getServletContext().setAttribute(attrName, wac)__		}__		return wac__	};initialize,and,publish,the,web,application,context,for,this,servlet,p,delegates,to,link,create,web,application,context,for,actual,creation,of,the,context,can,be,overridden,in,subclasses,return,the,web,application,context,instance,see,framework,servlet,web,application,context,see,set,context,class,see,set,context,config,location;protected,web,application,context,init,web,application,context,web,application,context,root,context,web,application,context,utils,get,web,application,context,get,servlet,context,web,application,context,wac,null,if,this,web,application,context,null,wac,this,web,application,context,if,wac,instanceof,configurable,web,application,context,configurable,web,application,context,cwac,configurable,web,application,context,wac,if,cwac,is,active,if,cwac,get,parent,null,cwac,set,parent,root,context,configure,and,refresh,web,application,context,cwac,if,wac,null,wac,find,web,application,context,if,wac,null,wac,create,web,application,context,root,context,if,this,refresh,event,received,synchronized,this,on,refresh,monitor,on,refresh,wac,if,this,publish,context,string,attr,name,get,servlet,context,attribute,name,get,servlet,context,set,attribute,attr,name,wac,return,wac
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1328020251;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1334781369;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1335774711;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1340398642;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1342803001;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1344035753;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1345223391;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1346877235;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1347908336;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1348061150;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1348531024;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1349904862;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1351289067;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1351648724;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1351857948;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1354911578;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1355313310;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1356735495;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1357119239;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1362408075;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1363208506;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1368051298;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1368482696;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1384955432;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1385412762;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1385507478;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1389820887;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1389827047;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1400256389;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1409363223;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1409870233;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1427815317;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1427983931;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1436254479;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1449660404;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1450439838;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1453684721;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1456332614;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1458852256;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1467667881;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1467730834;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> protected LocaleContext buildLocaleContext(HttpServletRequest request);1477045587;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> @Nullable 	protected String getUsernameForRequest(HttpServletRequest request);1495868221;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();@Nullable_	protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;nullable,protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> @Nullable 	protected String getUsernameForRequest(HttpServletRequest request);1496259743;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();@Nullable_	protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;nullable,protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> @Nullable 	protected String getUsernameForRequest(HttpServletRequest request);1496837955;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();@Nullable_	protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;nullable,protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> @Nullable 	protected String getUsernameForRequest(HttpServletRequest request);1498505691;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();@Nullable_	protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;nullable,protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> @Nullable 	protected String getUsernameForRequest(HttpServletRequest request);1498780456;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();@Nullable_	protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;nullable,protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> @Nullable 	protected String getUsernameForRequest(HttpServletRequest request);1500448076;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();@Nullable_	protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;nullable,protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> @Nullable 	protected String getUsernameForRequest(HttpServletRequest request);1502952725;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();@Nullable_	protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;nullable,protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> @Nullable 	protected String getUsernameForRequest(HttpServletRequest request);1518987682;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();@Nullable_	protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;nullable,protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> @Nullable 	protected String getUsernameForRequest(HttpServletRequest request);1519732288;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();@Nullable_	protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;nullable,protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> @Nullable 	protected String getUsernameForRequest(HttpServletRequest request);1529361191;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();@Nullable_	protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;nullable,protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> @Nullable 	protected String getUsernameForRequest(HttpServletRequest request);1529721864;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();@Nullable_	protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;nullable,protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> @Nullable 	protected String getUsernameForRequest(HttpServletRequest request);1529948549;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();@Nullable_	protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;nullable,protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> @Nullable 	protected String getUsernameForRequest(HttpServletRequest request);1530174524;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();@Nullable_	protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;nullable,protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> @Nullable 	protected String getUsernameForRequest(HttpServletRequest request);1530174524;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();@Nullable_	protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;nullable,protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> @Nullable 	protected String getUsernameForRequest(HttpServletRequest request);1531321803;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();@Nullable_	protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;nullable,protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> @Nullable 	protected String getUsernameForRequest(HttpServletRequest request);1532555403;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();@Nullable_	protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;nullable,protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> @Nullable 	protected String getUsernameForRequest(HttpServletRequest request);1533160168;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();@Nullable_	protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;nullable,protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> @Nullable 	protected String getUsernameForRequest(HttpServletRequest request);1534488420;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();@Nullable_	protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;nullable,protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> @Nullable 	protected String getUsernameForRequest(HttpServletRequest request);1536962806;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();@Nullable_	protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;nullable,protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> @Nullable 	protected String getUsernameForRequest(HttpServletRequest request);1541442463;Determine the username for the given request._<p>The default implementation takes the name of the UserPrincipal, if any._Can be overridden in subclasses._@param request current HTTP request_@return the username, or {@code null} if none found_@see javax.servlet.http.HttpServletRequest#getUserPrincipal();@Nullable_	protected String getUsernameForRequest(HttpServletRequest request) {_		Principal userPrincipal = request.getUserPrincipal()__		return (userPrincipal != null ? userPrincipal.getName() : null)__	};determine,the,username,for,the,given,request,p,the,default,implementation,takes,the,name,of,the,user,principal,if,any,can,be,overridden,in,subclasses,param,request,current,http,request,return,the,username,or,code,null,if,none,found,see,javax,servlet,http,http,servlet,request,get,user,principal;nullable,protected,string,get,username,for,request,http,servlet,request,request,principal,user,principal,request,get,user,principal,return,user,principal,null,user,principal,get,name,null
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1340398642;Override the parent class implementation in order to intercept PATCH_requests.__@see #doPatch(HttpServletRequest, HttpServletResponse);@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			doPatch(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests,see,do,patch,http,servlet,request,http,servlet,response;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,do,patch,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1342803001;Override the parent class implementation in order to intercept PATCH_requests.__@see #doPatch(HttpServletRequest, HttpServletResponse);@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			doPatch(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests,see,do,patch,http,servlet,request,http,servlet,response;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,do,patch,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1344035753;Override the parent class implementation in order to intercept PATCH_requests.__@see #doPatch(HttpServletRequest, HttpServletResponse);@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			doPatch(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests,see,do,patch,http,servlet,request,http,servlet,response;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,do,patch,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1345223391;Override the parent class implementation in order to intercept PATCH_requests.__@see #doPatch(HttpServletRequest, HttpServletResponse);@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			doPatch(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests,see,do,patch,http,servlet,request,http,servlet,response;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,do,patch,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1346877235;Override the parent class implementation in order to intercept PATCH_requests.__@see #doPatch(HttpServletRequest, HttpServletResponse);@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			doPatch(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests,see,do,patch,http,servlet,request,http,servlet,response;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,do,patch,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1347908336;Override the parent class implementation in order to intercept PATCH_requests.__@see #doPatch(HttpServletRequest, HttpServletResponse);@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			doPatch(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests,see,do,patch,http,servlet,request,http,servlet,response;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,do,patch,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1348061150;Override the parent class implementation in order to intercept PATCH_requests.__@see #doPatch(HttpServletRequest, HttpServletResponse);@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			doPatch(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests,see,do,patch,http,servlet,request,http,servlet,response;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,do,patch,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1348531024;Override the parent class implementation in order to intercept PATCH_requests.__@see #doPatch(HttpServletRequest, HttpServletResponse);@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests,see,do,patch,http,servlet,request,http,servlet,response;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1349904862;Override the parent class implementation in order to intercept PATCH_requests.__@see #doPatch(HttpServletRequest, HttpServletResponse);@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests,see,do,patch,http,servlet,request,http,servlet,response;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351289067;Override the parent class implementation in order to intercept PATCH_requests.__@see #doPatch(HttpServletRequest, HttpServletResponse);@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests,see,do,patch,http,servlet,request,http,servlet,response;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351648724;Override the parent class implementation in order to intercept PATCH_requests.__@see #doPatch(HttpServletRequest, HttpServletResponse);@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests,see,do,patch,http,servlet,request,http,servlet,response;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1351857948;Override the parent class implementation in order to intercept PATCH_requests.__@see #doPatch(HttpServletRequest, HttpServletResponse);@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests,see,do,patch,http,servlet,request,http,servlet,response;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1354911578;Override the parent class implementation in order to intercept PATCH_requests.__@see #doPatch(HttpServletRequest, HttpServletResponse);@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests,see,do,patch,http,servlet,request,http,servlet,response;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1355313310;Override the parent class implementation in order to intercept PATCH_requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1356735495;Override the parent class implementation in order to intercept PATCH_requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1357119239;Override the parent class implementation in order to intercept PATCH_requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1362408075;Override the parent class implementation in order to intercept PATCH_requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1363208506;Override the parent class implementation in order to intercept PATCH_requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1368051298;Override the parent class implementation in order to intercept PATCH_requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1368482696;Override the parent class implementation in order to intercept PATCH_requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1384955432;Override the parent class implementation in order to intercept PATCH_requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1385412762;Override the parent class implementation in order to intercept PATCH_requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1385507478;Override the parent class implementation in order to intercept PATCH_requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1389820887;Override the parent class implementation in order to intercept PATCH_requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1389827047;Override the parent class implementation in order to intercept PATCH_requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1400256389;Override the parent class implementation in order to intercept PATCH_requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1409363223;Override the parent class implementation in order to intercept PATCH_requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1409870233;Override the parent class implementation in order to intercept PATCH_requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1427815317;Override the parent class implementation in order to intercept PATCH_requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1427983931;Override the parent class implementation in order to intercept PATCH_requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1436254479;Override the parent class implementation in order to intercept PATCH_requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		String method = request.getMethod()__		if (method.equalsIgnoreCase(RequestMethod.PATCH.name())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,string,method,request,get,method,if,method,equals,ignore,case,request,method,patch,name,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1449660404;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		if (HttpMethod.PATCH.matches(request.getMethod())) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,if,http,method,patch,matches,request,get,method,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1450439838;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (HttpMethod.PATCH == httpMethod || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,patch,http,method,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1453684721;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (HttpMethod.PATCH == httpMethod || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,patch,http,method,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1456332614;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (HttpMethod.PATCH == httpMethod || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,patch,http,method,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1458852256;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (HttpMethod.PATCH == httpMethod || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,patch,http,method,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1467667881;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (HttpMethod.PATCH == httpMethod || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,patch,http,method,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1467730834;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (HttpMethod.PATCH == httpMethod || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,patch,http,method,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1477045587;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (HttpMethod.PATCH == httpMethod || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,patch,http,method,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1495868221;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (HttpMethod.PATCH == httpMethod || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,patch,http,method,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1496259743;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (HttpMethod.PATCH == httpMethod || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,patch,http,method,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1496837955;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (HttpMethod.PATCH == httpMethod || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,patch,http,method,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1498505691;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (HttpMethod.PATCH == httpMethod || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,patch,http,method,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1498780456;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (HttpMethod.PATCH == httpMethod || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,patch,http,method,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1500448076;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (HttpMethod.PATCH == httpMethod || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,patch,http,method,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1502952725;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (HttpMethod.PATCH == httpMethod || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,patch,http,method,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1518987682;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (httpMethod == HttpMethod.PATCH || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,http,method,patch,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1519732288;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (httpMethod == HttpMethod.PATCH || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,http,method,patch,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529361191;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (httpMethod == HttpMethod.PATCH || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,http,method,patch,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529721864;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (httpMethod == HttpMethod.PATCH || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,http,method,patch,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1529948549;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (httpMethod == HttpMethod.PATCH || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,http,method,patch,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1530174524;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (httpMethod == HttpMethod.PATCH || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,http,method,patch,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1530174524;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (httpMethod == HttpMethod.PATCH || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,http,method,patch,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1531321803;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (httpMethod == HttpMethod.PATCH || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,http,method,patch,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1532555403;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (httpMethod == HttpMethod.PATCH || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,http,method,patch,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1533160168;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (httpMethod == HttpMethod.PATCH || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,http,method,patch,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1534488420;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (httpMethod == HttpMethod.PATCH || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,http,method,patch,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1536962806;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (httpMethod == HttpMethod.PATCH || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,http,method,patch,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Override 	protected void service(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1541442463;Override the parent class implementation in order to intercept PATCH requests.;@Override_	protected void service(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod())__		if (httpMethod == HttpMethod.PATCH || httpMethod == null) {_			processRequest(request, response)__		}_		else {_			super.service(request, response)__		}_	};override,the,parent,class,implementation,in,order,to,intercept,patch,requests;override,protected,void,service,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,http,method,http,method,http,method,resolve,request,get,method,if,http,method,http,method,patch,http,method,null,process,request,request,response,else,super,service,request,response
FrameworkServlet -> @Nullable 	protected LocaleContext buildLocaleContext(HttpServletRequest request);1495868221;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;@Nullable_	protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;nullable,protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> @Nullable 	protected LocaleContext buildLocaleContext(HttpServletRequest request);1496259743;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;@Nullable_	protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;nullable,protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> @Nullable 	protected LocaleContext buildLocaleContext(HttpServletRequest request);1496837955;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;@Nullable_	protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;nullable,protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> @Nullable 	protected LocaleContext buildLocaleContext(HttpServletRequest request);1498505691;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;@Nullable_	protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;nullable,protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> @Nullable 	protected LocaleContext buildLocaleContext(HttpServletRequest request);1498780456;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;@Nullable_	protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;nullable,protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> @Nullable 	protected LocaleContext buildLocaleContext(HttpServletRequest request);1500448076;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;@Nullable_	protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;nullable,protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> @Nullable 	protected LocaleContext buildLocaleContext(HttpServletRequest request);1502952725;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;@Nullable_	protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;nullable,protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> @Nullable 	protected LocaleContext buildLocaleContext(HttpServletRequest request);1518987682;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;@Nullable_	protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;nullable,protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> @Nullable 	protected LocaleContext buildLocaleContext(HttpServletRequest request);1519732288;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;@Nullable_	protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;nullable,protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> @Nullable 	protected LocaleContext buildLocaleContext(HttpServletRequest request);1529361191;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;@Nullable_	protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;nullable,protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> @Nullable 	protected LocaleContext buildLocaleContext(HttpServletRequest request);1529721864;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;@Nullable_	protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;nullable,protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> @Nullable 	protected LocaleContext buildLocaleContext(HttpServletRequest request);1529948549;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;@Nullable_	protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;nullable,protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> @Nullable 	protected LocaleContext buildLocaleContext(HttpServletRequest request);1530174524;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;@Nullable_	protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;nullable,protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> @Nullable 	protected LocaleContext buildLocaleContext(HttpServletRequest request);1530174524;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;@Nullable_	protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;nullable,protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> @Nullable 	protected LocaleContext buildLocaleContext(HttpServletRequest request);1531321803;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;@Nullable_	protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;nullable,protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> @Nullable 	protected LocaleContext buildLocaleContext(HttpServletRequest request);1532555403;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;@Nullable_	protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;nullable,protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> @Nullable 	protected LocaleContext buildLocaleContext(HttpServletRequest request);1533160168;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;@Nullable_	protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;nullable,protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> @Nullable 	protected LocaleContext buildLocaleContext(HttpServletRequest request);1534488420;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;@Nullable_	protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;nullable,protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> @Nullable 	protected LocaleContext buildLocaleContext(HttpServletRequest request);1536962806;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;@Nullable_	protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;nullable,protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
FrameworkServlet -> @Nullable 	protected LocaleContext buildLocaleContext(HttpServletRequest request);1541442463;Build a LocaleContext for the given request, exposing the request's_primary locale as current locale._@param request current HTTP request_@return the corresponding LocaleContext, or {@code null} if none to bind_@see LocaleContextHolder#setLocaleContext;@Nullable_	protected LocaleContext buildLocaleContext(HttpServletRequest request) {_		return new SimpleLocaleContext(request.getLocale())__	};build,a,locale,context,for,the,given,request,exposing,the,request,s,primary,locale,as,current,locale,param,request,current,http,request,return,the,corresponding,locale,context,or,code,null,if,none,to,bind,see,locale,context,holder,set,locale,context;nullable,protected,locale,context,build,locale,context,http,servlet,request,request,return,new,simple,locale,context,request,get,locale
