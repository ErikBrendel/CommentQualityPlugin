# id;timestamp;commentText;codeText;commentWords;codeWords
ModelAndViewMethodReturnValueHandler -> public void setRedirectPatterns(String... redirectPatterns);1408997889;Configure one more simple patterns (as described in_{@link org.springframework.util.PatternMatchUtils#simpleMatch}) to use in order to recognize_custom redirect prefixes in addition to "redirect:".__<p>Note that simply configuring this property will not make a custom_redirect prefix work. There must be a custom View that recognizes the_prefix as well.__@since 4.1;public void setRedirectPatterns(String... redirectPatterns) {_		this.redirectPatterns = redirectPatterns__	};configure,one,more,simple,patterns,as,described,in,link,org,springframework,util,pattern,match,utils,simple,match,to,use,in,order,to,recognize,custom,redirect,prefixes,in,addition,to,redirect,p,note,that,simply,configuring,this,property,will,not,make,a,custom,redirect,prefix,work,there,must,be,a,custom,view,that,recognizes,the,prefix,as,well,since,4,1;public,void,set,redirect,patterns,string,redirect,patterns,this,redirect,patterns,redirect,patterns
ModelAndViewMethodReturnValueHandler -> public void setRedirectPatterns(String... redirectPatterns);1411657245;Configure one more simple patterns (as described in_{@link org.springframework.util.PatternMatchUtils#simpleMatch}) to use in order to recognize_custom redirect prefixes in addition to "redirect:"._<p>Note that simply configuring this property will not make a custom_redirect prefix work. There must be a custom View that recognizes the_prefix as well._@since 4.1;public void setRedirectPatterns(String... redirectPatterns) {_		this.redirectPatterns = redirectPatterns__	};configure,one,more,simple,patterns,as,described,in,link,org,springframework,util,pattern,match,utils,simple,match,to,use,in,order,to,recognize,custom,redirect,prefixes,in,addition,to,redirect,p,note,that,simply,configuring,this,property,will,not,make,a,custom,redirect,prefix,work,there,must,be,a,custom,view,that,recognizes,the,prefix,as,well,since,4,1;public,void,set,redirect,patterns,string,redirect,patterns,this,redirect,patterns,redirect,patterns
ModelAndViewMethodReturnValueHandler -> public void setRedirectPatterns(String... redirectPatterns);1453326845;Configure one more simple patterns (as described in_{@link org.springframework.util.PatternMatchUtils#simpleMatch}) to use in order to recognize_custom redirect prefixes in addition to "redirect:"._<p>Note that simply configuring this property will not make a custom_redirect prefix work. There must be a custom View that recognizes the_prefix as well._@since 4.1;public void setRedirectPatterns(String... redirectPatterns) {_		this.redirectPatterns = redirectPatterns__	};configure,one,more,simple,patterns,as,described,in,link,org,springframework,util,pattern,match,utils,simple,match,to,use,in,order,to,recognize,custom,redirect,prefixes,in,addition,to,redirect,p,note,that,simply,configuring,this,property,will,not,make,a,custom,redirect,prefix,work,there,must,be,a,custom,view,that,recognizes,the,prefix,as,well,since,4,1;public,void,set,redirect,patterns,string,redirect,patterns,this,redirect,patterns,redirect,patterns
ModelAndViewMethodReturnValueHandler -> public void setRedirectPatterns(String... redirectPatterns);1495868221;Configure one more simple patterns (as described in_{@link org.springframework.util.PatternMatchUtils#simpleMatch}) to use in order to recognize_custom redirect prefixes in addition to "redirect:"._<p>Note that simply configuring this property will not make a custom_redirect prefix work. There must be a custom View that recognizes the_prefix as well._@since 4.1;public void setRedirectPatterns(String... redirectPatterns) {_		this.redirectPatterns = redirectPatterns__	};configure,one,more,simple,patterns,as,described,in,link,org,springframework,util,pattern,match,utils,simple,match,to,use,in,order,to,recognize,custom,redirect,prefixes,in,addition,to,redirect,p,note,that,simply,configuring,this,property,will,not,make,a,custom,redirect,prefix,work,there,must,be,a,custom,view,that,recognizes,the,prefix,as,well,since,4,1;public,void,set,redirect,patterns,string,redirect,patterns,this,redirect,patterns,redirect,patterns
ModelAndViewMethodReturnValueHandler -> public void setRedirectPatterns(String... redirectPatterns);1496837955;Configure one more simple patterns (as described in_{@link org.springframework.util.PatternMatchUtils#simpleMatch}) to use in order to recognize_custom redirect prefixes in addition to "redirect:"._<p>Note that simply configuring this property will not make a custom_redirect prefix work. There must be a custom View that recognizes the_prefix as well._@since 4.1;public void setRedirectPatterns(String... redirectPatterns) {_		this.redirectPatterns = redirectPatterns__	};configure,one,more,simple,patterns,as,described,in,link,org,springframework,util,pattern,match,utils,simple,match,to,use,in,order,to,recognize,custom,redirect,prefixes,in,addition,to,redirect,p,note,that,simply,configuring,this,property,will,not,make,a,custom,redirect,prefix,work,there,must,be,a,custom,view,that,recognizes,the,prefix,as,well,since,4,1;public,void,set,redirect,patterns,string,redirect,patterns,this,redirect,patterns,redirect,patterns
ModelAndViewMethodReturnValueHandler -> public String[] getRedirectPatterns();1408997889;The configured redirect patterns, if any.;public String[] getRedirectPatterns() {_		return this.redirectPatterns__	};the,configured,redirect,patterns,if,any;public,string,get,redirect,patterns,return,this,redirect,patterns
ModelAndViewMethodReturnValueHandler -> public String[] getRedirectPatterns();1411657245;The configured redirect patterns, if any.;public String[] getRedirectPatterns() {_		return this.redirectPatterns__	};the,configured,redirect,patterns,if,any;public,string,get,redirect,patterns,return,this,redirect,patterns
ModelAndViewMethodReturnValueHandler -> public String[] getRedirectPatterns();1453326845;The configured redirect patterns, if any.;public String[] getRedirectPatterns() {_		return this.redirectPatterns__	};the,configured,redirect,patterns,if,any;public,string,get,redirect,patterns,return,this,redirect,patterns
ModelAndViewMethodReturnValueHandler -> protected boolean isRedirectViewName(String viewName);1408997889;Whether the given view name is a redirect view reference._The default implementation checks the configured redirect patterns and_also if the view name starts with the "redirect:" prefix._@param viewName the view name to check, never {@code null}_@return "true" if the given view name is recognized as a redirect view_reference_ "false" otherwise.;protected boolean isRedirectViewName(String viewName) {_		if (PatternMatchUtils.simpleMatch(this.redirectPatterns, viewName)) {_			return true__		}_		return viewName.startsWith("redirect:")__	};whether,the,given,view,name,is,a,redirect,view,reference,the,default,implementation,checks,the,configured,redirect,patterns,and,also,if,the,view,name,starts,with,the,redirect,prefix,param,view,name,the,view,name,to,check,never,code,null,return,true,if,the,given,view,name,is,recognized,as,a,redirect,view,reference,false,otherwise;protected,boolean,is,redirect,view,name,string,view,name,if,pattern,match,utils,simple,match,this,redirect,patterns,view,name,return,true,return,view,name,starts,with,redirect
ModelAndViewMethodReturnValueHandler -> protected boolean isRedirectViewName(String viewName);1411657245;Whether the given view name is a redirect view reference._The default implementation checks the configured redirect patterns and_also if the view name starts with the "redirect:" prefix._@param viewName the view name to check, never {@code null}_@return "true" if the given view name is recognized as a redirect view_reference_ "false" otherwise.;protected boolean isRedirectViewName(String viewName) {_		if (PatternMatchUtils.simpleMatch(this.redirectPatterns, viewName)) {_			return true__		}_		return viewName.startsWith("redirect:")__	};whether,the,given,view,name,is,a,redirect,view,reference,the,default,implementation,checks,the,configured,redirect,patterns,and,also,if,the,view,name,starts,with,the,redirect,prefix,param,view,name,the,view,name,to,check,never,code,null,return,true,if,the,given,view,name,is,recognized,as,a,redirect,view,reference,false,otherwise;protected,boolean,is,redirect,view,name,string,view,name,if,pattern,match,utils,simple,match,this,redirect,patterns,view,name,return,true,return,view,name,starts,with,redirect
ModelAndViewMethodReturnValueHandler -> protected boolean isRedirectViewName(String viewName);1453326845;Whether the given view name is a redirect view reference._The default implementation checks the configured redirect patterns and_also if the view name starts with the "redirect:" prefix._@param viewName the view name to check, never {@code null}_@return "true" if the given view name is recognized as a redirect view_reference_ "false" otherwise.;protected boolean isRedirectViewName(String viewName) {_		if (PatternMatchUtils.simpleMatch(this.redirectPatterns, viewName)) {_			return true__		}_		return viewName.startsWith("redirect:")__	};whether,the,given,view,name,is,a,redirect,view,reference,the,default,implementation,checks,the,configured,redirect,patterns,and,also,if,the,view,name,starts,with,the,redirect,prefix,param,view,name,the,view,name,to,check,never,code,null,return,true,if,the,given,view,name,is,recognized,as,a,redirect,view,reference,false,otherwise;protected,boolean,is,redirect,view,name,string,view,name,if,pattern,match,utils,simple,match,this,redirect,patterns,view,name,return,true,return,view,name,starts,with,redirect
ModelAndViewMethodReturnValueHandler -> protected boolean isRedirectViewName(String viewName);1495868221;Whether the given view name is a redirect view reference._The default implementation checks the configured redirect patterns and_also if the view name starts with the "redirect:" prefix._@param viewName the view name to check, never {@code null}_@return "true" if the given view name is recognized as a redirect view_reference_ "false" otherwise.;protected boolean isRedirectViewName(String viewName) {_		if (PatternMatchUtils.simpleMatch(this.redirectPatterns, viewName)) {_			return true__		}_		return viewName.startsWith("redirect:")__	};whether,the,given,view,name,is,a,redirect,view,reference,the,default,implementation,checks,the,configured,redirect,patterns,and,also,if,the,view,name,starts,with,the,redirect,prefix,param,view,name,the,view,name,to,check,never,code,null,return,true,if,the,given,view,name,is,recognized,as,a,redirect,view,reference,false,otherwise;protected,boolean,is,redirect,view,name,string,view,name,if,pattern,match,utils,simple,match,this,redirect,patterns,view,name,return,true,return,view,name,starts,with,redirect
ModelAndViewMethodReturnValueHandler -> protected boolean isRedirectViewName(String viewName);1496837955;Whether the given view name is a redirect view reference._The default implementation checks the configured redirect patterns and_also if the view name starts with the "redirect:" prefix._@param viewName the view name to check, never {@code null}_@return "true" if the given view name is recognized as a redirect view_reference_ "false" otherwise.;protected boolean isRedirectViewName(String viewName) {_		if (PatternMatchUtils.simpleMatch(this.redirectPatterns, viewName)) {_			return true__		}_		return viewName.startsWith("redirect:")__	};whether,the,given,view,name,is,a,redirect,view,reference,the,default,implementation,checks,the,configured,redirect,patterns,and,also,if,the,view,name,starts,with,the,redirect,prefix,param,view,name,the,view,name,to,check,never,code,null,return,true,if,the,given,view,name,is,recognized,as,a,redirect,view,reference,false,otherwise;protected,boolean,is,redirect,view,name,string,view,name,if,pattern,match,utils,simple,match,this,redirect,patterns,view,name,return,true,return,view,name,starts,with,redirect
ModelAndViewMethodReturnValueHandler -> protected boolean isRedirectViewName(String viewName);1500448076;Whether the given view name is a redirect view reference._The default implementation checks the configured redirect patterns and_also if the view name starts with the "redirect:" prefix._@param viewName the view name to check, never {@code null}_@return "true" if the given view name is recognized as a redirect view_reference_ "false" otherwise.;protected boolean isRedirectViewName(String viewName) {_		if (PatternMatchUtils.simpleMatch(this.redirectPatterns, viewName)) {_			return true__		}_		return viewName.startsWith("redirect:")__	};whether,the,given,view,name,is,a,redirect,view,reference,the,default,implementation,checks,the,configured,redirect,patterns,and,also,if,the,view,name,starts,with,the,redirect,prefix,param,view,name,the,view,name,to,check,never,code,null,return,true,if,the,given,view,name,is,recognized,as,a,redirect,view,reference,false,otherwise;protected,boolean,is,redirect,view,name,string,view,name,if,pattern,match,utils,simple,match,this,redirect,patterns,view,name,return,true,return,view,name,starts,with,redirect
ModelAndViewMethodReturnValueHandler -> protected boolean isRedirectViewName(String viewName);1508160879;Whether the given view name is a redirect view reference._The default implementation checks the configured redirect patterns and_also if the view name starts with the "redirect:" prefix._@param viewName the view name to check, never {@code null}_@return "true" if the given view name is recognized as a redirect view_reference_ "false" otherwise.;protected boolean isRedirectViewName(String viewName) {_		if (PatternMatchUtils.simpleMatch(this.redirectPatterns, viewName)) {_			return true__		}_		return viewName.startsWith("redirect:")__	};whether,the,given,view,name,is,a,redirect,view,reference,the,default,implementation,checks,the,configured,redirect,patterns,and,also,if,the,view,name,starts,with,the,redirect,prefix,param,view,name,the,view,name,to,check,never,code,null,return,true,if,the,given,view,name,is,recognized,as,a,redirect,view,reference,false,otherwise;protected,boolean,is,redirect,view,name,string,view,name,if,pattern,match,utils,simple,match,this,redirect,patterns,view,name,return,true,return,view,name,starts,with,redirect
ModelAndViewMethodReturnValueHandler -> protected boolean isRedirectViewName(String viewName);1520529117;Whether the given view name is a redirect view reference._The default implementation checks the configured redirect patterns and_also if the view name starts with the "redirect:" prefix._@param viewName the view name to check, never {@code null}_@return "true" if the given view name is recognized as a redirect view_reference_ "false" otherwise.;protected boolean isRedirectViewName(String viewName) {_		return (PatternMatchUtils.simpleMatch(this.redirectPatterns, viewName) || viewName.startsWith("redirect:"))__	};whether,the,given,view,name,is,a,redirect,view,reference,the,default,implementation,checks,the,configured,redirect,patterns,and,also,if,the,view,name,starts,with,the,redirect,prefix,param,view,name,the,view,name,to,check,never,code,null,return,true,if,the,given,view,name,is,recognized,as,a,redirect,view,reference,false,otherwise;protected,boolean,is,redirect,view,name,string,view,name,return,pattern,match,utils,simple,match,this,redirect,patterns,view,name,view,name,starts,with,redirect
ModelAndViewMethodReturnValueHandler -> public void setRedirectPatterns(@Nullable String... redirectPatterns);1500448076;Configure one more simple patterns (as described in_{@link org.springframework.util.PatternMatchUtils#simpleMatch}) to use in order to recognize_custom redirect prefixes in addition to "redirect:"._<p>Note that simply configuring this property will not make a custom_redirect prefix work. There must be a custom View that recognizes the_prefix as well._@since 4.1;public void setRedirectPatterns(@Nullable String... redirectPatterns) {_		this.redirectPatterns = redirectPatterns__	};configure,one,more,simple,patterns,as,described,in,link,org,springframework,util,pattern,match,utils,simple,match,to,use,in,order,to,recognize,custom,redirect,prefixes,in,addition,to,redirect,p,note,that,simply,configuring,this,property,will,not,make,a,custom,redirect,prefix,work,there,must,be,a,custom,view,that,recognizes,the,prefix,as,well,since,4,1;public,void,set,redirect,patterns,nullable,string,redirect,patterns,this,redirect,patterns,redirect,patterns
ModelAndViewMethodReturnValueHandler -> public void setRedirectPatterns(@Nullable String... redirectPatterns);1508160879;Configure one more simple patterns (as described in {@link PatternMatchUtils#simpleMatch})_to use in order to recognize custom redirect prefixes in addition to "redirect:"._<p>Note that simply configuring this property will not make a custom redirect prefix work._There must be a custom {@link View} that recognizes the prefix as well._@since 4.1;public void setRedirectPatterns(@Nullable String... redirectPatterns) {_		this.redirectPatterns = redirectPatterns__	};configure,one,more,simple,patterns,as,described,in,link,pattern,match,utils,simple,match,to,use,in,order,to,recognize,custom,redirect,prefixes,in,addition,to,redirect,p,note,that,simply,configuring,this,property,will,not,make,a,custom,redirect,prefix,work,there,must,be,a,custom,link,view,that,recognizes,the,prefix,as,well,since,4,1;public,void,set,redirect,patterns,nullable,string,redirect,patterns,this,redirect,patterns,redirect,patterns
ModelAndViewMethodReturnValueHandler -> public void setRedirectPatterns(@Nullable String... redirectPatterns);1520529117;Configure one more simple patterns (as described in {@link PatternMatchUtils#simpleMatch})_to use in order to recognize custom redirect prefixes in addition to "redirect:"._<p>Note that simply configuring this property will not make a custom redirect prefix work._There must be a custom {@link View} that recognizes the prefix as well._@since 4.1;public void setRedirectPatterns(@Nullable String... redirectPatterns) {_		this.redirectPatterns = redirectPatterns__	};configure,one,more,simple,patterns,as,described,in,link,pattern,match,utils,simple,match,to,use,in,order,to,recognize,custom,redirect,prefixes,in,addition,to,redirect,p,note,that,simply,configuring,this,property,will,not,make,a,custom,redirect,prefix,work,there,must,be,a,custom,link,view,that,recognizes,the,prefix,as,well,since,4,1;public,void,set,redirect,patterns,nullable,string,redirect,patterns,this,redirect,patterns,redirect,patterns
ModelAndViewMethodReturnValueHandler -> @Nullable 	public String[] getRedirectPatterns();1495868221;The configured redirect patterns, if any.;@Nullable_	public String[] getRedirectPatterns() {_		return this.redirectPatterns__	};the,configured,redirect,patterns,if,any;nullable,public,string,get,redirect,patterns,return,this,redirect,patterns
ModelAndViewMethodReturnValueHandler -> @Nullable 	public String[] getRedirectPatterns();1496837955;The configured redirect patterns, if any.;@Nullable_	public String[] getRedirectPatterns() {_		return this.redirectPatterns__	};the,configured,redirect,patterns,if,any;nullable,public,string,get,redirect,patterns,return,this,redirect,patterns
ModelAndViewMethodReturnValueHandler -> @Nullable 	public String[] getRedirectPatterns();1500448076;The configured redirect patterns, if any.;@Nullable_	public String[] getRedirectPatterns() {_		return this.redirectPatterns__	};the,configured,redirect,patterns,if,any;nullable,public,string,get,redirect,patterns,return,this,redirect,patterns
ModelAndViewMethodReturnValueHandler -> @Nullable 	public String[] getRedirectPatterns();1508160879;Return the configured redirect patterns, if any._@since 4.1;@Nullable_	public String[] getRedirectPatterns() {_		return this.redirectPatterns__	};return,the,configured,redirect,patterns,if,any,since,4,1;nullable,public,string,get,redirect,patterns,return,this,redirect,patterns
ModelAndViewMethodReturnValueHandler -> @Nullable 	public String[] getRedirectPatterns();1520529117;Return the configured redirect patterns, if any._@since 4.1;@Nullable_	public String[] getRedirectPatterns() {_		return this.redirectPatterns__	};return,the,configured,redirect,patterns,if,any,since,4,1;nullable,public,string,get,redirect,patterns,return,this,redirect,patterns
