# id;timestamp;commentText;codeText;commentWords;codeWords
GroovyMarkupConfigurer -> protected ClassLoader createTemplateClassLoader() throws IOException;1402414673;Create a parent classloader for Groovy to use as parent classloader when_loading and compiling templates.;protected ClassLoader createTemplateClassLoader() throws IOException {_		String[] paths = StringUtils.commaDelimitedListToStringArray(getResourceLoaderPath())__		List<URL> urls = new ArrayList<URL>()__		for (String path : paths) {_			Resource[] resources = getApplicationContext().getResources(path)__			if (resources.length > 0) {_				for (Resource resource : resources) {_					if (resource.exists()) {_						urls.add(resource.getURL())__					}_				}_			}_		}_		ClassLoader classLoader = getApplicationContext().getClassLoader()__		return (urls.size() > 0 ? new URLClassLoader(urls.toArray(new URL[urls.size()]), classLoader) : classLoader)__	};create,a,parent,classloader,for,groovy,to,use,as,parent,classloader,when,loading,and,compiling,templates;protected,class,loader,create,template,class,loader,throws,ioexception,string,paths,string,utils,comma,delimited,list,to,string,array,get,resource,loader,path,list,url,urls,new,array,list,url,for,string,path,paths,resource,resources,get,application,context,get,resources,path,if,resources,length,0,for,resource,resource,resources,if,resource,exists,urls,add,resource,get,url,class,loader,class,loader,get,application,context,get,class,loader,return,urls,size,0,new,urlclass,loader,urls,to,array,new,url,urls,size,class,loader,class,loader
GroovyMarkupConfigurer -> protected ClassLoader createTemplateClassLoader() throws IOException;1402415951;Create a parent classloader for Groovy to use as parent classloader when_loading and compiling templates.;protected ClassLoader createTemplateClassLoader() throws IOException {_		String[] paths = StringUtils.commaDelimitedListToStringArray(getResourceLoaderPath())__		List<URL> urls = new ArrayList<URL>()__		for (String path : paths) {_			Resource[] resources = getApplicationContext().getResources(path)__			if (resources.length > 0) {_				for (Resource resource : resources) {_					if (resource.exists()) {_						urls.add(resource.getURL())__					}_				}_			}_		}_		ClassLoader classLoader = getApplicationContext().getClassLoader()__		return (urls.size() > 0 ? new URLClassLoader(urls.toArray(new URL[urls.size()]), classLoader) : classLoader)__	};create,a,parent,classloader,for,groovy,to,use,as,parent,classloader,when,loading,and,compiling,templates;protected,class,loader,create,template,class,loader,throws,ioexception,string,paths,string,utils,comma,delimited,list,to,string,array,get,resource,loader,path,list,url,urls,new,array,list,url,for,string,path,paths,resource,resources,get,application,context,get,resources,path,if,resources,length,0,for,resource,resource,resources,if,resource,exists,urls,add,resource,get,url,class,loader,class,loader,get,application,context,get,class,loader,return,urls,size,0,new,urlclass,loader,urls,to,array,new,url,urls,size,class,loader,class,loader
GroovyMarkupConfigurer -> protected ClassLoader createTemplateClassLoader() throws IOException;1404933899;Create a parent ClassLoader for Groovy to use as parent ClassLoader_when loading and compiling templates.;protected ClassLoader createTemplateClassLoader() throws IOException {_		String[] paths = StringUtils.commaDelimitedListToStringArray(getResourceLoaderPath())__		List<URL> urls = new ArrayList<URL>()__		for (String path : paths) {_			Resource[] resources = getApplicationContext().getResources(path)__			if (resources.length > 0) {_				for (Resource resource : resources) {_					if (resource.exists()) {_						urls.add(resource.getURL())__					}_				}_			}_		}_		ClassLoader classLoader = getApplicationContext().getClassLoader()__		return (urls.size() > 0 ? new URLClassLoader(urls.toArray(new URL[urls.size()]), classLoader) : classLoader)__	};create,a,parent,class,loader,for,groovy,to,use,as,parent,class,loader,when,loading,and,compiling,templates;protected,class,loader,create,template,class,loader,throws,ioexception,string,paths,string,utils,comma,delimited,list,to,string,array,get,resource,loader,path,list,url,urls,new,array,list,url,for,string,path,paths,resource,resources,get,application,context,get,resources,path,if,resources,length,0,for,resource,resource,resources,if,resource,exists,urls,add,resource,get,url,class,loader,class,loader,get,application,context,get,class,loader,return,urls,size,0,new,urlclass,loader,urls,to,array,new,url,urls,size,class,loader,class,loader
GroovyMarkupConfigurer -> protected ClassLoader createTemplateClassLoader() throws IOException;1435306470;Create a parent ClassLoader for Groovy to use as parent ClassLoader_when loading and compiling templates.;protected ClassLoader createTemplateClassLoader() throws IOException {_		String[] paths = StringUtils.commaDelimitedListToStringArray(getResourceLoaderPath())__		List<URL> urls = new ArrayList<URL>()__		for (String path : paths) {_			Resource[] resources = getApplicationContext().getResources(path)__			if (resources.length > 0) {_				for (Resource resource : resources) {_					if (resource.exists()) {_						urls.add(resource.getURL())__					}_				}_			}_		}_		ClassLoader classLoader = getApplicationContext().getClassLoader()__		return (urls.size() > 0 ? new URLClassLoader(urls.toArray(new URL[urls.size()]), classLoader) : classLoader)__	};create,a,parent,class,loader,for,groovy,to,use,as,parent,class,loader,when,loading,and,compiling,templates;protected,class,loader,create,template,class,loader,throws,ioexception,string,paths,string,utils,comma,delimited,list,to,string,array,get,resource,loader,path,list,url,urls,new,array,list,url,for,string,path,paths,resource,resources,get,application,context,get,resources,path,if,resources,length,0,for,resource,resource,resources,if,resource,exists,urls,add,resource,get,url,class,loader,class,loader,get,application,context,get,class,loader,return,urls,size,0,new,urlclass,loader,urls,to,array,new,url,urls,size,class,loader,class,loader
GroovyMarkupConfigurer -> protected ClassLoader createTemplateClassLoader() throws IOException;1436967737;Create a parent ClassLoader for Groovy to use as parent ClassLoader_when loading and compiling templates.;protected ClassLoader createTemplateClassLoader() throws IOException {_		String[] paths = StringUtils.commaDelimitedListToStringArray(getResourceLoaderPath())__		List<URL> urls = new ArrayList<URL>()__		for (String path : paths) {_			Resource[] resources = getApplicationContext().getResources(path)__			if (resources.length > 0) {_				for (Resource resource : resources) {_					if (resource.exists()) {_						urls.add(resource.getURL())__					}_				}_			}_		}_		ClassLoader classLoader = getApplicationContext().getClassLoader()__		return (urls.size() > 0 ? new URLClassLoader(urls.toArray(new URL[urls.size()]), classLoader) : classLoader)__	};create,a,parent,class,loader,for,groovy,to,use,as,parent,class,loader,when,loading,and,compiling,templates;protected,class,loader,create,template,class,loader,throws,ioexception,string,paths,string,utils,comma,delimited,list,to,string,array,get,resource,loader,path,list,url,urls,new,array,list,url,for,string,path,paths,resource,resources,get,application,context,get,resources,path,if,resources,length,0,for,resource,resource,resources,if,resource,exists,urls,add,resource,get,url,class,loader,class,loader,get,application,context,get,class,loader,return,urls,size,0,new,urlclass,loader,urls,to,array,new,url,urls,size,class,loader,class,loader
GroovyMarkupConfigurer -> protected ClassLoader createTemplateClassLoader() throws IOException;1467730834;Create a parent ClassLoader for Groovy to use as parent ClassLoader_when loading and compiling templates.;protected ClassLoader createTemplateClassLoader() throws IOException {_		String[] paths = StringUtils.commaDelimitedListToStringArray(getResourceLoaderPath())__		List<URL> urls = new ArrayList<>()__		for (String path : paths) {_			Resource[] resources = getApplicationContext().getResources(path)__			if (resources.length > 0) {_				for (Resource resource : resources) {_					if (resource.exists()) {_						urls.add(resource.getURL())__					}_				}_			}_		}_		ClassLoader classLoader = getApplicationContext().getClassLoader()__		return (urls.size() > 0 ? new URLClassLoader(urls.toArray(new URL[urls.size()]), classLoader) : classLoader)__	};create,a,parent,class,loader,for,groovy,to,use,as,parent,class,loader,when,loading,and,compiling,templates;protected,class,loader,create,template,class,loader,throws,ioexception,string,paths,string,utils,comma,delimited,list,to,string,array,get,resource,loader,path,list,url,urls,new,array,list,for,string,path,paths,resource,resources,get,application,context,get,resources,path,if,resources,length,0,for,resource,resource,resources,if,resource,exists,urls,add,resource,get,url,class,loader,class,loader,get,application,context,get,class,loader,return,urls,size,0,new,urlclass,loader,urls,to,array,new,url,urls,size,class,loader,class,loader
GroovyMarkupConfigurer -> protected ClassLoader createTemplateClassLoader() throws IOException;1496837955;Create a parent ClassLoader for Groovy to use as parent ClassLoader_when loading and compiling templates.;protected ClassLoader createTemplateClassLoader() throws IOException {_		String[] paths = StringUtils.commaDelimitedListToStringArray(getResourceLoaderPath())__		List<URL> urls = new ArrayList<>()__		for (String path : paths) {_			Resource[] resources = getApplicationContext().getResources(path)__			if (resources.length > 0) {_				for (Resource resource : resources) {_					if (resource.exists()) {_						urls.add(resource.getURL())__					}_				}_			}_		}_		ClassLoader classLoader = getApplicationContext().getClassLoader()__		Assert.state(classLoader != null, "No ClassLoader")__		return (urls.size() > 0 ? new URLClassLoader(urls.toArray(new URL[urls.size()]), classLoader) : classLoader)__	};create,a,parent,class,loader,for,groovy,to,use,as,parent,class,loader,when,loading,and,compiling,templates;protected,class,loader,create,template,class,loader,throws,ioexception,string,paths,string,utils,comma,delimited,list,to,string,array,get,resource,loader,path,list,url,urls,new,array,list,for,string,path,paths,resource,resources,get,application,context,get,resources,path,if,resources,length,0,for,resource,resource,resources,if,resource,exists,urls,add,resource,get,url,class,loader,class,loader,get,application,context,get,class,loader,assert,state,class,loader,null,no,class,loader,return,urls,size,0,new,urlclass,loader,urls,to,array,new,url,urls,size,class,loader,class,loader
GroovyMarkupConfigurer -> protected ClassLoader createTemplateClassLoader() throws IOException;1498780456;Create a parent ClassLoader for Groovy to use as parent ClassLoader_when loading and compiling templates.;protected ClassLoader createTemplateClassLoader() throws IOException {_		String[] paths = StringUtils.commaDelimitedListToStringArray(getResourceLoaderPath())__		List<URL> urls = new ArrayList<>()__		for (String path : paths) {_			Resource[] resources = getApplicationContext().getResources(path)__			if (resources.length > 0) {_				for (Resource resource : resources) {_					if (resource.exists()) {_						urls.add(resource.getURL())__					}_				}_			}_		}_		ClassLoader classLoader = getApplicationContext().getClassLoader()__		Assert.state(classLoader != null, "No ClassLoader")__		return (urls.size() > 0 ? new URLClassLoader(urls.toArray(new URL[urls.size()]), classLoader) : classLoader)__	};create,a,parent,class,loader,for,groovy,to,use,as,parent,class,loader,when,loading,and,compiling,templates;protected,class,loader,create,template,class,loader,throws,ioexception,string,paths,string,utils,comma,delimited,list,to,string,array,get,resource,loader,path,list,url,urls,new,array,list,for,string,path,paths,resource,resources,get,application,context,get,resources,path,if,resources,length,0,for,resource,resource,resources,if,resource,exists,urls,add,resource,get,url,class,loader,class,loader,get,application,context,get,class,loader,assert,state,class,loader,null,no,class,loader,return,urls,size,0,new,urlclass,loader,urls,to,array,new,url,urls,size,class,loader,class,loader
GroovyMarkupConfigurer -> protected ClassLoader createTemplateClassLoader() throws IOException;1518167526;Create a parent ClassLoader for Groovy to use as parent ClassLoader_when loading and compiling templates.;protected ClassLoader createTemplateClassLoader() throws IOException {_		String[] paths = StringUtils.commaDelimitedListToStringArray(getResourceLoaderPath())__		List<URL> urls = new ArrayList<>()__		for (String path : paths) {_			Resource[] resources = getApplicationContext().getResources(path)__			if (resources.length > 0) {_				for (Resource resource : resources) {_					if (resource.exists()) {_						urls.add(resource.getURL())__					}_				}_			}_		}_		ClassLoader classLoader = getApplicationContext().getClassLoader()__		Assert.state(classLoader != null, "No ClassLoader")__		return (!urls.isEmpty() ? new URLClassLoader(urls.toArray(new URL[urls.size()]), classLoader) : classLoader)__	};create,a,parent,class,loader,for,groovy,to,use,as,parent,class,loader,when,loading,and,compiling,templates;protected,class,loader,create,template,class,loader,throws,ioexception,string,paths,string,utils,comma,delimited,list,to,string,array,get,resource,loader,path,list,url,urls,new,array,list,for,string,path,paths,resource,resources,get,application,context,get,resources,path,if,resources,length,0,for,resource,resource,resources,if,resource,exists,urls,add,resource,get,url,class,loader,class,loader,get,application,context,get,class,loader,assert,state,class,loader,null,no,class,loader,return,urls,is,empty,new,urlclass,loader,urls,to,array,new,url,urls,size,class,loader,class,loader
GroovyMarkupConfigurer -> protected ClassLoader createTemplateClassLoader() throws IOException;1518167818;Create a parent ClassLoader for Groovy to use as parent ClassLoader_when loading and compiling templates.;protected ClassLoader createTemplateClassLoader() throws IOException {_		String[] paths = StringUtils.commaDelimitedListToStringArray(getResourceLoaderPath())__		List<URL> urls = new ArrayList<>()__		for (String path : paths) {_			Resource[] resources = getApplicationContext().getResources(path)__			if (resources.length > 0) {_				for (Resource resource : resources) {_					if (resource.exists()) {_						urls.add(resource.getURL())__					}_				}_			}_		}_		ClassLoader classLoader = getApplicationContext().getClassLoader()__		Assert.state(classLoader != null, "No ClassLoader")__		return (!urls.isEmpty() ? new URLClassLoader(urls.toArray(new URL[urls.size()]), classLoader) : classLoader)__	};create,a,parent,class,loader,for,groovy,to,use,as,parent,class,loader,when,loading,and,compiling,templates;protected,class,loader,create,template,class,loader,throws,ioexception,string,paths,string,utils,comma,delimited,list,to,string,array,get,resource,loader,path,list,url,urls,new,array,list,for,string,path,paths,resource,resources,get,application,context,get,resources,path,if,resources,length,0,for,resource,resource,resources,if,resource,exists,urls,add,resource,get,url,class,loader,class,loader,get,application,context,get,class,loader,assert,state,class,loader,null,no,class,loader,return,urls,is,empty,new,urlclass,loader,urls,to,array,new,url,urls,size,class,loader,class,loader
GroovyMarkupConfigurer -> protected ClassLoader createTemplateClassLoader() throws IOException;1519295386;Create a parent ClassLoader for Groovy to use as parent ClassLoader_when loading and compiling templates.;protected ClassLoader createTemplateClassLoader() throws IOException {_		String[] paths = StringUtils.commaDelimitedListToStringArray(getResourceLoaderPath())__		List<URL> urls = new ArrayList<>()__		for (String path : paths) {_			Resource[] resources = getApplicationContext().getResources(path)__			if (resources.length > 0) {_				for (Resource resource : resources) {_					if (resource.exists()) {_						urls.add(resource.getURL())__					}_				}_			}_		}_		ClassLoader classLoader = getApplicationContext().getClassLoader()__		Assert.state(classLoader != null, "No ClassLoader")__		return (!urls.isEmpty() ? new URLClassLoader(urls.toArray(new URL[0]), classLoader) : classLoader)__	};create,a,parent,class,loader,for,groovy,to,use,as,parent,class,loader,when,loading,and,compiling,templates;protected,class,loader,create,template,class,loader,throws,ioexception,string,paths,string,utils,comma,delimited,list,to,string,array,get,resource,loader,path,list,url,urls,new,array,list,for,string,path,paths,resource,resources,get,application,context,get,resources,path,if,resources,length,0,for,resource,resource,resources,if,resource,exists,urls,add,resource,get,url,class,loader,class,loader,get,application,context,get,class,loader,assert,state,class,loader,null,no,class,loader,return,urls,is,empty,new,urlclass,loader,urls,to,array,new,url,0,class,loader,class,loader
GroovyMarkupConfigurer -> protected ClassLoader createTemplateClassLoader() throws IOException;1537186939;Create a parent ClassLoader for Groovy to use as parent ClassLoader_when loading and compiling templates.;protected ClassLoader createTemplateClassLoader() throws IOException {_		String[] paths = StringUtils.commaDelimitedListToStringArray(getResourceLoaderPath())__		List<URL> urls = new ArrayList<>()__		for (String path : paths) {_			Resource[] resources = getApplicationContext().getResources(path)__			if (resources.length > 0) {_				for (Resource resource : resources) {_					if (resource.exists()) {_						urls.add(resource.getURL())__					}_				}_			}_		}_		ClassLoader classLoader = getApplicationContext().getClassLoader()__		Assert.state(classLoader != null, "No ClassLoader")__		return (!urls.isEmpty() ? new URLClassLoader(urls.toArray(new URL[0]), classLoader) : classLoader)__	};create,a,parent,class,loader,for,groovy,to,use,as,parent,class,loader,when,loading,and,compiling,templates;protected,class,loader,create,template,class,loader,throws,ioexception,string,paths,string,utils,comma,delimited,list,to,string,array,get,resource,loader,path,list,url,urls,new,array,list,for,string,path,paths,resource,resources,get,application,context,get,resources,path,if,resources,length,0,for,resource,resource,resources,if,resource,exists,urls,add,resource,get,url,class,loader,class,loader,get,application,context,get,class,loader,assert,state,class,loader,null,no,class,loader,return,urls,is,empty,new,urlclass,loader,urls,to,array,new,url,0,class,loader,class,loader
GroovyMarkupConfigurer -> public void setResourceLoaderPath(String resourceLoaderPath);1402414673;Set the Groovy Markup Template resource loader path(s) via a Spring resource_location. Accepts multiple locations as a comma-separated list of paths._Standard URLs like "file:" and "classpath:" and pseudo URLs are supported_as understood by Spring's {@link org.springframework.core.io.ResourceLoader}._Relative paths are allowed when running in an ApplicationContext.;public void setResourceLoaderPath(String resourceLoaderPath) {_		this.resourceLoaderPath = resourceLoaderPath__	};set,the,groovy,markup,template,resource,loader,path,s,via,a,spring,resource,location,accepts,multiple,locations,as,a,comma,separated,list,of,paths,standard,urls,like,file,and,classpath,and,pseudo,urls,are,supported,as,understood,by,spring,s,link,org,springframework,core,io,resource,loader,relative,paths,are,allowed,when,running,in,an,application,context;public,void,set,resource,loader,path,string,resource,loader,path,this,resource,loader,path,resource,loader,path
GroovyMarkupConfigurer -> public void setResourceLoaderPath(String resourceLoaderPath);1402415951;Set the Groovy Markup Template resource loader path(s) via a Spring resource_location. Accepts multiple locations as a comma-separated list of paths._Standard URLs like "file:" and "classpath:" and pseudo URLs are supported_as understood by Spring's {@link org.springframework.core.io.ResourceLoader}._Relative paths are allowed when running in an ApplicationContext.;public void setResourceLoaderPath(String resourceLoaderPath) {_		this.resourceLoaderPath = resourceLoaderPath__	};set,the,groovy,markup,template,resource,loader,path,s,via,a,spring,resource,location,accepts,multiple,locations,as,a,comma,separated,list,of,paths,standard,urls,like,file,and,classpath,and,pseudo,urls,are,supported,as,understood,by,spring,s,link,org,springframework,core,io,resource,loader,relative,paths,are,allowed,when,running,in,an,application,context;public,void,set,resource,loader,path,string,resource,loader,path,this,resource,loader,path,resource,loader,path
GroovyMarkupConfigurer -> public void setResourceLoaderPath(String resourceLoaderPath);1404933899;Set the Groovy Markup Template resource loader path(s) via a Spring resource_location. Accepts multiple locations as a comma-separated list of paths._Standard URLs like "file:" and "classpath:" and pseudo URLs are supported_as understood by Spring's {@link org.springframework.core.io.ResourceLoader}._Relative paths are allowed when running in an ApplicationContext.;public void setResourceLoaderPath(String resourceLoaderPath) {_		this.resourceLoaderPath = resourceLoaderPath__	};set,the,groovy,markup,template,resource,loader,path,s,via,a,spring,resource,location,accepts,multiple,locations,as,a,comma,separated,list,of,paths,standard,urls,like,file,and,classpath,and,pseudo,urls,are,supported,as,understood,by,spring,s,link,org,springframework,core,io,resource,loader,relative,paths,are,allowed,when,running,in,an,application,context;public,void,set,resource,loader,path,string,resource,loader,path,this,resource,loader,path,resource,loader,path
GroovyMarkupConfigurer -> public void setResourceLoaderPath(String resourceLoaderPath);1435306470;Set the Groovy Markup Template resource loader path(s) via a Spring resource_location. Accepts multiple locations as a comma-separated list of paths._Standard URLs like "file:" and "classpath:" and pseudo URLs are supported_as understood by Spring's {@link org.springframework.core.io.ResourceLoader}._Relative paths are allowed when running in an ApplicationContext.;public void setResourceLoaderPath(String resourceLoaderPath) {_		this.resourceLoaderPath = resourceLoaderPath__	};set,the,groovy,markup,template,resource,loader,path,s,via,a,spring,resource,location,accepts,multiple,locations,as,a,comma,separated,list,of,paths,standard,urls,like,file,and,classpath,and,pseudo,urls,are,supported,as,understood,by,spring,s,link,org,springframework,core,io,resource,loader,relative,paths,are,allowed,when,running,in,an,application,context;public,void,set,resource,loader,path,string,resource,loader,path,this,resource,loader,path,resource,loader,path
GroovyMarkupConfigurer -> public void setResourceLoaderPath(String resourceLoaderPath);1436967737;Set the Groovy Markup Template resource loader path(s) via a Spring resource_location. Accepts multiple locations as a comma-separated list of paths._Standard URLs like "file:" and "classpath:" and pseudo URLs are supported_as understood by Spring's {@link org.springframework.core.io.ResourceLoader}._Relative paths are allowed when running in an ApplicationContext.;public void setResourceLoaderPath(String resourceLoaderPath) {_		this.resourceLoaderPath = resourceLoaderPath__	};set,the,groovy,markup,template,resource,loader,path,s,via,a,spring,resource,location,accepts,multiple,locations,as,a,comma,separated,list,of,paths,standard,urls,like,file,and,classpath,and,pseudo,urls,are,supported,as,understood,by,spring,s,link,org,springframework,core,io,resource,loader,relative,paths,are,allowed,when,running,in,an,application,context;public,void,set,resource,loader,path,string,resource,loader,path,this,resource,loader,path,resource,loader,path
GroovyMarkupConfigurer -> public void setResourceLoaderPath(String resourceLoaderPath);1467730834;Set the Groovy Markup Template resource loader path(s) via a Spring resource_location. Accepts multiple locations as a comma-separated list of paths._Standard URLs like "file:" and "classpath:" and pseudo URLs are supported_as understood by Spring's {@link org.springframework.core.io.ResourceLoader}._Relative paths are allowed when running in an ApplicationContext.;public void setResourceLoaderPath(String resourceLoaderPath) {_		this.resourceLoaderPath = resourceLoaderPath__	};set,the,groovy,markup,template,resource,loader,path,s,via,a,spring,resource,location,accepts,multiple,locations,as,a,comma,separated,list,of,paths,standard,urls,like,file,and,classpath,and,pseudo,urls,are,supported,as,understood,by,spring,s,link,org,springframework,core,io,resource,loader,relative,paths,are,allowed,when,running,in,an,application,context;public,void,set,resource,loader,path,string,resource,loader,path,this,resource,loader,path,resource,loader,path
GroovyMarkupConfigurer -> public void setResourceLoaderPath(String resourceLoaderPath);1496837955;Set the Groovy Markup Template resource loader path(s) via a Spring resource_location. Accepts multiple locations as a comma-separated list of paths._Standard URLs like "file:" and "classpath:" and pseudo URLs are supported_as understood by Spring's {@link org.springframework.core.io.ResourceLoader}._Relative paths are allowed when running in an ApplicationContext.;public void setResourceLoaderPath(String resourceLoaderPath) {_		this.resourceLoaderPath = resourceLoaderPath__	};set,the,groovy,markup,template,resource,loader,path,s,via,a,spring,resource,location,accepts,multiple,locations,as,a,comma,separated,list,of,paths,standard,urls,like,file,and,classpath,and,pseudo,urls,are,supported,as,understood,by,spring,s,link,org,springframework,core,io,resource,loader,relative,paths,are,allowed,when,running,in,an,application,context;public,void,set,resource,loader,path,string,resource,loader,path,this,resource,loader,path,resource,loader,path
GroovyMarkupConfigurer -> public void setResourceLoaderPath(String resourceLoaderPath);1498780456;Set the Groovy Markup Template resource loader path(s) via a Spring resource_location. Accepts multiple locations as a comma-separated list of paths._Standard URLs like "file:" and "classpath:" and pseudo URLs are supported_as understood by Spring's {@link org.springframework.core.io.ResourceLoader}._Relative paths are allowed when running in an ApplicationContext.;public void setResourceLoaderPath(String resourceLoaderPath) {_		this.resourceLoaderPath = resourceLoaderPath__	};set,the,groovy,markup,template,resource,loader,path,s,via,a,spring,resource,location,accepts,multiple,locations,as,a,comma,separated,list,of,paths,standard,urls,like,file,and,classpath,and,pseudo,urls,are,supported,as,understood,by,spring,s,link,org,springframework,core,io,resource,loader,relative,paths,are,allowed,when,running,in,an,application,context;public,void,set,resource,loader,path,string,resource,loader,path,this,resource,loader,path,resource,loader,path
GroovyMarkupConfigurer -> public void setResourceLoaderPath(String resourceLoaderPath);1518167526;Set the Groovy Markup Template resource loader path(s) via a Spring resource_location. Accepts multiple locations as a comma-separated list of paths._Standard URLs like "file:" and "classpath:" and pseudo URLs are supported_as understood by Spring's {@link org.springframework.core.io.ResourceLoader}._Relative paths are allowed when running in an ApplicationContext.;public void setResourceLoaderPath(String resourceLoaderPath) {_		this.resourceLoaderPath = resourceLoaderPath__	};set,the,groovy,markup,template,resource,loader,path,s,via,a,spring,resource,location,accepts,multiple,locations,as,a,comma,separated,list,of,paths,standard,urls,like,file,and,classpath,and,pseudo,urls,are,supported,as,understood,by,spring,s,link,org,springframework,core,io,resource,loader,relative,paths,are,allowed,when,running,in,an,application,context;public,void,set,resource,loader,path,string,resource,loader,path,this,resource,loader,path,resource,loader,path
GroovyMarkupConfigurer -> public void setResourceLoaderPath(String resourceLoaderPath);1518167818;Set the Groovy Markup Template resource loader path(s) via a Spring resource_location. Accepts multiple locations as a comma-separated list of paths._Standard URLs like "file:" and "classpath:" and pseudo URLs are supported_as understood by Spring's {@link org.springframework.core.io.ResourceLoader}._Relative paths are allowed when running in an ApplicationContext.;public void setResourceLoaderPath(String resourceLoaderPath) {_		this.resourceLoaderPath = resourceLoaderPath__	};set,the,groovy,markup,template,resource,loader,path,s,via,a,spring,resource,location,accepts,multiple,locations,as,a,comma,separated,list,of,paths,standard,urls,like,file,and,classpath,and,pseudo,urls,are,supported,as,understood,by,spring,s,link,org,springframework,core,io,resource,loader,relative,paths,are,allowed,when,running,in,an,application,context;public,void,set,resource,loader,path,string,resource,loader,path,this,resource,loader,path,resource,loader,path
GroovyMarkupConfigurer -> public void setResourceLoaderPath(String resourceLoaderPath);1519295386;Set the Groovy Markup Template resource loader path(s) via a Spring resource_location. Accepts multiple locations as a comma-separated list of paths._Standard URLs like "file:" and "classpath:" and pseudo URLs are supported_as understood by Spring's {@link org.springframework.core.io.ResourceLoader}._Relative paths are allowed when running in an ApplicationContext.;public void setResourceLoaderPath(String resourceLoaderPath) {_		this.resourceLoaderPath = resourceLoaderPath__	};set,the,groovy,markup,template,resource,loader,path,s,via,a,spring,resource,location,accepts,multiple,locations,as,a,comma,separated,list,of,paths,standard,urls,like,file,and,classpath,and,pseudo,urls,are,supported,as,understood,by,spring,s,link,org,springframework,core,io,resource,loader,relative,paths,are,allowed,when,running,in,an,application,context;public,void,set,resource,loader,path,string,resource,loader,path,this,resource,loader,path,resource,loader,path
GroovyMarkupConfigurer -> public void setResourceLoaderPath(String resourceLoaderPath);1537186939;Set the Groovy Markup Template resource loader path(s) via a Spring resource_location. Accepts multiple locations as a comma-separated list of paths._Standard URLs like "file:" and "classpath:" and pseudo URLs are supported_as understood by Spring's {@link org.springframework.core.io.ResourceLoader}._Relative paths are allowed when running in an ApplicationContext.;public void setResourceLoaderPath(String resourceLoaderPath) {_		this.resourceLoaderPath = resourceLoaderPath__	};set,the,groovy,markup,template,resource,loader,path,s,via,a,spring,resource,location,accepts,multiple,locations,as,a,comma,separated,list,of,paths,standard,urls,like,file,and,classpath,and,pseudo,urls,are,supported,as,understood,by,spring,s,link,org,springframework,core,io,resource,loader,relative,paths,are,allowed,when,running,in,an,application,context;public,void,set,resource,loader,path,string,resource,loader,path,this,resource,loader,path,resource,loader,path
GroovyMarkupConfigurer -> public void setTemplateEngine(MarkupTemplateEngine templateEngine);1402414673;Set a pre-configured MarkupTemplateEngine to use for the Groovy Markup_Template web configuration._<p>Note that this engine instance has to be manually configured, since all_other bean properties of this configurer will be ignored.;public void setTemplateEngine(MarkupTemplateEngine templateEngine) {_		this.templateEngine = templateEngine__	};set,a,pre,configured,markup,template,engine,to,use,for,the,groovy,markup,template,web,configuration,p,note,that,this,engine,instance,has,to,be,manually,configured,since,all,other,bean,properties,of,this,configurer,will,be,ignored;public,void,set,template,engine,markup,template,engine,template,engine,this,template,engine,template,engine
GroovyMarkupConfigurer -> public void setTemplateEngine(MarkupTemplateEngine templateEngine);1402415951;Set a pre-configured MarkupTemplateEngine to use for the Groovy Markup_Template web configuration._<p>Note that this engine instance has to be manually configured, since all_other bean properties of this configurer will be ignored.;public void setTemplateEngine(MarkupTemplateEngine templateEngine) {_		this.templateEngine = templateEngine__	};set,a,pre,configured,markup,template,engine,to,use,for,the,groovy,markup,template,web,configuration,p,note,that,this,engine,instance,has,to,be,manually,configured,since,all,other,bean,properties,of,this,configurer,will,be,ignored;public,void,set,template,engine,markup,template,engine,template,engine,this,template,engine,template,engine
GroovyMarkupConfigurer -> public void setTemplateEngine(MarkupTemplateEngine templateEngine);1404933899;Set a pre-configured MarkupTemplateEngine to use for the Groovy Markup_Template web configuration._<p>Note that this engine instance has to be manually configured, since all_other bean properties of this configurer will be ignored.;public void setTemplateEngine(MarkupTemplateEngine templateEngine) {_		this.templateEngine = templateEngine__	};set,a,pre,configured,markup,template,engine,to,use,for,the,groovy,markup,template,web,configuration,p,note,that,this,engine,instance,has,to,be,manually,configured,since,all,other,bean,properties,of,this,configurer,will,be,ignored;public,void,set,template,engine,markup,template,engine,template,engine,this,template,engine,template,engine
GroovyMarkupConfigurer -> public void setTemplateEngine(MarkupTemplateEngine templateEngine);1435306470;Set a pre-configured MarkupTemplateEngine to use for the Groovy Markup_Template web configuration._<p>Note that this engine instance has to be manually configured, since all_other bean properties of this configurer will be ignored.;public void setTemplateEngine(MarkupTemplateEngine templateEngine) {_		this.templateEngine = templateEngine__	};set,a,pre,configured,markup,template,engine,to,use,for,the,groovy,markup,template,web,configuration,p,note,that,this,engine,instance,has,to,be,manually,configured,since,all,other,bean,properties,of,this,configurer,will,be,ignored;public,void,set,template,engine,markup,template,engine,template,engine,this,template,engine,template,engine
GroovyMarkupConfigurer -> public void setTemplateEngine(MarkupTemplateEngine templateEngine);1436967737;Set a pre-configured MarkupTemplateEngine to use for the Groovy Markup_Template web configuration._<p>Note that this engine instance has to be manually configured, since all_other bean properties of this configurer will be ignored.;public void setTemplateEngine(MarkupTemplateEngine templateEngine) {_		this.templateEngine = templateEngine__	};set,a,pre,configured,markup,template,engine,to,use,for,the,groovy,markup,template,web,configuration,p,note,that,this,engine,instance,has,to,be,manually,configured,since,all,other,bean,properties,of,this,configurer,will,be,ignored;public,void,set,template,engine,markup,template,engine,template,engine,this,template,engine,template,engine
GroovyMarkupConfigurer -> public void setTemplateEngine(MarkupTemplateEngine templateEngine);1467730834;Set a pre-configured MarkupTemplateEngine to use for the Groovy Markup_Template web configuration._<p>Note that this engine instance has to be manually configured, since all_other bean properties of this configurer will be ignored.;public void setTemplateEngine(MarkupTemplateEngine templateEngine) {_		this.templateEngine = templateEngine__	};set,a,pre,configured,markup,template,engine,to,use,for,the,groovy,markup,template,web,configuration,p,note,that,this,engine,instance,has,to,be,manually,configured,since,all,other,bean,properties,of,this,configurer,will,be,ignored;public,void,set,template,engine,markup,template,engine,template,engine,this,template,engine,template,engine
GroovyMarkupConfigurer -> public void setTemplateEngine(MarkupTemplateEngine templateEngine);1496837955;Set a pre-configured MarkupTemplateEngine to use for the Groovy Markup_Template web configuration._<p>Note that this engine instance has to be manually configured, since all_other bean properties of this configurer will be ignored.;public void setTemplateEngine(MarkupTemplateEngine templateEngine) {_		this.templateEngine = templateEngine__	};set,a,pre,configured,markup,template,engine,to,use,for,the,groovy,markup,template,web,configuration,p,note,that,this,engine,instance,has,to,be,manually,configured,since,all,other,bean,properties,of,this,configurer,will,be,ignored;public,void,set,template,engine,markup,template,engine,template,engine,this,template,engine,template,engine
GroovyMarkupConfigurer -> public void setTemplateEngine(MarkupTemplateEngine templateEngine);1498780456;Set a pre-configured MarkupTemplateEngine to use for the Groovy Markup_Template web configuration._<p>Note that this engine instance has to be manually configured, since all_other bean properties of this configurer will be ignored.;public void setTemplateEngine(MarkupTemplateEngine templateEngine) {_		this.templateEngine = templateEngine__	};set,a,pre,configured,markup,template,engine,to,use,for,the,groovy,markup,template,web,configuration,p,note,that,this,engine,instance,has,to,be,manually,configured,since,all,other,bean,properties,of,this,configurer,will,be,ignored;public,void,set,template,engine,markup,template,engine,template,engine,this,template,engine,template,engine
GroovyMarkupConfigurer -> public void setTemplateEngine(MarkupTemplateEngine templateEngine);1518167526;Set a pre-configured MarkupTemplateEngine to use for the Groovy Markup_Template web configuration._<p>Note that this engine instance has to be manually configured, since all_other bean properties of this configurer will be ignored.;public void setTemplateEngine(MarkupTemplateEngine templateEngine) {_		this.templateEngine = templateEngine__	};set,a,pre,configured,markup,template,engine,to,use,for,the,groovy,markup,template,web,configuration,p,note,that,this,engine,instance,has,to,be,manually,configured,since,all,other,bean,properties,of,this,configurer,will,be,ignored;public,void,set,template,engine,markup,template,engine,template,engine,this,template,engine,template,engine
GroovyMarkupConfigurer -> public void setTemplateEngine(MarkupTemplateEngine templateEngine);1518167818;Set a pre-configured MarkupTemplateEngine to use for the Groovy Markup_Template web configuration._<p>Note that this engine instance has to be manually configured, since all_other bean properties of this configurer will be ignored.;public void setTemplateEngine(MarkupTemplateEngine templateEngine) {_		this.templateEngine = templateEngine__	};set,a,pre,configured,markup,template,engine,to,use,for,the,groovy,markup,template,web,configuration,p,note,that,this,engine,instance,has,to,be,manually,configured,since,all,other,bean,properties,of,this,configurer,will,be,ignored;public,void,set,template,engine,markup,template,engine,template,engine,this,template,engine,template,engine
GroovyMarkupConfigurer -> public void setTemplateEngine(MarkupTemplateEngine templateEngine);1519295386;Set a pre-configured MarkupTemplateEngine to use for the Groovy Markup_Template web configuration._<p>Note that this engine instance has to be manually configured, since all_other bean properties of this configurer will be ignored.;public void setTemplateEngine(MarkupTemplateEngine templateEngine) {_		this.templateEngine = templateEngine__	};set,a,pre,configured,markup,template,engine,to,use,for,the,groovy,markup,template,web,configuration,p,note,that,this,engine,instance,has,to,be,manually,configured,since,all,other,bean,properties,of,this,configurer,will,be,ignored;public,void,set,template,engine,markup,template,engine,template,engine,this,template,engine,template,engine
GroovyMarkupConfigurer -> public void setTemplateEngine(MarkupTemplateEngine templateEngine);1537186939;Set a pre-configured MarkupTemplateEngine to use for the Groovy Markup_Template web configuration._<p>Note that this engine instance has to be manually configured, since all_other bean properties of this configurer will be ignored.;public void setTemplateEngine(MarkupTemplateEngine templateEngine) {_		this.templateEngine = templateEngine__	};set,a,pre,configured,markup,template,engine,to,use,for,the,groovy,markup,template,web,configuration,p,note,that,this,engine,instance,has,to,be,manually,configured,since,all,other,bean,properties,of,this,configurer,will,be,ignored;public,void,set,template,engine,markup,template,engine,template,engine,this,template,engine,template,engine
GroovyMarkupConfigurer -> public MarkupTemplateEngine getTemplateEngine();1402414673;{@inheritDoc};public MarkupTemplateEngine getTemplateEngine() {_		return templateEngine__	};inherit,doc;public,markup,template,engine,get,template,engine,return,template,engine
GroovyMarkupConfigurer -> public MarkupTemplateEngine getTemplateEngine();1402415951;{@inheritDoc};public MarkupTemplateEngine getTemplateEngine() {_		return templateEngine__	};inherit,doc;public,markup,template,engine,get,template,engine,return,template,engine
GroovyMarkupConfigurer -> @Override 	public void setLocale(Locale locale);1402414673;This method should not be used, since the considered Locale for resolving_templates is the Locale for the current HTTP request.;@Override_	public void setLocale(Locale locale) {_		super.setLocale(locale)__	};this,method,should,not,be,used,since,the,considered,locale,for,resolving,templates,is,the,locale,for,the,current,http,request;override,public,void,set,locale,locale,locale,super,set,locale,locale
GroovyMarkupConfigurer -> @Override 	public void setLocale(Locale locale);1402415951;This method should not be used, since the considered Locale for resolving_templates is the Locale for the current HTTP request.;@Override_	public void setLocale(Locale locale) {_		super.setLocale(locale)__	};this,method,should,not,be,used,since,the,considered,locale,for,resolving,templates,is,the,locale,for,the,current,http,request;override,public,void,set,locale,locale,locale,super,set,locale,locale
GroovyMarkupConfigurer -> @Override 	public void setLocale(Locale locale);1404933899;This method should not be used, since the considered Locale for resolving_templates is the Locale for the current HTTP request.;@Override_	public void setLocale(Locale locale) {_		super.setLocale(locale)__	};this,method,should,not,be,used,since,the,considered,locale,for,resolving,templates,is,the,locale,for,the,current,http,request;override,public,void,set,locale,locale,locale,super,set,locale,locale
GroovyMarkupConfigurer -> @Override 	public void setLocale(Locale locale);1435306470;This method should not be used, since the considered Locale for resolving_templates is the Locale for the current HTTP request.;@Override_	public void setLocale(Locale locale) {_		super.setLocale(locale)__	};this,method,should,not,be,used,since,the,considered,locale,for,resolving,templates,is,the,locale,for,the,current,http,request;override,public,void,set,locale,locale,locale,super,set,locale,locale
GroovyMarkupConfigurer -> @Override 	public void setLocale(Locale locale);1436967737;This method should not be used, since the considered Locale for resolving_templates is the Locale for the current HTTP request.;@Override_	public void setLocale(Locale locale) {_		super.setLocale(locale)__	};this,method,should,not,be,used,since,the,considered,locale,for,resolving,templates,is,the,locale,for,the,current,http,request;override,public,void,set,locale,locale,locale,super,set,locale,locale
GroovyMarkupConfigurer -> @Override 	public void setLocale(Locale locale);1467730834;This method should not be used, since the considered Locale for resolving_templates is the Locale for the current HTTP request.;@Override_	public void setLocale(Locale locale) {_		super.setLocale(locale)__	};this,method,should,not,be,used,since,the,considered,locale,for,resolving,templates,is,the,locale,for,the,current,http,request;override,public,void,set,locale,locale,locale,super,set,locale,locale
GroovyMarkupConfigurer -> @Override 	public void setLocale(Locale locale);1496837955;This method should not be used, since the considered Locale for resolving_templates is the Locale for the current HTTP request.;@Override_	public void setLocale(Locale locale) {_		super.setLocale(locale)__	};this,method,should,not,be,used,since,the,considered,locale,for,resolving,templates,is,the,locale,for,the,current,http,request;override,public,void,set,locale,locale,locale,super,set,locale,locale
GroovyMarkupConfigurer -> @Override 	public void setLocale(Locale locale);1498780456;This method should not be used, since the considered Locale for resolving_templates is the Locale for the current HTTP request.;@Override_	public void setLocale(Locale locale) {_		super.setLocale(locale)__	};this,method,should,not,be,used,since,the,considered,locale,for,resolving,templates,is,the,locale,for,the,current,http,request;override,public,void,set,locale,locale,locale,super,set,locale,locale
GroovyMarkupConfigurer -> @Override 	public void setLocale(Locale locale);1518167526;This method should not be used, since the considered Locale for resolving_templates is the Locale for the current HTTP request.;@Override_	public void setLocale(Locale locale) {_		super.setLocale(locale)__	};this,method,should,not,be,used,since,the,considered,locale,for,resolving,templates,is,the,locale,for,the,current,http,request;override,public,void,set,locale,locale,locale,super,set,locale,locale
GroovyMarkupConfigurer -> @Override 	public void setLocale(Locale locale);1518167818;This method should not be used, since the considered Locale for resolving_templates is the Locale for the current HTTP request.;@Override_	public void setLocale(Locale locale) {_		super.setLocale(locale)__	};this,method,should,not,be,used,since,the,considered,locale,for,resolving,templates,is,the,locale,for,the,current,http,request;override,public,void,set,locale,locale,locale,super,set,locale,locale
GroovyMarkupConfigurer -> @Override 	public void setLocale(Locale locale);1519295386;This method should not be used, since the considered Locale for resolving_templates is the Locale for the current HTTP request.;@Override_	public void setLocale(Locale locale) {_		super.setLocale(locale)__	};this,method,should,not,be,used,since,the,considered,locale,for,resolving,templates,is,the,locale,for,the,current,http,request;override,public,void,set,locale,locale,locale,super,set,locale,locale
GroovyMarkupConfigurer -> @Override 	public void setLocale(Locale locale);1537186939;This method should not be used, since the considered Locale for resolving_templates is the Locale for the current HTTP request.;@Override_	public void setLocale(Locale locale) {_		super.setLocale(locale)__	};this,method,should,not,be,used,since,the,considered,locale,for,resolving,templates,is,the,locale,for,the,current,http,request;override,public,void,set,locale,locale,locale,super,set,locale,locale
GroovyMarkupConfigurer -> protected URL resolveTemplate(ClassLoader classLoader, String templatePath) throws IOException;1402415951;Resolve a template from the given template path.__<p>The default implementation uses the Locale associated with the current_request, as obtained through_{@link org.springframework.context.i18n.LocaleContextHolder LocaleContextHolder},_to find the template file. Effectively the locale configured at the engine_level is ignored.__@see LocaleContextHolder_@see #setLocale(java.util.Locale)__@param classLoader_@param templatePath_@return_@throws IOException;protected URL resolveTemplate(ClassLoader classLoader, String templatePath) throws IOException {_		MarkupTemplateEngine.TemplateResource resource = MarkupTemplateEngine.TemplateResource.parse(templatePath)__		Locale locale = LocaleContextHolder.getLocale()__		URL url = classLoader.getResource(resource.withLocale(locale.toString().replace("-", "_")).toString())__		if (url == null) {_			url = classLoader.getResource(resource.withLocale(locale.getLanguage()).toString())__		}_		if (url == null) {_			url = classLoader.getResource(resource.withLocale(null).toString())__		}_		if (url == null) {_			throw new IOException("Unable to load template:" + templatePath)__		}_		return url__	};resolve,a,template,from,the,given,template,path,p,the,default,implementation,uses,the,locale,associated,with,the,current,request,as,obtained,through,link,org,springframework,context,i18n,locale,context,holder,locale,context,holder,to,find,the,template,file,effectively,the,locale,configured,at,the,engine,level,is,ignored,see,locale,context,holder,see,set,locale,java,util,locale,param,class,loader,param,template,path,return,throws,ioexception;protected,url,resolve,template,class,loader,class,loader,string,template,path,throws,ioexception,markup,template,engine,template,resource,resource,markup,template,engine,template,resource,parse,template,path,locale,locale,locale,context,holder,get,locale,url,url,class,loader,get,resource,resource,with,locale,locale,to,string,replace,to,string,if,url,null,url,class,loader,get,resource,resource,with,locale,locale,get,language,to,string,if,url,null,url,class,loader,get,resource,resource,with,locale,null,to,string,if,url,null,throw,new,ioexception,unable,to,load,template,template,path,return,url
GroovyMarkupConfigurer -> protected URL resolveTemplate(ClassLoader classLoader, String templatePath) throws IOException;1404933899;Resolve a template from the given template path._<p>The default implementation uses the Locale associated with the current request,_as obtained through {@link org.springframework.context.i18n.LocaleContextHolder LocaleContextHolder},_to find the template file. Effectively the locale configured at the engine level is ignored._@see LocaleContextHolder_@see #setLocale;protected URL resolveTemplate(ClassLoader classLoader, String templatePath) throws IOException {_		MarkupTemplateEngine.TemplateResource resource = MarkupTemplateEngine.TemplateResource.parse(templatePath)__		Locale locale = LocaleContextHolder.getLocale()__		URL url = classLoader.getResource(resource.withLocale(locale.toString().replace("-", "_")).toString())__		if (url == null) {_			url = classLoader.getResource(resource.withLocale(locale.getLanguage()).toString())__		}_		if (url == null) {_			url = classLoader.getResource(resource.withLocale(null).toString())__		}_		if (url == null) {_			throw new IOException("Unable to load template:" + templatePath)__		}_		return url__	};resolve,a,template,from,the,given,template,path,p,the,default,implementation,uses,the,locale,associated,with,the,current,request,as,obtained,through,link,org,springframework,context,i18n,locale,context,holder,locale,context,holder,to,find,the,template,file,effectively,the,locale,configured,at,the,engine,level,is,ignored,see,locale,context,holder,see,set,locale;protected,url,resolve,template,class,loader,class,loader,string,template,path,throws,ioexception,markup,template,engine,template,resource,resource,markup,template,engine,template,resource,parse,template,path,locale,locale,locale,context,holder,get,locale,url,url,class,loader,get,resource,resource,with,locale,locale,to,string,replace,to,string,if,url,null,url,class,loader,get,resource,resource,with,locale,locale,get,language,to,string,if,url,null,url,class,loader,get,resource,resource,with,locale,null,to,string,if,url,null,throw,new,ioexception,unable,to,load,template,template,path,return,url
GroovyMarkupConfigurer -> protected URL resolveTemplate(ClassLoader classLoader, String templatePath) throws IOException;1435306470;Resolve a template from the given template path._<p>The default implementation uses the Locale associated with the current request,_as obtained through {@link org.springframework.context.i18n.LocaleContextHolder LocaleContextHolder},_to find the template file. Effectively the locale configured at the engine level is ignored._@see LocaleContextHolder_@see #setLocale;protected URL resolveTemplate(ClassLoader classLoader, String templatePath) throws IOException {_		MarkupTemplateEngine.TemplateResource resource = MarkupTemplateEngine.TemplateResource.parse(templatePath)__		Locale locale = LocaleContextHolder.getLocale()__		URL url = classLoader.getResource(resource.withLocale(locale.toString().replace("-", "_")).toString())__		if (url == null) {_			url = classLoader.getResource(resource.withLocale(locale.getLanguage()).toString())__		}_		if (url == null) {_			url = classLoader.getResource(resource.withLocale(null).toString())__		}_		if (url == null) {_			throw new IOException("Unable to load template:" + templatePath)__		}_		return url__	};resolve,a,template,from,the,given,template,path,p,the,default,implementation,uses,the,locale,associated,with,the,current,request,as,obtained,through,link,org,springframework,context,i18n,locale,context,holder,locale,context,holder,to,find,the,template,file,effectively,the,locale,configured,at,the,engine,level,is,ignored,see,locale,context,holder,see,set,locale;protected,url,resolve,template,class,loader,class,loader,string,template,path,throws,ioexception,markup,template,engine,template,resource,resource,markup,template,engine,template,resource,parse,template,path,locale,locale,locale,context,holder,get,locale,url,url,class,loader,get,resource,resource,with,locale,locale,to,string,replace,to,string,if,url,null,url,class,loader,get,resource,resource,with,locale,locale,get,language,to,string,if,url,null,url,class,loader,get,resource,resource,with,locale,null,to,string,if,url,null,throw,new,ioexception,unable,to,load,template,template,path,return,url
GroovyMarkupConfigurer -> protected URL resolveTemplate(ClassLoader classLoader, String templatePath) throws IOException;1436967737;Resolve a template from the given template path._<p>The default implementation uses the Locale associated with the current request,_as obtained through {@link org.springframework.context.i18n.LocaleContextHolder LocaleContextHolder},_to find the template file. Effectively the locale configured at the engine level is ignored._@see LocaleContextHolder_@see #setLocale;protected URL resolveTemplate(ClassLoader classLoader, String templatePath) throws IOException {_		MarkupTemplateEngine.TemplateResource resource = MarkupTemplateEngine.TemplateResource.parse(templatePath)__		Locale locale = LocaleContextHolder.getLocale()__		URL url = classLoader.getResource(resource.withLocale(locale.toString().replace("-", "_")).toString())__		if (url == null) {_			url = classLoader.getResource(resource.withLocale(locale.getLanguage()).toString())__		}_		if (url == null) {_			url = classLoader.getResource(resource.withLocale(null).toString())__		}_		if (url == null) {_			throw new IOException("Unable to load template:" + templatePath)__		}_		return url__	};resolve,a,template,from,the,given,template,path,p,the,default,implementation,uses,the,locale,associated,with,the,current,request,as,obtained,through,link,org,springframework,context,i18n,locale,context,holder,locale,context,holder,to,find,the,template,file,effectively,the,locale,configured,at,the,engine,level,is,ignored,see,locale,context,holder,see,set,locale;protected,url,resolve,template,class,loader,class,loader,string,template,path,throws,ioexception,markup,template,engine,template,resource,resource,markup,template,engine,template,resource,parse,template,path,locale,locale,locale,context,holder,get,locale,url,url,class,loader,get,resource,resource,with,locale,locale,to,string,replace,to,string,if,url,null,url,class,loader,get,resource,resource,with,locale,locale,get,language,to,string,if,url,null,url,class,loader,get,resource,resource,with,locale,null,to,string,if,url,null,throw,new,ioexception,unable,to,load,template,template,path,return,url
GroovyMarkupConfigurer -> protected URL resolveTemplate(ClassLoader classLoader, String templatePath) throws IOException;1467730834;Resolve a template from the given template path._<p>The default implementation uses the Locale associated with the current request,_as obtained through {@link org.springframework.context.i18n.LocaleContextHolder LocaleContextHolder},_to find the template file. Effectively the locale configured at the engine level is ignored._@see LocaleContextHolder_@see #setLocale;protected URL resolveTemplate(ClassLoader classLoader, String templatePath) throws IOException {_		MarkupTemplateEngine.TemplateResource resource = MarkupTemplateEngine.TemplateResource.parse(templatePath)__		Locale locale = LocaleContextHolder.getLocale()__		URL url = classLoader.getResource(resource.withLocale(locale.toString().replace("-", "_")).toString())__		if (url == null) {_			url = classLoader.getResource(resource.withLocale(locale.getLanguage()).toString())__		}_		if (url == null) {_			url = classLoader.getResource(resource.withLocale(null).toString())__		}_		if (url == null) {_			throw new IOException("Unable to load template:" + templatePath)__		}_		return url__	};resolve,a,template,from,the,given,template,path,p,the,default,implementation,uses,the,locale,associated,with,the,current,request,as,obtained,through,link,org,springframework,context,i18n,locale,context,holder,locale,context,holder,to,find,the,template,file,effectively,the,locale,configured,at,the,engine,level,is,ignored,see,locale,context,holder,see,set,locale;protected,url,resolve,template,class,loader,class,loader,string,template,path,throws,ioexception,markup,template,engine,template,resource,resource,markup,template,engine,template,resource,parse,template,path,locale,locale,locale,context,holder,get,locale,url,url,class,loader,get,resource,resource,with,locale,locale,to,string,replace,to,string,if,url,null,url,class,loader,get,resource,resource,with,locale,locale,get,language,to,string,if,url,null,url,class,loader,get,resource,resource,with,locale,null,to,string,if,url,null,throw,new,ioexception,unable,to,load,template,template,path,return,url
GroovyMarkupConfigurer -> protected URL resolveTemplate(ClassLoader classLoader, String templatePath) throws IOException;1496837955;Resolve a template from the given template path._<p>The default implementation uses the Locale associated with the current request,_as obtained through {@link org.springframework.context.i18n.LocaleContextHolder LocaleContextHolder},_to find the template file. Effectively the locale configured at the engine level is ignored._@see LocaleContextHolder_@see #setLocale;protected URL resolveTemplate(ClassLoader classLoader, String templatePath) throws IOException {_		MarkupTemplateEngine.TemplateResource resource = MarkupTemplateEngine.TemplateResource.parse(templatePath)__		Locale locale = LocaleContextHolder.getLocale()__		URL url = classLoader.getResource(resource.withLocale(locale.toString().replace("-", "_")).toString())__		if (url == null) {_			url = classLoader.getResource(resource.withLocale(locale.getLanguage()).toString())__		}_		if (url == null) {_			url = classLoader.getResource(resource.withLocale(null).toString())__		}_		if (url == null) {_			throw new IOException("Unable to load template:" + templatePath)__		}_		return url__	};resolve,a,template,from,the,given,template,path,p,the,default,implementation,uses,the,locale,associated,with,the,current,request,as,obtained,through,link,org,springframework,context,i18n,locale,context,holder,locale,context,holder,to,find,the,template,file,effectively,the,locale,configured,at,the,engine,level,is,ignored,see,locale,context,holder,see,set,locale;protected,url,resolve,template,class,loader,class,loader,string,template,path,throws,ioexception,markup,template,engine,template,resource,resource,markup,template,engine,template,resource,parse,template,path,locale,locale,locale,context,holder,get,locale,url,url,class,loader,get,resource,resource,with,locale,locale,to,string,replace,to,string,if,url,null,url,class,loader,get,resource,resource,with,locale,locale,get,language,to,string,if,url,null,url,class,loader,get,resource,resource,with,locale,null,to,string,if,url,null,throw,new,ioexception,unable,to,load,template,template,path,return,url
GroovyMarkupConfigurer -> protected URL resolveTemplate(ClassLoader classLoader, String templatePath) throws IOException;1498780456;Resolve a template from the given template path._<p>The default implementation uses the Locale associated with the current request,_as obtained through {@link org.springframework.context.i18n.LocaleContextHolder LocaleContextHolder},_to find the template file. Effectively the locale configured at the engine level is ignored._@see LocaleContextHolder_@see #setLocale;protected URL resolveTemplate(ClassLoader classLoader, String templatePath) throws IOException {_		MarkupTemplateEngine.TemplateResource resource = MarkupTemplateEngine.TemplateResource.parse(templatePath)__		Locale locale = LocaleContextHolder.getLocale()__		URL url = classLoader.getResource(resource.withLocale(locale.toString().replace("-", "_")).toString())__		if (url == null) {_			url = classLoader.getResource(resource.withLocale(locale.getLanguage()).toString())__		}_		if (url == null) {_			url = classLoader.getResource(resource.withLocale(null).toString())__		}_		if (url == null) {_			throw new IOException("Unable to load template:" + templatePath)__		}_		return url__	};resolve,a,template,from,the,given,template,path,p,the,default,implementation,uses,the,locale,associated,with,the,current,request,as,obtained,through,link,org,springframework,context,i18n,locale,context,holder,locale,context,holder,to,find,the,template,file,effectively,the,locale,configured,at,the,engine,level,is,ignored,see,locale,context,holder,see,set,locale;protected,url,resolve,template,class,loader,class,loader,string,template,path,throws,ioexception,markup,template,engine,template,resource,resource,markup,template,engine,template,resource,parse,template,path,locale,locale,locale,context,holder,get,locale,url,url,class,loader,get,resource,resource,with,locale,locale,to,string,replace,to,string,if,url,null,url,class,loader,get,resource,resource,with,locale,locale,get,language,to,string,if,url,null,url,class,loader,get,resource,resource,with,locale,null,to,string,if,url,null,throw,new,ioexception,unable,to,load,template,template,path,return,url
GroovyMarkupConfigurer -> protected URL resolveTemplate(ClassLoader classLoader, String templatePath) throws IOException;1518167526;Resolve a template from the given template path._<p>The default implementation uses the Locale associated with the current request,_as obtained through {@link org.springframework.context.i18n.LocaleContextHolder LocaleContextHolder},_to find the template file. Effectively the locale configured at the engine level is ignored._@see LocaleContextHolder_@see #setLocale;protected URL resolveTemplate(ClassLoader classLoader, String templatePath) throws IOException {_		MarkupTemplateEngine.TemplateResource resource = MarkupTemplateEngine.TemplateResource.parse(templatePath)__		Locale locale = LocaleContextHolder.getLocale()__		URL url = classLoader.getResource(resource.withLocale(locale.toString().replace("-", "_")).toString())__		if (url == null) {_			url = classLoader.getResource(resource.withLocale(locale.getLanguage()).toString())__		}_		if (url == null) {_			url = classLoader.getResource(resource.withLocale(null).toString())__		}_		if (url == null) {_			throw new IOException("Unable to load template:" + templatePath)__		}_		return url__	};resolve,a,template,from,the,given,template,path,p,the,default,implementation,uses,the,locale,associated,with,the,current,request,as,obtained,through,link,org,springframework,context,i18n,locale,context,holder,locale,context,holder,to,find,the,template,file,effectively,the,locale,configured,at,the,engine,level,is,ignored,see,locale,context,holder,see,set,locale;protected,url,resolve,template,class,loader,class,loader,string,template,path,throws,ioexception,markup,template,engine,template,resource,resource,markup,template,engine,template,resource,parse,template,path,locale,locale,locale,context,holder,get,locale,url,url,class,loader,get,resource,resource,with,locale,locale,to,string,replace,to,string,if,url,null,url,class,loader,get,resource,resource,with,locale,locale,get,language,to,string,if,url,null,url,class,loader,get,resource,resource,with,locale,null,to,string,if,url,null,throw,new,ioexception,unable,to,load,template,template,path,return,url
GroovyMarkupConfigurer -> protected URL resolveTemplate(ClassLoader classLoader, String templatePath) throws IOException;1518167818;Resolve a template from the given template path._<p>The default implementation uses the Locale associated with the current request,_as obtained through {@link org.springframework.context.i18n.LocaleContextHolder LocaleContextHolder},_to find the template file. Effectively the locale configured at the engine level is ignored._@see LocaleContextHolder_@see #setLocale;protected URL resolveTemplate(ClassLoader classLoader, String templatePath) throws IOException {_		MarkupTemplateEngine.TemplateResource resource = MarkupTemplateEngine.TemplateResource.parse(templatePath)__		Locale locale = LocaleContextHolder.getLocale()__		URL url = classLoader.getResource(resource.withLocale(locale.toString().replace("-", "_")).toString())__		if (url == null) {_			url = classLoader.getResource(resource.withLocale(locale.getLanguage()).toString())__		}_		if (url == null) {_			url = classLoader.getResource(resource.withLocale(null).toString())__		}_		if (url == null) {_			throw new IOException("Unable to load template:" + templatePath)__		}_		return url__	};resolve,a,template,from,the,given,template,path,p,the,default,implementation,uses,the,locale,associated,with,the,current,request,as,obtained,through,link,org,springframework,context,i18n,locale,context,holder,locale,context,holder,to,find,the,template,file,effectively,the,locale,configured,at,the,engine,level,is,ignored,see,locale,context,holder,see,set,locale;protected,url,resolve,template,class,loader,class,loader,string,template,path,throws,ioexception,markup,template,engine,template,resource,resource,markup,template,engine,template,resource,parse,template,path,locale,locale,locale,context,holder,get,locale,url,url,class,loader,get,resource,resource,with,locale,locale,to,string,replace,to,string,if,url,null,url,class,loader,get,resource,resource,with,locale,locale,get,language,to,string,if,url,null,url,class,loader,get,resource,resource,with,locale,null,to,string,if,url,null,throw,new,ioexception,unable,to,load,template,template,path,return,url
GroovyMarkupConfigurer -> protected URL resolveTemplate(ClassLoader classLoader, String templatePath) throws IOException;1519295386;Resolve a template from the given template path._<p>The default implementation uses the Locale associated with the current request,_as obtained through {@link org.springframework.context.i18n.LocaleContextHolder LocaleContextHolder},_to find the template file. Effectively the locale configured at the engine level is ignored._@see LocaleContextHolder_@see #setLocale;protected URL resolveTemplate(ClassLoader classLoader, String templatePath) throws IOException {_		MarkupTemplateEngine.TemplateResource resource = MarkupTemplateEngine.TemplateResource.parse(templatePath)__		Locale locale = LocaleContextHolder.getLocale()__		URL url = classLoader.getResource(resource.withLocale(locale.toString().replace("-", "_")).toString())__		if (url == null) {_			url = classLoader.getResource(resource.withLocale(locale.getLanguage()).toString())__		}_		if (url == null) {_			url = classLoader.getResource(resource.withLocale(null).toString())__		}_		if (url == null) {_			throw new IOException("Unable to load template:" + templatePath)__		}_		return url__	};resolve,a,template,from,the,given,template,path,p,the,default,implementation,uses,the,locale,associated,with,the,current,request,as,obtained,through,link,org,springframework,context,i18n,locale,context,holder,locale,context,holder,to,find,the,template,file,effectively,the,locale,configured,at,the,engine,level,is,ignored,see,locale,context,holder,see,set,locale;protected,url,resolve,template,class,loader,class,loader,string,template,path,throws,ioexception,markup,template,engine,template,resource,resource,markup,template,engine,template,resource,parse,template,path,locale,locale,locale,context,holder,get,locale,url,url,class,loader,get,resource,resource,with,locale,locale,to,string,replace,to,string,if,url,null,url,class,loader,get,resource,resource,with,locale,locale,get,language,to,string,if,url,null,url,class,loader,get,resource,resource,with,locale,null,to,string,if,url,null,throw,new,ioexception,unable,to,load,template,template,path,return,url
GroovyMarkupConfigurer -> protected URL resolveTemplate(ClassLoader classLoader, String templatePath) throws IOException;1537186939;Resolve a template from the given template path._<p>The default implementation uses the Locale associated with the current request,_as obtained through {@link org.springframework.context.i18n.LocaleContextHolder LocaleContextHolder},_to find the template file. Effectively the locale configured at the engine level is ignored._@see LocaleContextHolder_@see #setLocale;protected URL resolveTemplate(ClassLoader classLoader, String templatePath) throws IOException {_		MarkupTemplateEngine.TemplateResource resource = MarkupTemplateEngine.TemplateResource.parse(templatePath)__		Locale locale = LocaleContextHolder.getLocale()__		URL url = classLoader.getResource(resource.withLocale(StringUtils.replace(locale.toString(), "-", "_")).toString())__		if (url == null) {_			url = classLoader.getResource(resource.withLocale(locale.getLanguage()).toString())__		}_		if (url == null) {_			url = classLoader.getResource(resource.withLocale(null).toString())__		}_		if (url == null) {_			throw new IOException("Unable to load template:" + templatePath)__		}_		return url__	};resolve,a,template,from,the,given,template,path,p,the,default,implementation,uses,the,locale,associated,with,the,current,request,as,obtained,through,link,org,springframework,context,i18n,locale,context,holder,locale,context,holder,to,find,the,template,file,effectively,the,locale,configured,at,the,engine,level,is,ignored,see,locale,context,holder,see,set,locale;protected,url,resolve,template,class,loader,class,loader,string,template,path,throws,ioexception,markup,template,engine,template,resource,resource,markup,template,engine,template,resource,parse,template,path,locale,locale,locale,context,holder,get,locale,url,url,class,loader,get,resource,resource,with,locale,string,utils,replace,locale,to,string,to,string,if,url,null,url,class,loader,get,resource,resource,with,locale,locale,get,language,to,string,if,url,null,url,class,loader,get,resource,resource,with,locale,null,to,string,if,url,null,throw,new,ioexception,unable,to,load,template,template,path,return,url
