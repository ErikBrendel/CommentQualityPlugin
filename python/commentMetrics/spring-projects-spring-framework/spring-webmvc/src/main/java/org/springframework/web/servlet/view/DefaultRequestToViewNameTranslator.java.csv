# id;timestamp;commentText;codeText;commentWords;codeWords
DefaultRequestToViewNameTranslator -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1328020251;Set the {@link org.springframework.web.util.UrlPathHelper} to use for_the resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple web components.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,link,org,springframework,web,util,url,path,helper,to,use,for,the,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,web,components;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
DefaultRequestToViewNameTranslator -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1346174472;Set the {@link org.springframework.web.util.UrlPathHelper} to use for_the resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple web components.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,link,org,springframework,web,util,url,path,helper,to,use,for,the,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,web,components;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
DefaultRequestToViewNameTranslator -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1356735495;Set the {@link org.springframework.web.util.UrlPathHelper} to use for_the resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple web components.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,link,org,springframework,web,util,url,path,helper,to,use,for,the,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,web,components;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
DefaultRequestToViewNameTranslator -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1357119239;Set the {@link org.springframework.web.util.UrlPathHelper} to use for_the resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple web components.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,link,org,springframework,web,util,url,path,helper,to,use,for,the,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,web,components;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
DefaultRequestToViewNameTranslator -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1368482696;Set the {@link org.springframework.web.util.UrlPathHelper} to use for_the resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple web components.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,link,org,springframework,web,util,url,path,helper,to,use,for,the,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,web,components;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
DefaultRequestToViewNameTranslator -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1455730257;Set the {@link org.springframework.web.util.UrlPathHelper} to use for_the resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple web components.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,link,org,springframework,web,util,url,path,helper,to,use,for,the,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,web,components;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
DefaultRequestToViewNameTranslator -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1496837955;Set the {@link org.springframework.web.util.UrlPathHelper} to use for_the resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple web components.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,link,org,springframework,web,util,url,path,helper,to,use,for,the,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,web,components;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
DefaultRequestToViewNameTranslator -> public void setUrlPathHelper(UrlPathHelper urlPathHelper);1500043922;Set the {@link org.springframework.web.util.UrlPathHelper} to use for_the resolution of lookup paths._<p>Use this to override the default UrlPathHelper with a custom subclass,_or to share common UrlPathHelper settings across multiple web components.;public void setUrlPathHelper(UrlPathHelper urlPathHelper) {_		Assert.notNull(urlPathHelper, "UrlPathHelper must not be null")__		this.urlPathHelper = urlPathHelper__	};set,the,link,org,springframework,web,util,url,path,helper,to,use,for,the,resolution,of,lookup,paths,p,use,this,to,override,the,default,url,path,helper,with,a,custom,subclass,or,to,share,common,url,path,helper,settings,across,multiple,web,components;public,void,set,url,path,helper,url,path,helper,url,path,helper,assert,not,null,url,path,helper,url,path,helper,must,not,be,null,this,url,path,helper,url,path,helper
DefaultRequestToViewNameTranslator -> @Override 	public String getViewName(HttpServletRequest request);1356735495;Translates the request URI of the incoming {@link HttpServletRequest}_into the view name based on the configured parameters._@see org.springframework.web.util.UrlPathHelper#getLookupPathForRequest_@see #transformPath;@Override_	public String getViewName(HttpServletRequest request) {_		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		return (this.prefix + transformPath(lookupPath) + this.suffix)__	};translates,the,request,uri,of,the,incoming,link,http,servlet,request,into,the,view,name,based,on,the,configured,parameters,see,org,springframework,web,util,url,path,helper,get,lookup,path,for,request,see,transform,path;override,public,string,get,view,name,http,servlet,request,request,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,return,this,prefix,transform,path,lookup,path,this,suffix
DefaultRequestToViewNameTranslator -> @Override 	public String getViewName(HttpServletRequest request);1368482696;Translates the request URI of the incoming {@link HttpServletRequest}_into the view name based on the configured parameters._@see org.springframework.web.util.UrlPathHelper#getLookupPathForRequest_@see #transformPath;@Override_	public String getViewName(HttpServletRequest request) {_		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		return (this.prefix + transformPath(lookupPath) + this.suffix)__	};translates,the,request,uri,of,the,incoming,link,http,servlet,request,into,the,view,name,based,on,the,configured,parameters,see,org,springframework,web,util,url,path,helper,get,lookup,path,for,request,see,transform,path;override,public,string,get,view,name,http,servlet,request,request,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,return,this,prefix,transform,path,lookup,path,this,suffix
DefaultRequestToViewNameTranslator -> @Override 	public String getViewName(HttpServletRequest request);1455730257;Translates the request URI of the incoming {@link HttpServletRequest}_into the view name based on the configured parameters._@see org.springframework.web.util.UrlPathHelper#getLookupPathForRequest_@see #transformPath;@Override_	public String getViewName(HttpServletRequest request) {_		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		return (this.prefix + transformPath(lookupPath) + this.suffix)__	};translates,the,request,uri,of,the,incoming,link,http,servlet,request,into,the,view,name,based,on,the,configured,parameters,see,org,springframework,web,util,url,path,helper,get,lookup,path,for,request,see,transform,path;override,public,string,get,view,name,http,servlet,request,request,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,return,this,prefix,transform,path,lookup,path,this,suffix
DefaultRequestToViewNameTranslator -> @Override 	public String getViewName(HttpServletRequest request);1496837955;Translates the request URI of the incoming {@link HttpServletRequest}_into the view name based on the configured parameters._@see org.springframework.web.util.UrlPathHelper#getLookupPathForRequest_@see #transformPath;@Override_	public String getViewName(HttpServletRequest request) {_		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		return (this.prefix + transformPath(lookupPath) + this.suffix)__	};translates,the,request,uri,of,the,incoming,link,http,servlet,request,into,the,view,name,based,on,the,configured,parameters,see,org,springframework,web,util,url,path,helper,get,lookup,path,for,request,see,transform,path;override,public,string,get,view,name,http,servlet,request,request,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,return,this,prefix,transform,path,lookup,path,this,suffix
DefaultRequestToViewNameTranslator -> @Override 	public String getViewName(HttpServletRequest request);1500043922;Translates the request URI of the incoming {@link HttpServletRequest}_into the view name based on the configured parameters._@see org.springframework.web.util.UrlPathHelper#getLookupPathForRequest_@see #transformPath;@Override_	public String getViewName(HttpServletRequest request) {_		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		return (this.prefix + transformPath(lookupPath) + this.suffix)__	};translates,the,request,uri,of,the,incoming,link,http,servlet,request,into,the,view,name,based,on,the,configured,parameters,see,org,springframework,web,util,url,path,helper,get,lookup,path,for,request,see,transform,path;override,public,string,get,view,name,http,servlet,request,request,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,return,this,prefix,transform,path,lookup,path,this,suffix
DefaultRequestToViewNameTranslator -> public void setSeparator(String separator);1328020251;Set the value that will replace '<code>/</code>' as the separator_in the view name. The default behavior simply leaves '<code>/</code>'_as the separator.;public void setSeparator(String separator) {_		this.separator = separator__	};set,the,value,that,will,replace,code,code,as,the,separator,in,the,view,name,the,default,behavior,simply,leaves,code,code,as,the,separator;public,void,set,separator,string,separator,this,separator,separator
DefaultRequestToViewNameTranslator -> public void setSeparator(String separator);1346174472;Set the value that will replace '<code>/</code>' as the separator_in the view name. The default behavior simply leaves '<code>/</code>'_as the separator.;public void setSeparator(String separator) {_		this.separator = separator__	};set,the,value,that,will,replace,code,code,as,the,separator,in,the,view,name,the,default,behavior,simply,leaves,code,code,as,the,separator;public,void,set,separator,string,separator,this,separator,separator
DefaultRequestToViewNameTranslator -> public void setSeparator(String separator);1356735495;Set the value that will replace '{@code /}' as the separator_in the view name. The default behavior simply leaves '{@code /}'_as the separator.;public void setSeparator(String separator) {_		this.separator = separator__	};set,the,value,that,will,replace,code,as,the,separator,in,the,view,name,the,default,behavior,simply,leaves,code,as,the,separator;public,void,set,separator,string,separator,this,separator,separator
DefaultRequestToViewNameTranslator -> public void setSeparator(String separator);1357119239;Set the value that will replace '{@code /}' as the separator_in the view name. The default behavior simply leaves '{@code /}'_as the separator.;public void setSeparator(String separator) {_		this.separator = separator__	};set,the,value,that,will,replace,code,as,the,separator,in,the,view,name,the,default,behavior,simply,leaves,code,as,the,separator;public,void,set,separator,string,separator,this,separator,separator
DefaultRequestToViewNameTranslator -> public void setSeparator(String separator);1368482696;Set the value that will replace '{@code /}' as the separator_in the view name. The default behavior simply leaves '{@code /}'_as the separator.;public void setSeparator(String separator) {_		this.separator = separator__	};set,the,value,that,will,replace,code,as,the,separator,in,the,view,name,the,default,behavior,simply,leaves,code,as,the,separator;public,void,set,separator,string,separator,this,separator,separator
DefaultRequestToViewNameTranslator -> public void setSeparator(String separator);1455730257;Set the value that will replace '{@code /}' as the separator_in the view name. The default behavior simply leaves '{@code /}'_as the separator.;public void setSeparator(String separator) {_		this.separator = separator__	};set,the,value,that,will,replace,code,as,the,separator,in,the,view,name,the,default,behavior,simply,leaves,code,as,the,separator;public,void,set,separator,string,separator,this,separator,separator
DefaultRequestToViewNameTranslator -> public void setSeparator(String separator);1496837955;Set the value that will replace '{@code /}' as the separator_in the view name. The default behavior simply leaves '{@code /}'_as the separator.;public void setSeparator(String separator) {_		this.separator = separator__	};set,the,value,that,will,replace,code,as,the,separator,in,the,view,name,the,default,behavior,simply,leaves,code,as,the,separator;public,void,set,separator,string,separator,this,separator,separator
DefaultRequestToViewNameTranslator -> public void setSeparator(String separator);1500043922;Set the value that will replace '{@code /}' as the separator_in the view name. The default behavior simply leaves '{@code /}'_as the separator.;public void setSeparator(String separator) {_		this.separator = separator__	};set,the,value,that,will,replace,code,as,the,separator,in,the,view,name,the,default,behavior,simply,leaves,code,as,the,separator;public,void,set,separator,string,separator,this,separator,separator
DefaultRequestToViewNameTranslator -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1346174472;Set if "_" (semicolon) content should be stripped from the request URI._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content
DefaultRequestToViewNameTranslator -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1356735495;Set if "_" (semicolon) content should be stripped from the request URI._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content
DefaultRequestToViewNameTranslator -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1357119239;Set if "_" (semicolon) content should be stripped from the request URI._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content
DefaultRequestToViewNameTranslator -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1368482696;Set if "_" (semicolon) content should be stripped from the request URI._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content
DefaultRequestToViewNameTranslator -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1455730257;Set if "_" (semicolon) content should be stripped from the request URI._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content
DefaultRequestToViewNameTranslator -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1496837955;Set if "_" (semicolon) content should be stripped from the request URI._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content
DefaultRequestToViewNameTranslator -> public void setRemoveSemicolonContent(boolean removeSemicolonContent);1500043922;Set if "_" (semicolon) content should be stripped from the request URI._@see org.springframework.web.util.UrlPathHelper#setRemoveSemicolonContent(boolean);public void setRemoveSemicolonContent(boolean removeSemicolonContent) {_		this.urlPathHelper.setRemoveSemicolonContent(removeSemicolonContent)__	};set,if,semicolon,content,should,be,stripped,from,the,request,uri,see,org,springframework,web,util,url,path,helper,set,remove,semicolon,content,boolean;public,void,set,remove,semicolon,content,boolean,remove,semicolon,content,this,url,path,helper,set,remove,semicolon,content,remove,semicolon,content
DefaultRequestToViewNameTranslator -> protected String transformPath(String lookupPath);1328020251;Transform the request URI (in the context of the webapp) stripping_slashes and extensions, and replacing the separator as required._@param lookupPath the lookup path for the current request,_as determined by the UrlPathHelper_@return the transformed path, with slashes and extensions stripped_if desired;protected String transformPath(String lookupPath) {_		String path = lookupPath__		if (this.stripLeadingSlash && path.startsWith(SLASH)) {_			path = path.substring(1)__		}_		if (this.stripTrailingSlash && path.endsWith(SLASH)) {_			path = path.substring(0, path.length() - 1)__		}_		if (this.stripExtension) {_			path = StringUtils.stripFilenameExtension(path)__		}_		if (!SLASH.equals(this.separator)) {_			path = StringUtils.replace(path, SLASH, this.separator)__		}_		return path__	};transform,the,request,uri,in,the,context,of,the,webapp,stripping,slashes,and,extensions,and,replacing,the,separator,as,required,param,lookup,path,the,lookup,path,for,the,current,request,as,determined,by,the,url,path,helper,return,the,transformed,path,with,slashes,and,extensions,stripped,if,desired;protected,string,transform,path,string,lookup,path,string,path,lookup,path,if,this,strip,leading,slash,path,starts,with,slash,path,path,substring,1,if,this,strip,trailing,slash,path,ends,with,slash,path,path,substring,0,path,length,1,if,this,strip,extension,path,string,utils,strip,filename,extension,path,if,slash,equals,this,separator,path,string,utils,replace,path,slash,this,separator,return,path
DefaultRequestToViewNameTranslator -> protected String transformPath(String lookupPath);1346174472;Transform the request URI (in the context of the webapp) stripping_slashes and extensions, and replacing the separator as required._@param lookupPath the lookup path for the current request,_as determined by the UrlPathHelper_@return the transformed path, with slashes and extensions stripped_if desired;protected String transformPath(String lookupPath) {_		String path = lookupPath__		if (this.stripLeadingSlash && path.startsWith(SLASH)) {_			path = path.substring(1)__		}_		if (this.stripTrailingSlash && path.endsWith(SLASH)) {_			path = path.substring(0, path.length() - 1)__		}_		if (this.stripExtension) {_			path = StringUtils.stripFilenameExtension(path)__		}_		if (!SLASH.equals(this.separator)) {_			path = StringUtils.replace(path, SLASH, this.separator)__		}_		return path__	};transform,the,request,uri,in,the,context,of,the,webapp,stripping,slashes,and,extensions,and,replacing,the,separator,as,required,param,lookup,path,the,lookup,path,for,the,current,request,as,determined,by,the,url,path,helper,return,the,transformed,path,with,slashes,and,extensions,stripped,if,desired;protected,string,transform,path,string,lookup,path,string,path,lookup,path,if,this,strip,leading,slash,path,starts,with,slash,path,path,substring,1,if,this,strip,trailing,slash,path,ends,with,slash,path,path,substring,0,path,length,1,if,this,strip,extension,path,string,utils,strip,filename,extension,path,if,slash,equals,this,separator,path,string,utils,replace,path,slash,this,separator,return,path
DefaultRequestToViewNameTranslator -> protected String transformPath(String lookupPath);1356735495;Transform the request URI (in the context of the webapp) stripping_slashes and extensions, and replacing the separator as required._@param lookupPath the lookup path for the current request,_as determined by the UrlPathHelper_@return the transformed path, with slashes and extensions stripped_if desired;protected String transformPath(String lookupPath) {_		String path = lookupPath__		if (this.stripLeadingSlash && path.startsWith(SLASH)) {_			path = path.substring(1)__		}_		if (this.stripTrailingSlash && path.endsWith(SLASH)) {_			path = path.substring(0, path.length() - 1)__		}_		if (this.stripExtension) {_			path = StringUtils.stripFilenameExtension(path)__		}_		if (!SLASH.equals(this.separator)) {_			path = StringUtils.replace(path, SLASH, this.separator)__		}_		return path__	};transform,the,request,uri,in,the,context,of,the,webapp,stripping,slashes,and,extensions,and,replacing,the,separator,as,required,param,lookup,path,the,lookup,path,for,the,current,request,as,determined,by,the,url,path,helper,return,the,transformed,path,with,slashes,and,extensions,stripped,if,desired;protected,string,transform,path,string,lookup,path,string,path,lookup,path,if,this,strip,leading,slash,path,starts,with,slash,path,path,substring,1,if,this,strip,trailing,slash,path,ends,with,slash,path,path,substring,0,path,length,1,if,this,strip,extension,path,string,utils,strip,filename,extension,path,if,slash,equals,this,separator,path,string,utils,replace,path,slash,this,separator,return,path
DefaultRequestToViewNameTranslator -> protected String transformPath(String lookupPath);1357119239;Transform the request URI (in the context of the webapp) stripping_slashes and extensions, and replacing the separator as required._@param lookupPath the lookup path for the current request,_as determined by the UrlPathHelper_@return the transformed path, with slashes and extensions stripped_if desired;protected String transformPath(String lookupPath) {_		String path = lookupPath__		if (this.stripLeadingSlash && path.startsWith(SLASH)) {_			path = path.substring(1)__		}_		if (this.stripTrailingSlash && path.endsWith(SLASH)) {_			path = path.substring(0, path.length() - 1)__		}_		if (this.stripExtension) {_			path = StringUtils.stripFilenameExtension(path)__		}_		if (!SLASH.equals(this.separator)) {_			path = StringUtils.replace(path, SLASH, this.separator)__		}_		return path__	};transform,the,request,uri,in,the,context,of,the,webapp,stripping,slashes,and,extensions,and,replacing,the,separator,as,required,param,lookup,path,the,lookup,path,for,the,current,request,as,determined,by,the,url,path,helper,return,the,transformed,path,with,slashes,and,extensions,stripped,if,desired;protected,string,transform,path,string,lookup,path,string,path,lookup,path,if,this,strip,leading,slash,path,starts,with,slash,path,path,substring,1,if,this,strip,trailing,slash,path,ends,with,slash,path,path,substring,0,path,length,1,if,this,strip,extension,path,string,utils,strip,filename,extension,path,if,slash,equals,this,separator,path,string,utils,replace,path,slash,this,separator,return,path
DefaultRequestToViewNameTranslator -> protected String transformPath(String lookupPath);1368482696;Transform the request URI (in the context of the webapp) stripping_slashes and extensions, and replacing the separator as required._@param lookupPath the lookup path for the current request,_as determined by the UrlPathHelper_@return the transformed path, with slashes and extensions stripped_if desired;protected String transformPath(String lookupPath) {_		String path = lookupPath__		if (this.stripLeadingSlash && path.startsWith(SLASH)) {_			path = path.substring(1)__		}_		if (this.stripTrailingSlash && path.endsWith(SLASH)) {_			path = path.substring(0, path.length() - 1)__		}_		if (this.stripExtension) {_			path = StringUtils.stripFilenameExtension(path)__		}_		if (!SLASH.equals(this.separator)) {_			path = StringUtils.replace(path, SLASH, this.separator)__		}_		return path__	};transform,the,request,uri,in,the,context,of,the,webapp,stripping,slashes,and,extensions,and,replacing,the,separator,as,required,param,lookup,path,the,lookup,path,for,the,current,request,as,determined,by,the,url,path,helper,return,the,transformed,path,with,slashes,and,extensions,stripped,if,desired;protected,string,transform,path,string,lookup,path,string,path,lookup,path,if,this,strip,leading,slash,path,starts,with,slash,path,path,substring,1,if,this,strip,trailing,slash,path,ends,with,slash,path,path,substring,0,path,length,1,if,this,strip,extension,path,string,utils,strip,filename,extension,path,if,slash,equals,this,separator,path,string,utils,replace,path,slash,this,separator,return,path
DefaultRequestToViewNameTranslator -> protected String transformPath(String lookupPath);1455730257;Transform the request URI (in the context of the webapp) stripping_slashes and extensions, and replacing the separator as required._@param lookupPath the lookup path for the current request,_as determined by the UrlPathHelper_@return the transformed path, with slashes and extensions stripped_if desired;protected String transformPath(String lookupPath) {_		String path = lookupPath__		if (this.stripLeadingSlash && path.startsWith(SLASH)) {_			path = path.substring(1)__		}_		if (this.stripTrailingSlash && path.endsWith(SLASH)) {_			path = path.substring(0, path.length() - 1)__		}_		if (this.stripExtension) {_			path = StringUtils.stripFilenameExtension(path)__		}_		if (!SLASH.equals(this.separator)) {_			path = StringUtils.replace(path, SLASH, this.separator)__		}_		return path__	};transform,the,request,uri,in,the,context,of,the,webapp,stripping,slashes,and,extensions,and,replacing,the,separator,as,required,param,lookup,path,the,lookup,path,for,the,current,request,as,determined,by,the,url,path,helper,return,the,transformed,path,with,slashes,and,extensions,stripped,if,desired;protected,string,transform,path,string,lookup,path,string,path,lookup,path,if,this,strip,leading,slash,path,starts,with,slash,path,path,substring,1,if,this,strip,trailing,slash,path,ends,with,slash,path,path,substring,0,path,length,1,if,this,strip,extension,path,string,utils,strip,filename,extension,path,if,slash,equals,this,separator,path,string,utils,replace,path,slash,this,separator,return,path
DefaultRequestToViewNameTranslator -> public void setPrefix(@Nullable String prefix);1496837955;Set the prefix to prepend to generated view names._@param prefix the prefix to prepend to generated view names;public void setPrefix(@Nullable String prefix) {_		this.prefix = (prefix != null ? prefix : "")__	};set,the,prefix,to,prepend,to,generated,view,names,param,prefix,the,prefix,to,prepend,to,generated,view,names;public,void,set,prefix,nullable,string,prefix,this,prefix,prefix,null,prefix
DefaultRequestToViewNameTranslator -> public void setPrefix(@Nullable String prefix);1500043922;Set the prefix to prepend to generated view names._@param prefix the prefix to prepend to generated view names;public void setPrefix(@Nullable String prefix) {_		this.prefix = (prefix != null ? prefix : "")__	};set,the,prefix,to,prepend,to,generated,view,names,param,prefix,the,prefix,to,prepend,to,generated,view,names;public,void,set,prefix,nullable,string,prefix,this,prefix,prefix,null,prefix
DefaultRequestToViewNameTranslator -> public void setSuffix(String suffix);1328020251;Set the suffix to append to generated view names._@param suffix the suffix to append to generated view names;public void setSuffix(String suffix) {_		this.suffix = (suffix != null ? suffix : "")__	};set,the,suffix,to,append,to,generated,view,names,param,suffix,the,suffix,to,append,to,generated,view,names;public,void,set,suffix,string,suffix,this,suffix,suffix,null,suffix
DefaultRequestToViewNameTranslator -> public void setSuffix(String suffix);1346174472;Set the suffix to append to generated view names._@param suffix the suffix to append to generated view names;public void setSuffix(String suffix) {_		this.suffix = (suffix != null ? suffix : "")__	};set,the,suffix,to,append,to,generated,view,names,param,suffix,the,suffix,to,append,to,generated,view,names;public,void,set,suffix,string,suffix,this,suffix,suffix,null,suffix
DefaultRequestToViewNameTranslator -> public void setSuffix(String suffix);1356735495;Set the suffix to append to generated view names._@param suffix the suffix to append to generated view names;public void setSuffix(String suffix) {_		this.suffix = (suffix != null ? suffix : "")__	};set,the,suffix,to,append,to,generated,view,names,param,suffix,the,suffix,to,append,to,generated,view,names;public,void,set,suffix,string,suffix,this,suffix,suffix,null,suffix
DefaultRequestToViewNameTranslator -> public void setSuffix(String suffix);1357119239;Set the suffix to append to generated view names._@param suffix the suffix to append to generated view names;public void setSuffix(String suffix) {_		this.suffix = (suffix != null ? suffix : "")__	};set,the,suffix,to,append,to,generated,view,names,param,suffix,the,suffix,to,append,to,generated,view,names;public,void,set,suffix,string,suffix,this,suffix,suffix,null,suffix
DefaultRequestToViewNameTranslator -> public void setSuffix(String suffix);1368482696;Set the suffix to append to generated view names._@param suffix the suffix to append to generated view names;public void setSuffix(String suffix) {_		this.suffix = (suffix != null ? suffix : "")__	};set,the,suffix,to,append,to,generated,view,names,param,suffix,the,suffix,to,append,to,generated,view,names;public,void,set,suffix,string,suffix,this,suffix,suffix,null,suffix
DefaultRequestToViewNameTranslator -> public void setSuffix(String suffix);1455730257;Set the suffix to append to generated view names._@param suffix the suffix to append to generated view names;public void setSuffix(String suffix) {_		this.suffix = (suffix != null ? suffix : "")__	};set,the,suffix,to,append,to,generated,view,names,param,suffix,the,suffix,to,append,to,generated,view,names;public,void,set,suffix,string,suffix,this,suffix,suffix,null,suffix
DefaultRequestToViewNameTranslator -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1328020251;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used_if applicable (i.e. in the case of a ".../*" servlet mapping in web.xml)._Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,i,e,in,the,case,of,a,servlet,mapping,in,web,xml,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
DefaultRequestToViewNameTranslator -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1346174472;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used_if applicable (i.e. in the case of a ".../*" servlet mapping in web.xml)._Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,i,e,in,the,case,of,a,servlet,mapping,in,web,xml,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
DefaultRequestToViewNameTranslator -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1356735495;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used_if applicable (i.e. in the case of a ".../*" servlet mapping in web.xml)._Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,i,e,in,the,case,of,a,servlet,mapping,in,web,xml,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
DefaultRequestToViewNameTranslator -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1357119239;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used_if applicable (i.e. in the case of a ".../*" servlet mapping in web.xml)._Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,i,e,in,the,case,of,a,servlet,mapping,in,web,xml,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
DefaultRequestToViewNameTranslator -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1368482696;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used_if applicable (i.e. in the case of a ".../*" servlet mapping in web.xml)._Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,i,e,in,the,case,of,a,servlet,mapping,in,web,xml,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
DefaultRequestToViewNameTranslator -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1455730257;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used_if applicable (i.e. in the case of a ".../*" servlet mapping in web.xml)._Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,i,e,in,the,case,of,a,servlet,mapping,in,web,xml,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
DefaultRequestToViewNameTranslator -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1496837955;Set if URL lookup should always use the full path within the current servlet_context. Else, the path within the current servlet mapping is used_if applicable (i.e. in the case of a ".../*" servlet mapping in web.xml)._Default is "false"._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};set,if,url,lookup,should,always,use,the,full,path,within,the,current,servlet,context,else,the,path,within,the,current,servlet,mapping,is,used,if,applicable,i,e,in,the,case,of,a,servlet,mapping,in,web,xml,default,is,false,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
DefaultRequestToViewNameTranslator -> public void setAlwaysUseFullPath(boolean alwaysUseFullPath);1500043922;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setAlwaysUseFullPath;public void setAlwaysUseFullPath(boolean alwaysUseFullPath) {_		this.urlPathHelper.setAlwaysUseFullPath(alwaysUseFullPath)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,always,use,full,path;public,void,set,always,use,full,path,boolean,always,use,full,path,this,url,path,helper,set,always,use,full,path,always,use,full,path
DefaultRequestToViewNameTranslator -> public void setPrefix(String prefix);1328020251;Set the prefix to prepend to generated view names._@param prefix the prefix to prepend to generated view names;public void setPrefix(String prefix) {_		this.prefix = (prefix != null ? prefix : "")__	};set,the,prefix,to,prepend,to,generated,view,names,param,prefix,the,prefix,to,prepend,to,generated,view,names;public,void,set,prefix,string,prefix,this,prefix,prefix,null,prefix
DefaultRequestToViewNameTranslator -> public void setPrefix(String prefix);1346174472;Set the prefix to prepend to generated view names._@param prefix the prefix to prepend to generated view names;public void setPrefix(String prefix) {_		this.prefix = (prefix != null ? prefix : "")__	};set,the,prefix,to,prepend,to,generated,view,names,param,prefix,the,prefix,to,prepend,to,generated,view,names;public,void,set,prefix,string,prefix,this,prefix,prefix,null,prefix
DefaultRequestToViewNameTranslator -> public void setPrefix(String prefix);1356735495;Set the prefix to prepend to generated view names._@param prefix the prefix to prepend to generated view names;public void setPrefix(String prefix) {_		this.prefix = (prefix != null ? prefix : "")__	};set,the,prefix,to,prepend,to,generated,view,names,param,prefix,the,prefix,to,prepend,to,generated,view,names;public,void,set,prefix,string,prefix,this,prefix,prefix,null,prefix
DefaultRequestToViewNameTranslator -> public void setPrefix(String prefix);1357119239;Set the prefix to prepend to generated view names._@param prefix the prefix to prepend to generated view names;public void setPrefix(String prefix) {_		this.prefix = (prefix != null ? prefix : "")__	};set,the,prefix,to,prepend,to,generated,view,names,param,prefix,the,prefix,to,prepend,to,generated,view,names;public,void,set,prefix,string,prefix,this,prefix,prefix,null,prefix
DefaultRequestToViewNameTranslator -> public void setPrefix(String prefix);1368482696;Set the prefix to prepend to generated view names._@param prefix the prefix to prepend to generated view names;public void setPrefix(String prefix) {_		this.prefix = (prefix != null ? prefix : "")__	};set,the,prefix,to,prepend,to,generated,view,names,param,prefix,the,prefix,to,prepend,to,generated,view,names;public,void,set,prefix,string,prefix,this,prefix,prefix,null,prefix
DefaultRequestToViewNameTranslator -> public void setPrefix(String prefix);1455730257;Set the prefix to prepend to generated view names._@param prefix the prefix to prepend to generated view names;public void setPrefix(String prefix) {_		this.prefix = (prefix != null ? prefix : "")__	};set,the,prefix,to,prepend,to,generated,view,names,param,prefix,the,prefix,to,prepend,to,generated,view,names;public,void,set,prefix,string,prefix,this,prefix,prefix,null,prefix
DefaultRequestToViewNameTranslator -> @Nullable 	protected String transformPath(String lookupPath);1496837955;Transform the request URI (in the context of the webapp) stripping_slashes and extensions, and replacing the separator as required._@param lookupPath the lookup path for the current request,_as determined by the UrlPathHelper_@return the transformed path, with slashes and extensions stripped_if desired;@Nullable_	protected String transformPath(String lookupPath) {_		String path = lookupPath__		if (this.stripLeadingSlash && path.startsWith(SLASH)) {_			path = path.substring(1)__		}_		if (this.stripTrailingSlash && path.endsWith(SLASH)) {_			path = path.substring(0, path.length() - 1)__		}_		if (this.stripExtension) {_			path = StringUtils.stripFilenameExtension(path)__		}_		if (!SLASH.equals(this.separator)) {_			path = StringUtils.replace(path, SLASH, this.separator)__		}_		return path__	};transform,the,request,uri,in,the,context,of,the,webapp,stripping,slashes,and,extensions,and,replacing,the,separator,as,required,param,lookup,path,the,lookup,path,for,the,current,request,as,determined,by,the,url,path,helper,return,the,transformed,path,with,slashes,and,extensions,stripped,if,desired;nullable,protected,string,transform,path,string,lookup,path,string,path,lookup,path,if,this,strip,leading,slash,path,starts,with,slash,path,path,substring,1,if,this,strip,trailing,slash,path,ends,with,slash,path,path,substring,0,path,length,1,if,this,strip,extension,path,string,utils,strip,filename,extension,path,if,slash,equals,this,separator,path,string,utils,replace,path,slash,this,separator,return,path
DefaultRequestToViewNameTranslator -> @Nullable 	protected String transformPath(String lookupPath);1500043922;Transform the request URI (in the context of the webapp) stripping_slashes and extensions, and replacing the separator as required._@param lookupPath the lookup path for the current request,_as determined by the UrlPathHelper_@return the transformed path, with slashes and extensions stripped_if desired;@Nullable_	protected String transformPath(String lookupPath) {_		String path = lookupPath__		if (this.stripLeadingSlash && path.startsWith(SLASH)) {_			path = path.substring(1)__		}_		if (this.stripTrailingSlash && path.endsWith(SLASH)) {_			path = path.substring(0, path.length() - 1)__		}_		if (this.stripExtension) {_			path = StringUtils.stripFilenameExtension(path)__		}_		if (!SLASH.equals(this.separator)) {_			path = StringUtils.replace(path, SLASH, this.separator)__		}_		return path__	};transform,the,request,uri,in,the,context,of,the,webapp,stripping,slashes,and,extensions,and,replacing,the,separator,as,required,param,lookup,path,the,lookup,path,for,the,current,request,as,determined,by,the,url,path,helper,return,the,transformed,path,with,slashes,and,extensions,stripped,if,desired;nullable,protected,string,transform,path,string,lookup,path,string,path,lookup,path,if,this,strip,leading,slash,path,starts,with,slash,path,path,substring,1,if,this,strip,trailing,slash,path,ends,with,slash,path,path,substring,0,path,length,1,if,this,strip,extension,path,string,utils,strip,filename,extension,path,if,slash,equals,this,separator,path,string,utils,replace,path,slash,this,separator,return,path
DefaultRequestToViewNameTranslator -> public void setStripExtension(boolean stripExtension);1328020251;Set whether or not file extensions should be stripped from the URI when_generating the view name. Default is "true".;public void setStripExtension(boolean stripExtension) {_		this.stripExtension = stripExtension__	};set,whether,or,not,file,extensions,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,extension,boolean,strip,extension,this,strip,extension,strip,extension
DefaultRequestToViewNameTranslator -> public void setStripExtension(boolean stripExtension);1346174472;Set whether or not file extensions should be stripped from the URI when_generating the view name. Default is "true".;public void setStripExtension(boolean stripExtension) {_		this.stripExtension = stripExtension__	};set,whether,or,not,file,extensions,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,extension,boolean,strip,extension,this,strip,extension,strip,extension
DefaultRequestToViewNameTranslator -> public void setStripExtension(boolean stripExtension);1356735495;Set whether or not file extensions should be stripped from the URI when_generating the view name. Default is "true".;public void setStripExtension(boolean stripExtension) {_		this.stripExtension = stripExtension__	};set,whether,or,not,file,extensions,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,extension,boolean,strip,extension,this,strip,extension,strip,extension
DefaultRequestToViewNameTranslator -> public void setStripExtension(boolean stripExtension);1357119239;Set whether or not file extensions should be stripped from the URI when_generating the view name. Default is "true".;public void setStripExtension(boolean stripExtension) {_		this.stripExtension = stripExtension__	};set,whether,or,not,file,extensions,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,extension,boolean,strip,extension,this,strip,extension,strip,extension
DefaultRequestToViewNameTranslator -> public void setStripExtension(boolean stripExtension);1368482696;Set whether or not file extensions should be stripped from the URI when_generating the view name. Default is "true".;public void setStripExtension(boolean stripExtension) {_		this.stripExtension = stripExtension__	};set,whether,or,not,file,extensions,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,extension,boolean,strip,extension,this,strip,extension,strip,extension
DefaultRequestToViewNameTranslator -> public void setStripExtension(boolean stripExtension);1455730257;Set whether or not file extensions should be stripped from the URI when_generating the view name. Default is "true".;public void setStripExtension(boolean stripExtension) {_		this.stripExtension = stripExtension__	};set,whether,or,not,file,extensions,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,extension,boolean,strip,extension,this,strip,extension,strip,extension
DefaultRequestToViewNameTranslator -> public void setStripExtension(boolean stripExtension);1496837955;Set whether or not file extensions should be stripped from the URI when_generating the view name. Default is "true".;public void setStripExtension(boolean stripExtension) {_		this.stripExtension = stripExtension__	};set,whether,or,not,file,extensions,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,extension,boolean,strip,extension,this,strip,extension,strip,extension
DefaultRequestToViewNameTranslator -> public void setStripExtension(boolean stripExtension);1500043922;Set whether or not file extensions should be stripped from the URI when_generating the view name. Default is "true".;public void setStripExtension(boolean stripExtension) {_		this.stripExtension = stripExtension__	};set,whether,or,not,file,extensions,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,extension,boolean,strip,extension,this,strip,extension,strip,extension
DefaultRequestToViewNameTranslator -> public void setStripTrailingSlash(boolean stripTrailingSlash);1328020251;Set whether or not trailing slashes should be stripped from the URI when_generating the view name. Default is "true".;public void setStripTrailingSlash(boolean stripTrailingSlash) {_		this.stripTrailingSlash = stripTrailingSlash__	};set,whether,or,not,trailing,slashes,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,trailing,slash,boolean,strip,trailing,slash,this,strip,trailing,slash,strip,trailing,slash
DefaultRequestToViewNameTranslator -> public void setStripTrailingSlash(boolean stripTrailingSlash);1346174472;Set whether or not trailing slashes should be stripped from the URI when_generating the view name. Default is "true".;public void setStripTrailingSlash(boolean stripTrailingSlash) {_		this.stripTrailingSlash = stripTrailingSlash__	};set,whether,or,not,trailing,slashes,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,trailing,slash,boolean,strip,trailing,slash,this,strip,trailing,slash,strip,trailing,slash
DefaultRequestToViewNameTranslator -> public void setStripTrailingSlash(boolean stripTrailingSlash);1356735495;Set whether or not trailing slashes should be stripped from the URI when_generating the view name. Default is "true".;public void setStripTrailingSlash(boolean stripTrailingSlash) {_		this.stripTrailingSlash = stripTrailingSlash__	};set,whether,or,not,trailing,slashes,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,trailing,slash,boolean,strip,trailing,slash,this,strip,trailing,slash,strip,trailing,slash
DefaultRequestToViewNameTranslator -> public void setStripTrailingSlash(boolean stripTrailingSlash);1357119239;Set whether or not trailing slashes should be stripped from the URI when_generating the view name. Default is "true".;public void setStripTrailingSlash(boolean stripTrailingSlash) {_		this.stripTrailingSlash = stripTrailingSlash__	};set,whether,or,not,trailing,slashes,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,trailing,slash,boolean,strip,trailing,slash,this,strip,trailing,slash,strip,trailing,slash
DefaultRequestToViewNameTranslator -> public void setStripTrailingSlash(boolean stripTrailingSlash);1368482696;Set whether or not trailing slashes should be stripped from the URI when_generating the view name. Default is "true".;public void setStripTrailingSlash(boolean stripTrailingSlash) {_		this.stripTrailingSlash = stripTrailingSlash__	};set,whether,or,not,trailing,slashes,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,trailing,slash,boolean,strip,trailing,slash,this,strip,trailing,slash,strip,trailing,slash
DefaultRequestToViewNameTranslator -> public void setStripTrailingSlash(boolean stripTrailingSlash);1455730257;Set whether or not trailing slashes should be stripped from the URI when_generating the view name. Default is "true".;public void setStripTrailingSlash(boolean stripTrailingSlash) {_		this.stripTrailingSlash = stripTrailingSlash__	};set,whether,or,not,trailing,slashes,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,trailing,slash,boolean,strip,trailing,slash,this,strip,trailing,slash,strip,trailing,slash
DefaultRequestToViewNameTranslator -> public void setStripTrailingSlash(boolean stripTrailingSlash);1496837955;Set whether or not trailing slashes should be stripped from the URI when_generating the view name. Default is "true".;public void setStripTrailingSlash(boolean stripTrailingSlash) {_		this.stripTrailingSlash = stripTrailingSlash__	};set,whether,or,not,trailing,slashes,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,trailing,slash,boolean,strip,trailing,slash,this,strip,trailing,slash,strip,trailing,slash
DefaultRequestToViewNameTranslator -> public void setStripTrailingSlash(boolean stripTrailingSlash);1500043922;Set whether or not trailing slashes should be stripped from the URI when_generating the view name. Default is "true".;public void setStripTrailingSlash(boolean stripTrailingSlash) {_		this.stripTrailingSlash = stripTrailingSlash__	};set,whether,or,not,trailing,slashes,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,trailing,slash,boolean,strip,trailing,slash,this,strip,trailing,slash,strip,trailing,slash
DefaultRequestToViewNameTranslator -> public void setStripLeadingSlash(boolean stripLeadingSlash);1328020251;Set whether or not leading slashes should be stripped from the URI when_generating the view name. Default is "true".;public void setStripLeadingSlash(boolean stripLeadingSlash) {_		this.stripLeadingSlash = stripLeadingSlash__	};set,whether,or,not,leading,slashes,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,leading,slash,boolean,strip,leading,slash,this,strip,leading,slash,strip,leading,slash
DefaultRequestToViewNameTranslator -> public void setStripLeadingSlash(boolean stripLeadingSlash);1346174472;Set whether or not leading slashes should be stripped from the URI when_generating the view name. Default is "true".;public void setStripLeadingSlash(boolean stripLeadingSlash) {_		this.stripLeadingSlash = stripLeadingSlash__	};set,whether,or,not,leading,slashes,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,leading,slash,boolean,strip,leading,slash,this,strip,leading,slash,strip,leading,slash
DefaultRequestToViewNameTranslator -> public void setStripLeadingSlash(boolean stripLeadingSlash);1356735495;Set whether or not leading slashes should be stripped from the URI when_generating the view name. Default is "true".;public void setStripLeadingSlash(boolean stripLeadingSlash) {_		this.stripLeadingSlash = stripLeadingSlash__	};set,whether,or,not,leading,slashes,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,leading,slash,boolean,strip,leading,slash,this,strip,leading,slash,strip,leading,slash
DefaultRequestToViewNameTranslator -> public void setStripLeadingSlash(boolean stripLeadingSlash);1357119239;Set whether or not leading slashes should be stripped from the URI when_generating the view name. Default is "true".;public void setStripLeadingSlash(boolean stripLeadingSlash) {_		this.stripLeadingSlash = stripLeadingSlash__	};set,whether,or,not,leading,slashes,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,leading,slash,boolean,strip,leading,slash,this,strip,leading,slash,strip,leading,slash
DefaultRequestToViewNameTranslator -> public void setStripLeadingSlash(boolean stripLeadingSlash);1368482696;Set whether or not leading slashes should be stripped from the URI when_generating the view name. Default is "true".;public void setStripLeadingSlash(boolean stripLeadingSlash) {_		this.stripLeadingSlash = stripLeadingSlash__	};set,whether,or,not,leading,slashes,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,leading,slash,boolean,strip,leading,slash,this,strip,leading,slash,strip,leading,slash
DefaultRequestToViewNameTranslator -> public void setStripLeadingSlash(boolean stripLeadingSlash);1455730257;Set whether or not leading slashes should be stripped from the URI when_generating the view name. Default is "true".;public void setStripLeadingSlash(boolean stripLeadingSlash) {_		this.stripLeadingSlash = stripLeadingSlash__	};set,whether,or,not,leading,slashes,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,leading,slash,boolean,strip,leading,slash,this,strip,leading,slash,strip,leading,slash
DefaultRequestToViewNameTranslator -> public void setStripLeadingSlash(boolean stripLeadingSlash);1496837955;Set whether or not leading slashes should be stripped from the URI when_generating the view name. Default is "true".;public void setStripLeadingSlash(boolean stripLeadingSlash) {_		this.stripLeadingSlash = stripLeadingSlash__	};set,whether,or,not,leading,slashes,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,leading,slash,boolean,strip,leading,slash,this,strip,leading,slash,strip,leading,slash
DefaultRequestToViewNameTranslator -> public void setStripLeadingSlash(boolean stripLeadingSlash);1500043922;Set whether or not leading slashes should be stripped from the URI when_generating the view name. Default is "true".;public void setStripLeadingSlash(boolean stripLeadingSlash) {_		this.stripLeadingSlash = stripLeadingSlash__	};set,whether,or,not,leading,slashes,should,be,stripped,from,the,uri,when,generating,the,view,name,default,is,true;public,void,set,strip,leading,slash,boolean,strip,leading,slash,this,strip,leading,slash,strip,leading,slash
DefaultRequestToViewNameTranslator -> public String getViewName(HttpServletRequest request);1328020251;Translates the request URI of the incoming {@link HttpServletRequest}_into the view name based on the configured parameters._@see org.springframework.web.util.UrlPathHelper#getLookupPathForRequest_@see #transformPath;public String getViewName(HttpServletRequest request) {_		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		return (this.prefix + transformPath(lookupPath) + this.suffix)__	};translates,the,request,uri,of,the,incoming,link,http,servlet,request,into,the,view,name,based,on,the,configured,parameters,see,org,springframework,web,util,url,path,helper,get,lookup,path,for,request,see,transform,path;public,string,get,view,name,http,servlet,request,request,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,return,this,prefix,transform,path,lookup,path,this,suffix
DefaultRequestToViewNameTranslator -> public String getViewName(HttpServletRequest request);1346174472;Translates the request URI of the incoming {@link HttpServletRequest}_into the view name based on the configured parameters._@see org.springframework.web.util.UrlPathHelper#getLookupPathForRequest_@see #transformPath;public String getViewName(HttpServletRequest request) {_		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		return (this.prefix + transformPath(lookupPath) + this.suffix)__	};translates,the,request,uri,of,the,incoming,link,http,servlet,request,into,the,view,name,based,on,the,configured,parameters,see,org,springframework,web,util,url,path,helper,get,lookup,path,for,request,see,transform,path;public,string,get,view,name,http,servlet,request,request,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,return,this,prefix,transform,path,lookup,path,this,suffix
DefaultRequestToViewNameTranslator -> public String getViewName(HttpServletRequest request);1357119239;Translates the request URI of the incoming {@link HttpServletRequest}_into the view name based on the configured parameters._@see org.springframework.web.util.UrlPathHelper#getLookupPathForRequest_@see #transformPath;public String getViewName(HttpServletRequest request) {_		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request)__		return (this.prefix + transformPath(lookupPath) + this.suffix)__	};translates,the,request,uri,of,the,incoming,link,http,servlet,request,into,the,view,name,based,on,the,configured,parameters,see,org,springframework,web,util,url,path,helper,get,lookup,path,for,request,see,transform,path;public,string,get,view,name,http,servlet,request,request,string,lookup,path,this,url,path,helper,get,lookup,path,for,request,request,return,this,prefix,transform,path,lookup,path,this,suffix
DefaultRequestToViewNameTranslator -> public void setSuffix(@Nullable String suffix);1496837955;Set the suffix to append to generated view names._@param suffix the suffix to append to generated view names;public void setSuffix(@Nullable String suffix) {_		this.suffix = (suffix != null ? suffix : "")__	};set,the,suffix,to,append,to,generated,view,names,param,suffix,the,suffix,to,append,to,generated,view,names;public,void,set,suffix,nullable,string,suffix,this,suffix,suffix,null,suffix
DefaultRequestToViewNameTranslator -> public void setSuffix(@Nullable String suffix);1500043922;Set the suffix to append to generated view names._@param suffix the suffix to append to generated view names;public void setSuffix(@Nullable String suffix) {_		this.suffix = (suffix != null ? suffix : "")__	};set,the,suffix,to,append,to,generated,view,names,param,suffix,the,suffix,to,append,to,generated,view,names;public,void,set,suffix,nullable,string,suffix,this,suffix,suffix,null,suffix
DefaultRequestToViewNameTranslator -> public void setUrlDecode(boolean urlDecode);1328020251;Set if the context path and request URI should be URL-decoded._Both are returned <i>undecoded</i> by the Servlet API,_in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};set,if,the,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
DefaultRequestToViewNameTranslator -> public void setUrlDecode(boolean urlDecode);1346174472;Set if the context path and request URI should be URL-decoded._Both are returned <i>undecoded</i> by the Servlet API,_in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};set,if,the,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
DefaultRequestToViewNameTranslator -> public void setUrlDecode(boolean urlDecode);1356735495;Set if the context path and request URI should be URL-decoded._Both are returned <i>undecoded</i> by the Servlet API,_in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};set,if,the,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
DefaultRequestToViewNameTranslator -> public void setUrlDecode(boolean urlDecode);1357119239;Set if the context path and request URI should be URL-decoded._Both are returned <i>undecoded</i> by the Servlet API,_in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};set,if,the,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
DefaultRequestToViewNameTranslator -> public void setUrlDecode(boolean urlDecode);1368482696;Set if the context path and request URI should be URL-decoded._Both are returned <i>undecoded</i> by the Servlet API,_in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};set,if,the,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
DefaultRequestToViewNameTranslator -> public void setUrlDecode(boolean urlDecode);1455730257;Set if the context path and request URI should be URL-decoded._Both are returned <i>undecoded</i> by the Servlet API,_in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};set,if,the,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
DefaultRequestToViewNameTranslator -> public void setUrlDecode(boolean urlDecode);1496837955;Set if the context path and request URI should be URL-decoded._Both are returned <i>undecoded</i> by the Servlet API,_in contrast to the servlet path._<p>Uses either the request encoding or the default encoding according_to the Servlet spec (ISO-8859-1)._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};set,if,the,context,path,and,request,uri,should,be,url,decoded,both,are,returned,i,undecoded,i,by,the,servlet,api,in,contrast,to,the,servlet,path,p,uses,either,the,request,encoding,or,the,default,encoding,according,to,the,servlet,spec,iso,8859,1,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
DefaultRequestToViewNameTranslator -> public void setUrlDecode(boolean urlDecode);1500043922;Shortcut to same property on underlying {@link #setUrlPathHelper UrlPathHelper}._@see org.springframework.web.util.UrlPathHelper#setUrlDecode;public void setUrlDecode(boolean urlDecode) {_		this.urlPathHelper.setUrlDecode(urlDecode)__	};shortcut,to,same,property,on,underlying,link,set,url,path,helper,url,path,helper,see,org,springframework,web,util,url,path,helper,set,url,decode;public,void,set,url,decode,boolean,url,decode,this,url,path,helper,set,url,decode,url,decode
