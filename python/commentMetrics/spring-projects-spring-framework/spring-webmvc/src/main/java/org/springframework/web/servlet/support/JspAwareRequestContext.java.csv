commented;modifiers;parameterAmount;loc;comment;code
true;protected,final;0;3;/**  * Return the underlying PageContext.  * Only intended for cooperating classes in this package.  */ ;/**  * Return the underlying PageContext.  * Only intended for cooperating classes in this package.  */ protected final PageContext getPageContext() {     return this.pageContext. }
true;protected;0;10;/**  * This implementation checks for a JSTL locale attribute in page,  * request, session or application scope. if not found, returns the  * {@code HttpServletRequest.getLocale()}.  */ ;/**  * This implementation checks for a JSTL locale attribute in page,  * request, session or application scope. if not found, returns the  * {@code HttpServletRequest.getLocale()}.  */ @Override protected Locale getFallbackLocale() {     if (jstlPresent) {         Locale locale = JstlPageLocaleResolver.getJstlLocale(getPageContext()).         if (locale != null) {             return locale.         }     }     return getRequest().getLocale(). }
true;protected;0;10;/**  * This implementation checks for a JSTL time zone attribute in page,  * request, session or application scope. if not found, returns {@code null}.  */ ;/**  * This implementation checks for a JSTL time zone attribute in page,  * request, session or application scope. if not found, returns {@code null}.  */ @Override protected TimeZone getFallbackTimeZone() {     if (jstlPresent) {         TimeZone timeZone = JstlPageLocaleResolver.getJstlTimeZone(getPageContext()).         if (timeZone != null) {             return timeZone.         }     }     return null. }
false;public,static;1;5;;@Nullable public static Locale getJstlLocale(PageContext pageContext) {     Object localeObject = Config.find(pageContext, Config.FMT_LOCALE).     return (localeObject instanceof Locale ? (Locale) localeObject : null). }
false;public,static;1;5;;@Nullable public static TimeZone getJstlTimeZone(PageContext pageContext) {     Object timeZoneObject = Config.find(pageContext, Config.FMT_TIME_ZONE).     return (timeZoneObject instanceof TimeZone ? (TimeZone) timeZoneObject : null). }
