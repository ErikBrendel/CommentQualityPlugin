# id;timestamp;commentText;codeText;commentWords;codeWords
HandlerAdapter -> @Nullable 	ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception_;1495868221;Use the given handler to handle this request._The workflow that is required may vary widely._@param request current HTTP request_@param response current HTTP response_@param handler handler to use. This object must have previously been passed_to the {@code supports} method of this interface, which must have_returned {@code true}._@throws Exception in case of errors_@return ModelAndView object with the name of the view and the required_model data, or {@code null} if the request has been handled directly;@Nullable_	ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception_;use,the,given,handler,to,handle,this,request,the,workflow,that,is,required,may,vary,widely,param,request,current,http,request,param,response,current,http,response,param,handler,handler,to,use,this,object,must,have,previously,been,passed,to,the,code,supports,method,of,this,interface,which,must,have,returned,code,true,throws,exception,in,case,of,errors,return,model,and,view,object,with,the,name,of,the,view,and,the,required,model,data,or,code,null,if,the,request,has,been,handled,directly;nullable,model,and,view,handle,http,servlet,request,request,http,servlet,response,response,object,handler,throws,exception
HandlerAdapter -> @Nullable 	ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception_;1530174524;Use the given handler to handle this request._The workflow that is required may vary widely._@param request current HTTP request_@param response current HTTP response_@param handler handler to use. This object must have previously been passed_to the {@code supports} method of this interface, which must have_returned {@code true}._@throws Exception in case of errors_@return a ModelAndView object with the name of the view and the required_model data, or {@code null} if the request has been handled directly;@Nullable_	ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception_;use,the,given,handler,to,handle,this,request,the,workflow,that,is,required,may,vary,widely,param,request,current,http,request,param,response,current,http,response,param,handler,handler,to,use,this,object,must,have,previously,been,passed,to,the,code,supports,method,of,this,interface,which,must,have,returned,code,true,throws,exception,in,case,of,errors,return,a,model,and,view,object,with,the,name,of,the,view,and,the,required,model,data,or,code,null,if,the,request,has,been,handled,directly;nullable,model,and,view,handle,http,servlet,request,request,http,servlet,response,response,object,handler,throws,exception
HandlerAdapter -> long getLastModified(HttpServletRequest request, Object handler)_;1328020251;Same contract as for HttpServlet's <code>getLastModified</code> method._Can simply return -1 if there's no support in the handler class._@param request current HTTP request_@param handler handler to use_@return the lastModified value for the given handler_@see javax.servlet.http.HttpServlet#getLastModified_@see org.springframework.web.servlet.mvc.LastModified#getLastModified;long getLastModified(HttpServletRequest request, Object handler)_;same,contract,as,for,http,servlet,s,code,get,last,modified,code,method,can,simply,return,1,if,there,s,no,support,in,the,handler,class,param,request,current,http,request,param,handler,handler,to,use,return,the,last,modified,value,for,the,given,handler,see,javax,servlet,http,http,servlet,get,last,modified,see,org,springframework,web,servlet,mvc,last,modified,get,last,modified;long,get,last,modified,http,servlet,request,request,object,handler
HandlerAdapter -> long getLastModified(HttpServletRequest request, Object handler)_;1356735495;Same contract as for HttpServlet's {@code getLastModified} method._Can simply return -1 if there's no support in the handler class._@param request current HTTP request_@param handler handler to use_@return the lastModified value for the given handler_@see javax.servlet.http.HttpServlet#getLastModified_@see org.springframework.web.servlet.mvc.LastModified#getLastModified;long getLastModified(HttpServletRequest request, Object handler)_;same,contract,as,for,http,servlet,s,code,get,last,modified,method,can,simply,return,1,if,there,s,no,support,in,the,handler,class,param,request,current,http,request,param,handler,handler,to,use,return,the,last,modified,value,for,the,given,handler,see,javax,servlet,http,http,servlet,get,last,modified,see,org,springframework,web,servlet,mvc,last,modified,get,last,modified;long,get,last,modified,http,servlet,request,request,object,handler
HandlerAdapter -> long getLastModified(HttpServletRequest request, Object handler)_;1374115410;Same contract as for HttpServlet's {@code getLastModified} method._Can simply return -1 if there's no support in the handler class._@param request current HTTP request_@param handler handler to use_@return the lastModified value for the given handler_@see javax.servlet.http.HttpServlet#getLastModified_@see org.springframework.web.servlet.mvc.LastModified#getLastModified;long getLastModified(HttpServletRequest request, Object handler)_;same,contract,as,for,http,servlet,s,code,get,last,modified,method,can,simply,return,1,if,there,s,no,support,in,the,handler,class,param,request,current,http,request,param,handler,handler,to,use,return,the,last,modified,value,for,the,given,handler,see,javax,servlet,http,http,servlet,get,last,modified,see,org,springframework,web,servlet,mvc,last,modified,get,last,modified;long,get,last,modified,http,servlet,request,request,object,handler
HandlerAdapter -> long getLastModified(HttpServletRequest request, Object handler)_;1495868221;Same contract as for HttpServlet's {@code getLastModified} method._Can simply return -1 if there's no support in the handler class._@param request current HTTP request_@param handler handler to use_@return the lastModified value for the given handler_@see javax.servlet.http.HttpServlet#getLastModified_@see org.springframework.web.servlet.mvc.LastModified#getLastModified;long getLastModified(HttpServletRequest request, Object handler)_;same,contract,as,for,http,servlet,s,code,get,last,modified,method,can,simply,return,1,if,there,s,no,support,in,the,handler,class,param,request,current,http,request,param,handler,handler,to,use,return,the,last,modified,value,for,the,given,handler,see,javax,servlet,http,http,servlet,get,last,modified,see,org,springframework,web,servlet,mvc,last,modified,get,last,modified;long,get,last,modified,http,servlet,request,request,object,handler
HandlerAdapter -> long getLastModified(HttpServletRequest request, Object handler)_;1530174524;Same contract as for HttpServlet's {@code getLastModified} method._Can simply return -1 if there's no support in the handler class._@param request current HTTP request_@param handler handler to use_@return the lastModified value for the given handler_@see javax.servlet.http.HttpServlet#getLastModified_@see org.springframework.web.servlet.mvc.LastModified#getLastModified;long getLastModified(HttpServletRequest request, Object handler)_;same,contract,as,for,http,servlet,s,code,get,last,modified,method,can,simply,return,1,if,there,s,no,support,in,the,handler,class,param,request,current,http,request,param,handler,handler,to,use,return,the,last,modified,value,for,the,given,handler,see,javax,servlet,http,http,servlet,get,last,modified,see,org,springframework,web,servlet,mvc,last,modified,get,last,modified;long,get,last,modified,http,servlet,request,request,object,handler
HandlerAdapter -> ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception_;1328020251;Use the given handler to handle this request._The workflow that is required may vary widely._@param request current HTTP request_@param response current HTTP response_@param handler handler to use. This object must have previously been passed_to the <code>supports</code> method of this interface, which must have_returned <code>true</code>._@throws Exception in case of errors_@return ModelAndView object with the name of the view and the required_model data, or <code>null</code> if the request has been handled directly;ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception_;use,the,given,handler,to,handle,this,request,the,workflow,that,is,required,may,vary,widely,param,request,current,http,request,param,response,current,http,response,param,handler,handler,to,use,this,object,must,have,previously,been,passed,to,the,code,supports,code,method,of,this,interface,which,must,have,returned,code,true,code,throws,exception,in,case,of,errors,return,model,and,view,object,with,the,name,of,the,view,and,the,required,model,data,or,code,null,code,if,the,request,has,been,handled,directly;model,and,view,handle,http,servlet,request,request,http,servlet,response,response,object,handler,throws,exception
HandlerAdapter -> ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception_;1356735495;Use the given handler to handle this request._The workflow that is required may vary widely._@param request current HTTP request_@param response current HTTP response_@param handler handler to use. This object must have previously been passed_to the {@code supports} method of this interface, which must have_returned {@code true}._@throws Exception in case of errors_@return ModelAndView object with the name of the view and the required_model data, or {@code null} if the request has been handled directly;ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception_;use,the,given,handler,to,handle,this,request,the,workflow,that,is,required,may,vary,widely,param,request,current,http,request,param,response,current,http,response,param,handler,handler,to,use,this,object,must,have,previously,been,passed,to,the,code,supports,method,of,this,interface,which,must,have,returned,code,true,throws,exception,in,case,of,errors,return,model,and,view,object,with,the,name,of,the,view,and,the,required,model,data,or,code,null,if,the,request,has,been,handled,directly;model,and,view,handle,http,servlet,request,request,http,servlet,response,response,object,handler,throws,exception
HandlerAdapter -> ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception_;1374115410;Use the given handler to handle this request._The workflow that is required may vary widely._@param request current HTTP request_@param response current HTTP response_@param handler handler to use. This object must have previously been passed_to the {@code supports} method of this interface, which must have_returned {@code true}._@throws Exception in case of errors_@return ModelAndView object with the name of the view and the required_model data, or {@code null} if the request has been handled directly;ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception_;use,the,given,handler,to,handle,this,request,the,workflow,that,is,required,may,vary,widely,param,request,current,http,request,param,response,current,http,response,param,handler,handler,to,use,this,object,must,have,previously,been,passed,to,the,code,supports,method,of,this,interface,which,must,have,returned,code,true,throws,exception,in,case,of,errors,return,model,and,view,object,with,the,name,of,the,view,and,the,required,model,data,or,code,null,if,the,request,has,been,handled,directly;model,and,view,handle,http,servlet,request,request,http,servlet,response,response,object,handler,throws,exception
HandlerAdapter -> boolean supports(Object handler)_;1328020251;Given a handler instance, return whether or not this HandlerAdapter can_support it. Typical HandlerAdapters will base the decision on the handler_type. HandlerAdapters will usually only support one handler type each._<p>A typical implementation:_<p><code>_return (handler instanceof MyHandler)__</code>_@param handler handler object to check_@return whether or not this object can use the given handler;boolean supports(Object handler)_;given,a,handler,instance,return,whether,or,not,this,handler,adapter,can,support,it,typical,handler,adapters,will,base,the,decision,on,the,handler,type,handler,adapters,will,usually,only,support,one,handler,type,each,p,a,typical,implementation,p,code,return,handler,instanceof,my,handler,code,param,handler,handler,object,to,check,return,whether,or,not,this,object,can,use,the,given,handler;boolean,supports,object,handler
HandlerAdapter -> boolean supports(Object handler)_;1356735495;Given a handler instance, return whether or not this HandlerAdapter can_support it. Typical HandlerAdapters will base the decision on the handler_type. HandlerAdapters will usually only support one handler type each._<p>A typical implementation:_<p>{@code_return (handler instanceof MyHandler)___@param handler handler object to check_@return whether or not this object can use the given handler;boolean supports(Object handler)_;given,a,handler,instance,return,whether,or,not,this,handler,adapter,can,support,it,typical,handler,adapters,will,base,the,decision,on,the,handler,type,handler,adapters,will,usually,only,support,one,handler,type,each,p,a,typical,implementation,p,code,return,handler,instanceof,my,handler,param,handler,handler,object,to,check,return,whether,or,not,this,object,can,use,the,given,handler;boolean,supports,object,handler
HandlerAdapter -> boolean supports(Object handler)_;1374115410;Given a handler instance, return whether or not this {@code HandlerAdapter}_can support it. Typical HandlerAdapters will base the decision on the handler_type. HandlerAdapters will usually only support one handler type each._<p>A typical implementation:_<p>{@code_return (handler instanceof MyHandler)___@param handler handler object to check_@return whether or not this object can use the given handler;boolean supports(Object handler)_;given,a,handler,instance,return,whether,or,not,this,code,handler,adapter,can,support,it,typical,handler,adapters,will,base,the,decision,on,the,handler,type,handler,adapters,will,usually,only,support,one,handler,type,each,p,a,typical,implementation,p,code,return,handler,instanceof,my,handler,param,handler,handler,object,to,check,return,whether,or,not,this,object,can,use,the,given,handler;boolean,supports,object,handler
HandlerAdapter -> boolean supports(Object handler)_;1495868221;Given a handler instance, return whether or not this {@code HandlerAdapter}_can support it. Typical HandlerAdapters will base the decision on the handler_type. HandlerAdapters will usually only support one handler type each._<p>A typical implementation:_<p>{@code_return (handler instanceof MyHandler)___@param handler handler object to check_@return whether or not this object can use the given handler;boolean supports(Object handler)_;given,a,handler,instance,return,whether,or,not,this,code,handler,adapter,can,support,it,typical,handler,adapters,will,base,the,decision,on,the,handler,type,handler,adapters,will,usually,only,support,one,handler,type,each,p,a,typical,implementation,p,code,return,handler,instanceof,my,handler,param,handler,handler,object,to,check,return,whether,or,not,this,object,can,use,the,given,handler;boolean,supports,object,handler
HandlerAdapter -> boolean supports(Object handler)_;1530174524;Given a handler instance, return whether or not this {@code HandlerAdapter}_can support it. Typical HandlerAdapters will base the decision on the handler_type. HandlerAdapters will usually only support one handler type each._<p>A typical implementation:_<p>{@code_return (handler instanceof MyHandler)___@param handler handler object to check_@return whether or not this object can use the given handler;boolean supports(Object handler)_;given,a,handler,instance,return,whether,or,not,this,code,handler,adapter,can,support,it,typical,handler,adapters,will,base,the,decision,on,the,handler,type,handler,adapters,will,usually,only,support,one,handler,type,each,p,a,typical,implementation,p,code,return,handler,instanceof,my,handler,param,handler,handler,object,to,check,return,whether,or,not,this,object,can,use,the,given,handler;boolean,supports,object,handler
