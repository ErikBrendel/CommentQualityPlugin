commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * Set JavaScript escaping for this tag, as boolean value.  * Default is "false".  */ ;/**  * Set JavaScript escaping for this tag, as boolean value.  * Default is "false".  */ public void setJavaScriptEscape(boolean javaScriptEscape) throws JspException {     this.javaScriptEscape = javaScriptEscape. }
false;protected;0;5;;@Override protected int doStartTagInternal() {     // do nothing     return EVAL_BODY_BUFFERED. }
false;public;0;4;;@Override public void doInitBody() { // do nothing }
false;public;1;4;;@Override public void setBodyContent(BodyContent bodyContent) {     this.bodyContent = bodyContent. }
false;public;0;14;;@Override public int doAfterBody() throws JspException {     try {         String content = readBodyContent().         // HTML and/or JavaScript escape, if demanded         content = htmlEscape(content).         content = (this.javaScriptEscape ? JavaScriptUtils.javaScriptEscape(content) : content).         writeBodyContent(content).     } catch (IOException ex) {         throw new JspException("Could not write escaped body", ex).     }     return (SKIP_BODY). }
true;protected;0;4;/**  * Read the unescaped body content from the page.  * @return the original content  * @throws IOException if reading failed  */ ;/**  * Read the unescaped body content from the page.  * @return the original content  * @throws IOException if reading failed  */ protected String readBodyContent() throws IOException {     Assert.state(this.bodyContent != null, "No BodyContent set").     return this.bodyContent.getString(). }
true;protected;1;4;/**  * Write the escaped body content to the page.  * <p>Can be overridden in subclasses, e.g. for testing purposes.  * @param content the content to write  * @throws IOException if writing failed  */ ;/**  * Write the escaped body content to the page.  * <p>Can be overridden in subclasses, e.g. for testing purposes.  * @param content the content to write  * @throws IOException if writing failed  */ protected void writeBodyContent(String content) throws IOException {     Assert.state(this.bodyContent != null, "No BodyContent set").     this.bodyContent.getEnclosingWriter().print(content). }
