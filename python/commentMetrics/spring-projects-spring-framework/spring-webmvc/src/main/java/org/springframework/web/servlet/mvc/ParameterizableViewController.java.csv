# id;timestamp;commentText;codeText;commentWords;codeWords
ParameterizableViewController -> public String getViewName();1328020251;Return the name of the view to delegate to.;public String getViewName() {_		return this.viewName__	};return,the,name,of,the,view,to,delegate,to;public,string,get,view,name,return,this,view,name
ParameterizableViewController -> public String getViewName();1356735495;Return the name of the view to delegate to.;public String getViewName() {_		return this.viewName__	};return,the,name,of,the,view,to,delegate,to;public,string,get,view,name,return,this,view,name
ParameterizableViewController -> public String getViewName();1405652648;Return the name of the view to delegate to, or {@code null} if using a_View instance.;public String getViewName() {_		return (this.view instanceof String ? (String) this.view : null)__	};return,the,name,of,the,view,to,delegate,to,or,code,null,if,using,a,view,instance;public,string,get,view,name,return,this,view,instanceof,string,string,this,view,null
ParameterizableViewController -> public String getViewName();1409790625;Return the name of the view to delegate to, or {@code null} if using a_View instance.;public String getViewName() {_		return (this.view instanceof String ? (String) this.view : null)__	};return,the,name,of,the,view,to,delegate,to,or,code,null,if,using,a,view,instance;public,string,get,view,name,return,this,view,instanceof,string,string,this,view,null
ParameterizableViewController -> public String getViewName();1453729744;Return the name of the view to delegate to, or {@code null} if using a_View instance.;public String getViewName() {_		return (this.view instanceof String ? (String) this.view : null)__	};return,the,name,of,the,view,to,delegate,to,or,code,null,if,using,a,view,instance;public,string,get,view,name,return,this,view,instanceof,string,string,this,view,null
ParameterizableViewController -> public void setViewName(@Nullable String viewName);1500448076;Set a view name for the ModelAndView to return, to be resolved by the_DispatcherServlet via a ViewResolver. Will override any pre-existing_view name or View.;public void setViewName(@Nullable String viewName) {_		this.view = viewName__	};set,a,view,name,for,the,model,and,view,to,return,to,be,resolved,by,the,dispatcher,servlet,via,a,view,resolver,will,override,any,pre,existing,view,name,or,view;public,void,set,view,name,nullable,string,view,name,this,view,view,name
ParameterizableViewController -> public void setViewName(@Nullable String viewName);1529361191;Set a view name for the ModelAndView to return, to be resolved by the_DispatcherServlet via a ViewResolver. Will override any pre-existing_view name or View.;public void setViewName(@Nullable String viewName) {_		this.view = viewName__	};set,a,view,name,for,the,model,and,view,to,return,to,be,resolved,by,the,dispatcher,servlet,via,a,view,resolver,will,override,any,pre,existing,view,name,or,view;public,void,set,view,name,nullable,string,view,name,this,view,view,name
ParameterizableViewController -> public boolean isStatusOnly();1405652648;Whether the request is fully handled within the controller.;public boolean isStatusOnly() {_		return this.statusOnly__	};whether,the,request,is,fully,handled,within,the,controller;public,boolean,is,status,only,return,this,status,only
ParameterizableViewController -> public boolean isStatusOnly();1409790625;Whether the request is fully handled within the controller.;public boolean isStatusOnly() {_		return this.statusOnly__	};whether,the,request,is,fully,handled,within,the,controller;public,boolean,is,status,only,return,this,status,only
ParameterizableViewController -> public boolean isStatusOnly();1453729744;Whether the request is fully handled within the controller.;public boolean isStatusOnly() {_		return this.statusOnly__	};whether,the,request,is,fully,handled,within,the,controller;public,boolean,is,status,only,return,this,status,only
ParameterizableViewController -> public boolean isStatusOnly();1495868221;Whether the request is fully handled within the controller.;public boolean isStatusOnly() {_		return this.statusOnly__	};whether,the,request,is,fully,handled,within,the,controller;public,boolean,is,status,only,return,this,status,only
ParameterizableViewController -> public boolean isStatusOnly();1496837955;Whether the request is fully handled within the controller.;public boolean isStatusOnly() {_		return this.statusOnly__	};whether,the,request,is,fully,handled,within,the,controller;public,boolean,is,status,only,return,this,status,only
ParameterizableViewController -> public boolean isStatusOnly();1500448076;Whether the request is fully handled within the controller.;public boolean isStatusOnly() {_		return this.statusOnly__	};whether,the,request,is,fully,handled,within,the,controller;public,boolean,is,status,only,return,this,status,only
ParameterizableViewController -> public boolean isStatusOnly();1529361191;Whether the request is fully handled within the controller.;public boolean isStatusOnly() {_		return this.statusOnly__	};whether,the,request,is,fully,handled,within,the,controller;public,boolean,is,status,only,return,this,status,only
ParameterizableViewController -> @Override 	protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) 			throws Exception;1328020251;Return a ModelAndView object with the specified view name._The content of {@link RequestContextUtils#getInputFlashMap} is also added to the model._@see #getViewName();@Override_	protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response)_			throws Exception {_		return new ModelAndView(getViewName(), RequestContextUtils.getInputFlashMap(request))__	};return,a,model,and,view,object,with,the,specified,view,name,the,content,of,link,request,context,utils,get,input,flash,map,is,also,added,to,the,model,see,get,view,name;override,protected,model,and,view,handle,request,internal,http,servlet,request,request,http,servlet,response,response,throws,exception,return,new,model,and,view,get,view,name,request,context,utils,get,input,flash,map,request
ParameterizableViewController -> @Override 	protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) 			throws Exception;1356735495;Return a ModelAndView object with the specified view name._The content of {@link RequestContextUtils#getInputFlashMap} is also added to the model._@see #getViewName();@Override_	protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response)_			throws Exception {_		return new ModelAndView(getViewName(), RequestContextUtils.getInputFlashMap(request))__	};return,a,model,and,view,object,with,the,specified,view,name,the,content,of,link,request,context,utils,get,input,flash,map,is,also,added,to,the,model,see,get,view,name;override,protected,model,and,view,handle,request,internal,http,servlet,request,request,http,servlet,response,response,throws,exception,return,new,model,and,view,get,view,name,request,context,utils,get,input,flash,map,request
ParameterizableViewController -> @Override 	protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) 			throws Exception;1405652648;Return a ModelAndView object with the specified view name.__<p>The content of the {@link RequestContextUtils#getInputFlashMap_"input" FlashMap} is also added to the model.__@see #getViewName();@Override_	protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response)_			throws Exception {__		String viewName = getViewName()___		if (getStatusCode() != null) {_			if (getStatusCode().is3xxRedirection()) {_				request.setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, getStatusCode())__				viewName = (viewName != null && !viewName.startsWith("redirect:") ? "redirect:" + viewName : viewName)__			}_			else {_				response.setStatus(getStatusCode().value())__				if (isStatusOnly() || (getStatusCode().equals(HttpStatus.NO_CONTENT) && getViewName() == null)) {_					return null__				}_			}_		}__		ModelAndView modelAndView = new ModelAndView()__		modelAndView.addAllObjects(RequestContextUtils.getInputFlashMap(request))___		if (getViewName() != null) {_			modelAndView.setViewName(viewName)__		}_		else {_			modelAndView.setView(getView())__		}__		return (isStatusOnly() ? null : modelAndView)__	};return,a,model,and,view,object,with,the,specified,view,name,p,the,content,of,the,link,request,context,utils,get,input,flash,map,input,flash,map,is,also,added,to,the,model,see,get,view,name;override,protected,model,and,view,handle,request,internal,http,servlet,request,request,http,servlet,response,response,throws,exception,string,view,name,get,view,name,if,get,status,code,null,if,get,status,code,is3xx,redirection,request,set,attribute,view,get,status,code,view,name,view,name,null,view,name,starts,with,redirect,redirect,view,name,view,name,else,response,set,status,get,status,code,value,if,is,status,only,get,status,code,equals,http,status,get,view,name,null,return,null,model,and,view,model,and,view,new,model,and,view,model,and,view,add,all,objects,request,context,utils,get,input,flash,map,request,if,get,view,name,null,model,and,view,set,view,name,view,name,else,model,and,view,set,view,get,view,return,is,status,only,null,model,and,view
ParameterizableViewController -> @Override 	protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) 			throws Exception;1409790625;Return a ModelAndView object with the specified view name._<p>The content of the {@link RequestContextUtils#getInputFlashMap_"input" FlashMap} is also added to the model._@see #getViewName();@Override_	protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response)_			throws Exception {__		String viewName = getViewName()___		if (getStatusCode() != null) {_			if (getStatusCode().is3xxRedirection()) {_				request.setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, getStatusCode())__				viewName = (viewName != null && !viewName.startsWith("redirect:") ? "redirect:" + viewName : viewName)__			}_			else {_				response.setStatus(getStatusCode().value())__				if (isStatusOnly() || (getStatusCode().equals(HttpStatus.NO_CONTENT) && getViewName() == null)) {_					return null__				}_			}_		}__		ModelAndView modelAndView = new ModelAndView()__		modelAndView.addAllObjects(RequestContextUtils.getInputFlashMap(request))___		if (getViewName() != null) {_			modelAndView.setViewName(viewName)__		}_		else {_			modelAndView.setView(getView())__		}__		return (isStatusOnly() ? null : modelAndView)__	};return,a,model,and,view,object,with,the,specified,view,name,p,the,content,of,the,link,request,context,utils,get,input,flash,map,input,flash,map,is,also,added,to,the,model,see,get,view,name;override,protected,model,and,view,handle,request,internal,http,servlet,request,request,http,servlet,response,response,throws,exception,string,view,name,get,view,name,if,get,status,code,null,if,get,status,code,is3xx,redirection,request,set,attribute,view,get,status,code,view,name,view,name,null,view,name,starts,with,redirect,redirect,view,name,view,name,else,response,set,status,get,status,code,value,if,is,status,only,get,status,code,equals,http,status,get,view,name,null,return,null,model,and,view,model,and,view,new,model,and,view,model,and,view,add,all,objects,request,context,utils,get,input,flash,map,request,if,get,view,name,null,model,and,view,set,view,name,view,name,else,model,and,view,set,view,get,view,return,is,status,only,null,model,and,view
ParameterizableViewController -> @Override 	protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) 			throws Exception;1453729744;Return a ModelAndView object with the specified view name._<p>The content of the {@link RequestContextUtils#getInputFlashMap_"input" FlashMap} is also added to the model._@see #getViewName();@Override_	protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response)_			throws Exception {__		String viewName = getViewName()___		if (getStatusCode() != null) {_			if (getStatusCode().is3xxRedirection()) {_				request.setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, getStatusCode())__				viewName = (viewName != null && !viewName.startsWith("redirect:") ? "redirect:" + viewName : viewName)__			}_			else {_				response.setStatus(getStatusCode().value())__				if (isStatusOnly() || (getStatusCode().equals(HttpStatus.NO_CONTENT) && getViewName() == null)) {_					return null__				}_			}_		}__		ModelAndView modelAndView = new ModelAndView()__		modelAndView.addAllObjects(RequestContextUtils.getInputFlashMap(request))___		if (getViewName() != null) {_			modelAndView.setViewName(viewName)__		}_		else {_			modelAndView.setView(getView())__		}__		return (isStatusOnly() ? null : modelAndView)__	};return,a,model,and,view,object,with,the,specified,view,name,p,the,content,of,the,link,request,context,utils,get,input,flash,map,input,flash,map,is,also,added,to,the,model,see,get,view,name;override,protected,model,and,view,handle,request,internal,http,servlet,request,request,http,servlet,response,response,throws,exception,string,view,name,get,view,name,if,get,status,code,null,if,get,status,code,is3xx,redirection,request,set,attribute,view,get,status,code,view,name,view,name,null,view,name,starts,with,redirect,redirect,view,name,view,name,else,response,set,status,get,status,code,value,if,is,status,only,get,status,code,equals,http,status,get,view,name,null,return,null,model,and,view,model,and,view,new,model,and,view,model,and,view,add,all,objects,request,context,utils,get,input,flash,map,request,if,get,view,name,null,model,and,view,set,view,name,view,name,else,model,and,view,set,view,get,view,return,is,status,only,null,model,and,view
ParameterizableViewController -> @Override 	protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) 			throws Exception;1495868221;Return a ModelAndView object with the specified view name._<p>The content of the {@link RequestContextUtils#getInputFlashMap_"input" FlashMap} is also added to the model._@see #getViewName();@Override_	protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response)_			throws Exception {__		String viewName = getViewName()___		if (getStatusCode() != null) {_			if (getStatusCode().is3xxRedirection()) {_				request.setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, getStatusCode())__				viewName = (viewName != null && !viewName.startsWith("redirect:") ? "redirect:" + viewName : viewName)__			}_			else {_				response.setStatus(getStatusCode().value())__				if (isStatusOnly() || (getStatusCode().equals(HttpStatus.NO_CONTENT) && getViewName() == null)) {_					return null__				}_			}_		}__		ModelAndView modelAndView = new ModelAndView()__		modelAndView.addAllObjects(RequestContextUtils.getInputFlashMap(request))___		if (getViewName() != null) {_			modelAndView.setViewName(viewName)__		}_		else {_			modelAndView.setView(getView())__		}__		return (isStatusOnly() ? null : modelAndView)__	};return,a,model,and,view,object,with,the,specified,view,name,p,the,content,of,the,link,request,context,utils,get,input,flash,map,input,flash,map,is,also,added,to,the,model,see,get,view,name;override,protected,model,and,view,handle,request,internal,http,servlet,request,request,http,servlet,response,response,throws,exception,string,view,name,get,view,name,if,get,status,code,null,if,get,status,code,is3xx,redirection,request,set,attribute,view,get,status,code,view,name,view,name,null,view,name,starts,with,redirect,redirect,view,name,view,name,else,response,set,status,get,status,code,value,if,is,status,only,get,status,code,equals,http,status,get,view,name,null,return,null,model,and,view,model,and,view,new,model,and,view,model,and,view,add,all,objects,request,context,utils,get,input,flash,map,request,if,get,view,name,null,model,and,view,set,view,name,view,name,else,model,and,view,set,view,get,view,return,is,status,only,null,model,and,view
ParameterizableViewController -> @Override 	protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) 			throws Exception;1496837955;Return a ModelAndView object with the specified view name._<p>The content of the {@link RequestContextUtils#getInputFlashMap_"input" FlashMap} is also added to the model._@see #getViewName();@Override_	protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response)_			throws Exception {__		String viewName = getViewName()___		if (getStatusCode() != null) {_			if (getStatusCode().is3xxRedirection()) {_				request.setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, getStatusCode())__				viewName = (viewName != null && !viewName.startsWith("redirect:") ? "redirect:" + viewName : viewName)__			}_			else {_				response.setStatus(getStatusCode().value())__				if (isStatusOnly() || (getStatusCode().equals(HttpStatus.NO_CONTENT) && getViewName() == null)) {_					return null__				}_			}_		}__		ModelAndView modelAndView = new ModelAndView()__		modelAndView.addAllObjects(RequestContextUtils.getInputFlashMap(request))___		if (getViewName() != null) {_			modelAndView.setViewName(viewName)__		}_		else {_			modelAndView.setView(getView())__		}__		return (isStatusOnly() ? null : modelAndView)__	};return,a,model,and,view,object,with,the,specified,view,name,p,the,content,of,the,link,request,context,utils,get,input,flash,map,input,flash,map,is,also,added,to,the,model,see,get,view,name;override,protected,model,and,view,handle,request,internal,http,servlet,request,request,http,servlet,response,response,throws,exception,string,view,name,get,view,name,if,get,status,code,null,if,get,status,code,is3xx,redirection,request,set,attribute,view,get,status,code,view,name,view,name,null,view,name,starts,with,redirect,redirect,view,name,view,name,else,response,set,status,get,status,code,value,if,is,status,only,get,status,code,equals,http,status,get,view,name,null,return,null,model,and,view,model,and,view,new,model,and,view,model,and,view,add,all,objects,request,context,utils,get,input,flash,map,request,if,get,view,name,null,model,and,view,set,view,name,view,name,else,model,and,view,set,view,get,view,return,is,status,only,null,model,and,view
ParameterizableViewController -> @Override 	protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) 			throws Exception;1500448076;Return a ModelAndView object with the specified view name._<p>The content of the {@link RequestContextUtils#getInputFlashMap_"input" FlashMap} is also added to the model._@see #getViewName();@Override_	protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response)_			throws Exception {__		String viewName = getViewName()___		if (getStatusCode() != null) {_			if (getStatusCode().is3xxRedirection()) {_				request.setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, getStatusCode())__				viewName = (viewName != null && !viewName.startsWith("redirect:") ? "redirect:" + viewName : viewName)__			}_			else {_				response.setStatus(getStatusCode().value())__				if (isStatusOnly() || (getStatusCode().equals(HttpStatus.NO_CONTENT) && getViewName() == null)) {_					return null__				}_			}_		}__		ModelAndView modelAndView = new ModelAndView()__		modelAndView.addAllObjects(RequestContextUtils.getInputFlashMap(request))___		if (getViewName() != null) {_			modelAndView.setViewName(viewName)__		}_		else {_			modelAndView.setView(getView())__		}__		return (isStatusOnly() ? null : modelAndView)__	};return,a,model,and,view,object,with,the,specified,view,name,p,the,content,of,the,link,request,context,utils,get,input,flash,map,input,flash,map,is,also,added,to,the,model,see,get,view,name;override,protected,model,and,view,handle,request,internal,http,servlet,request,request,http,servlet,response,response,throws,exception,string,view,name,get,view,name,if,get,status,code,null,if,get,status,code,is3xx,redirection,request,set,attribute,view,get,status,code,view,name,view,name,null,view,name,starts,with,redirect,redirect,view,name,view,name,else,response,set,status,get,status,code,value,if,is,status,only,get,status,code,equals,http,status,get,view,name,null,return,null,model,and,view,model,and,view,new,model,and,view,model,and,view,add,all,objects,request,context,utils,get,input,flash,map,request,if,get,view,name,null,model,and,view,set,view,name,view,name,else,model,and,view,set,view,get,view,return,is,status,only,null,model,and,view
ParameterizableViewController -> @Override 	protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) 			throws Exception;1529361191;Return a ModelAndView object with the specified view name._<p>The content of the {@link RequestContextUtils#getInputFlashMap_"input" FlashMap} is also added to the model._@see #getViewName();@Override_	protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response)_			throws Exception {__		String viewName = getViewName()___		if (getStatusCode() != null) {_			if (getStatusCode().is3xxRedirection()) {_				request.setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, getStatusCode())__			}_			else {_				response.setStatus(getStatusCode().value())__				if (getStatusCode().equals(HttpStatus.NO_CONTENT) && viewName == null) {_					return null__				}_			}_		}__		if (isStatusOnly()) {_			return null__		}__		ModelAndView modelAndView = new ModelAndView()__		modelAndView.addAllObjects(RequestContextUtils.getInputFlashMap(request))__		if (viewName != null) {_			modelAndView.setViewName(viewName)__		}_		else {_			modelAndView.setView(getView())__		}_		return modelAndView__	};return,a,model,and,view,object,with,the,specified,view,name,p,the,content,of,the,link,request,context,utils,get,input,flash,map,input,flash,map,is,also,added,to,the,model,see,get,view,name;override,protected,model,and,view,handle,request,internal,http,servlet,request,request,http,servlet,response,response,throws,exception,string,view,name,get,view,name,if,get,status,code,null,if,get,status,code,is3xx,redirection,request,set,attribute,view,get,status,code,else,response,set,status,get,status,code,value,if,get,status,code,equals,http,status,view,name,null,return,null,if,is,status,only,return,null,model,and,view,model,and,view,new,model,and,view,model,and,view,add,all,objects,request,context,utils,get,input,flash,map,request,if,view,name,null,model,and,view,set,view,name,view,name,else,model,and,view,set,view,get,view,return,model,and,view
ParameterizableViewController -> public void setStatusCode(@Nullable HttpStatus statusCode);1500448076;Configure the HTTP status code that this controller should set on the_response._<p>When a "redirect:" prefixed view name is configured, there is no need_to set this property since RedirectView will do that. However this property_may still be used to override the 3xx status code of {@code RedirectView}._For full control over redirecting provide a {@code RedirectView} instance._<p>If the status code is 204 and no view is configured, the request is_fully handled within the controller._@since 4.1;public void setStatusCode(@Nullable HttpStatus statusCode) {_		this.statusCode = statusCode__	};configure,the,http,status,code,that,this,controller,should,set,on,the,response,p,when,a,redirect,prefixed,view,name,is,configured,there,is,no,need,to,set,this,property,since,redirect,view,will,do,that,however,this,property,may,still,be,used,to,override,the,3xx,status,code,of,code,redirect,view,for,full,control,over,redirecting,provide,a,code,redirect,view,instance,p,if,the,status,code,is,204,and,no,view,is,configured,the,request,is,fully,handled,within,the,controller,since,4,1;public,void,set,status,code,nullable,http,status,status,code,this,status,code,status,code
ParameterizableViewController -> public void setStatusCode(@Nullable HttpStatus statusCode);1529361191;Configure the HTTP status code that this controller should set on the_response._<p>When a "redirect:" prefixed view name is configured, there is no need_to set this property since RedirectView will do that. However this property_may still be used to override the 3xx status code of {@code RedirectView}._For full control over redirecting provide a {@code RedirectView} instance._<p>If the status code is 204 and no view is configured, the request is_fully handled within the controller._@since 4.1;public void setStatusCode(@Nullable HttpStatus statusCode) {_		this.statusCode = statusCode__	};configure,the,http,status,code,that,this,controller,should,set,on,the,response,p,when,a,redirect,prefixed,view,name,is,configured,there,is,no,need,to,set,this,property,since,redirect,view,will,do,that,however,this,property,may,still,be,used,to,override,the,3xx,status,code,of,code,redirect,view,for,full,control,over,redirecting,provide,a,code,redirect,view,instance,p,if,the,status,code,is,204,and,no,view,is,configured,the,request,is,fully,handled,within,the,controller,since,4,1;public,void,set,status,code,nullable,http,status,status,code,this,status,code,status,code
ParameterizableViewController -> public void setStatusCode(HttpStatus statusCode);1405652648;Configure the HTTP status code that this controller should set on the_response.__<p>When a "redirect:" prefixed view name is configured, there is no need_to set this property since RedirectView will do that. However this property_may still be used to override the 3xx status code of {@code RedirectView}._For full control over redirecting provide a {@code RedirectView} instance.__<p>If the status code is 204 and no view is configured, the request is_fully handled within the controller.__@since 4.1;public void setStatusCode(HttpStatus statusCode) {_		this.statusCode = statusCode__	};configure,the,http,status,code,that,this,controller,should,set,on,the,response,p,when,a,redirect,prefixed,view,name,is,configured,there,is,no,need,to,set,this,property,since,redirect,view,will,do,that,however,this,property,may,still,be,used,to,override,the,3xx,status,code,of,code,redirect,view,for,full,control,over,redirecting,provide,a,code,redirect,view,instance,p,if,the,status,code,is,204,and,no,view,is,configured,the,request,is,fully,handled,within,the,controller,since,4,1;public,void,set,status,code,http,status,status,code,this,status,code,status,code
ParameterizableViewController -> public void setStatusCode(HttpStatus statusCode);1409790625;Configure the HTTP status code that this controller should set on the_response._<p>When a "redirect:" prefixed view name is configured, there is no need_to set this property since RedirectView will do that. However this property_may still be used to override the 3xx status code of {@code RedirectView}._For full control over redirecting provide a {@code RedirectView} instance._<p>If the status code is 204 and no view is configured, the request is_fully handled within the controller._@since 4.1;public void setStatusCode(HttpStatus statusCode) {_		this.statusCode = statusCode__	};configure,the,http,status,code,that,this,controller,should,set,on,the,response,p,when,a,redirect,prefixed,view,name,is,configured,there,is,no,need,to,set,this,property,since,redirect,view,will,do,that,however,this,property,may,still,be,used,to,override,the,3xx,status,code,of,code,redirect,view,for,full,control,over,redirecting,provide,a,code,redirect,view,instance,p,if,the,status,code,is,204,and,no,view,is,configured,the,request,is,fully,handled,within,the,controller,since,4,1;public,void,set,status,code,http,status,status,code,this,status,code,status,code
ParameterizableViewController -> public void setStatusCode(HttpStatus statusCode);1453729744;Configure the HTTP status code that this controller should set on the_response._<p>When a "redirect:" prefixed view name is configured, there is no need_to set this property since RedirectView will do that. However this property_may still be used to override the 3xx status code of {@code RedirectView}._For full control over redirecting provide a {@code RedirectView} instance._<p>If the status code is 204 and no view is configured, the request is_fully handled within the controller._@since 4.1;public void setStatusCode(HttpStatus statusCode) {_		this.statusCode = statusCode__	};configure,the,http,status,code,that,this,controller,should,set,on,the,response,p,when,a,redirect,prefixed,view,name,is,configured,there,is,no,need,to,set,this,property,since,redirect,view,will,do,that,however,this,property,may,still,be,used,to,override,the,3xx,status,code,of,code,redirect,view,for,full,control,over,redirecting,provide,a,code,redirect,view,instance,p,if,the,status,code,is,204,and,no,view,is,configured,the,request,is,fully,handled,within,the,controller,since,4,1;public,void,set,status,code,http,status,status,code,this,status,code,status,code
ParameterizableViewController -> public void setStatusCode(HttpStatus statusCode);1495868221;Configure the HTTP status code that this controller should set on the_response._<p>When a "redirect:" prefixed view name is configured, there is no need_to set this property since RedirectView will do that. However this property_may still be used to override the 3xx status code of {@code RedirectView}._For full control over redirecting provide a {@code RedirectView} instance._<p>If the status code is 204 and no view is configured, the request is_fully handled within the controller._@since 4.1;public void setStatusCode(HttpStatus statusCode) {_		this.statusCode = statusCode__	};configure,the,http,status,code,that,this,controller,should,set,on,the,response,p,when,a,redirect,prefixed,view,name,is,configured,there,is,no,need,to,set,this,property,since,redirect,view,will,do,that,however,this,property,may,still,be,used,to,override,the,3xx,status,code,of,code,redirect,view,for,full,control,over,redirecting,provide,a,code,redirect,view,instance,p,if,the,status,code,is,204,and,no,view,is,configured,the,request,is,fully,handled,within,the,controller,since,4,1;public,void,set,status,code,http,status,status,code,this,status,code,status,code
ParameterizableViewController -> public void setStatusCode(HttpStatus statusCode);1496837955;Configure the HTTP status code that this controller should set on the_response._<p>When a "redirect:" prefixed view name is configured, there is no need_to set this property since RedirectView will do that. However this property_may still be used to override the 3xx status code of {@code RedirectView}._For full control over redirecting provide a {@code RedirectView} instance._<p>If the status code is 204 and no view is configured, the request is_fully handled within the controller._@since 4.1;public void setStatusCode(HttpStatus statusCode) {_		this.statusCode = statusCode__	};configure,the,http,status,code,that,this,controller,should,set,on,the,response,p,when,a,redirect,prefixed,view,name,is,configured,there,is,no,need,to,set,this,property,since,redirect,view,will,do,that,however,this,property,may,still,be,used,to,override,the,3xx,status,code,of,code,redirect,view,for,full,control,over,redirecting,provide,a,code,redirect,view,instance,p,if,the,status,code,is,204,and,no,view,is,configured,the,request,is,fully,handled,within,the,controller,since,4,1;public,void,set,status,code,http,status,status,code,this,status,code,status,code
ParameterizableViewController -> public HttpStatus getStatusCode();1405652648;Return the configured HTTP status code or {@code null}._@since 4.1;public HttpStatus getStatusCode() {_		return this.statusCode__	};return,the,configured,http,status,code,or,code,null,since,4,1;public,http,status,get,status,code,return,this,status,code
ParameterizableViewController -> public HttpStatus getStatusCode();1409790625;Return the configured HTTP status code or {@code null}._@since 4.1;public HttpStatus getStatusCode() {_		return this.statusCode__	};return,the,configured,http,status,code,or,code,null,since,4,1;public,http,status,get,status,code,return,this,status,code
ParameterizableViewController -> public HttpStatus getStatusCode();1453729744;Return the configured HTTP status code or {@code null}._@since 4.1;public HttpStatus getStatusCode() {_		return this.statusCode__	};return,the,configured,http,status,code,or,code,null,since,4,1;public,http,status,get,status,code,return,this,status,code
ParameterizableViewController -> public void setViewName(String viewName);1328020251;Set the name of the view to delegate to.;public void setViewName(String viewName) {_		this.viewName = viewName__	};set,the,name,of,the,view,to,delegate,to;public,void,set,view,name,string,view,name,this,view,name,view,name
ParameterizableViewController -> public void setViewName(String viewName);1356735495;Set the name of the view to delegate to.;public void setViewName(String viewName) {_		this.viewName = viewName__	};set,the,name,of,the,view,to,delegate,to;public,void,set,view,name,string,view,name,this,view,name,view,name
ParameterizableViewController -> public void setViewName(String viewName);1405652648;Set a view name for the ModelAndView to return, to be resolved by the_DispatcherServlet via a ViewResolver. Will override any pre-existing_view name or View.;public void setViewName(String viewName) {_		this.view = viewName__	};set,a,view,name,for,the,model,and,view,to,return,to,be,resolved,by,the,dispatcher,servlet,via,a,view,resolver,will,override,any,pre,existing,view,name,or,view;public,void,set,view,name,string,view,name,this,view,view,name
ParameterizableViewController -> public void setViewName(String viewName);1409790625;Set a view name for the ModelAndView to return, to be resolved by the_DispatcherServlet via a ViewResolver. Will override any pre-existing_view name or View.;public void setViewName(String viewName) {_		this.view = viewName__	};set,a,view,name,for,the,model,and,view,to,return,to,be,resolved,by,the,dispatcher,servlet,via,a,view,resolver,will,override,any,pre,existing,view,name,or,view;public,void,set,view,name,string,view,name,this,view,view,name
ParameterizableViewController -> public void setViewName(String viewName);1453729744;Set a view name for the ModelAndView to return, to be resolved by the_DispatcherServlet via a ViewResolver. Will override any pre-existing_view name or View.;public void setViewName(String viewName) {_		this.view = viewName__	};set,a,view,name,for,the,model,and,view,to,return,to,be,resolved,by,the,dispatcher,servlet,via,a,view,resolver,will,override,any,pre,existing,view,name,or,view;public,void,set,view,name,string,view,name,this,view,view,name
ParameterizableViewController -> public void setViewName(String viewName);1495868221;Set a view name for the ModelAndView to return, to be resolved by the_DispatcherServlet via a ViewResolver. Will override any pre-existing_view name or View.;public void setViewName(String viewName) {_		this.view = viewName__	};set,a,view,name,for,the,model,and,view,to,return,to,be,resolved,by,the,dispatcher,servlet,via,a,view,resolver,will,override,any,pre,existing,view,name,or,view;public,void,set,view,name,string,view,name,this,view,view,name
ParameterizableViewController -> public void setViewName(String viewName);1496837955;Set a view name for the ModelAndView to return, to be resolved by the_DispatcherServlet via a ViewResolver. Will override any pre-existing_view name or View.;public void setViewName(String viewName) {_		this.view = viewName__	};set,a,view,name,for,the,model,and,view,to,return,to,be,resolved,by,the,dispatcher,servlet,via,a,view,resolver,will,override,any,pre,existing,view,name,or,view;public,void,set,view,name,string,view,name,this,view,view,name
ParameterizableViewController -> public void setView(View view);1405652648;Set a View object for the ModelAndView to return._Will override any pre-existing view name or View._@since 4.1;public void setView(View view) {_		this.view = view__	};set,a,view,object,for,the,model,and,view,to,return,will,override,any,pre,existing,view,name,or,view,since,4,1;public,void,set,view,view,view,this,view,view
ParameterizableViewController -> public void setView(View view);1409790625;Set a View object for the ModelAndView to return._Will override any pre-existing view name or View._@since 4.1;public void setView(View view) {_		this.view = view__	};set,a,view,object,for,the,model,and,view,to,return,will,override,any,pre,existing,view,name,or,view,since,4,1;public,void,set,view,view,view,this,view,view
ParameterizableViewController -> public void setView(View view);1453729744;Set a View object for the ModelAndView to return._Will override any pre-existing view name or View._@since 4.1;public void setView(View view) {_		this.view = view__	};set,a,view,object,for,the,model,and,view,to,return,will,override,any,pre,existing,view,name,or,view,since,4,1;public,void,set,view,view,view,this,view,view
ParameterizableViewController -> public void setView(View view);1495868221;Set a View object for the ModelAndView to return._Will override any pre-existing view name or View._@since 4.1;public void setView(View view) {_		this.view = view__	};set,a,view,object,for,the,model,and,view,to,return,will,override,any,pre,existing,view,name,or,view,since,4,1;public,void,set,view,view,view,this,view,view
ParameterizableViewController -> public void setView(View view);1496837955;Set a View object for the ModelAndView to return._Will override any pre-existing view name or View._@since 4.1;public void setView(View view) {_		this.view = view__	};set,a,view,object,for,the,model,and,view,to,return,will,override,any,pre,existing,view,name,or,view,since,4,1;public,void,set,view,view,view,this,view,view
ParameterizableViewController -> public void setView(View view);1500448076;Set a View object for the ModelAndView to return._Will override any pre-existing view name or View._@since 4.1;public void setView(View view) {_		this.view = view__	};set,a,view,object,for,the,model,and,view,to,return,will,override,any,pre,existing,view,name,or,view,since,4,1;public,void,set,view,view,view,this,view,view
ParameterizableViewController -> public void setView(View view);1529361191;Set a View object for the ModelAndView to return._Will override any pre-existing view name or View._@since 4.1;public void setView(View view) {_		this.view = view__	};set,a,view,object,for,the,model,and,view,to,return,will,override,any,pre,existing,view,name,or,view,since,4,1;public,void,set,view,view,view,this,view,view
ParameterizableViewController -> public void setStatusOnly(boolean statusOnly);1405652648;The property can be used to indicate the request is considered fully_handled within the controller and that no view should be used for rendering._Useful in combination with {@link #setStatusCode}._<p>By default this is set to {@code false}._@since 4.1;public void setStatusOnly(boolean statusOnly) {_		this.statusOnly = statusOnly__	};the,property,can,be,used,to,indicate,the,request,is,considered,fully,handled,within,the,controller,and,that,no,view,should,be,used,for,rendering,useful,in,combination,with,link,set,status,code,p,by,default,this,is,set,to,code,false,since,4,1;public,void,set,status,only,boolean,status,only,this,status,only,status,only
ParameterizableViewController -> public void setStatusOnly(boolean statusOnly);1409790625;The property can be used to indicate the request is considered fully_handled within the controller and that no view should be used for rendering._Useful in combination with {@link #setStatusCode}._<p>By default this is set to {@code false}._@since 4.1;public void setStatusOnly(boolean statusOnly) {_		this.statusOnly = statusOnly__	};the,property,can,be,used,to,indicate,the,request,is,considered,fully,handled,within,the,controller,and,that,no,view,should,be,used,for,rendering,useful,in,combination,with,link,set,status,code,p,by,default,this,is,set,to,code,false,since,4,1;public,void,set,status,only,boolean,status,only,this,status,only,status,only
ParameterizableViewController -> public void setStatusOnly(boolean statusOnly);1453729744;The property can be used to indicate the request is considered fully_handled within the controller and that no view should be used for rendering._Useful in combination with {@link #setStatusCode}._<p>By default this is set to {@code false}._@since 4.1;public void setStatusOnly(boolean statusOnly) {_		this.statusOnly = statusOnly__	};the,property,can,be,used,to,indicate,the,request,is,considered,fully,handled,within,the,controller,and,that,no,view,should,be,used,for,rendering,useful,in,combination,with,link,set,status,code,p,by,default,this,is,set,to,code,false,since,4,1;public,void,set,status,only,boolean,status,only,this,status,only,status,only
ParameterizableViewController -> public void setStatusOnly(boolean statusOnly);1495868221;The property can be used to indicate the request is considered fully_handled within the controller and that no view should be used for rendering._Useful in combination with {@link #setStatusCode}._<p>By default this is set to {@code false}._@since 4.1;public void setStatusOnly(boolean statusOnly) {_		this.statusOnly = statusOnly__	};the,property,can,be,used,to,indicate,the,request,is,considered,fully,handled,within,the,controller,and,that,no,view,should,be,used,for,rendering,useful,in,combination,with,link,set,status,code,p,by,default,this,is,set,to,code,false,since,4,1;public,void,set,status,only,boolean,status,only,this,status,only,status,only
ParameterizableViewController -> public void setStatusOnly(boolean statusOnly);1496837955;The property can be used to indicate the request is considered fully_handled within the controller and that no view should be used for rendering._Useful in combination with {@link #setStatusCode}._<p>By default this is set to {@code false}._@since 4.1;public void setStatusOnly(boolean statusOnly) {_		this.statusOnly = statusOnly__	};the,property,can,be,used,to,indicate,the,request,is,considered,fully,handled,within,the,controller,and,that,no,view,should,be,used,for,rendering,useful,in,combination,with,link,set,status,code,p,by,default,this,is,set,to,code,false,since,4,1;public,void,set,status,only,boolean,status,only,this,status,only,status,only
ParameterizableViewController -> public void setStatusOnly(boolean statusOnly);1500448076;The property can be used to indicate the request is considered fully_handled within the controller and that no view should be used for rendering._Useful in combination with {@link #setStatusCode}._<p>By default this is set to {@code false}._@since 4.1;public void setStatusOnly(boolean statusOnly) {_		this.statusOnly = statusOnly__	};the,property,can,be,used,to,indicate,the,request,is,considered,fully,handled,within,the,controller,and,that,no,view,should,be,used,for,rendering,useful,in,combination,with,link,set,status,code,p,by,default,this,is,set,to,code,false,since,4,1;public,void,set,status,only,boolean,status,only,this,status,only,status,only
ParameterizableViewController -> public void setStatusOnly(boolean statusOnly);1529361191;The property can be used to indicate the request is considered fully_handled within the controller and that no view should be used for rendering._Useful in combination with {@link #setStatusCode}._<p>By default this is set to {@code false}._@since 4.1;public void setStatusOnly(boolean statusOnly) {_		this.statusOnly = statusOnly__	};the,property,can,be,used,to,indicate,the,request,is,considered,fully,handled,within,the,controller,and,that,no,view,should,be,used,for,rendering,useful,in,combination,with,link,set,status,code,p,by,default,this,is,set,to,code,false,since,4,1;public,void,set,status,only,boolean,status,only,this,status,only,status,only
ParameterizableViewController -> @Nullable 	public HttpStatus getStatusCode();1495868221;Return the configured HTTP status code or {@code null}._@since 4.1;@Nullable_	public HttpStatus getStatusCode() {_		return this.statusCode__	};return,the,configured,http,status,code,or,code,null,since,4,1;nullable,public,http,status,get,status,code,return,this,status,code
ParameterizableViewController -> @Nullable 	public HttpStatus getStatusCode();1496837955;Return the configured HTTP status code or {@code null}._@since 4.1;@Nullable_	public HttpStatus getStatusCode() {_		return this.statusCode__	};return,the,configured,http,status,code,or,code,null,since,4,1;nullable,public,http,status,get,status,code,return,this,status,code
ParameterizableViewController -> @Nullable 	public HttpStatus getStatusCode();1500448076;Return the configured HTTP status code or {@code null}._@since 4.1;@Nullable_	public HttpStatus getStatusCode() {_		return this.statusCode__	};return,the,configured,http,status,code,or,code,null,since,4,1;nullable,public,http,status,get,status,code,return,this,status,code
ParameterizableViewController -> @Nullable 	public HttpStatus getStatusCode();1529361191;Return the configured HTTP status code or {@code null}._@since 4.1;@Nullable_	public HttpStatus getStatusCode() {_		return this.statusCode__	};return,the,configured,http,status,code,or,code,null,since,4,1;nullable,public,http,status,get,status,code,return,this,status,code
ParameterizableViewController -> @Nullable 	public View getView();1495868221;Return the View object, or {@code null} if we are using a view name_to be resolved by the DispatcherServlet via a ViewResolver._@since 4.1;@Nullable_	public View getView() {_		return (this.view instanceof View ? (View) this.view : null)__	};return,the,view,object,or,code,null,if,we,are,using,a,view,name,to,be,resolved,by,the,dispatcher,servlet,via,a,view,resolver,since,4,1;nullable,public,view,get,view,return,this,view,instanceof,view,view,this,view,null
ParameterizableViewController -> @Nullable 	public View getView();1496837955;Return the View object, or {@code null} if we are using a view name_to be resolved by the DispatcherServlet via a ViewResolver._@since 4.1;@Nullable_	public View getView() {_		return (this.view instanceof View ? (View) this.view : null)__	};return,the,view,object,or,code,null,if,we,are,using,a,view,name,to,be,resolved,by,the,dispatcher,servlet,via,a,view,resolver,since,4,1;nullable,public,view,get,view,return,this,view,instanceof,view,view,this,view,null
ParameterizableViewController -> @Nullable 	public View getView();1500448076;Return the View object, or {@code null} if we are using a view name_to be resolved by the DispatcherServlet via a ViewResolver._@since 4.1;@Nullable_	public View getView() {_		return (this.view instanceof View ? (View) this.view : null)__	};return,the,view,object,or,code,null,if,we,are,using,a,view,name,to,be,resolved,by,the,dispatcher,servlet,via,a,view,resolver,since,4,1;nullable,public,view,get,view,return,this,view,instanceof,view,view,this,view,null
ParameterizableViewController -> @Nullable 	public View getView();1529361191;Return the View object, or {@code null} if we are using a view name_to be resolved by the DispatcherServlet via a ViewResolver._@since 4.1;@Nullable_	public View getView() {_		return (this.view instanceof View ? (View) this.view : null)__	};return,the,view,object,or,code,null,if,we,are,using,a,view,name,to,be,resolved,by,the,dispatcher,servlet,via,a,view,resolver,since,4,1;nullable,public,view,get,view,return,this,view,instanceof,view,view,this,view,null
ParameterizableViewController -> public View getView();1405652648;Return the View object, or {@code null} if we are using a view name_to be resolved by the DispatcherServlet via a ViewResolver._@since 4.1;public View getView() {_		return (this.view instanceof View ? (View) this.view : null)__	};return,the,view,object,or,code,null,if,we,are,using,a,view,name,to,be,resolved,by,the,dispatcher,servlet,via,a,view,resolver,since,4,1;public,view,get,view,return,this,view,instanceof,view,view,this,view,null
ParameterizableViewController -> public View getView();1409790625;Return the View object, or {@code null} if we are using a view name_to be resolved by the DispatcherServlet via a ViewResolver._@since 4.1;public View getView() {_		return (this.view instanceof View ? (View) this.view : null)__	};return,the,view,object,or,code,null,if,we,are,using,a,view,name,to,be,resolved,by,the,dispatcher,servlet,via,a,view,resolver,since,4,1;public,view,get,view,return,this,view,instanceof,view,view,this,view,null
ParameterizableViewController -> public View getView();1453729744;Return the View object, or {@code null} if we are using a view name_to be resolved by the DispatcherServlet via a ViewResolver._@since 4.1;public View getView() {_		return (this.view instanceof View ? (View) this.view : null)__	};return,the,view,object,or,code,null,if,we,are,using,a,view,name,to,be,resolved,by,the,dispatcher,servlet,via,a,view,resolver,since,4,1;public,view,get,view,return,this,view,instanceof,view,view,this,view,null
ParameterizableViewController -> @Nullable 	public String getViewName();1495868221;Return the name of the view to delegate to, or {@code null} if using a_View instance.;@Nullable_	public String getViewName() {_		return (this.view instanceof String ? (String) this.view : null)__	};return,the,name,of,the,view,to,delegate,to,or,code,null,if,using,a,view,instance;nullable,public,string,get,view,name,return,this,view,instanceof,string,string,this,view,null
ParameterizableViewController -> @Nullable 	public String getViewName();1496837955;Return the name of the view to delegate to, or {@code null} if using a_View instance.;@Nullable_	public String getViewName() {_		return (this.view instanceof String ? (String) this.view : null)__	};return,the,name,of,the,view,to,delegate,to,or,code,null,if,using,a,view,instance;nullable,public,string,get,view,name,return,this,view,instanceof,string,string,this,view,null
ParameterizableViewController -> @Nullable 	public String getViewName();1500448076;Return the name of the view to delegate to, or {@code null} if using a_View instance.;@Nullable_	public String getViewName() {_		return (this.view instanceof String ? (String) this.view : null)__	};return,the,name,of,the,view,to,delegate,to,or,code,null,if,using,a,view,instance;nullable,public,string,get,view,name,return,this,view,instanceof,string,string,this,view,null
ParameterizableViewController -> @Nullable 	public String getViewName();1529361191;Return the name of the view to delegate to, or {@code null} if using a_View instance.;@Nullable_	public String getViewName() {_		if (this.view instanceof String) {_			String viewName = (String) this.view__			if (getStatusCode() != null && getStatusCode().is3xxRedirection()) {_				return viewName.startsWith("redirect:") ? viewName : "redirect:" + viewName__			}_			else {_				return viewName__			}_		}_		return null__	};return,the,name,of,the,view,to,delegate,to,or,code,null,if,using,a,view,instance;nullable,public,string,get,view,name,if,this,view,instanceof,string,string,view,name,string,this,view,if,get,status,code,null,get,status,code,is3xx,redirection,return,view,name,starts,with,redirect,view,name,redirect,view,name,else,return,view,name,return,null
