# id;timestamp;commentText;codeText;commentWords;codeWords
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(@Nullable Object returnValue);1496837955;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(@Nullable Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,nullable,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(@Nullable Object returnValue);1498780456;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(@Nullable Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,nullable,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(@Nullable Object returnValue);1508234190;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(@Nullable Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,nullable,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(@Nullable Object returnValue);1529361191;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(@Nullable Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,nullable,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(@Nullable Object returnValue);1529721864;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(@Nullable Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,nullable,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(@Nullable Object returnValue);1530174524;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(@Nullable Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,nullable,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(@Nullable Object returnValue);1530294255;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(@Nullable Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,nullable,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(@Nullable Object returnValue);1532520919;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(@Nullable Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,nullable,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1328020251;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus != null) {_			if (StringUtils.hasText(this.responseReason)) {_				webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__			}_			else {_				webRequest.getResponse().setStatus(this.responseStatus.value())__			}__			_			webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__		}_	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1333745422;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus != null) {_			if (StringUtils.hasText(this.responseReason)) {_				webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__			}_			else {_				webRequest.getResponse().setStatus(this.responseStatus.value())__			}__			_			webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__		}_	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1334781369;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}__		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1335199845;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}__		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1336772474;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}__		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1342803001;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}__		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1344035753;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}__		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1345223391;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}__		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1347300061;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}__		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1356735495;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}__		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1357119239;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}__		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1368482696;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}__		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1381799213;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}__		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1413405543;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}__		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1413406589;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}_		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}_		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1417442844;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}_		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}_		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1422572109;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}_		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}_		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1427139532;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}_		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}_		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1433084423;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}_		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}_		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1441791912;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}_		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}_		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1452896134;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}_		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}_		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1453827975;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}_		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}_		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1458754760;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}_		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}_		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1467456930;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}_		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}_		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1477860027;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}_		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}_		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1482012648;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}_		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}_		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1487362018;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}_		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}_		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1491224509;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		if (this.responseStatus == null) {_			return__		}_		if (StringUtils.hasText(this.responseReason)) {_			webRequest.getResponse().sendError(this.responseStatus.value(), this.responseReason)__		}_		else {_			webRequest.getResponse().setStatus(this.responseStatus.value())__		}_		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, this.responseStatus)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,if,this,response,status,null,return,if,string,utils,has,text,this,response,reason,web,request,get,response,send,error,this,response,status,value,this,response,reason,else,web,request,get,response,set,status,this,response,status,value,web,request,get,request,set,attribute,view,this,response,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1491659765;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		HttpStatus status = getResponseStatus()__		if (status == null) {_			return__		}__		String reason = getResponseStatusReason()__		if (StringUtils.hasText(reason)) {_			webRequest.getResponse().sendError(status.value(), reason)__		}_		else {_			webRequest.getResponse().setStatus(status.value())__		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, status)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,http,status,status,get,response,status,if,status,null,return,string,reason,get,response,status,reason,if,string,utils,has,text,reason,web,request,get,response,send,error,status,value,reason,else,web,request,get,response,set,status,status,value,web,request,get,request,set,attribute,view,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1492093025;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		HttpStatus status = getResponseStatus()__		if (status == null) {_			return__		}__		String reason = getResponseStatusReason()__		if (StringUtils.hasText(reason)) {_			webRequest.getResponse().sendError(status.value(), reason)__		}_		else {_			webRequest.getResponse().setStatus(status.value())__		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, status)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,http,status,status,get,response,status,if,status,null,return,string,reason,get,response,status,reason,if,string,utils,has,text,reason,web,request,get,response,send,error,status,value,reason,else,web,request,get,response,set,status,status,value,web,request,get,request,set,attribute,view,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1493136239;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		HttpStatus status = getResponseStatus()__		if (status == null) {_			return__		}__		String reason = getResponseStatusReason()__		if (StringUtils.hasText(reason)) {_			webRequest.getResponse().sendError(status.value(), reason)__		}_		else {_			webRequest.getResponse().setStatus(status.value())__		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, status)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,http,status,status,get,response,status,if,status,null,return,string,reason,get,response,status,reason,if,string,utils,has,text,reason,web,request,get,response,send,error,status,value,reason,else,web,request,get,response,set,status,status,value,web,request,get,request,set,attribute,view,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1496837955;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		HttpStatus status = getResponseStatus()__		if (status == null) {_			return__		}__		HttpServletResponse response = webRequest.getResponse()__		if (response != null) {_			String reason = getResponseStatusReason()__			if (StringUtils.hasText(reason)) {_				response.sendError(status.value(), reason)__			}_			else {_				response.setStatus(status.value())__			}_		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, status)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,http,status,status,get,response,status,if,status,null,return,http,servlet,response,response,web,request,get,response,if,response,null,string,reason,get,response,status,reason,if,string,utils,has,text,reason,response,send,error,status,value,reason,else,response,set,status,status,value,web,request,get,request,set,attribute,view,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1498780456;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		HttpStatus status = getResponseStatus()__		if (status == null) {_			return__		}__		HttpServletResponse response = webRequest.getResponse()__		if (response != null) {_			String reason = getResponseStatusReason()__			if (StringUtils.hasText(reason)) {_				response.sendError(status.value(), reason)__			}_			else {_				response.setStatus(status.value())__			}_		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, status)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,http,status,status,get,response,status,if,status,null,return,http,servlet,response,response,web,request,get,response,if,response,null,string,reason,get,response,status,reason,if,string,utils,has,text,reason,response,send,error,status,value,reason,else,response,set,status,status,value,web,request,get,request,set,attribute,view,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1508234190;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		HttpStatus status = getResponseStatus()__		if (status == null) {_			return__		}__		HttpServletResponse response = webRequest.getResponse()__		if (response != null) {_			String reason = getResponseStatusReason()__			if (StringUtils.hasText(reason)) {_				response.sendError(status.value(), reason)__			}_			else {_				response.setStatus(status.value())__			}_		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, status)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,http,status,status,get,response,status,if,status,null,return,http,servlet,response,response,web,request,get,response,if,response,null,string,reason,get,response,status,reason,if,string,utils,has,text,reason,response,send,error,status,value,reason,else,response,set,status,status,value,web,request,get,request,set,attribute,view,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1529361191;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		HttpStatus status = getResponseStatus()__		if (status == null) {_			return__		}__		HttpServletResponse response = webRequest.getResponse()__		if (response != null) {_			String reason = getResponseStatusReason()__			if (StringUtils.hasText(reason)) {_				response.sendError(status.value(), reason)__			}_			else {_				response.setStatus(status.value())__			}_		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, status)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,http,status,status,get,response,status,if,status,null,return,http,servlet,response,response,web,request,get,response,if,response,null,string,reason,get,response,status,reason,if,string,utils,has,text,reason,response,send,error,status,value,reason,else,response,set,status,status,value,web,request,get,request,set,attribute,view,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1529721864;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		HttpStatus status = getResponseStatus()__		if (status == null) {_			return__		}__		HttpServletResponse response = webRequest.getResponse()__		if (response != null) {_			String reason = getResponseStatusReason()__			if (StringUtils.hasText(reason)) {_				response.sendError(status.value(), reason)__			}_			else {_				response.setStatus(status.value())__			}_		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, status)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,http,status,status,get,response,status,if,status,null,return,http,servlet,response,response,web,request,get,response,if,response,null,string,reason,get,response,status,reason,if,string,utils,has,text,reason,response,send,error,status,value,reason,else,response,set,status,status,value,web,request,get,request,set,attribute,view,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1530174524;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		HttpStatus status = getResponseStatus()__		if (status == null) {_			return__		}__		HttpServletResponse response = webRequest.getResponse()__		if (response != null) {_			String reason = getResponseStatusReason()__			if (StringUtils.hasText(reason)) {_				response.sendError(status.value(), reason)__			}_			else {_				response.setStatus(status.value())__			}_		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, status)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,http,status,status,get,response,status,if,status,null,return,http,servlet,response,response,web,request,get,response,if,response,null,string,reason,get,response,status,reason,if,string,utils,has,text,reason,response,send,error,status,value,reason,else,response,set,status,status,value,web,request,get,request,set,attribute,view,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1530294255;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		HttpStatus status = getResponseStatus()__		if (status == null) {_			return__		}__		HttpServletResponse response = webRequest.getResponse()__		if (response != null) {_			String reason = getResponseStatusReason()__			if (StringUtils.hasText(reason)) {_				response.sendError(status.value(), reason)__			}_			else {_				response.setStatus(status.value())__			}_		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, status)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,http,status,status,get,response,status,if,status,null,return,http,servlet,response,response,web,request,get,response,if,response,null,string,reason,get,response,status,reason,if,string,utils,has,text,reason,response,send,error,status,value,reason,else,response,set,status,status,value,web,request,get,request,set,attribute,view,status
ServletInvocableHandlerMethod -> private void setResponseStatus(ServletWebRequest webRequest) throws IOException;1532520919;Set the response status according to the {@link ResponseStatus} annotation.;private void setResponseStatus(ServletWebRequest webRequest) throws IOException {_		HttpStatus status = getResponseStatus()__		if (status == null) {_			return__		}__		HttpServletResponse response = webRequest.getResponse()__		if (response != null) {_			String reason = getResponseStatusReason()__			if (StringUtils.hasText(reason)) {_				response.sendError(status.value(), reason)__			}_			else {_				response.setStatus(status.value())__			}_		}__		_		webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, status)__	};set,the,response,status,according,to,the,link,response,status,annotation;private,void,set,response,status,servlet,web,request,web,request,throws,ioexception,http,status,status,get,response,status,if,status,null,return,http,servlet,response,response,web,request,get,response,if,response,null,string,reason,get,response,status,reason,if,string,utils,has,text,reason,response,send,error,status,value,reason,else,response,set,status,status,value,web,request,get,request,set,attribute,view,status
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(NativeWebRequest request);1328020251;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(NativeWebRequest request) {_		return ((ServletWebRequest) request).isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,native,web,request,request,return,servlet,web,request,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(NativeWebRequest request);1333745422;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(NativeWebRequest request) {_		return ((ServletWebRequest) request).isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,native,web,request,request,return,servlet,web,request,request,is,not,modified
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1413405543;Create a nested ServletInvocableHandlerMethod sub-class that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,sub,class,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1413406589;Create a nested ServletInvocableHandlerMethod sub-class that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,sub,class,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1417442844;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1422572109;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1427139532;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1433084423;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1441791912;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1452896134;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1453827975;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1458754760;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1467456930;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1477860027;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1482012648;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1487362018;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1491224509;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1491659765;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1492093025;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1493136239;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1496837955;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1498780456;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1508234190;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1529361191;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1529721864;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1530174524;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1530294255;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(Object result);1532520919;Create a nested ServletInvocableHandlerMethod subclass that returns the_the given value (or raises an Exception if the value is one) rather than_actually invoking the controller method. This is useful when processing_async return values (e.g. Callable, DeferredResult, ListenableFuture).;ServletInvocableHandlerMethod wrapConcurrentResult(Object result) {_		return new ConcurrentResultHandlerMethod(result, new ConcurrentResultMethodParameter(result))__	};create,a,nested,servlet,invocable,handler,method,subclass,that,returns,the,the,given,value,or,raises,an,exception,if,the,value,is,one,rather,than,actually,invoking,the,controller,method,this,is,useful,when,processing,async,return,values,e,g,callable,deferred,result,listenable,future;servlet,invocable,handler,method,wrap,concurrent,result,object,result,return,new,concurrent,result,handler,method,result,new,concurrent,result,method,parameter,result
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1417442844;Invokes the method and handles the return value through one of the_configured {@link HandlerMethodReturnValueHandler}s._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,s,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1422572109;Invokes the method and handles the return value through one of the_configured {@link HandlerMethodReturnValueHandler}s._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,s,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1427139532;Invokes the method and handles the return value through one of the_configured {@link HandlerMethodReturnValueHandler}s._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,s,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1433084423;Invokes the method and handles the return value through one of the_configured {@link HandlerMethodReturnValueHandler}s._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,s,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1441791912;Invokes the method and handles the return value through one of the_configured {@link HandlerMethodReturnValueHandler}s._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,s,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1452896134;Invokes the method and handles the return value through one of the_configured {@link HandlerMethodReturnValueHandler}s._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,s,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1453827975;Invokes the method and handles the return value through one of the_configured {@link HandlerMethodReturnValueHandler}s._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,s,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1458754760;Invokes the method and handles the return value through one of the_configured {@link HandlerMethodReturnValueHandler}s._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,s,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1467456930;Invokes the method and handles the return value through one of the_configured {@link HandlerMethodReturnValueHandler}s._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,s,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1477860027;Invoke the method and handle the return value through one of the_configured {@link HandlerMethodReturnValueHandler}s._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invoke,the,method,and,handle,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,s,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1482012648;Invoke the method and handle the return value through one of the_configured {@link HandlerMethodReturnValueHandler}s._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invoke,the,method,and,handle,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,s,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1328020251;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return responseStatus != null__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1333745422;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return responseStatus != null__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1334781369;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return responseStatus != null__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1335199845;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return responseStatus != null__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1336772474;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return responseStatus != null__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1342803001;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return responseStatus != null__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1344035753;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return responseStatus != null__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1345223391;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return responseStatus != null__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1347300061;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return responseStatus != null__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1356735495;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return responseStatus != null__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1357119239;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return responseStatus != null__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1368482696;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return responseStatus != null__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1381799213;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return responseStatus != null__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1413405543;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return responseStatus != null__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1413406589;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return this.responseStatus != null__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,this,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1417442844;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return (this.responseStatus != null)__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,this,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1422572109;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return (this.responseStatus != null)__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,this,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1427139532;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return (this.responseStatus != null)__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,this,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1433084423;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return (this.responseStatus != null)__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,this,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1441791912;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return (this.responseStatus != null)__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,this,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1452896134;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return (this.responseStatus != null)__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,this,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1453827975;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return (this.responseStatus != null)__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,this,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1458754760;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return (this.responseStatus != null)__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,this,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1467456930;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return (this.responseStatus != null)__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,this,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1477860027;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return (this.responseStatus != null)__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,this,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1482012648;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return (this.responseStatus != null)__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,this,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1487362018;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return (this.responseStatus != null)__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,this,response,status,null
ServletInvocableHandlerMethod -> private boolean hasResponseStatus();1491224509;Does this method have the response status instruction?;private boolean hasResponseStatus() {_		return (this.responseStatus != null)__	};does,this,method,have,the,response,status,instruction;private,boolean,has,response,status,return,this,response,status,null
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1413405543;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1413406589;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1417442844;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1422572109;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1427139532;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1433084423;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1441791912;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1452896134;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1453827975;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1458754760;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1467456930;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1477860027;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1482012648;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1487362018;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1491224509;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1491659765;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1492093025;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1493136239;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1496837955;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1498780456;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1508234190;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1529361191;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1529721864;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1530174524;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1530294255;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public Class<?> getBeanType();1532520919;Bridge to actual controller type-level annotations.;@Override_		public Class<?> getBeanType() {_			return ServletInvocableHandlerMethod.this.getBeanType()__		};bridge,to,actual,controller,type,level,annotations;override,public,class,get,bean,type,return,servlet,invocable,handler,method,this,get,bean,type
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1334781369;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1335199845;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1336772474;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1342803001;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1344035753;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1345223391;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1347300061;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1356735495;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1357119239;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1368482696;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1381799213;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1413405543;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1413406589;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1417442844;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1422572109;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1427139532;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1433084423;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1441791912;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1452896134;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1453827975;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1458754760;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1467456930;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1477860027;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1482012648;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1487362018;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1491224509;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1491659765;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1492093025;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1493136239;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1496837955;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1498780456;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1508234190;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1529361191;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1529721864;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1530174524;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1530294255;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> private boolean isRequestNotModified(ServletWebRequest webRequest);1532520919;Does the given request qualify as "not modified"?_@see ServletWebRequest#checkNotModified(long)_@see ServletWebRequest#checkNotModified(String);private boolean isRequestNotModified(ServletWebRequest webRequest) {_		return webRequest.isNotModified()__	};does,the,given,request,qualify,as,not,modified,see,servlet,web,request,check,not,modified,long,see,servlet,web,request,check,not,modified,string;private,boolean,is,request,not,modified,servlet,web,request,web,request,return,web,request,is,not,modified
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType);1458754760;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.hasMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,boolean,has,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,has,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType);1467456930;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.hasMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,boolean,has,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,has,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType);1477860027;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.hasMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,boolean,has,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,has,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType);1482012648;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.hasMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,boolean,has,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,has,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType);1487362018;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.hasMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,boolean,has,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,has,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType);1491224509;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.hasMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,boolean,has,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,has,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType);1491659765;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.hasMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,boolean,has,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,has,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType);1492093025;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.hasMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,boolean,has,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,has,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType);1493136239;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.hasMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,boolean,has,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,has,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType);1496837955;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.hasMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,boolean,has,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,has,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType);1498780456;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.hasMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,boolean,has,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,has,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType);1508234190;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.hasMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,boolean,has,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,has,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType);1529361191;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.hasMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,boolean,has,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,has,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType);1529721864;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.hasMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,boolean,has,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,has,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType);1530174524;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.hasMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,boolean,has,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,has,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType);1530294255;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.hasMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,boolean,has,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,has,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType);1532520919;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.hasMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,boolean,has,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,has,method,annotation,annotation,type
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1328020251;Creates a {@link ServletInvocableHandlerMethod} instance with the given bean and method._@param handler the object handler_@param method the method;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)___		ResponseStatus annotation = getMethodAnnotation(ResponseStatus.class)__		if (annotation != null) {_			this.responseStatus = annotation.value()__			this.responseReason = annotation.reason()__		}_	};creates,a,link,servlet,invocable,handler,method,instance,with,the,given,bean,and,method,param,handler,the,object,handler,param,method,the,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,response,status,annotation,get,method,annotation,response,status,class,if,annotation,null,this,response,status,annotation,value,this,response,reason,annotation,reason
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1333745422;Creates a {@link ServletInvocableHandlerMethod} instance with the given bean and method._@param handler the object handler_@param method the method;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)___		ResponseStatus annotation = getMethodAnnotation(ResponseStatus.class)__		if (annotation != null) {_			this.responseStatus = annotation.value()__			this.responseReason = annotation.reason()__		}_	};creates,a,link,servlet,invocable,handler,method,instance,with,the,given,bean,and,method,param,handler,the,object,handler,param,method,the,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,response,status,annotation,get,method,annotation,response,status,class,if,annotation,null,this,response,status,annotation,value,this,response,reason,annotation,reason
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1334781369;Creates a {@link ServletInvocableHandlerMethod} instance with the given bean and method._@param handler the object handler_@param method the method;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)___		ResponseStatus annotation = getMethodAnnotation(ResponseStatus.class)__		if (annotation != null) {_			this.responseStatus = annotation.value()__			this.responseReason = annotation.reason()__		}_	};creates,a,link,servlet,invocable,handler,method,instance,with,the,given,bean,and,method,param,handler,the,object,handler,param,method,the,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,response,status,annotation,get,method,annotation,response,status,class,if,annotation,null,this,response,status,annotation,value,this,response,reason,annotation,reason
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1335199845;Creates a {@link ServletInvocableHandlerMethod} instance with the given bean and method._@param handler the object handler_@param method the method;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)___		ResponseStatus annotation = getMethodAnnotation(ResponseStatus.class)__		if (annotation != null) {_			this.responseStatus = annotation.value()__			this.responseReason = annotation.reason()__		}_	};creates,a,link,servlet,invocable,handler,method,instance,with,the,given,bean,and,method,param,handler,the,object,handler,param,method,the,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,response,status,annotation,get,method,annotation,response,status,class,if,annotation,null,this,response,status,annotation,value,this,response,reason,annotation,reason
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1336772474;Creates a {@link ServletInvocableHandlerMethod} instance with the given bean and method._@param handler the object handler_@param method the method;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)___		ResponseStatus annotation = getMethodAnnotation(ResponseStatus.class)__		if (annotation != null) {_			this.responseStatus = annotation.value()__			this.responseReason = annotation.reason()__		}_	};creates,a,link,servlet,invocable,handler,method,instance,with,the,given,bean,and,method,param,handler,the,object,handler,param,method,the,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,response,status,annotation,get,method,annotation,response,status,class,if,annotation,null,this,response,status,annotation,value,this,response,reason,annotation,reason
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1342803001;Creates a {@link ServletInvocableHandlerMethod} instance with the given bean and method._@param handler the object handler_@param method the method;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)___		ResponseStatus annotation = getMethodAnnotation(ResponseStatus.class)__		if (annotation != null) {_			this.responseStatus = annotation.value()__			this.responseReason = annotation.reason()__		}_	};creates,a,link,servlet,invocable,handler,method,instance,with,the,given,bean,and,method,param,handler,the,object,handler,param,method,the,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,response,status,annotation,get,method,annotation,response,status,class,if,annotation,null,this,response,status,annotation,value,this,response,reason,annotation,reason
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1344035753;Creates a {@link ServletInvocableHandlerMethod} instance with the given bean and method._@param handler the object handler_@param method the method;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)___		ResponseStatus annotation = getMethodAnnotation(ResponseStatus.class)__		if (annotation != null) {_			this.responseStatus = annotation.value()__			this.responseReason = annotation.reason()__		}_	};creates,a,link,servlet,invocable,handler,method,instance,with,the,given,bean,and,method,param,handler,the,object,handler,param,method,the,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,response,status,annotation,get,method,annotation,response,status,class,if,annotation,null,this,response,status,annotation,value,this,response,reason,annotation,reason
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1345223391;Creates a {@link ServletInvocableHandlerMethod} instance with the given bean and method._@param handler the object handler_@param method the method;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)___		ResponseStatus annotation = getMethodAnnotation(ResponseStatus.class)__		if (annotation != null) {_			this.responseStatus = annotation.value()__			this.responseReason = annotation.reason()__		}_	};creates,a,link,servlet,invocable,handler,method,instance,with,the,given,bean,and,method,param,handler,the,object,handler,param,method,the,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,response,status,annotation,get,method,annotation,response,status,class,if,annotation,null,this,response,status,annotation,value,this,response,reason,annotation,reason
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1347300061;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__		initResponseStatus()__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1356735495;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__		initResponseStatus()__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1357119239;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__		initResponseStatus()__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1368482696;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__		initResponseStatus()__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1381799213;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__		initResponseStatus()__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1413405543;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__		initResponseStatus()__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1413406589;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__		initResponseStatus()__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1417442844;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__		initResponseStatus()__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1422572109;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__		initResponseStatus()__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1427139532;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__		initResponseStatus()__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1433084423;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__		initResponseStatus()__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1441791912;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__		initResponseStatus()__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1452896134;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__		initResponseStatus()__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1453827975;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__		initResponseStatus()__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1458754760;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__		initResponseStatus()__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1467456930;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__		initResponseStatus()__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1477860027;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__		initResponseStatus()__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1482012648;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__		initResponseStatus()__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1487362018;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__		initResponseStatus()__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1491224509;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__		initResponseStatus()__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1491659765;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1492093025;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1493136239;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1496837955;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1498780456;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1508234190;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1529361191;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1529721864;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1530174524;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1530294255;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(Object handler, Method method);1532520919;Creates an instance from the given handler and method.;public ServletInvocableHandlerMethod(Object handler, Method method) {_		super(handler, method)__	};creates,an,instance,from,the,given,handler,and,method;public,servlet,invocable,handler,method,object,handler,method,method,super,handler,method
ServletInvocableHandlerMethod -> private AbstractDelegatingCallable geAsyncCallable(final ServletWebRequest webRequest, 			final ModelAndViewContainer mavContainer, final Object... providedArgs);1334781369;Create a Callable to populate the ModelAndViewContainer asynchronously.;private AbstractDelegatingCallable geAsyncCallable(final ServletWebRequest webRequest,_			final ModelAndViewContainer mavContainer, final Object... providedArgs) {__		return new AbstractDelegatingCallable() {_			public Object call() throws Exception {_				new CallableHandlerMethod(getNextCallable()).invokeAndHandle(webRequest, mavContainer, providedArgs)__				return null__			}_		}__	};create,a,callable,to,populate,the,model,and,view,container,asynchronously;private,abstract,delegating,callable,ge,async,callable,final,servlet,web,request,web,request,final,model,and,view,container,mav,container,final,object,provided,args,return,new,abstract,delegating,callable,public,object,call,throws,exception,new,callable,handler,method,get,next,callable,invoke,and,handle,web,request,mav,container,provided,args,return,null
ServletInvocableHandlerMethod -> private AbstractDelegatingCallable geAsyncCallable(final ServletWebRequest webRequest, 			final ModelAndViewContainer mavContainer, final Object... providedArgs);1335199845;Create a Callable to populate the ModelAndViewContainer asynchronously.;private AbstractDelegatingCallable geAsyncCallable(final ServletWebRequest webRequest,_			final ModelAndViewContainer mavContainer, final Object... providedArgs) {__		return new AbstractDelegatingCallable() {_			public Object call() throws Exception {_				mavContainer.setRequestHandled(false)__				new CallableHandlerMethod(getNextCallable()).invokeAndHandle(webRequest, mavContainer, providedArgs)__				return null__			}_		}__	};create,a,callable,to,populate,the,model,and,view,container,asynchronously;private,abstract,delegating,callable,ge,async,callable,final,servlet,web,request,web,request,final,model,and,view,container,mav,container,final,object,provided,args,return,new,abstract,delegating,callable,public,object,call,throws,exception,mav,container,set,request,handled,false,new,callable,handler,method,get,next,callable,invoke,and,handle,web,request,mav,container,provided,args,return,null
ServletInvocableHandlerMethod -> private AbstractDelegatingCallable geAsyncCallable(final ServletWebRequest webRequest, 			final ModelAndViewContainer mavContainer, final Object... providedArgs);1336772474;Create a Callable to populate the ModelAndViewContainer asynchronously.;private AbstractDelegatingCallable geAsyncCallable(final ServletWebRequest webRequest,_			final ModelAndViewContainer mavContainer, final Object... providedArgs) {__		return new AbstractDelegatingCallable() {_			public Object call() throws Exception {_				mavContainer.setRequestHandled(false)__				new CallableHandlerMethod(getNextCallable()).invokeAndHandle(webRequest, mavContainer, providedArgs)__				return null__			}_		}__	};create,a,callable,to,populate,the,model,and,view,container,asynchronously;private,abstract,delegating,callable,ge,async,callable,final,servlet,web,request,web,request,final,model,and,view,container,mav,container,final,object,provided,args,return,new,abstract,delegating,callable,public,object,call,throws,exception,mav,container,set,request,handled,false,new,callable,handler,method,get,next,callable,invoke,and,handle,web,request,mav,container,provided,args,return,null
ServletInvocableHandlerMethod -> private AbstractDelegatingCallable geAsyncCallable(final ServletWebRequest webRequest, 			final ModelAndViewContainer mavContainer, final Object... providedArgs);1342803001;Create a Callable to populate the ModelAndViewContainer asynchronously.;private AbstractDelegatingCallable geAsyncCallable(final ServletWebRequest webRequest,_			final ModelAndViewContainer mavContainer, final Object... providedArgs) {__		return new AbstractDelegatingCallable() {_			public Object call() throws Exception {_				mavContainer.setRequestHandled(false)__				new CallableHandlerMethod(getNext()).invokeAndHandle(webRequest, mavContainer, providedArgs)__				return null__			}_		}__	};create,a,callable,to,populate,the,model,and,view,container,asynchronously;private,abstract,delegating,callable,ge,async,callable,final,servlet,web,request,web,request,final,model,and,view,container,mav,container,final,object,provided,args,return,new,abstract,delegating,callable,public,object,call,throws,exception,mav,container,set,request,handled,false,new,callable,handler,method,get,next,invoke,and,handle,web,request,mav,container,provided,args,return,null
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(Object returnValue);1413405543;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(Object returnValue);1413406589;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(Object returnValue);1417442844;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(Object returnValue);1422572109;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(Object returnValue);1427139532;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(Object returnValue);1433084423;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(Object returnValue);1441791912;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(Object returnValue);1452896134;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(Object returnValue);1453827975;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(Object returnValue);1458754760;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(Object returnValue);1467456930;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(Object returnValue);1477860027;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(Object returnValue);1482012648;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(Object returnValue);1487362018;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(Object returnValue);1491224509;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(Object returnValue);1491659765;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(Object returnValue);1492093025;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public MethodParameter getReturnValueType(Object returnValue);1493136239;Bridge to actual return value or generic type within the declared_async return type, e.g. Foo instead of {@code DeferredResult<Foo>}.;@Override_		public MethodParameter getReturnValueType(Object returnValue) {_			return this.returnType__		};bridge,to,actual,return,value,or,generic,type,within,the,declared,async,return,type,e,g,foo,instead,of,code,deferred,result,foo;override,public,method,parameter,get,return,value,type,object,return,value,return,this,return,type
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(final Object result);1345223391;Return a ServletInvocableHandlerMethod that will process the value returned_from an async operation essentially either applying return value handling or_raising an exception if the end result is an Exception.;ServletInvocableHandlerMethod wrapConcurrentResult(final Object result) {__		return new CallableHandlerMethod(new Callable<Object>() {__			public Object call() throws Exception {_				if (result instanceof Exception) {_					throw (Exception) result__				}_				else if (result instanceof Throwable) {_					throw new NestedServletException("Async processing failed", (Throwable) result)__				}_				return result__			}_		})__	};return,a,servlet,invocable,handler,method,that,will,process,the,value,returned,from,an,async,operation,essentially,either,applying,return,value,handling,or,raising,an,exception,if,the,end,result,is,an,exception;servlet,invocable,handler,method,wrap,concurrent,result,final,object,result,return,new,callable,handler,method,new,callable,object,public,object,call,throws,exception,if,result,instanceof,exception,throw,exception,result,else,if,result,instanceof,throwable,throw,new,nested,servlet,exception,async,processing,failed,throwable,result,return,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(final Object result);1347300061;Return a ServletInvocableHandlerMethod that will process the value returned_from an async operation essentially either applying return value handling or_raising an exception if the end result is an Exception.;ServletInvocableHandlerMethod wrapConcurrentResult(final Object result) {__		return new CallableHandlerMethod(new Callable<Object>() {__			public Object call() throws Exception {_				if (result instanceof Exception) {_					throw (Exception) result__				}_				else if (result instanceof Throwable) {_					throw new NestedServletException("Async processing failed", (Throwable) result)__				}_				return result__			}_		})__	};return,a,servlet,invocable,handler,method,that,will,process,the,value,returned,from,an,async,operation,essentially,either,applying,return,value,handling,or,raising,an,exception,if,the,end,result,is,an,exception;servlet,invocable,handler,method,wrap,concurrent,result,final,object,result,return,new,callable,handler,method,new,callable,object,public,object,call,throws,exception,if,result,instanceof,exception,throw,exception,result,else,if,result,instanceof,throwable,throw,new,nested,servlet,exception,async,processing,failed,throwable,result,return,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(final Object result);1356735495;Return a ServletInvocableHandlerMethod that will process the value returned_from an async operation essentially either applying return value handling or_raising an exception if the end result is an Exception.;ServletInvocableHandlerMethod wrapConcurrentResult(final Object result) {__		return new CallableHandlerMethod(new Callable<Object>() {__			@Override_			public Object call() throws Exception {_				if (result instanceof Exception) {_					throw (Exception) result__				}_				else if (result instanceof Throwable) {_					throw new NestedServletException("Async processing failed", (Throwable) result)__				}_				return result__			}_		})__	};return,a,servlet,invocable,handler,method,that,will,process,the,value,returned,from,an,async,operation,essentially,either,applying,return,value,handling,or,raising,an,exception,if,the,end,result,is,an,exception;servlet,invocable,handler,method,wrap,concurrent,result,final,object,result,return,new,callable,handler,method,new,callable,object,override,public,object,call,throws,exception,if,result,instanceof,exception,throw,exception,result,else,if,result,instanceof,throwable,throw,new,nested,servlet,exception,async,processing,failed,throwable,result,return,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(final Object result);1357119239;Return a ServletInvocableHandlerMethod that will process the value returned_from an async operation essentially either applying return value handling or_raising an exception if the end result is an Exception.;ServletInvocableHandlerMethod wrapConcurrentResult(final Object result) {__		return new CallableHandlerMethod(new Callable<Object>() {__			public Object call() throws Exception {_				if (result instanceof Exception) {_					throw (Exception) result__				}_				else if (result instanceof Throwable) {_					throw new NestedServletException("Async processing failed", (Throwable) result)__				}_				return result__			}_		})__	};return,a,servlet,invocable,handler,method,that,will,process,the,value,returned,from,an,async,operation,essentially,either,applying,return,value,handling,or,raising,an,exception,if,the,end,result,is,an,exception;servlet,invocable,handler,method,wrap,concurrent,result,final,object,result,return,new,callable,handler,method,new,callable,object,public,object,call,throws,exception,if,result,instanceof,exception,throw,exception,result,else,if,result,instanceof,throwable,throw,new,nested,servlet,exception,async,processing,failed,throwable,result,return,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(final Object result);1368482696;Return a ServletInvocableHandlerMethod that will process the value returned_from an async operation essentially either applying return value handling or_raising an exception if the end result is an Exception.;ServletInvocableHandlerMethod wrapConcurrentResult(final Object result) {__		return new CallableHandlerMethod(new Callable<Object>() {__			@Override_			public Object call() throws Exception {_				if (result instanceof Exception) {_					throw (Exception) result__				}_				else if (result instanceof Throwable) {_					throw new NestedServletException("Async processing failed", (Throwable) result)__				}_				return result__			}_		})__	};return,a,servlet,invocable,handler,method,that,will,process,the,value,returned,from,an,async,operation,essentially,either,applying,return,value,handling,or,raising,an,exception,if,the,end,result,is,an,exception;servlet,invocable,handler,method,wrap,concurrent,result,final,object,result,return,new,callable,handler,method,new,callable,object,override,public,object,call,throws,exception,if,result,instanceof,exception,throw,exception,result,else,if,result,instanceof,throwable,throw,new,nested,servlet,exception,async,processing,failed,throwable,result,return,result
ServletInvocableHandlerMethod -> ServletInvocableHandlerMethod wrapConcurrentResult(final Object result);1381799213;Create a ServletInvocableHandlerMethod that will return the given value from an_async operation instead of invoking the controller method again. The async result_value is then either processed as if the controller method returned it or an_exception is raised if the async result value itself is an Exception.;ServletInvocableHandlerMethod wrapConcurrentResult(final Object result) {__		return new CallableHandlerMethod(new Callable<Object>() {__			@Override_			public Object call() throws Exception {_				if (result instanceof Exception) {_					throw (Exception) result__				}_				else if (result instanceof Throwable) {_					throw new NestedServletException("Async processing failed", (Throwable) result)__				}_				return result__			}_		})__	};create,a,servlet,invocable,handler,method,that,will,return,the,given,value,from,an,async,operation,instead,of,invoking,the,controller,method,again,the,async,result,value,is,then,either,processed,as,if,the,controller,method,returned,it,or,an,exception,is,raised,if,the,async,result,value,itself,is,an,exception;servlet,invocable,handler,method,wrap,concurrent,result,final,object,result,return,new,callable,handler,method,new,callable,object,override,public,object,call,throws,exception,if,result,instanceof,exception,throw,exception,result,else,if,result,instanceof,throwable,throw,new,nested,servlet,exception,async,processing,failed,throwable,result,return,result
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer, 			Object... providedArgs) throws Exception;1487362018;Invoke the method and handle the return value through one of the_configured {@link HandlerMethodReturnValueHandler}s._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer,_			Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invoke,the,method,and,handle,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,s,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer, 			Object... providedArgs) throws Exception;1491224509;Invoke the method and handle the return value through one of the_configured {@link HandlerMethodReturnValueHandler}s._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer,_			Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invoke,the,method,and,handle,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,s,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer, 			Object... providedArgs) throws Exception;1491659765;Invoke the method and handle the return value through one of the_configured {@link HandlerMethodReturnValueHandler}s._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer,_			Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || getResponseStatus() != null || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(getResponseStatusReason())) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invoke,the,method,and,handle,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,s,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,get,response,status,null,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,get,response,status,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer, 			Object... providedArgs) throws Exception;1492093025;Invoke the method and handle the return value through one of the_configured {@link HandlerMethodReturnValueHandler}s._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer,_			Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || getResponseStatus() != null || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(getResponseStatusReason())) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invoke,the,method,and,handle,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,s,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,get,response,status,null,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,get,response,status,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer, 			Object... providedArgs) throws Exception;1493136239;Invoke the method and handle the return value through one of the_configured {@link HandlerMethodReturnValueHandler}s._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer,_			Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || getResponseStatus() != null || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(getResponseStatusReason())) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invoke,the,method,and,handle,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,s,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,get,response,status,null,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,get,response,status,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer, 			Object... providedArgs) throws Exception;1496837955;Invoke the method and handle the return value through one of the_configured {@link HandlerMethodReturnValueHandler}s._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer,_			Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || getResponseStatus() != null || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(getResponseStatusReason())) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invoke,the,method,and,handle,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,s,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,get,response,status,null,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,get,response,status,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer, 			Object... providedArgs) throws Exception;1498780456;Invoke the method and handle the return value through one of the_configured {@link HandlerMethodReturnValueHandler}s._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer,_			Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || getResponseStatus() != null || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(getResponseStatusReason())) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		Assert.state(this.returnValueHandlers != null, "No return value handlers")__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invoke,the,method,and,handle,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,s,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,get,response,status,null,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,get,response,status,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,assert,state,this,return,value,handlers,null,no,return,value,handlers,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer, 			Object... providedArgs) throws Exception;1508234190;Invoke the method and handle the return value through one of the_configured {@link HandlerMethodReturnValueHandler}s._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer,_			Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || getResponseStatus() != null || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(getResponseStatusReason())) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		Assert.state(this.returnValueHandlers != null, "No return value handlers")__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invoke,the,method,and,handle,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,s,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,get,response,status,null,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,get,response,status,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,assert,state,this,return,value,handlers,null,no,return,value,handlers,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer, 			Object... providedArgs) throws Exception;1529361191;Invoke the method and handle the return value through one of the_configured {@link HandlerMethodReturnValueHandler}s._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer,_			Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || getResponseStatus() != null || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(getResponseStatusReason())) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		Assert.state(this.returnValueHandlers != null, "No return value handlers")__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(formatErrorForReturnValue("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invoke,the,method,and,handle,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,s,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,get,response,status,null,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,get,response,status,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,assert,state,this,return,value,handlers,null,no,return,value,handlers,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,format,error,for,return,value,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer, 			Object... providedArgs) throws Exception;1529721864;Invoke the method and handle the return value through one of the_configured {@link HandlerMethodReturnValueHandler}s._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer,_			Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || getResponseStatus() != null || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(getResponseStatusReason())) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		Assert.state(this.returnValueHandlers != null, "No return value handlers")__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(formatErrorForReturnValue(returnValue), ex)__			}_			throw ex__		}_	};invoke,the,method,and,handle,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,s,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,get,response,status,null,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,get,response,status,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,assert,state,this,return,value,handlers,null,no,return,value,handlers,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,format,error,for,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer, 			Object... providedArgs) throws Exception;1530174524;Invoke the method and handle the return value through one of the_configured {@link HandlerMethodReturnValueHandler HandlerMethodReturnValueHandlers}._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer,_			Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || getResponseStatus() != null || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(getResponseStatusReason())) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		Assert.state(this.returnValueHandlers != null, "No return value handlers")__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(formatErrorForReturnValue(returnValue), ex)__			}_			throw ex__		}_	};invoke,the,method,and,handle,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,handler,method,return,value,handlers,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,get,response,status,null,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,get,response,status,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,assert,state,this,return,value,handlers,null,no,return,value,handlers,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,format,error,for,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer, 			Object... providedArgs) throws Exception;1530294255;Invoke the method and handle the return value through one of the_configured {@link HandlerMethodReturnValueHandler HandlerMethodReturnValueHandlers}._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer,_			Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || getResponseStatus() != null || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(getResponseStatusReason())) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		Assert.state(this.returnValueHandlers != null, "No return value handlers")__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(formatErrorForReturnValue(returnValue), ex)__			}_			throw ex__		}_	};invoke,the,method,and,handle,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,handler,method,return,value,handlers,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,get,response,status,null,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,get,response,status,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,assert,state,this,return,value,handlers,null,no,return,value,handlers,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,format,error,for,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer, 			Object... providedArgs) throws Exception;1532520919;Invoke the method and handle the return value through one of the_configured {@link HandlerMethodReturnValueHandler HandlerMethodReturnValueHandlers}._@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type (not resolved);public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer,_			Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)__		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || getResponseStatus() != null || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(getResponseStatusReason())) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)__		Assert.state(this.returnValueHandlers != null, "No return value handlers")__		try {_			this.returnValueHandlers.handleReturnValue(_					returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(formatErrorForReturnValue(returnValue), ex)__			}_			throw ex__		}_	};invoke,the,method,and,handle,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,handler,method,return,value,handlers,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,get,response,status,null,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,get,response,status,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,assert,state,this,return,value,handlers,null,no,return,value,handlers,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,format,error,for,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1334781369;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1335199845;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1336772474;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1342803001;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1344035753;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1345223391;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1347300061;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1356735495;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1357119239;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1368482696;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1381799213;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1413405543;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1413406589;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1417442844;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1422572109;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1427139532;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1433084423;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1441791912;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1452896134;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1453827975;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1458754760;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1467456930;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1477860027;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1482012648;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1487362018;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1491224509;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1491659765;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1492093025;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1493136239;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1496837955;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1498780456;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1508234190;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1529361191;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1529721864;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1530174524;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1530294255;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers);1532520919;Register {@link HandlerMethodReturnValueHandler} instances to use to_handle return values.;public void setHandlerMethodReturnValueHandlers(HandlerMethodReturnValueHandlerComposite returnValueHandlers) {_		this.returnValueHandlers = returnValueHandlers__	};register,link,handler,method,return,value,handler,instances,to,use,to,handle,return,values;public,void,set,handler,method,return,value,handlers,handler,method,return,value,handler,composite,return,value,handlers,this,return,value,handlers,return,value,handlers
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1413405543;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1413406589;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1417442844;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1422572109;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1427139532;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1433084423;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1441791912;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1452896134;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1453827975;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1458754760;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1467456930;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1477860027;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1482012648;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1487362018;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1491224509;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1491659765;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1492093025;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1493136239;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1496837955;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1498780456;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1508234190;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1529361191;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1529721864;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1530174524;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1530294255;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> ConcurrentResultHandlerMethod -> @Override 		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType);1532520919;Bridge to controller method-level annotations.;@Override_		public <A extends Annotation> A getMethodAnnotation(Class<A> annotationType) {_			return ServletInvocableHandlerMethod.this.getMethodAnnotation(annotationType)__		};bridge,to,controller,method,level,annotations;override,public,a,extends,annotation,a,get,method,annotation,class,a,annotation,type,return,servlet,invocable,handler,method,this,get,method,annotation,annotation,type
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1347300061;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__		initResponseStatus()__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1356735495;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__		initResponseStatus()__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1357119239;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__		initResponseStatus()__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1368482696;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__		initResponseStatus()__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1381799213;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__		initResponseStatus()__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1413405543;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__		initResponseStatus()__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1413406589;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__		initResponseStatus()__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1417442844;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__		initResponseStatus()__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1422572109;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__		initResponseStatus()__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1427139532;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__		initResponseStatus()__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1433084423;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__		initResponseStatus()__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1441791912;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__		initResponseStatus()__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1452896134;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__		initResponseStatus()__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1453827975;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__		initResponseStatus()__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1458754760;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__		initResponseStatus()__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1467456930;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__		initResponseStatus()__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1477860027;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__		initResponseStatus()__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1482012648;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__		initResponseStatus()__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1487362018;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__		initResponseStatus()__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1491224509;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__		initResponseStatus()__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method,init,response,status
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1491659765;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1492093025;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1493136239;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1496837955;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1498780456;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1508234190;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1529361191;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1529721864;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1530174524;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1530294255;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method
ServletInvocableHandlerMethod -> public ServletInvocableHandlerMethod(HandlerMethod handlerMethod);1532520919;Create an instance from a {@code HandlerMethod}.;public ServletInvocableHandlerMethod(HandlerMethod handlerMethod) {_		super(handlerMethod)__	};create,an,instance,from,a,code,handler,method;public,servlet,invocable,handler,method,handler,method,handler,method,super,handler,method
ServletInvocableHandlerMethod -> public final void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1334781369;Invokes the method and handles the return value through a registered_{@link HandlerMethodReturnValueHandler}.__@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type, not resolved;public final void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		AsyncExecutionChain chain = AsyncExecutionChain.getForCurrentRequest(webRequest.getRequest())__		chain.addDelegatingCallable(geAsyncCallable(webRequest, mavContainer, providedArgs))___		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)___		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}__		mavContainer.setRequestHandled(false)___		try {_			this.returnValueHandlers.handleReturnValue(returnValue, getReturnValueType(returnValue), mavContainer, webRequest)___		} catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,a,registered,link,handler,method,return,value,handler,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,final,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,async,execution,chain,chain,async,execution,chain,get,for,current,request,web,request,get,request,chain,add,delegating,callable,ge,async,callable,web,request,mav,container,provided,args,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public final void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1335199845;Invokes the method and handles the return value through a registered_{@link HandlerMethodReturnValueHandler}.__@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type, not resolved;public final void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		AsyncExecutionChain chain = AsyncExecutionChain.getForCurrentRequest(webRequest.getRequest())__		chain.addDelegatingCallable(geAsyncCallable(webRequest, mavContainer, providedArgs))___		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)___		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}__		mavContainer.setRequestHandled(false)___		try {_			this.returnValueHandlers.handleReturnValue(returnValue, getReturnValueType(returnValue), mavContainer, webRequest)___		} catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,a,registered,link,handler,method,return,value,handler,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,final,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,async,execution,chain,chain,async,execution,chain,get,for,current,request,web,request,get,request,chain,add,delegating,callable,ge,async,callable,web,request,mav,container,provided,args,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public final void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1336772474;Invokes the method and handles the return value through a registered_{@link HandlerMethodReturnValueHandler}.__@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type, not resolved;public final void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		AsyncExecutionChain chain = AsyncExecutionChain.getForCurrentRequest(webRequest.getRequest())__		chain.addDelegatingCallable(geAsyncCallable(webRequest, mavContainer, providedArgs))___		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)___		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)___		try {_			this.returnValueHandlers.handleReturnValue(returnValue, getReturnValueType(returnValue), mavContainer, webRequest)___		} catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,a,registered,link,handler,method,return,value,handler,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,final,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,async,execution,chain,chain,async,execution,chain,get,for,current,request,web,request,get,request,chain,add,delegating,callable,ge,async,callable,web,request,mav,container,provided,args,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public final void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1342803001;Invokes the method and handles the return value through a registered_{@link HandlerMethodReturnValueHandler}.__@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type, not resolved;public final void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)___		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)___		AsyncExecutionChain chain = AsyncExecutionChain.getForCurrentRequest(webRequest.getRequest())__		chain.push(geAsyncCallable(webRequest, mavContainer, providedArgs))___		try {_			this.returnValueHandlers.handleReturnValue(returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_		finally {_			chain.pop()__		}_	};invokes,the,method,and,handles,the,return,value,through,a,registered,link,handler,method,return,value,handler,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,final,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,async,execution,chain,chain,async,execution,chain,get,for,current,request,web,request,get,request,chain,push,ge,async,callable,web,request,mav,container,provided,args,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex,finally,chain,pop
ServletInvocableHandlerMethod -> public final void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1344035753;Invokes the method and handles the return value through a registered_{@link HandlerMethodReturnValueHandler}.__@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type, not resolved;public final void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)___		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)___		try {_			this.returnValueHandlers.handleReturnValue(returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,a,registered,link,handler,method,return,value,handler,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,final,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public final void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1345223391;Invokes the method and handles the return value through a registered_{@link HandlerMethodReturnValueHandler}.__@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type, not resolved;public final void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)___		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)___		try {_			this.returnValueHandlers.handleReturnValue(returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,a,registered,link,handler,method,return,value,handler,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,final,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public final void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1347300061;Invokes the method and handles the return value through a registered_{@link HandlerMethodReturnValueHandler}.__@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type, not resolved;public final void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)___		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)___		try {_			this.returnValueHandlers.handleReturnValue(returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,a,registered,link,handler,method,return,value,handler,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,final,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public final void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1356735495;Invokes the method and handles the return value through a registered_{@link HandlerMethodReturnValueHandler}.__@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type, not resolved;public final void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)___		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)___		try {_			this.returnValueHandlers.handleReturnValue(returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,a,registered,link,handler,method,return,value,handler,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,final,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public final void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1357119239;Invokes the method and handles the return value through a registered_{@link HandlerMethodReturnValueHandler}.__@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type, not resolved;public final void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)___		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)___		try {_			this.returnValueHandlers.handleReturnValue(returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,a,registered,link,handler,method,return,value,handler,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,final,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public final void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1368482696;Invokes the method and handles the return value through a registered_{@link HandlerMethodReturnValueHandler}.__@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type, not resolved;public final void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)___		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)___		try {_			this.returnValueHandlers.handleReturnValue(returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,a,registered,link,handler,method,return,value,handler,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,final,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public final void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1381799213;Invokes the method and handles the return value through a registered_{@link HandlerMethodReturnValueHandler}.__@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type, not resolved;public final void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)___		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)___		try {_			this.returnValueHandlers.handleReturnValue(returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,a,registered,link,handler,method,return,value,handler,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,final,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public final void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1413405543;Invokes the method and handles the return value through a registered_{@link HandlerMethodReturnValueHandler}.__@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type, not resolved;public final void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)___		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)___		try {_			this.returnValueHandlers.handleReturnValue(returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,a,registered,link,handler,method,return,value,handler,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,final,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public final void invokeAndHandle(ServletWebRequest webRequest, 			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception;1413406589;Invokes the method and handles the return value through one of the_configured {@link HandlerMethodReturnValueHandler}s.__@param webRequest the current request_@param mavContainer the ModelAndViewContainer for this request_@param providedArgs "given" arguments matched by type, not resolved;public final void invokeAndHandle(ServletWebRequest webRequest,_			ModelAndViewContainer mavContainer, Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(webRequest, mavContainer, providedArgs)___		setResponseStatus(webRequest)___		if (returnValue == null) {_			if (isRequestNotModified(webRequest) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}_		else if (StringUtils.hasText(this.responseReason)) {_			mavContainer.setRequestHandled(true)__			return__		}__		mavContainer.setRequestHandled(false)___		try {_			this.returnValueHandlers.handleReturnValue(returnValue, getReturnValueType(returnValue), mavContainer, webRequest)__		}_		catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,one,of,the,configured,link,handler,method,return,value,handler,s,param,web,request,the,current,request,param,mav,container,the,model,and,view,container,for,this,request,param,provided,args,given,arguments,matched,by,type,not,resolved;public,final,void,invoke,and,handle,servlet,web,request,web,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,web,request,mav,container,provided,args,set,response,status,web,request,if,return,value,null,if,is,request,not,modified,web,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,else,if,string,utils,has,text,this,response,reason,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,this,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,web,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public final void invokeAndHandle( 			NativeWebRequest request, ModelAndViewContainer mavContainer, 			Object... providedArgs) throws Exception;1328020251;Invokes the method and handles the return value through a registered {@link HandlerMethodReturnValueHandler}._<p>Return value handling may be skipped entirely when the method returns {@code null} (also possibly due_to a {@code void} return type) and one of the following additional conditions is true:_<ul>_<li>A {@link HandlerMethodArgumentResolver} has set the {@link ModelAndViewContainer#setRequestHandled(boolean)}_flag to {@code false} -- e.g. method arguments providing access to the response._<li>The request qualifies as "not modified" as defined in {@link ServletWebRequest#checkNotModified(long)}_and {@link ServletWebRequest#checkNotModified(String)}. In this case a response with "not modified" response_headers will be automatically generated without the need for return value handling._<li>The status on the response is set due to a @{@link ResponseStatus} instruction._</ul>_<p>After the return value is handled, callers of this method can use the {@link ModelAndViewContainer}_to gain access to model attributes, view selection choices, and to check if view resolution is even needed.__@param request the current request_@param mavContainer the {@link ModelAndViewContainer} for the current request_@param providedArgs argument values to try to use without the need for view resolution;public final void invokeAndHandle(_			NativeWebRequest request, ModelAndViewContainer mavContainer,_			Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(request, mavContainer, providedArgs)___		setResponseStatus((ServletWebRequest) request)___		if (returnValue == null) {_			if (isRequestNotModified(request) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}__		mavContainer.setRequestHandled(false)___		try {_			returnValueHandlers.handleReturnValue(returnValue, getReturnType(), mavContainer, request)__		} catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,a,registered,link,handler,method,return,value,handler,p,return,value,handling,may,be,skipped,entirely,when,the,method,returns,code,null,also,possibly,due,to,a,code,void,return,type,and,one,of,the,following,additional,conditions,is,true,ul,li,a,link,handler,method,argument,resolver,has,set,the,link,model,and,view,container,set,request,handled,boolean,flag,to,code,false,e,g,method,arguments,providing,access,to,the,response,li,the,request,qualifies,as,not,modified,as,defined,in,link,servlet,web,request,check,not,modified,long,and,link,servlet,web,request,check,not,modified,string,in,this,case,a,response,with,not,modified,response,headers,will,be,automatically,generated,without,the,need,for,return,value,handling,li,the,status,on,the,response,is,set,due,to,a,link,response,status,instruction,ul,p,after,the,return,value,is,handled,callers,of,this,method,can,use,the,link,model,and,view,container,to,gain,access,to,model,attributes,view,selection,choices,and,to,check,if,view,resolution,is,even,needed,param,request,the,current,request,param,mav,container,the,link,model,and,view,container,for,the,current,request,param,provided,args,argument,values,to,try,to,use,without,the,need,for,view,resolution;public,final,void,invoke,and,handle,native,web,request,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,request,mav,container,provided,args,set,response,status,servlet,web,request,request,if,return,value,null,if,is,request,not,modified,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,return,value,handlers,handle,return,value,return,value,get,return,type,mav,container,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
ServletInvocableHandlerMethod -> public final void invokeAndHandle( 			NativeWebRequest request, ModelAndViewContainer mavContainer, 			Object... providedArgs) throws Exception;1333745422;Invokes the method and handles the return value through a registered {@link HandlerMethodReturnValueHandler}._<p>Return value handling may be skipped entirely when the method returns {@code null} (also possibly due_to a {@code void} return type) and one of the following additional conditions is true:_<ul>_<li>A {@link HandlerMethodArgumentResolver} has set the {@link ModelAndViewContainer#setRequestHandled(boolean)}_flag to {@code false} -- e.g. method arguments providing access to the response._<li>The request qualifies as "not modified" as defined in {@link ServletWebRequest#checkNotModified(long)}_and {@link ServletWebRequest#checkNotModified(String)}. In this case a response with "not modified" response_headers will be automatically generated without the need for return value handling._<li>The status on the response is set due to a @{@link ResponseStatus} instruction._</ul>_<p>After the return value is handled, callers of this method can use the {@link ModelAndViewContainer}_to gain access to model attributes, view selection choices, and to check if view resolution is even needed.__@param request the current request_@param mavContainer the {@link ModelAndViewContainer} for the current request_@param providedArgs argument values to try to use without the need for view resolution;public final void invokeAndHandle(_			NativeWebRequest request, ModelAndViewContainer mavContainer,_			Object... providedArgs) throws Exception {__		Object returnValue = invokeForRequest(request, mavContainer, providedArgs)___		setResponseStatus((ServletWebRequest) request)___		if (returnValue == null) {_			if (isRequestNotModified(request) || hasResponseStatus() || mavContainer.isRequestHandled()) {_				mavContainer.setRequestHandled(true)__				return__			}_		}__		mavContainer.setRequestHandled(false)___		try {_			returnValueHandlers.handleReturnValue(returnValue, getReturnValueType(returnValue), mavContainer, request)__		} catch (Exception ex) {_			if (logger.isTraceEnabled()) {_				logger.trace(getReturnValueHandlingErrorMessage("Error handling return value", returnValue), ex)__			}_			throw ex__		}_	};invokes,the,method,and,handles,the,return,value,through,a,registered,link,handler,method,return,value,handler,p,return,value,handling,may,be,skipped,entirely,when,the,method,returns,code,null,also,possibly,due,to,a,code,void,return,type,and,one,of,the,following,additional,conditions,is,true,ul,li,a,link,handler,method,argument,resolver,has,set,the,link,model,and,view,container,set,request,handled,boolean,flag,to,code,false,e,g,method,arguments,providing,access,to,the,response,li,the,request,qualifies,as,not,modified,as,defined,in,link,servlet,web,request,check,not,modified,long,and,link,servlet,web,request,check,not,modified,string,in,this,case,a,response,with,not,modified,response,headers,will,be,automatically,generated,without,the,need,for,return,value,handling,li,the,status,on,the,response,is,set,due,to,a,link,response,status,instruction,ul,p,after,the,return,value,is,handled,callers,of,this,method,can,use,the,link,model,and,view,container,to,gain,access,to,model,attributes,view,selection,choices,and,to,check,if,view,resolution,is,even,needed,param,request,the,current,request,param,mav,container,the,link,model,and,view,container,for,the,current,request,param,provided,args,argument,values,to,try,to,use,without,the,need,for,view,resolution;public,final,void,invoke,and,handle,native,web,request,request,model,and,view,container,mav,container,object,provided,args,throws,exception,object,return,value,invoke,for,request,request,mav,container,provided,args,set,response,status,servlet,web,request,request,if,return,value,null,if,is,request,not,modified,request,has,response,status,mav,container,is,request,handled,mav,container,set,request,handled,true,return,mav,container,set,request,handled,false,try,return,value,handlers,handle,return,value,return,value,get,return,value,type,return,value,mav,container,request,catch,exception,ex,if,logger,is,trace,enabled,logger,trace,get,return,value,handling,error,message,error,handling,return,value,return,value,ex,throw,ex
