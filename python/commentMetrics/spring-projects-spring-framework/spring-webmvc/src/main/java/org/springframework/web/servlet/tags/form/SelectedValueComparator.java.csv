# id;timestamp;commentText;codeText;commentWords;codeWords
SelectedValueComparator -> public static boolean isSelected(BindStatus bindStatus, Object candidateValue);1328020251;Returns <code>true</code> if the supplied candidate value is equal to the value bound to_the supplied {@link BindStatus}. Equality in this case differs from standard Java equality and_is described in more detail <a href="#equality-contract">here</a>.;public static boolean isSelected(BindStatus bindStatus, Object candidateValue) {_		if (bindStatus == null) {_			return (candidateValue == null)__		}__		_		_		Object boundValue = bindStatus.getValue()__		if (ObjectUtils.nullSafeEquals(boundValue, candidateValue)) {_			return true__		}_		Object actualValue = bindStatus.getActualValue()__		if (actualValue != null && actualValue != boundValue &&_				ObjectUtils.nullSafeEquals(actualValue, candidateValue)) {_			return true__		}_		if (actualValue != null) {_			boundValue = actualValue__		}_		else if (boundValue == null) {_			return false__		}__		_		_		boolean selected = false__		if (boundValue.getClass().isArray()) {_			selected = collectionCompare(CollectionUtils.arrayToList(boundValue), candidateValue, bindStatus)__		}_		else if (boundValue instanceof Collection) {_			selected = collectionCompare((Collection) boundValue, candidateValue, bindStatus)__		}_		else if (boundValue instanceof Map) {_			selected = mapCompare((Map) boundValue, candidateValue, bindStatus)__		}_		if (!selected) {_			selected = exhaustiveCompare(boundValue, candidateValue, bindStatus.getEditor(), null)__		}_		return selected__	};returns,code,true,code,if,the,supplied,candidate,value,is,equal,to,the,value,bound,to,the,supplied,link,bind,status,equality,in,this,case,differs,from,standard,java,equality,and,is,described,in,more,detail,a,href,equality,contract,here,a;public,static,boolean,is,selected,bind,status,bind,status,object,candidate,value,if,bind,status,null,return,candidate,value,null,object,bound,value,bind,status,get,value,if,object,utils,null,safe,equals,bound,value,candidate,value,return,true,object,actual,value,bind,status,get,actual,value,if,actual,value,null,actual,value,bound,value,object,utils,null,safe,equals,actual,value,candidate,value,return,true,if,actual,value,null,bound,value,actual,value,else,if,bound,value,null,return,false,boolean,selected,false,if,bound,value,get,class,is,array,selected,collection,compare,collection,utils,array,to,list,bound,value,candidate,value,bind,status,else,if,bound,value,instanceof,collection,selected,collection,compare,collection,bound,value,candidate,value,bind,status,else,if,bound,value,instanceof,map,selected,map,compare,map,bound,value,candidate,value,bind,status,if,selected,selected,exhaustive,compare,bound,value,candidate,value,bind,status,get,editor,null,return,selected
SelectedValueComparator -> public static boolean isSelected(BindStatus bindStatus, Object candidateValue);1356735495;Returns {@code true} if the supplied candidate value is equal to the value bound to_the supplied {@link BindStatus}. Equality in this case differs from standard Java equality and_is described in more detail <a href="#equality-contract">here</a>.;public static boolean isSelected(BindStatus bindStatus, Object candidateValue) {_		if (bindStatus == null) {_			return (candidateValue == null)__		}__		_		_		Object boundValue = bindStatus.getValue()__		if (ObjectUtils.nullSafeEquals(boundValue, candidateValue)) {_			return true__		}_		Object actualValue = bindStatus.getActualValue()__		if (actualValue != null && actualValue != boundValue &&_				ObjectUtils.nullSafeEquals(actualValue, candidateValue)) {_			return true__		}_		if (actualValue != null) {_			boundValue = actualValue__		}_		else if (boundValue == null) {_			return false__		}__		_		_		boolean selected = false__		if (boundValue.getClass().isArray()) {_			selected = collectionCompare(CollectionUtils.arrayToList(boundValue), candidateValue, bindStatus)__		}_		else if (boundValue instanceof Collection) {_			selected = collectionCompare((Collection) boundValue, candidateValue, bindStatus)__		}_		else if (boundValue instanceof Map) {_			selected = mapCompare((Map) boundValue, candidateValue, bindStatus)__		}_		if (!selected) {_			selected = exhaustiveCompare(boundValue, candidateValue, bindStatus.getEditor(), null)__		}_		return selected__	};returns,code,true,if,the,supplied,candidate,value,is,equal,to,the,value,bound,to,the,supplied,link,bind,status,equality,in,this,case,differs,from,standard,java,equality,and,is,described,in,more,detail,a,href,equality,contract,here,a;public,static,boolean,is,selected,bind,status,bind,status,object,candidate,value,if,bind,status,null,return,candidate,value,null,object,bound,value,bind,status,get,value,if,object,utils,null,safe,equals,bound,value,candidate,value,return,true,object,actual,value,bind,status,get,actual,value,if,actual,value,null,actual,value,bound,value,object,utils,null,safe,equals,actual,value,candidate,value,return,true,if,actual,value,null,bound,value,actual,value,else,if,bound,value,null,return,false,boolean,selected,false,if,bound,value,get,class,is,array,selected,collection,compare,collection,utils,array,to,list,bound,value,candidate,value,bind,status,else,if,bound,value,instanceof,collection,selected,collection,compare,collection,bound,value,candidate,value,bind,status,else,if,bound,value,instanceof,map,selected,map,compare,map,bound,value,candidate,value,bind,status,if,selected,selected,exhaustive,compare,bound,value,candidate,value,bind,status,get,editor,null,return,selected
SelectedValueComparator -> public static boolean isSelected(BindStatus bindStatus, Object candidateValue);1363732310;Returns {@code true} if the supplied candidate value is equal to the value bound to_the supplied {@link BindStatus}. Equality in this case differs from standard Java equality and_is described in more detail <a href="#equality-contract">here</a>.;public static boolean isSelected(BindStatus bindStatus, Object candidateValue) {_		if (bindStatus == null) {_			return (candidateValue == null)__		}__		_		_		Object boundValue = bindStatus.getValue()__		if (ObjectUtils.nullSafeEquals(boundValue, candidateValue)) {_			return true__		}_		Object actualValue = bindStatus.getActualValue()__		if (actualValue != null && actualValue != boundValue &&_				ObjectUtils.nullSafeEquals(actualValue, candidateValue)) {_			return true__		}_		if (actualValue != null) {_			boundValue = actualValue__		}_		else if (boundValue == null) {_			return false__		}__		_		_		boolean selected = false__		if (boundValue.getClass().isArray()) {_			selected = collectionCompare(CollectionUtils.arrayToList(boundValue), candidateValue, bindStatus)__		}_		else if (boundValue instanceof Collection) {_			selected = collectionCompare((Collection) boundValue, candidateValue, bindStatus)__		}_		else if (boundValue instanceof Map) {_			selected = mapCompare((Map) boundValue, candidateValue, bindStatus)__		}_		if (!selected) {_			selected = exhaustiveCompare(boundValue, candidateValue, bindStatus.getEditor(), null)__		}_		return selected__	};returns,code,true,if,the,supplied,candidate,value,is,equal,to,the,value,bound,to,the,supplied,link,bind,status,equality,in,this,case,differs,from,standard,java,equality,and,is,described,in,more,detail,a,href,equality,contract,here,a;public,static,boolean,is,selected,bind,status,bind,status,object,candidate,value,if,bind,status,null,return,candidate,value,null,object,bound,value,bind,status,get,value,if,object,utils,null,safe,equals,bound,value,candidate,value,return,true,object,actual,value,bind,status,get,actual,value,if,actual,value,null,actual,value,bound,value,object,utils,null,safe,equals,actual,value,candidate,value,return,true,if,actual,value,null,bound,value,actual,value,else,if,bound,value,null,return,false,boolean,selected,false,if,bound,value,get,class,is,array,selected,collection,compare,collection,utils,array,to,list,bound,value,candidate,value,bind,status,else,if,bound,value,instanceof,collection,selected,collection,compare,collection,bound,value,candidate,value,bind,status,else,if,bound,value,instanceof,map,selected,map,compare,map,bound,value,candidate,value,bind,status,if,selected,selected,exhaustive,compare,bound,value,candidate,value,bind,status,get,editor,null,return,selected
SelectedValueComparator -> public static boolean isSelected(BindStatus bindStatus, Object candidateValue);1385412762;Returns {@code true} if the supplied candidate value is equal to the value bound to_the supplied {@link BindStatus}. Equality in this case differs from standard Java equality and_is described in more detail <a href="#equality-contract">here</a>.;public static boolean isSelected(BindStatus bindStatus, Object candidateValue) {_		if (bindStatus == null) {_			return (candidateValue == null)__		}__		_		_		Object boundValue = bindStatus.getValue()__		if (ObjectUtils.nullSafeEquals(boundValue, candidateValue)) {_			return true__		}_		Object actualValue = bindStatus.getActualValue()__		if (actualValue != null && actualValue != boundValue &&_				ObjectUtils.nullSafeEquals(actualValue, candidateValue)) {_			return true__		}_		if (actualValue != null) {_			boundValue = actualValue__		}_		else if (boundValue == null) {_			return false__		}__		_		_		boolean selected = false__		if (boundValue.getClass().isArray()) {_			selected = collectionCompare(CollectionUtils.arrayToList(boundValue), candidateValue, bindStatus)__		}_		else if (boundValue instanceof Collection) {_			selected = collectionCompare((Collection<?>) boundValue, candidateValue, bindStatus)__		}_		else if (boundValue instanceof Map) {_			selected = mapCompare((Map<?, ?>) boundValue, candidateValue, bindStatus)__		}_		if (!selected) {_			selected = exhaustiveCompare(boundValue, candidateValue, bindStatus.getEditor(), null)__		}_		return selected__	};returns,code,true,if,the,supplied,candidate,value,is,equal,to,the,value,bound,to,the,supplied,link,bind,status,equality,in,this,case,differs,from,standard,java,equality,and,is,described,in,more,detail,a,href,equality,contract,here,a;public,static,boolean,is,selected,bind,status,bind,status,object,candidate,value,if,bind,status,null,return,candidate,value,null,object,bound,value,bind,status,get,value,if,object,utils,null,safe,equals,bound,value,candidate,value,return,true,object,actual,value,bind,status,get,actual,value,if,actual,value,null,actual,value,bound,value,object,utils,null,safe,equals,actual,value,candidate,value,return,true,if,actual,value,null,bound,value,actual,value,else,if,bound,value,null,return,false,boolean,selected,false,if,bound,value,get,class,is,array,selected,collection,compare,collection,utils,array,to,list,bound,value,candidate,value,bind,status,else,if,bound,value,instanceof,collection,selected,collection,compare,collection,bound,value,candidate,value,bind,status,else,if,bound,value,instanceof,map,selected,map,compare,map,bound,value,candidate,value,bind,status,if,selected,selected,exhaustive,compare,bound,value,candidate,value,bind,status,get,editor,null,return,selected
SelectedValueComparator -> public static boolean isSelected(BindStatus bindStatus, Object candidateValue);1405516279;Returns {@code true} if the supplied candidate value is equal to the value bound to_the supplied {@link BindStatus}. Equality in this case differs from standard Java equality and_is described in more detail <a href="#equality-contract">here</a>.;public static boolean isSelected(BindStatus bindStatus, Object candidateValue) {_		if (bindStatus == null) {_			return (candidateValue == null)__		}__		_		_		Object boundValue = bindStatus.getValue()__		if (ObjectUtils.nullSafeEquals(boundValue, candidateValue)) {_			return true__		}_		Object actualValue = bindStatus.getActualValue()__		if (actualValue != null && actualValue != boundValue &&_				ObjectUtils.nullSafeEquals(actualValue, candidateValue)) {_			return true__		}_		if (actualValue != null) {_			boundValue = actualValue__		}_		else if (boundValue == null) {_			return false__		}__		_		_		boolean selected = false__		if (boundValue.getClass().isArray()) {_			selected = collectionCompare(CollectionUtils.arrayToList(boundValue), candidateValue, bindStatus)__		}_		else if (boundValue instanceof Collection) {_			selected = collectionCompare((Collection<?>) boundValue, candidateValue, bindStatus)__		}_		else if (boundValue instanceof Map) {_			selected = mapCompare((Map<?, ?>) boundValue, candidateValue, bindStatus)__		}_		if (!selected) {_			selected = exhaustiveCompare(boundValue, candidateValue, bindStatus.getEditor(), null)__		}_		return selected__	};returns,code,true,if,the,supplied,candidate,value,is,equal,to,the,value,bound,to,the,supplied,link,bind,status,equality,in,this,case,differs,from,standard,java,equality,and,is,described,in,more,detail,a,href,equality,contract,here,a;public,static,boolean,is,selected,bind,status,bind,status,object,candidate,value,if,bind,status,null,return,candidate,value,null,object,bound,value,bind,status,get,value,if,object,utils,null,safe,equals,bound,value,candidate,value,return,true,object,actual,value,bind,status,get,actual,value,if,actual,value,null,actual,value,bound,value,object,utils,null,safe,equals,actual,value,candidate,value,return,true,if,actual,value,null,bound,value,actual,value,else,if,bound,value,null,return,false,boolean,selected,false,if,bound,value,get,class,is,array,selected,collection,compare,collection,utils,array,to,list,bound,value,candidate,value,bind,status,else,if,bound,value,instanceof,collection,selected,collection,compare,collection,bound,value,candidate,value,bind,status,else,if,bound,value,instanceof,map,selected,map,compare,map,bound,value,candidate,value,bind,status,if,selected,selected,exhaustive,compare,bound,value,candidate,value,bind,status,get,editor,null,return,selected
SelectedValueComparator -> public static boolean isSelected(BindStatus bindStatus, Object candidateValue);1467730834;Returns {@code true} if the supplied candidate value is equal to the value bound to_the supplied {@link BindStatus}. Equality in this case differs from standard Java equality and_is described in more detail <a href="#equality-contract">here</a>.;public static boolean isSelected(BindStatus bindStatus, Object candidateValue) {_		if (bindStatus == null) {_			return (candidateValue == null)__		}__		_		_		Object boundValue = bindStatus.getValue()__		if (ObjectUtils.nullSafeEquals(boundValue, candidateValue)) {_			return true__		}_		Object actualValue = bindStatus.getActualValue()__		if (actualValue != null && actualValue != boundValue &&_				ObjectUtils.nullSafeEquals(actualValue, candidateValue)) {_			return true__		}_		if (actualValue != null) {_			boundValue = actualValue__		}_		else if (boundValue == null) {_			return false__		}__		_		_		boolean selected = false__		if (boundValue.getClass().isArray()) {_			selected = collectionCompare(CollectionUtils.arrayToList(boundValue), candidateValue, bindStatus)__		}_		else if (boundValue instanceof Collection) {_			selected = collectionCompare((Collection<?>) boundValue, candidateValue, bindStatus)__		}_		else if (boundValue instanceof Map) {_			selected = mapCompare((Map<?, ?>) boundValue, candidateValue, bindStatus)__		}_		if (!selected) {_			selected = exhaustiveCompare(boundValue, candidateValue, bindStatus.getEditor(), null)__		}_		return selected__	};returns,code,true,if,the,supplied,candidate,value,is,equal,to,the,value,bound,to,the,supplied,link,bind,status,equality,in,this,case,differs,from,standard,java,equality,and,is,described,in,more,detail,a,href,equality,contract,here,a;public,static,boolean,is,selected,bind,status,bind,status,object,candidate,value,if,bind,status,null,return,candidate,value,null,object,bound,value,bind,status,get,value,if,object,utils,null,safe,equals,bound,value,candidate,value,return,true,object,actual,value,bind,status,get,actual,value,if,actual,value,null,actual,value,bound,value,object,utils,null,safe,equals,actual,value,candidate,value,return,true,if,actual,value,null,bound,value,actual,value,else,if,bound,value,null,return,false,boolean,selected,false,if,bound,value,get,class,is,array,selected,collection,compare,collection,utils,array,to,list,bound,value,candidate,value,bind,status,else,if,bound,value,instanceof,collection,selected,collection,compare,collection,bound,value,candidate,value,bind,status,else,if,bound,value,instanceof,map,selected,map,compare,map,bound,value,candidate,value,bind,status,if,selected,selected,exhaustive,compare,bound,value,candidate,value,bind,status,get,editor,null,return,selected
SelectedValueComparator -> public static boolean isSelected(BindStatus bindStatus, Object candidateValue);1508233794;Returns {@code true} if the supplied candidate value is equal to the value bound to_the supplied {@link BindStatus}. Equality in this case differs from standard Java equality and_is described in more detail <a href="#equality-contract">here</a>.;public static boolean isSelected(BindStatus bindStatus, Object candidateValue) {_		if (bindStatus == null) {_			return (candidateValue == null)__		}__		_		_		Object boundValue = bindStatus.getValue()__		if (ObjectUtils.nullSafeEquals(boundValue, candidateValue)) {_			return true__		}_		Object actualValue = bindStatus.getActualValue()__		if (actualValue != null && actualValue != boundValue &&_				ObjectUtils.nullSafeEquals(actualValue, candidateValue)) {_			return true__		}_		if (actualValue != null) {_			boundValue = actualValue__		}_		else if (boundValue == null) {_			return false__		}__		_		_		boolean selected = false__		if (boundValue.getClass().isArray()) {_			selected = collectionCompare(CollectionUtils.arrayToList(boundValue), candidateValue, bindStatus)__		}_		else if (boundValue instanceof Collection) {_			selected = collectionCompare((Collection<?>) boundValue, candidateValue, bindStatus)__		}_		else if (boundValue instanceof Map) {_			selected = mapCompare((Map<?, ?>) boundValue, candidateValue, bindStatus)__		}_		if (!selected) {_			selected = exhaustiveCompare(boundValue, candidateValue, bindStatus.getEditor(), null)__		}_		return selected__	};returns,code,true,if,the,supplied,candidate,value,is,equal,to,the,value,bound,to,the,supplied,link,bind,status,equality,in,this,case,differs,from,standard,java,equality,and,is,described,in,more,detail,a,href,equality,contract,here,a;public,static,boolean,is,selected,bind,status,bind,status,object,candidate,value,if,bind,status,null,return,candidate,value,null,object,bound,value,bind,status,get,value,if,object,utils,null,safe,equals,bound,value,candidate,value,return,true,object,actual,value,bind,status,get,actual,value,if,actual,value,null,actual,value,bound,value,object,utils,null,safe,equals,actual,value,candidate,value,return,true,if,actual,value,null,bound,value,actual,value,else,if,bound,value,null,return,false,boolean,selected,false,if,bound,value,get,class,is,array,selected,collection,compare,collection,utils,array,to,list,bound,value,candidate,value,bind,status,else,if,bound,value,instanceof,collection,selected,collection,compare,collection,bound,value,candidate,value,bind,status,else,if,bound,value,instanceof,map,selected,map,compare,map,bound,value,candidate,value,bind,status,if,selected,selected,exhaustive,compare,bound,value,candidate,value,bind,status,get,editor,null,return,selected
SelectedValueComparator -> public static boolean isSelected(BindStatus bindStatus, Object candidateValue);1508532146;Returns {@code true} if the supplied candidate value is equal to the value bound to_the supplied {@link BindStatus}. Equality in this case differs from standard Java equality and_is described in more detail <a href="#equality-contract">here</a>.;public static boolean isSelected(BindStatus bindStatus, Object candidateValue) {_		if (bindStatus == null) {_			return (candidateValue == null)__		}__		_		_		Object boundValue = bindStatus.getValue()__		if (ObjectUtils.nullSafeEquals(boundValue, candidateValue)) {_			return true__		}_		Object actualValue = bindStatus.getActualValue()__		if (actualValue != null && actualValue != boundValue &&_				ObjectUtils.nullSafeEquals(actualValue, candidateValue)) {_			return true__		}_		if (actualValue != null) {_			boundValue = actualValue__		}_		else if (boundValue == null) {_			return false__		}__		_		_		boolean selected = false__		if (boundValue.getClass().isArray()) {_			selected = collectionCompare(CollectionUtils.arrayToList(boundValue), candidateValue, bindStatus)__		}_		else if (boundValue instanceof Collection) {_			selected = collectionCompare((Collection<?>) boundValue, candidateValue, bindStatus)__		}_		else if (boundValue instanceof Map) {_			selected = mapCompare((Map<?, ?>) boundValue, candidateValue, bindStatus)__		}_		if (!selected) {_			selected = exhaustiveCompare(boundValue, candidateValue, bindStatus.getEditor(), null)__		}_		return selected__	};returns,code,true,if,the,supplied,candidate,value,is,equal,to,the,value,bound,to,the,supplied,link,bind,status,equality,in,this,case,differs,from,standard,java,equality,and,is,described,in,more,detail,a,href,equality,contract,here,a;public,static,boolean,is,selected,bind,status,bind,status,object,candidate,value,if,bind,status,null,return,candidate,value,null,object,bound,value,bind,status,get,value,if,object,utils,null,safe,equals,bound,value,candidate,value,return,true,object,actual,value,bind,status,get,actual,value,if,actual,value,null,actual,value,bound,value,object,utils,null,safe,equals,actual,value,candidate,value,return,true,if,actual,value,null,bound,value,actual,value,else,if,bound,value,null,return,false,boolean,selected,false,if,bound,value,get,class,is,array,selected,collection,compare,collection,utils,array,to,list,bound,value,candidate,value,bind,status,else,if,bound,value,instanceof,collection,selected,collection,compare,collection,bound,value,candidate,value,bind,status,else,if,bound,value,instanceof,map,selected,map,compare,map,bound,value,candidate,value,bind,status,if,selected,selected,exhaustive,compare,bound,value,candidate,value,bind,status,get,editor,null,return,selected
