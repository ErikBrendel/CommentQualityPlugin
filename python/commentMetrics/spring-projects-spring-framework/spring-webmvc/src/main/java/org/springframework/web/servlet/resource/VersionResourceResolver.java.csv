# id;timestamp;commentText;codeText;commentWords;codeWords
VersionResourceResolver -> protected VersionStrategy findStrategy(String requestPath);1403626685;Finds a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy findStrategy(String requestPath) {_		String path = "/".concat(requestPath)__        List<String> matchingPatterns = new ArrayList<String>()__		for(String pattern : this.versionStrategyMap.keySet()) {_			if(this.pathMatcher.match(pattern, path)) {_                matchingPatterns.add(pattern)__			}_		}_        if(!matchingPatterns.isEmpty()) {_            Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__            Collections.sort(matchingPatterns, comparator)__            return this.versionStrategyMap.get(matchingPatterns.get(0))__        }__		return null__	};finds,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,find,strategy,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,string,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> protected VersionStrategy findStrategy(String requestPath);1405696918;Finds a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy findStrategy(String requestPath) {_		String path = "/".concat(requestPath)__        List<String> matchingPatterns = new ArrayList<String>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_                matchingPatterns.add(pattern)__			}_		}_        if (!matchingPatterns.isEmpty()) {_            Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__            Collections.sort(matchingPatterns, comparator)__            return this.versionStrategyMap.get(matchingPatterns.get(0))__        }__		return null__	};finds,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,find,strategy,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,string,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> @Nullable 	protected VersionStrategy getStrategyForPath(String requestPath);1495868221;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;@Nullable_	protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			Collections.sort(matchingPatterns, comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;nullable,protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> @Nullable 	protected VersionStrategy getStrategyForPath(String requestPath);1496837955;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;@Nullable_	protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			Collections.sort(matchingPatterns, comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;nullable,protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> @Nullable 	protected VersionStrategy getStrategyForPath(String requestPath);1502974979;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;@Nullable_	protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			Collections.sort(matchingPatterns, comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;nullable,protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> @Nullable 	protected VersionStrategy getStrategyForPath(String requestPath);1511188294;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;@Nullable_	protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			Collections.sort(matchingPatterns, comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;nullable,protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> @Nullable 	protected VersionStrategy getStrategyForPath(String requestPath);1518772998;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;@Nullable_	protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			matchingPatterns.sort(comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;nullable,protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,matching,patterns,sort,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> @Nullable 	protected VersionStrategy getStrategyForPath(String requestPath);1518810557;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;@Nullable_	protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			matchingPatterns.sort(comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;nullable,protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,matching,patterns,sort,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> @Nullable 	protected VersionStrategy getStrategyForPath(String requestPath);1529361191;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;@Nullable_	protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			matchingPatterns.sort(comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;nullable,protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,matching,patterns,sort,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> @Nullable 	protected VersionStrategy getStrategyForPath(String requestPath);1530174524;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;@Nullable_	protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			matchingPatterns.sort(comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;nullable,protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,matching,patterns,sort,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> @Nullable 	protected VersionStrategy getStrategyForPath(String requestPath);1530174524;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;@Nullable_	protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			matchingPatterns.sort(comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;nullable,protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,matching,patterns,sort,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> @Nullable 	protected VersionStrategy getStrategyForPath(String requestPath);1530201727;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;@Nullable_	protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			matchingPatterns.sort(comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;nullable,protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,matching,patterns,sort,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1409250308;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for(String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1409792592;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1414019172;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1440514150;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1441728690;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1450275875;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1450277942;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1450293581;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1452002114;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1452685925;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1453483839;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1453843788;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1458843770;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1467730834;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1468947211;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1473234753;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1473437889;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1481622207;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1490361283;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1495868221;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1496837955;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1502974979;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1511188294;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1518772998;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1518810557;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1529361191;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1530174524;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1530174524;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns);1530201727;Register a custom VersionStrategy to apply to resource URLs that match the_given path patterns._@param strategy the custom strategy_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see VersionStrategy;public VersionResourceResolver addVersionStrategy(VersionStrategy strategy, String... pathPatterns) {_		for (String pattern : pathPatterns) {_			getStrategyMap().put(pattern, strategy)__		}_		return this__	};register,a,custom,version,strategy,to,apply,to,resource,urls,that,match,the,given,path,patterns,param,strategy,the,custom,strategy,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,version,strategy;public,version,resource,resolver,add,version,strategy,version,strategy,strategy,string,path,patterns,for,string,pattern,path,patterns,get,strategy,map,put,pattern,strategy,return,this
VersionResourceResolver -> public void setVersionStrategyMap(Map<String, VersionStrategy> versionStrategyMap);1403626685;Set a Map with URL paths as keys and {@code VersionStrategy}_as values.__<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc.__@param versionStrategyMap map with URLs as keys and version strategies as values;public void setVersionStrategyMap(Map<String, VersionStrategy> versionStrategyMap) {_		this.versionStrategyMap = versionStrategyMap__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,version,strategy,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,version,strategy,map,map,string,version,strategy,version,strategy,map,this,version,strategy,map,version,strategy,map
VersionResourceResolver -> public void setVersionStrategyMap(Map<String, VersionStrategy> versionStrategyMap);1405696918;Set a Map with URL paths as keys and {@code VersionStrategy}_as values.__<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc.__@param versionStrategyMap map with URLs as keys and version strategies as values;public void setVersionStrategyMap(Map<String, VersionStrategy> versionStrategyMap) {_		this.versionStrategyMap = versionStrategyMap__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,version,strategy,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,version,strategy,map,map,string,version,strategy,version,strategy,map,this,version,strategy,map,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1409250308;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1409792592;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1414019172;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1440514150;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1441728690;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1450275875;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1450277942;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1450293581;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1452002114;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1452685925;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1453483839;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1453843788;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1458843770;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1467730834;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1468947211;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1473234753;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1473437889;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1481622207;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1490361283;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1495868221;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1496837955;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1502974979;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1511188294;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1518772998;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1518810557;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1529361191;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1530174524;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1530174524;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public Map<String, VersionStrategy> getStrategyMap();1530201727;Return the map with version strategies keyed by path pattern.;public Map<String, VersionStrategy> getStrategyMap() {_		return this.versionStrategyMap__	};return,the,map,with,version,strategies,keyed,by,path,pattern;public,map,string,version,strategy,get,strategy,map,return,this,version,strategy,map
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1409250308;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, e.g. {@code "{version}/js/main.js"}. This is useful (vs_content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, fetched from a_git commit sha, a property file, environment variable, and set with SpEL_expressions in the configuration (e.g. see {@code @Value} in Java config)._@param version a version string_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		addVersionStrategy(new FixedVersionStrategy(version), pathPatterns)__		return this__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,e,g,code,version,js,main,js,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,fetched,from,a,git,commit,sha,a,property,file,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,add,version,strategy,new,fixed,version,strategy,version,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1409792592;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, e.g. {@code "{version}/js/main.js"}. This is useful (vs_content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, fetched from a_git commit sha, a property file, environment variable, and set with SpEL_expressions in the configuration (e.g. see {@code @Value} in Java config)._@param version a version string_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		addVersionStrategy(new FixedVersionStrategy(version), pathPatterns)__		return this__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,e,g,code,version,js,main,js,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,fetched,from,a,git,commit,sha,a,property,file,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,add,version,strategy,new,fixed,version,strategy,version,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1414019172;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._@param version a version string_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		addVersionStrategy(new FixedVersionStrategy(version), pathPatterns)__		return this__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,add,version,strategy,new,fixed,version,strategy,version,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1440514150;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._@param version a version string_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		addVersionStrategy(new FixedVersionStrategy(version), pathPatterns)__		return this__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,add,version,strategy,new,fixed,version,strategy,version,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1441728690;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._@param version a version string_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		addVersionStrategy(new FixedVersionStrategy(version), pathPatterns)__		return this__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,add,version,strategy,new,fixed,version,strategy,version,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1450275875;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._@param version a version string_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		addVersionStrategy(new FixedVersionStrategy(version), pathPatterns)__		return this__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,add,version,strategy,new,fixed,version,strategy,version,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1450277942;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._@param version a version string_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		addVersionStrategy(new FixedVersionStrategy(version), pathPatterns)__		return this__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,add,version,strategy,new,fixed,version,strategy,version,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1450293581;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._@param version a version string_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		addVersionStrategy(new FixedVersionStrategy(version), pathPatterns)__		return this__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,add,version,strategy,new,fixed,version,strategy,version,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1452002114;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._@param version a version string_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		addVersionStrategy(new FixedVersionStrategy(version), pathPatterns)__		return this__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,add,version,strategy,new,fixed,version,strategy,version,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1452685925;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._@param version a version string_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		addVersionStrategy(new FixedVersionStrategy(version), pathPatterns)__		return this__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,add,version,strategy,new,fixed,version,strategy,version,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1453483839;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._<p>If not done already, variants of the given {@code pathPatterns}, prefixed with_the {@code version} will be also configured. For example, adding a {@code "/js/**"} path pattern_will also cofigure automatically a {@code "/v1.0.0/js/**"} with {@code "v1.0.0"} the_{@code version} String given as an argument._@param version a version string_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		List<String> patternsList = Arrays.asList(pathPatterns)__		List<String> prefixedPatterns = new ArrayList<String>(pathPatterns.length)__		String versionPrefix = "/" + version__		for(String pattern : patternsList) {_			prefixedPatterns.add(pattern)__			if(!pattern.startsWith(versionPrefix) && !patternsList.contains(versionPrefix + pattern)) {_				prefixedPatterns.add(versionPrefix + pattern)__			}_		}_		return addVersionStrategy(new FixedVersionStrategy(version), prefixedPatterns.toArray(new String[0]))__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,p,if,not,done,already,variants,of,the,given,code,path,patterns,prefixed,with,the,code,version,will,be,also,configured,for,example,adding,a,code,js,path,pattern,will,also,cofigure,automatically,a,code,v1,0,0,js,with,code,v1,0,0,the,code,version,string,given,as,an,argument,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,list,string,patterns,list,arrays,as,list,path,patterns,list,string,prefixed,patterns,new,array,list,string,path,patterns,length,string,version,prefix,version,for,string,pattern,patterns,list,prefixed,patterns,add,pattern,if,pattern,starts,with,version,prefix,patterns,list,contains,version,prefix,pattern,prefixed,patterns,add,version,prefix,pattern,return,add,version,strategy,new,fixed,version,strategy,version,prefixed,patterns,to,array,new,string,0
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1453843788;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._<p>If not done already, variants of the given {@code pathPatterns}, prefixed with_the {@code version} will be also configured. For example, adding a {@code "/js/**"} path pattern_will also cofigure automatically a {@code "/v1.0.0/js/**"} with {@code "v1.0.0"} the_{@code version} String given as an argument._@param version a version string_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		List<String> patternsList = Arrays.asList(pathPatterns)__		List<String> prefixedPatterns = new ArrayList<String>(pathPatterns.length)__		String versionPrefix = "/" + version__		for(String pattern : patternsList) {_			prefixedPatterns.add(pattern)__			if(!pattern.startsWith(versionPrefix) && !patternsList.contains(versionPrefix + pattern)) {_				prefixedPatterns.add(versionPrefix + pattern)__			}_		}_		return addVersionStrategy(new FixedVersionStrategy(version), prefixedPatterns.toArray(new String[0]))__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,p,if,not,done,already,variants,of,the,given,code,path,patterns,prefixed,with,the,code,version,will,be,also,configured,for,example,adding,a,code,js,path,pattern,will,also,cofigure,automatically,a,code,v1,0,0,js,with,code,v1,0,0,the,code,version,string,given,as,an,argument,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,list,string,patterns,list,arrays,as,list,path,patterns,list,string,prefixed,patterns,new,array,list,string,path,patterns,length,string,version,prefix,version,for,string,pattern,patterns,list,prefixed,patterns,add,pattern,if,pattern,starts,with,version,prefix,patterns,list,contains,version,prefix,pattern,prefixed,patterns,add,version,prefix,pattern,return,add,version,strategy,new,fixed,version,strategy,version,prefixed,patterns,to,array,new,string,0
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1458843770;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._<p>If not done already, variants of the given {@code pathPatterns}, prefixed with_the {@code version} will be also configured. For example, adding a {@code "/js/**"} path pattern_will also cofigure automatically a {@code "/v1.0.0/js/**"} with {@code "v1.0.0"} the_{@code version} String given as an argument._@param version a version string_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		List<String> patternsList = Arrays.asList(pathPatterns)__		List<String> prefixedPatterns = new ArrayList<String>(pathPatterns.length)__		String versionPrefix = "/" + version__		for (String pattern : patternsList) {_			prefixedPatterns.add(pattern)__			if (!pattern.startsWith(versionPrefix) && !patternsList.contains(versionPrefix + pattern)) {_				prefixedPatterns.add(versionPrefix + pattern)__			}_		}_		return addVersionStrategy(new FixedVersionStrategy(version), prefixedPatterns.toArray(new String[0]))__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,p,if,not,done,already,variants,of,the,given,code,path,patterns,prefixed,with,the,code,version,will,be,also,configured,for,example,adding,a,code,js,path,pattern,will,also,cofigure,automatically,a,code,v1,0,0,js,with,code,v1,0,0,the,code,version,string,given,as,an,argument,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,list,string,patterns,list,arrays,as,list,path,patterns,list,string,prefixed,patterns,new,array,list,string,path,patterns,length,string,version,prefix,version,for,string,pattern,patterns,list,prefixed,patterns,add,pattern,if,pattern,starts,with,version,prefix,patterns,list,contains,version,prefix,pattern,prefixed,patterns,add,version,prefix,pattern,return,add,version,strategy,new,fixed,version,strategy,version,prefixed,patterns,to,array,new,string,0
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1467730834;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._<p>If not done already, variants of the given {@code pathPatterns}, prefixed with_the {@code version} will be also configured. For example, adding a {@code "/js/**"} path pattern_will also cofigure automatically a {@code "/v1.0.0/js/**"} with {@code "v1.0.0"} the_{@code version} String given as an argument._@param version a version string_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		List<String> patternsList = Arrays.asList(pathPatterns)__		List<String> prefixedPatterns = new ArrayList<>(pathPatterns.length)__		String versionPrefix = "/" + version__		for (String pattern : patternsList) {_			prefixedPatterns.add(pattern)__			if (!pattern.startsWith(versionPrefix) && !patternsList.contains(versionPrefix + pattern)) {_				prefixedPatterns.add(versionPrefix + pattern)__			}_		}_		return addVersionStrategy(new FixedVersionStrategy(version), prefixedPatterns.toArray(new String[0]))__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,p,if,not,done,already,variants,of,the,given,code,path,patterns,prefixed,with,the,code,version,will,be,also,configured,for,example,adding,a,code,js,path,pattern,will,also,cofigure,automatically,a,code,v1,0,0,js,with,code,v1,0,0,the,code,version,string,given,as,an,argument,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,list,string,patterns,list,arrays,as,list,path,patterns,list,string,prefixed,patterns,new,array,list,path,patterns,length,string,version,prefix,version,for,string,pattern,patterns,list,prefixed,patterns,add,pattern,if,pattern,starts,with,version,prefix,patterns,list,contains,version,prefix,pattern,prefixed,patterns,add,version,prefix,pattern,return,add,version,strategy,new,fixed,version,strategy,version,prefixed,patterns,to,array,new,string,0
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1468947211;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._<p>If not done already, variants of the given {@code pathPatterns}, prefixed with_the {@code version} will be also configured. For example, adding a {@code "/js/**"} path pattern_will also cofigure automatically a {@code "/v1.0.0/js/**"} with {@code "v1.0.0"} the_{@code version} String given as an argument._@param version a version string_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		List<String> patternsList = Arrays.asList(pathPatterns)__		List<String> prefixedPatterns = new ArrayList<>(pathPatterns.length)__		String versionPrefix = "/" + version__		for (String pattern : patternsList) {_			prefixedPatterns.add(pattern)__			if (!pattern.startsWith(versionPrefix) && !patternsList.contains(versionPrefix + pattern)) {_				prefixedPatterns.add(versionPrefix + pattern)__			}_		}_		return addVersionStrategy(new FixedVersionStrategy(version), prefixedPatterns.toArray(new String[0]))__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,p,if,not,done,already,variants,of,the,given,code,path,patterns,prefixed,with,the,code,version,will,be,also,configured,for,example,adding,a,code,js,path,pattern,will,also,cofigure,automatically,a,code,v1,0,0,js,with,code,v1,0,0,the,code,version,string,given,as,an,argument,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,list,string,patterns,list,arrays,as,list,path,patterns,list,string,prefixed,patterns,new,array,list,path,patterns,length,string,version,prefix,version,for,string,pattern,patterns,list,prefixed,patterns,add,pattern,if,pattern,starts,with,version,prefix,patterns,list,contains,version,prefix,pattern,prefixed,patterns,add,version,prefix,pattern,return,add,version,strategy,new,fixed,version,strategy,version,prefixed,patterns,to,array,new,string,0
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1473234753;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._<p>If not done already, variants of the given {@code pathPatterns}, prefixed with_the {@code version} will be also configured. For example, adding a {@code "/js/**"} path pattern_will also cofigure automatically a {@code "/v1.0.0/js/**"} with {@code "v1.0.0"} the_{@code version} String given as an argument._@param version a version string_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		List<String> patternsList = Arrays.asList(pathPatterns)__		List<String> prefixedPatterns = new ArrayList<>(pathPatterns.length)__		String versionPrefix = "/" + version__		for (String pattern : patternsList) {_			prefixedPatterns.add(pattern)__			if (!pattern.startsWith(versionPrefix) && !patternsList.contains(versionPrefix + pattern)) {_				prefixedPatterns.add(versionPrefix + pattern)__			}_		}_		return addVersionStrategy(new FixedVersionStrategy(version), prefixedPatterns.toArray(new String[0]))__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,p,if,not,done,already,variants,of,the,given,code,path,patterns,prefixed,with,the,code,version,will,be,also,configured,for,example,adding,a,code,js,path,pattern,will,also,cofigure,automatically,a,code,v1,0,0,js,with,code,v1,0,0,the,code,version,string,given,as,an,argument,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,list,string,patterns,list,arrays,as,list,path,patterns,list,string,prefixed,patterns,new,array,list,path,patterns,length,string,version,prefix,version,for,string,pattern,patterns,list,prefixed,patterns,add,pattern,if,pattern,starts,with,version,prefix,patterns,list,contains,version,prefix,pattern,prefixed,patterns,add,version,prefix,pattern,return,add,version,strategy,new,fixed,version,strategy,version,prefixed,patterns,to,array,new,string,0
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1473437889;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._<p>If not done already, variants of the given {@code pathPatterns}, prefixed with_the {@code version} will be also configured. For example, adding a {@code "/js/**"} path pattern_will also cofigure automatically a {@code "/v1.0.0/js/**"} with {@code "v1.0.0"} the_{@code version} String given as an argument._@param version a version string_@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		List<String> patternsList = Arrays.asList(pathPatterns)__		List<String> prefixedPatterns = new ArrayList<>(pathPatterns.length)__		String versionPrefix = "/" + version__		for (String pattern : patternsList) {_			prefixedPatterns.add(pattern)__			if (!pattern.startsWith(versionPrefix) && !patternsList.contains(versionPrefix + pattern)) {_				prefixedPatterns.add(versionPrefix + pattern)__			}_		}_		return addVersionStrategy(new FixedVersionStrategy(version), prefixedPatterns.toArray(new String[0]))__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,p,if,not,done,already,variants,of,the,given,code,path,patterns,prefixed,with,the,code,version,will,be,also,configured,for,example,adding,a,code,js,path,pattern,will,also,cofigure,automatically,a,code,v1,0,0,js,with,code,v1,0,0,the,code,version,string,given,as,an,argument,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,list,string,patterns,list,arrays,as,list,path,patterns,list,string,prefixed,patterns,new,array,list,path,patterns,length,string,version,prefix,version,for,string,pattern,patterns,list,prefixed,patterns,add,pattern,if,pattern,starts,with,version,prefix,patterns,list,contains,version,prefix,pattern,prefixed,patterns,add,version,prefix,pattern,return,add,version,strategy,new,fixed,version,strategy,version,prefixed,patterns,to,array,new,string,0
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1481622207;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._<p>If not done already, variants of the given {@code pathPatterns}, prefixed with_the {@code version} will be also configured. For example, adding a {@code "/js/**"} path pattern_will also cofigure automatically a {@code "/v1.0.0/js/**"} with {@code "v1.0.0"} the_{@code version} String given as an argument._@param version a version string_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		List<String> patternsList = Arrays.asList(pathPatterns)__		List<String> prefixedPatterns = new ArrayList<>(pathPatterns.length)__		String versionPrefix = "/" + version__		for (String pattern : patternsList) {_			prefixedPatterns.add(pattern)__			if (!pattern.startsWith(versionPrefix) && !patternsList.contains(versionPrefix + pattern)) {_				prefixedPatterns.add(versionPrefix + pattern)__			}_		}_		return addVersionStrategy(new FixedVersionStrategy(version), prefixedPatterns.toArray(new String[0]))__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,p,if,not,done,already,variants,of,the,given,code,path,patterns,prefixed,with,the,code,version,will,be,also,configured,for,example,adding,a,code,js,path,pattern,will,also,cofigure,automatically,a,code,v1,0,0,js,with,code,v1,0,0,the,code,version,string,given,as,an,argument,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,list,string,patterns,list,arrays,as,list,path,patterns,list,string,prefixed,patterns,new,array,list,path,patterns,length,string,version,prefix,version,for,string,pattern,patterns,list,prefixed,patterns,add,pattern,if,pattern,starts,with,version,prefix,patterns,list,contains,version,prefix,pattern,prefixed,patterns,add,version,prefix,pattern,return,add,version,strategy,new,fixed,version,strategy,version,prefixed,patterns,to,array,new,string,0
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1490361283;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._<p>If not done already, variants of the given {@code pathPatterns}, prefixed with_the {@code version} will be also configured. For example, adding a {@code "/js/**"} path pattern_will also cofigure automatically a {@code "/v1.0.0/js/**"} with {@code "v1.0.0"} the_{@code version} String given as an argument._@param version a version string_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		List<String> patternsList = Arrays.asList(pathPatterns)__		List<String> prefixedPatterns = new ArrayList<>(pathPatterns.length)__		String versionPrefix = "/" + version__		for (String pattern : patternsList) {_			prefixedPatterns.add(pattern)__			if (!pattern.startsWith(versionPrefix) && !patternsList.contains(versionPrefix + pattern)) {_				prefixedPatterns.add(versionPrefix + pattern)__			}_		}_		return addVersionStrategy(new FixedVersionStrategy(version), prefixedPatterns.toArray(new String[0]))__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,p,if,not,done,already,variants,of,the,given,code,path,patterns,prefixed,with,the,code,version,will,be,also,configured,for,example,adding,a,code,js,path,pattern,will,also,cofigure,automatically,a,code,v1,0,0,js,with,code,v1,0,0,the,code,version,string,given,as,an,argument,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,list,string,patterns,list,arrays,as,list,path,patterns,list,string,prefixed,patterns,new,array,list,path,patterns,length,string,version,prefix,version,for,string,pattern,patterns,list,prefixed,patterns,add,pattern,if,pattern,starts,with,version,prefix,patterns,list,contains,version,prefix,pattern,prefixed,patterns,add,version,prefix,pattern,return,add,version,strategy,new,fixed,version,strategy,version,prefixed,patterns,to,array,new,string,0
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1495868221;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._<p>If not done already, variants of the given {@code pathPatterns}, prefixed with_the {@code version} will be also configured. For example, adding a {@code "/js/**"} path pattern_will also cofigure automatically a {@code "/v1.0.0/js/**"} with {@code "v1.0.0"} the_{@code version} String given as an argument._@param version a version string_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		List<String> patternsList = Arrays.asList(pathPatterns)__		List<String> prefixedPatterns = new ArrayList<>(pathPatterns.length)__		String versionPrefix = "/" + version__		for (String pattern : patternsList) {_			prefixedPatterns.add(pattern)__			if (!pattern.startsWith(versionPrefix) && !patternsList.contains(versionPrefix + pattern)) {_				prefixedPatterns.add(versionPrefix + pattern)__			}_		}_		return addVersionStrategy(new FixedVersionStrategy(version), prefixedPatterns.toArray(new String[0]))__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,p,if,not,done,already,variants,of,the,given,code,path,patterns,prefixed,with,the,code,version,will,be,also,configured,for,example,adding,a,code,js,path,pattern,will,also,cofigure,automatically,a,code,v1,0,0,js,with,code,v1,0,0,the,code,version,string,given,as,an,argument,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,list,string,patterns,list,arrays,as,list,path,patterns,list,string,prefixed,patterns,new,array,list,path,patterns,length,string,version,prefix,version,for,string,pattern,patterns,list,prefixed,patterns,add,pattern,if,pattern,starts,with,version,prefix,patterns,list,contains,version,prefix,pattern,prefixed,patterns,add,version,prefix,pattern,return,add,version,strategy,new,fixed,version,strategy,version,prefixed,patterns,to,array,new,string,0
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1496837955;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._<p>If not done already, variants of the given {@code pathPatterns}, prefixed with_the {@code version} will be also configured. For example, adding a {@code "/js/**"} path pattern_will also cofigure automatically a {@code "/v1.0.0/js/**"} with {@code "v1.0.0"} the_{@code version} String given as an argument._@param version a version string_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		List<String> patternsList = Arrays.asList(pathPatterns)__		List<String> prefixedPatterns = new ArrayList<>(pathPatterns.length)__		String versionPrefix = "/" + version__		for (String pattern : patternsList) {_			prefixedPatterns.add(pattern)__			if (!pattern.startsWith(versionPrefix) && !patternsList.contains(versionPrefix + pattern)) {_				prefixedPatterns.add(versionPrefix + pattern)__			}_		}_		return addVersionStrategy(new FixedVersionStrategy(version), prefixedPatterns.toArray(new String[0]))__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,p,if,not,done,already,variants,of,the,given,code,path,patterns,prefixed,with,the,code,version,will,be,also,configured,for,example,adding,a,code,js,path,pattern,will,also,cofigure,automatically,a,code,v1,0,0,js,with,code,v1,0,0,the,code,version,string,given,as,an,argument,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,list,string,patterns,list,arrays,as,list,path,patterns,list,string,prefixed,patterns,new,array,list,path,patterns,length,string,version,prefix,version,for,string,pattern,patterns,list,prefixed,patterns,add,pattern,if,pattern,starts,with,version,prefix,patterns,list,contains,version,prefix,pattern,prefixed,patterns,add,version,prefix,pattern,return,add,version,strategy,new,fixed,version,strategy,version,prefixed,patterns,to,array,new,string,0
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1502974979;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._<p>If not done already, variants of the given {@code pathPatterns}, prefixed with_the {@code version} will be also configured. For example, adding a {@code "/js/**"} path pattern_will also cofigure automatically a {@code "/v1.0.0/js/**"} with {@code "v1.0.0"} the_{@code version} String given as an argument._@param version a version string_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		List<String> patternsList = Arrays.asList(pathPatterns)__		List<String> prefixedPatterns = new ArrayList<>(pathPatterns.length)__		String versionPrefix = "/" + version__		for (String pattern : patternsList) {_			prefixedPatterns.add(pattern)__			if (!pattern.startsWith(versionPrefix) && !patternsList.contains(versionPrefix + pattern)) {_				prefixedPatterns.add(versionPrefix + pattern)__			}_		}_		return addVersionStrategy(new FixedVersionStrategy(version), prefixedPatterns.toArray(new String[0]))__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,p,if,not,done,already,variants,of,the,given,code,path,patterns,prefixed,with,the,code,version,will,be,also,configured,for,example,adding,a,code,js,path,pattern,will,also,cofigure,automatically,a,code,v1,0,0,js,with,code,v1,0,0,the,code,version,string,given,as,an,argument,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,list,string,patterns,list,arrays,as,list,path,patterns,list,string,prefixed,patterns,new,array,list,path,patterns,length,string,version,prefix,version,for,string,pattern,patterns,list,prefixed,patterns,add,pattern,if,pattern,starts,with,version,prefix,patterns,list,contains,version,prefix,pattern,prefixed,patterns,add,version,prefix,pattern,return,add,version,strategy,new,fixed,version,strategy,version,prefixed,patterns,to,array,new,string,0
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1511188294;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._<p>If not done already, variants of the given {@code pathPatterns}, prefixed with_the {@code version} will be also configured. For example, adding a {@code "/js/**"} path pattern_will also cofigure automatically a {@code "/v1.0.0/js/**"} with {@code "v1.0.0"} the_{@code version} String given as an argument._@param version a version string_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		List<String> patternsList = Arrays.asList(pathPatterns)__		List<String> prefixedPatterns = new ArrayList<>(pathPatterns.length)__		String versionPrefix = "/" + version__		for (String pattern : patternsList) {_			prefixedPatterns.add(pattern)__			if (!pattern.startsWith(versionPrefix) && !patternsList.contains(versionPrefix + pattern)) {_				prefixedPatterns.add(versionPrefix + pattern)__			}_		}_		return addVersionStrategy(new FixedVersionStrategy(version), prefixedPatterns.toArray(new String[0]))__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,p,if,not,done,already,variants,of,the,given,code,path,patterns,prefixed,with,the,code,version,will,be,also,configured,for,example,adding,a,code,js,path,pattern,will,also,cofigure,automatically,a,code,v1,0,0,js,with,code,v1,0,0,the,code,version,string,given,as,an,argument,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,list,string,patterns,list,arrays,as,list,path,patterns,list,string,prefixed,patterns,new,array,list,path,patterns,length,string,version,prefix,version,for,string,pattern,patterns,list,prefixed,patterns,add,pattern,if,pattern,starts,with,version,prefix,patterns,list,contains,version,prefix,pattern,prefixed,patterns,add,version,prefix,pattern,return,add,version,strategy,new,fixed,version,strategy,version,prefixed,patterns,to,array,new,string,0
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1518772998;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._<p>If not done already, variants of the given {@code pathPatterns}, prefixed with_the {@code version} will be also configured. For example, adding a {@code "/js/**"} path pattern_will also cofigure automatically a {@code "/v1.0.0/js/**"} with {@code "v1.0.0"} the_{@code version} String given as an argument._@param version a version string_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		List<String> patternsList = Arrays.asList(pathPatterns)__		List<String> prefixedPatterns = new ArrayList<>(pathPatterns.length)__		String versionPrefix = "/" + version__		for (String pattern : patternsList) {_			prefixedPatterns.add(pattern)__			if (!pattern.startsWith(versionPrefix) && !patternsList.contains(versionPrefix + pattern)) {_				prefixedPatterns.add(versionPrefix + pattern)__			}_		}_		return addVersionStrategy(new FixedVersionStrategy(version), prefixedPatterns.toArray(new String[0]))__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,p,if,not,done,already,variants,of,the,given,code,path,patterns,prefixed,with,the,code,version,will,be,also,configured,for,example,adding,a,code,js,path,pattern,will,also,cofigure,automatically,a,code,v1,0,0,js,with,code,v1,0,0,the,code,version,string,given,as,an,argument,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,list,string,patterns,list,arrays,as,list,path,patterns,list,string,prefixed,patterns,new,array,list,path,patterns,length,string,version,prefix,version,for,string,pattern,patterns,list,prefixed,patterns,add,pattern,if,pattern,starts,with,version,prefix,patterns,list,contains,version,prefix,pattern,prefixed,patterns,add,version,prefix,pattern,return,add,version,strategy,new,fixed,version,strategy,version,prefixed,patterns,to,array,new,string,0
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1518810557;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._<p>If not done already, variants of the given {@code pathPatterns}, prefixed with_the {@code version} will be also configured. For example, adding a {@code "/js/**"} path pattern_will also cofigure automatically a {@code "/v1.0.0/js/**"} with {@code "v1.0.0"} the_{@code version} String given as an argument._@param version a version string_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		List<String> patternsList = Arrays.asList(pathPatterns)__		List<String> prefixedPatterns = new ArrayList<>(pathPatterns.length)__		String versionPrefix = "/" + version__		for (String pattern : patternsList) {_			prefixedPatterns.add(pattern)__			if (!pattern.startsWith(versionPrefix) && !patternsList.contains(versionPrefix + pattern)) {_				prefixedPatterns.add(versionPrefix + pattern)__			}_		}_		return addVersionStrategy(new FixedVersionStrategy(version), StringUtils.toStringArray(prefixedPatterns))__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,p,if,not,done,already,variants,of,the,given,code,path,patterns,prefixed,with,the,code,version,will,be,also,configured,for,example,adding,a,code,js,path,pattern,will,also,cofigure,automatically,a,code,v1,0,0,js,with,code,v1,0,0,the,code,version,string,given,as,an,argument,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,list,string,patterns,list,arrays,as,list,path,patterns,list,string,prefixed,patterns,new,array,list,path,patterns,length,string,version,prefix,version,for,string,pattern,patterns,list,prefixed,patterns,add,pattern,if,pattern,starts,with,version,prefix,patterns,list,contains,version,prefix,pattern,prefixed,patterns,add,version,prefix,pattern,return,add,version,strategy,new,fixed,version,strategy,version,string,utils,to,string,array,prefixed,patterns
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1529361191;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._<p>If not done already, variants of the given {@code pathPatterns}, prefixed with_the {@code version} will be also configured. For example, adding a {@code "/js/**"} path pattern_will also cofigure automatically a {@code "/v1.0.0/js/**"} with {@code "v1.0.0"} the_{@code version} String given as an argument._@param version a version string_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		List<String> patternsList = Arrays.asList(pathPatterns)__		List<String> prefixedPatterns = new ArrayList<>(pathPatterns.length)__		String versionPrefix = "/" + version__		for (String pattern : patternsList) {_			prefixedPatterns.add(pattern)__			if (!pattern.startsWith(versionPrefix) && !patternsList.contains(versionPrefix + pattern)) {_				prefixedPatterns.add(versionPrefix + pattern)__			}_		}_		return addVersionStrategy(new FixedVersionStrategy(version), StringUtils.toStringArray(prefixedPatterns))__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,p,if,not,done,already,variants,of,the,given,code,path,patterns,prefixed,with,the,code,version,will,be,also,configured,for,example,adding,a,code,js,path,pattern,will,also,cofigure,automatically,a,code,v1,0,0,js,with,code,v1,0,0,the,code,version,string,given,as,an,argument,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,list,string,patterns,list,arrays,as,list,path,patterns,list,string,prefixed,patterns,new,array,list,path,patterns,length,string,version,prefix,version,for,string,pattern,patterns,list,prefixed,patterns,add,pattern,if,pattern,starts,with,version,prefix,patterns,list,contains,version,prefix,pattern,prefixed,patterns,add,version,prefix,pattern,return,add,version,strategy,new,fixed,version,strategy,version,string,utils,to,string,array,prefixed,patterns
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1530174524;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._<p>If not done already, variants of the given {@code pathPatterns}, prefixed with_the {@code version} will be also configured. For example, adding a {@code "/js/**"} path pattern_will also cofigure automatically a {@code "/v1.0.0/js/**"} with {@code "v1.0.0"} the_{@code version} String given as an argument._@param version a version string_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		List<String> patternsList = Arrays.asList(pathPatterns)__		List<String> prefixedPatterns = new ArrayList<>(pathPatterns.length)__		String versionPrefix = "/" + version__		for (String pattern : patternsList) {_			prefixedPatterns.add(pattern)__			if (!pattern.startsWith(versionPrefix) && !patternsList.contains(versionPrefix + pattern)) {_				prefixedPatterns.add(versionPrefix + pattern)__			}_		}_		return addVersionStrategy(new FixedVersionStrategy(version), StringUtils.toStringArray(prefixedPatterns))__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,p,if,not,done,already,variants,of,the,given,code,path,patterns,prefixed,with,the,code,version,will,be,also,configured,for,example,adding,a,code,js,path,pattern,will,also,cofigure,automatically,a,code,v1,0,0,js,with,code,v1,0,0,the,code,version,string,given,as,an,argument,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,list,string,patterns,list,arrays,as,list,path,patterns,list,string,prefixed,patterns,new,array,list,path,patterns,length,string,version,prefix,version,for,string,pattern,patterns,list,prefixed,patterns,add,pattern,if,pattern,starts,with,version,prefix,patterns,list,contains,version,prefix,pattern,prefixed,patterns,add,version,prefix,pattern,return,add,version,strategy,new,fixed,version,strategy,version,string,utils,to,string,array,prefixed,patterns
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1530174524;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._<p>If not done already, variants of the given {@code pathPatterns}, prefixed with_the {@code version} will be also configured. For example, adding a {@code "/js/**"} path pattern_will also cofigure automatically a {@code "/v1.0.0/js/**"} with {@code "v1.0.0"} the_{@code version} String given as an argument._@param version a version string_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		List<String> patternsList = Arrays.asList(pathPatterns)__		List<String> prefixedPatterns = new ArrayList<>(pathPatterns.length)__		String versionPrefix = "/" + version__		for (String pattern : patternsList) {_			prefixedPatterns.add(pattern)__			if (!pattern.startsWith(versionPrefix) && !patternsList.contains(versionPrefix + pattern)) {_				prefixedPatterns.add(versionPrefix + pattern)__			}_		}_		return addVersionStrategy(new FixedVersionStrategy(version), StringUtils.toStringArray(prefixedPatterns))__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,p,if,not,done,already,variants,of,the,given,code,path,patterns,prefixed,with,the,code,version,will,be,also,configured,for,example,adding,a,code,js,path,pattern,will,also,cofigure,automatically,a,code,v1,0,0,js,with,code,v1,0,0,the,code,version,string,given,as,an,argument,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,list,string,patterns,list,arrays,as,list,path,patterns,list,string,prefixed,patterns,new,array,list,path,patterns,length,string,version,prefix,version,for,string,pattern,patterns,list,prefixed,patterns,add,pattern,if,pattern,starts,with,version,prefix,patterns,list,contains,version,prefix,pattern,prefixed,patterns,add,version,prefix,pattern,return,add,version,strategy,new,fixed,version,strategy,version,string,utils,to,string,array,prefixed,patterns
VersionResourceResolver -> public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns);1530201727;Insert a fixed, prefix-based version in resource URLs that match the given_path patterns, for example: <code>"{version}/js/main.js"</code>. This is useful (vs._content-based versions) when using JavaScript module loaders._<p>The version may be a random number, the current date, or a value_fetched from a git commit sha, a property file, or environment variable_and set with SpEL expressions in the configuration (e.g. see {@code @Value}_in Java config)._<p>If not done already, variants of the given {@code pathPatterns}, prefixed with_the {@code version} will be also configured. For example, adding a {@code "/js/**"} path pattern_will also cofigure automatically a {@code "/v1.0.0/js/**"} with {@code "v1.0.0"} the_{@code version} String given as an argument._@param version a version string_@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see FixedVersionStrategy;public VersionResourceResolver addFixedVersionStrategy(String version, String... pathPatterns) {_		List<String> patternsList = Arrays.asList(pathPatterns)__		List<String> prefixedPatterns = new ArrayList<>(pathPatterns.length)__		String versionPrefix = "/" + version__		for (String pattern : patternsList) {_			prefixedPatterns.add(pattern)__			if (!pattern.startsWith(versionPrefix) && !patternsList.contains(versionPrefix + pattern)) {_				prefixedPatterns.add(versionPrefix + pattern)__			}_		}_		return addVersionStrategy(new FixedVersionStrategy(version), StringUtils.toStringArray(prefixedPatterns))__	};insert,a,fixed,prefix,based,version,in,resource,urls,that,match,the,given,path,patterns,for,example,code,version,js,main,js,code,this,is,useful,vs,content,based,versions,when,using,java,script,module,loaders,p,the,version,may,be,a,random,number,the,current,date,or,a,value,fetched,from,a,git,commit,sha,a,property,file,or,environment,variable,and,set,with,sp,el,expressions,in,the,configuration,e,g,see,code,value,in,java,config,p,if,not,done,already,variants,of,the,given,code,path,patterns,prefixed,with,the,code,version,will,be,also,configured,for,example,adding,a,code,js,path,pattern,will,also,cofigure,automatically,a,code,v1,0,0,js,with,code,v1,0,0,the,code,version,string,given,as,an,argument,param,version,a,version,string,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,fixed,version,strategy;public,version,resource,resolver,add,fixed,version,strategy,string,version,string,path,patterns,list,string,patterns,list,arrays,as,list,path,patterns,list,string,prefixed,patterns,new,array,list,path,patterns,length,string,version,prefix,version,for,string,pattern,patterns,list,prefixed,patterns,add,pattern,if,pattern,starts,with,version,prefix,patterns,list,contains,version,prefix,pattern,prefixed,patterns,add,version,prefix,pattern,return,add,version,strategy,new,fixed,version,strategy,version,string,utils,to,string,array,prefixed,patterns
VersionResourceResolver -> protected VersionStrategy getStrategyForPath(String requestPath);1406623262;Finds a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__        List<String> matchingPatterns = new ArrayList<String>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_                matchingPatterns.add(pattern)__			}_		}_        if (!matchingPatterns.isEmpty()) {_            Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__            Collections.sort(matchingPatterns, comparator)__            return this.versionStrategyMap.get(matchingPatterns.get(0))__        }__		return null__	};finds,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,string,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> protected VersionStrategy getStrategyForPath(String requestPath);1409160643;Finds a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__        List<String> matchingPatterns = new ArrayList<String>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_                matchingPatterns.add(pattern)__			}_		}_        if (!matchingPatterns.isEmpty()) {_            Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__            Collections.sort(matchingPatterns, comparator)__            return this.versionStrategyMap.get(matchingPatterns.get(0))__        }__		return null__	};finds,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,string,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> protected VersionStrategy getStrategyForPath(String requestPath);1409250308;Finds a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__        List<String> matchingPatterns = new ArrayList<String>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_                matchingPatterns.add(pattern)__			}_		}_        if (!matchingPatterns.isEmpty()) {_            Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__            Collections.sort(matchingPatterns, comparator)__            return this.versionStrategyMap.get(matchingPatterns.get(0))__        }__		return null__	};finds,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,string,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> protected VersionStrategy getStrategyForPath(String requestPath);1409792592;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__        List<String> matchingPatterns = new ArrayList<String>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_                matchingPatterns.add(pattern)__			}_		}_        if (!matchingPatterns.isEmpty()) {_            Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__            Collections.sort(matchingPatterns, comparator)__            return this.versionStrategyMap.get(matchingPatterns.get(0))__        }_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,string,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> protected VersionStrategy getStrategyForPath(String requestPath);1414019172;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__        List<String> matchingPatterns = new ArrayList<String>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_                matchingPatterns.add(pattern)__			}_		}_        if (!matchingPatterns.isEmpty()) {_            Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__            Collections.sort(matchingPatterns, comparator)__            return this.versionStrategyMap.get(matchingPatterns.get(0))__        }_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,string,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> protected VersionStrategy getStrategyForPath(String requestPath);1440514150;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__        List<String> matchingPatterns = new ArrayList<String>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_                matchingPatterns.add(pattern)__			}_		}_        if (!matchingPatterns.isEmpty()) {_            Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__            Collections.sort(matchingPatterns, comparator)__            return this.versionStrategyMap.get(matchingPatterns.get(0))__        }_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,string,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> protected VersionStrategy getStrategyForPath(String requestPath);1441728690;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__        List<String> matchingPatterns = new ArrayList<String>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_                matchingPatterns.add(pattern)__			}_		}_        if (!matchingPatterns.isEmpty()) {_            Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__            Collections.sort(matchingPatterns, comparator)__            return this.versionStrategyMap.get(matchingPatterns.get(0))__        }_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,string,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> protected VersionStrategy getStrategyForPath(String requestPath);1450275875;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<String>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			Collections.sort(matchingPatterns, comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,string,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> protected VersionStrategy getStrategyForPath(String requestPath);1450277942;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<String>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			Collections.sort(matchingPatterns, comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,string,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> protected VersionStrategy getStrategyForPath(String requestPath);1450293581;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<String>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			Collections.sort(matchingPatterns, comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,string,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> protected VersionStrategy getStrategyForPath(String requestPath);1452002114;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<String>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			Collections.sort(matchingPatterns, comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,string,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> protected VersionStrategy getStrategyForPath(String requestPath);1452685925;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<String>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			Collections.sort(matchingPatterns, comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,string,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> protected VersionStrategy getStrategyForPath(String requestPath);1453483839;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<String>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			Collections.sort(matchingPatterns, comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,string,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> protected VersionStrategy getStrategyForPath(String requestPath);1453843788;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<String>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			Collections.sort(matchingPatterns, comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,string,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> protected VersionStrategy getStrategyForPath(String requestPath);1458843770;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<String>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			Collections.sort(matchingPatterns, comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,string,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> protected VersionStrategy getStrategyForPath(String requestPath);1467730834;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			Collections.sort(matchingPatterns, comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> protected VersionStrategy getStrategyForPath(String requestPath);1468947211;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			Collections.sort(matchingPatterns, comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> protected VersionStrategy getStrategyForPath(String requestPath);1473234753;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			Collections.sort(matchingPatterns, comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> protected VersionStrategy getStrategyForPath(String requestPath);1473437889;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			Collections.sort(matchingPatterns, comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> protected VersionStrategy getStrategyForPath(String requestPath);1481622207;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			Collections.sort(matchingPatterns, comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> protected VersionStrategy getStrategyForPath(String requestPath);1490361283;Find a {@code VersionStrategy} for the request path of the requested resource._@return an instance of a {@code VersionStrategy} or null if none matches that request path;protected VersionStrategy getStrategyForPath(String requestPath) {_		String path = "/".concat(requestPath)__		List<String> matchingPatterns = new ArrayList<>()__		for (String pattern : this.versionStrategyMap.keySet()) {_			if (this.pathMatcher.match(pattern, path)) {_				matchingPatterns.add(pattern)__			}_		}_		if (!matchingPatterns.isEmpty()) {_			Comparator<String> comparator = this.pathMatcher.getPatternComparator(path)__			Collections.sort(matchingPatterns, comparator)__			return this.versionStrategyMap.get(matchingPatterns.get(0))__		}_		return null__	};find,a,code,version,strategy,for,the,request,path,of,the,requested,resource,return,an,instance,of,a,code,version,strategy,or,null,if,none,matches,that,request,path;protected,version,strategy,get,strategy,for,path,string,request,path,string,path,concat,request,path,list,string,matching,patterns,new,array,list,for,string,pattern,this,version,strategy,map,key,set,if,this,path,matcher,match,pattern,path,matching,patterns,add,pattern,if,matching,patterns,is,empty,comparator,string,comparator,this,path,matcher,get,pattern,comparator,path,collections,sort,matching,patterns,comparator,return,this,version,strategy,map,get,matching,patterns,get,0,return,null
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1409250308;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1409792592;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1414019172;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1440514150;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1441728690;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1450275875;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1450277942;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1450293581;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1452002114;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1452685925;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1453483839;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1453843788;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1458843770;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1467730834;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1468947211;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1473234753;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1473437889;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1481622207;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1490361283;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1495868221;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1496837955;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1502974979;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1511188294;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1518772998;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1518810557;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1529361191;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1530174524;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1530174524;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public VersionResourceResolver addContentVersionStrategy(String... pathPatterns);1530201727;Insert a content-based version in resource URLs that match the given path_patterns. The version is computed from the content of the file, e.g._{@code "css/main-e36d2e05253c6c7085a91522ce43a0b4.css"}. This is a good_default strategy to use except when it cannot be, for example when using_JavaScript module loaders, use {@link #addFixedVersionStrategy} instead_for serving JavaScript files._@param pathPatterns one or more resource URL path patterns,_relative to the pattern configured with the resource handler_@return the current instance for chained method invocation_@see ContentVersionStrategy;public VersionResourceResolver addContentVersionStrategy(String... pathPatterns) {_		addVersionStrategy(new ContentVersionStrategy(), pathPatterns)__		return this__	};insert,a,content,based,version,in,resource,urls,that,match,the,given,path,patterns,the,version,is,computed,from,the,content,of,the,file,e,g,code,css,main,e36d2e05253c6c7085a91522ce43a0b4,css,this,is,a,good,default,strategy,to,use,except,when,it,cannot,be,for,example,when,using,java,script,module,loaders,use,link,add,fixed,version,strategy,instead,for,serving,java,script,files,param,path,patterns,one,or,more,resource,url,path,patterns,relative,to,the,pattern,configured,with,the,resource,handler,return,the,current,instance,for,chained,method,invocation,see,content,version,strategy;public,version,resource,resolver,add,content,version,strategy,string,path,patterns,add,version,strategy,new,content,version,strategy,path,patterns,return,this
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1409160643;Set a Map with URL paths as keys and {@code VersionStrategy}_as values.__<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc.__@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1409250308;Set a Map with URL paths as keys and {@code VersionStrategy}_as values.__<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc.__@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1409792592;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1414019172;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1440514150;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1441728690;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1450275875;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1450277942;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1450293581;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1452002114;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1452685925;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1453483839;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1453843788;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1458843770;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1467730834;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1468947211;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1473234753;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1473437889;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1481622207;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1490361283;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1495868221;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1496837955;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1502974979;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1511188294;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1518772998;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1518810557;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1529361191;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1530174524;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1530174524;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
VersionResourceResolver -> public void setStrategyMap(Map<String, VersionStrategy> map);1530201727;Set a Map with URL paths as keys and {@code VersionStrategy} as values._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param map map with URLs as keys and version strategies as values;public void setStrategyMap(Map<String, VersionStrategy> map) {_		this.versionStrategyMap.clear()__		this.versionStrategyMap.putAll(map)__	};set,a,map,with,url,paths,as,keys,and,code,version,strategy,as,values,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,map,map,with,urls,as,keys,and,version,strategies,as,values;public,void,set,strategy,map,map,string,version,strategy,map,this,version,strategy,map,clear,this,version,strategy,map,put,all,map
