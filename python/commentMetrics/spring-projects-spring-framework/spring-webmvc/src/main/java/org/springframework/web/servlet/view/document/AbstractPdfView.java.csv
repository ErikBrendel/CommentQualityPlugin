# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractPdfView -> protected Document newDocument();1328020251;Create a new document to hold the PDF contents._<p>By default returns an A4 document, but the subclass can specify any_Document, possibly parameterized via bean properties defined on the View._@return the newly created iText Document instance_@see com.lowagie.text.Document#Document(com.lowagie.text.Rectangle);protected Document newDocument() {_		return new Document(PageSize.A4)__	};create,a,new,document,to,hold,the,pdf,contents,p,by,default,returns,an,a4,document,but,the,subclass,can,specify,any,document,possibly,parameterized,via,bean,properties,defined,on,the,view,return,the,newly,created,i,text,document,instance,see,com,lowagie,text,document,document,com,lowagie,text,rectangle;protected,document,new,document,return,new,document,page,size,a4
AbstractPdfView -> protected Document newDocument();1356735495;Create a new document to hold the PDF contents._<p>By default returns an A4 document, but the subclass can specify any_Document, possibly parameterized via bean properties defined on the View._@return the newly created iText Document instance_@see com.lowagie.text.Document#Document(com.lowagie.text.Rectangle);protected Document newDocument() {_		return new Document(PageSize.A4)__	};create,a,new,document,to,hold,the,pdf,contents,p,by,default,returns,an,a4,document,but,the,subclass,can,specify,any,document,possibly,parameterized,via,bean,properties,defined,on,the,view,return,the,newly,created,i,text,document,instance,see,com,lowagie,text,document,document,com,lowagie,text,rectangle;protected,document,new,document,return,new,document,page,size,a4
AbstractPdfView -> protected Document newDocument();1385423968;Create a new document to hold the PDF contents._<p>By default returns an A4 document, but the subclass can specify any_Document, possibly parameterized via bean properties defined on the View._@return the newly created iText Document instance_@see com.lowagie.text.Document#Document(com.lowagie.text.Rectangle);protected Document newDocument() {_		return new Document(PageSize.A4)__	};create,a,new,document,to,hold,the,pdf,contents,p,by,default,returns,an,a4,document,but,the,subclass,can,specify,any,document,possibly,parameterized,via,bean,properties,defined,on,the,view,return,the,newly,created,i,text,document,instance,see,com,lowagie,text,document,document,com,lowagie,text,rectangle;protected,document,new,document,return,new,document,page,size,a4
AbstractPdfView -> protected Document newDocument();1508843693;Create a new document to hold the PDF contents._<p>By default returns an A4 document, but the subclass can specify any_Document, possibly parameterized via bean properties defined on the View._@return the newly created iText Document instance_@see com.lowagie.text.Document#Document(com.lowagie.text.Rectangle);protected Document newDocument() {_		return new Document(PageSize.A4)__	};create,a,new,document,to,hold,the,pdf,contents,p,by,default,returns,an,a4,document,but,the,subclass,can,specify,any,document,possibly,parameterized,via,bean,properties,defined,on,the,view,return,the,newly,created,i,text,document,instance,see,com,lowagie,text,document,document,com,lowagie,text,rectangle;protected,document,new,document,return,new,document,page,size,a4
AbstractPdfView -> protected Document newDocument();1520438925;Create a new document to hold the PDF contents._<p>By default returns an A4 document, but the subclass can specify any_Document, possibly parameterized via bean properties defined on the View._@return the newly created iText Document instance_@see com.lowagie.text.Document#Document(com.lowagie.text.Rectangle);protected Document newDocument() {_		return new Document(PageSize.A4)__	};create,a,new,document,to,hold,the,pdf,contents,p,by,default,returns,an,a4,document,but,the,subclass,can,specify,any,document,possibly,parameterized,via,bean,properties,defined,on,the,view,return,the,newly,created,i,text,document,instance,see,com,lowagie,text,document,document,com,lowagie,text,rectangle;protected,document,new,document,return,new,document,page,size,a4
AbstractPdfView -> protected int getViewerPreferences();1328020251;Return the viewer preferences for the PDF file._<p>By default returns <code>AllowPrinting</code> and_<code>PageLayoutSinglePage</code>, but can be subclassed._The subclass can either have fixed preferences or retrieve_them from bean properties defined on the View._@return an int containing the bits information against PdfWriter definitions_@see com.lowagie.text.pdf.PdfWriter#AllowPrinting_@see com.lowagie.text.pdf.PdfWriter#PageLayoutSinglePage;protected int getViewerPreferences() {_		return PdfWriter.ALLOW_PRINTING | PdfWriter.PageLayoutSinglePage__	};return,the,viewer,preferences,for,the,pdf,file,p,by,default,returns,code,allow,printing,code,and,code,page,layout,single,page,code,but,can,be,subclassed,the,subclass,can,either,have,fixed,preferences,or,retrieve,them,from,bean,properties,defined,on,the,view,return,an,int,containing,the,bits,information,against,pdf,writer,definitions,see,com,lowagie,text,pdf,pdf,writer,allow,printing,see,com,lowagie,text,pdf,pdf,writer,page,layout,single,page;protected,int,get,viewer,preferences,return,pdf,writer,pdf,writer,page,layout,single,page
AbstractPdfView -> protected int getViewerPreferences();1356735495;Return the viewer preferences for the PDF file._<p>By default returns {@code AllowPrinting} and_{@code PageLayoutSinglePage}, but can be subclassed._The subclass can either have fixed preferences or retrieve_them from bean properties defined on the View._@return an int containing the bits information against PdfWriter definitions_@see com.lowagie.text.pdf.PdfWriter#AllowPrinting_@see com.lowagie.text.pdf.PdfWriter#PageLayoutSinglePage;protected int getViewerPreferences() {_		return PdfWriter.ALLOW_PRINTING | PdfWriter.PageLayoutSinglePage__	};return,the,viewer,preferences,for,the,pdf,file,p,by,default,returns,code,allow,printing,and,code,page,layout,single,page,but,can,be,subclassed,the,subclass,can,either,have,fixed,preferences,or,retrieve,them,from,bean,properties,defined,on,the,view,return,an,int,containing,the,bits,information,against,pdf,writer,definitions,see,com,lowagie,text,pdf,pdf,writer,allow,printing,see,com,lowagie,text,pdf,pdf,writer,page,layout,single,page;protected,int,get,viewer,preferences,return,pdf,writer,pdf,writer,page,layout,single,page
AbstractPdfView -> protected int getViewerPreferences();1385423968;Return the viewer preferences for the PDF file._<p>By default returns {@code AllowPrinting} and_{@code PageLayoutSinglePage}, but can be subclassed._The subclass can either have fixed preferences or retrieve_them from bean properties defined on the View._@return an int containing the bits information against PdfWriter definitions_@see com.lowagie.text.pdf.PdfWriter#AllowPrinting_@see com.lowagie.text.pdf.PdfWriter#PageLayoutSinglePage;protected int getViewerPreferences() {_		return PdfWriter.ALLOW_PRINTING | PdfWriter.PageLayoutSinglePage__	};return,the,viewer,preferences,for,the,pdf,file,p,by,default,returns,code,allow,printing,and,code,page,layout,single,page,but,can,be,subclassed,the,subclass,can,either,have,fixed,preferences,or,retrieve,them,from,bean,properties,defined,on,the,view,return,an,int,containing,the,bits,information,against,pdf,writer,definitions,see,com,lowagie,text,pdf,pdf,writer,allow,printing,see,com,lowagie,text,pdf,pdf,writer,page,layout,single,page;protected,int,get,viewer,preferences,return,pdf,writer,pdf,writer,page,layout,single,page
AbstractPdfView -> protected int getViewerPreferences();1508843693;Return the viewer preferences for the PDF file._<p>By default returns {@code AllowPrinting} and_{@code PageLayoutSinglePage}, but can be subclassed._The subclass can either have fixed preferences or retrieve_them from bean properties defined on the View._@return an int containing the bits information against PdfWriter definitions_@see com.lowagie.text.pdf.PdfWriter#AllowPrinting_@see com.lowagie.text.pdf.PdfWriter#PageLayoutSinglePage;protected int getViewerPreferences() {_		return PdfWriter.ALLOW_PRINTING | PdfWriter.PageLayoutSinglePage__	};return,the,viewer,preferences,for,the,pdf,file,p,by,default,returns,code,allow,printing,and,code,page,layout,single,page,but,can,be,subclassed,the,subclass,can,either,have,fixed,preferences,or,retrieve,them,from,bean,properties,defined,on,the,view,return,an,int,containing,the,bits,information,against,pdf,writer,definitions,see,com,lowagie,text,pdf,pdf,writer,allow,printing,see,com,lowagie,text,pdf,pdf,writer,page,layout,single,page;protected,int,get,viewer,preferences,return,pdf,writer,pdf,writer,page,layout,single,page
AbstractPdfView -> protected int getViewerPreferences();1520438925;Return the viewer preferences for the PDF file._<p>By default returns {@code AllowPrinting} and_{@code PageLayoutSinglePage}, but can be subclassed._The subclass can either have fixed preferences or retrieve_them from bean properties defined on the View._@return an int containing the bits information against PdfWriter definitions_@see com.lowagie.text.pdf.PdfWriter#AllowPrinting_@see com.lowagie.text.pdf.PdfWriter#PageLayoutSinglePage;protected int getViewerPreferences() {_		return PdfWriter.ALLOW_PRINTING | PdfWriter.PageLayoutSinglePage__	};return,the,viewer,preferences,for,the,pdf,file,p,by,default,returns,code,allow,printing,and,code,page,layout,single,page,but,can,be,subclassed,the,subclass,can,either,have,fixed,preferences,or,retrieve,them,from,bean,properties,defined,on,the,view,return,an,int,containing,the,bits,information,against,pdf,writer,definitions,see,com,lowagie,text,pdf,pdf,writer,allow,printing,see,com,lowagie,text,pdf,pdf,writer,page,layout,single,page;protected,int,get,viewer,preferences,return,pdf,writer,pdf,writer,page,layout,single,page
AbstractPdfView -> protected void prepareWriter(Map<String, Object> model, PdfWriter writer, HttpServletRequest request) 			throws DocumentException;1328020251;Prepare the given PdfWriter. Called before building the PDF document,_that is, before the call to <code>Document.open()</code>._<p>Useful for registering a page event listener, for example._The default implementation sets the viewer preferences as returned_by this class's <code>getViewerPreferences()</code> method._@param model the model, in case meta information must be populated from it_@param writer the PdfWriter to prepare_@param request in case we need locale etc. Shouldn't look at attributes._@throws DocumentException if thrown during writer preparation_@see com.lowagie.text.Document#open()_@see com.lowagie.text.pdf.PdfWriter#setPageEvent_@see com.lowagie.text.pdf.PdfWriter#setViewerPreferences_@see #getViewerPreferences();protected void prepareWriter(Map<String, Object> model, PdfWriter writer, HttpServletRequest request)_			throws DocumentException {__		writer.setViewerPreferences(getViewerPreferences())__	};prepare,the,given,pdf,writer,called,before,building,the,pdf,document,that,is,before,the,call,to,code,document,open,code,p,useful,for,registering,a,page,event,listener,for,example,the,default,implementation,sets,the,viewer,preferences,as,returned,by,this,class,s,code,get,viewer,preferences,code,method,param,model,the,model,in,case,meta,information,must,be,populated,from,it,param,writer,the,pdf,writer,to,prepare,param,request,in,case,we,need,locale,etc,shouldn,t,look,at,attributes,throws,document,exception,if,thrown,during,writer,preparation,see,com,lowagie,text,document,open,see,com,lowagie,text,pdf,pdf,writer,set,page,event,see,com,lowagie,text,pdf,pdf,writer,set,viewer,preferences,see,get,viewer,preferences;protected,void,prepare,writer,map,string,object,model,pdf,writer,writer,http,servlet,request,request,throws,document,exception,writer,set,viewer,preferences,get,viewer,preferences
AbstractPdfView -> protected void prepareWriter(Map<String, Object> model, PdfWriter writer, HttpServletRequest request) 			throws DocumentException;1356735495;Prepare the given PdfWriter. Called before building the PDF document,_that is, before the call to {@code Document.open()}._<p>Useful for registering a page event listener, for example._The default implementation sets the viewer preferences as returned_by this class's {@code getViewerPreferences()} method._@param model the model, in case meta information must be populated from it_@param writer the PdfWriter to prepare_@param request in case we need locale etc. Shouldn't look at attributes._@throws DocumentException if thrown during writer preparation_@see com.lowagie.text.Document#open()_@see com.lowagie.text.pdf.PdfWriter#setPageEvent_@see com.lowagie.text.pdf.PdfWriter#setViewerPreferences_@see #getViewerPreferences();protected void prepareWriter(Map<String, Object> model, PdfWriter writer, HttpServletRequest request)_			throws DocumentException {__		writer.setViewerPreferences(getViewerPreferences())__	};prepare,the,given,pdf,writer,called,before,building,the,pdf,document,that,is,before,the,call,to,code,document,open,p,useful,for,registering,a,page,event,listener,for,example,the,default,implementation,sets,the,viewer,preferences,as,returned,by,this,class,s,code,get,viewer,preferences,method,param,model,the,model,in,case,meta,information,must,be,populated,from,it,param,writer,the,pdf,writer,to,prepare,param,request,in,case,we,need,locale,etc,shouldn,t,look,at,attributes,throws,document,exception,if,thrown,during,writer,preparation,see,com,lowagie,text,document,open,see,com,lowagie,text,pdf,pdf,writer,set,page,event,see,com,lowagie,text,pdf,pdf,writer,set,viewer,preferences,see,get,viewer,preferences;protected,void,prepare,writer,map,string,object,model,pdf,writer,writer,http,servlet,request,request,throws,document,exception,writer,set,viewer,preferences,get,viewer,preferences
AbstractPdfView -> protected void prepareWriter(Map<String, Object> model, PdfWriter writer, HttpServletRequest request) 			throws DocumentException;1385423968;Prepare the given PdfWriter. Called before building the PDF document,_that is, before the call to {@code Document.open()}._<p>Useful for registering a page event listener, for example._The default implementation sets the viewer preferences as returned_by this class's {@code getViewerPreferences()} method._@param model the model, in case meta information must be populated from it_@param writer the PdfWriter to prepare_@param request in case we need locale etc. Shouldn't look at attributes._@throws DocumentException if thrown during writer preparation_@see com.lowagie.text.Document#open()_@see com.lowagie.text.pdf.PdfWriter#setPageEvent_@see com.lowagie.text.pdf.PdfWriter#setViewerPreferences_@see #getViewerPreferences();protected void prepareWriter(Map<String, Object> model, PdfWriter writer, HttpServletRequest request)_			throws DocumentException {__		writer.setViewerPreferences(getViewerPreferences())__	};prepare,the,given,pdf,writer,called,before,building,the,pdf,document,that,is,before,the,call,to,code,document,open,p,useful,for,registering,a,page,event,listener,for,example,the,default,implementation,sets,the,viewer,preferences,as,returned,by,this,class,s,code,get,viewer,preferences,method,param,model,the,model,in,case,meta,information,must,be,populated,from,it,param,writer,the,pdf,writer,to,prepare,param,request,in,case,we,need,locale,etc,shouldn,t,look,at,attributes,throws,document,exception,if,thrown,during,writer,preparation,see,com,lowagie,text,document,open,see,com,lowagie,text,pdf,pdf,writer,set,page,event,see,com,lowagie,text,pdf,pdf,writer,set,viewer,preferences,see,get,viewer,preferences;protected,void,prepare,writer,map,string,object,model,pdf,writer,writer,http,servlet,request,request,throws,document,exception,writer,set,viewer,preferences,get,viewer,preferences
AbstractPdfView -> protected void prepareWriter(Map<String, Object> model, PdfWriter writer, HttpServletRequest request) 			throws DocumentException;1508843693;Prepare the given PdfWriter. Called before building the PDF document,_that is, before the call to {@code Document.open()}._<p>Useful for registering a page event listener, for example._The default implementation sets the viewer preferences as returned_by this class's {@code getViewerPreferences()} method._@param model the model, in case meta information must be populated from it_@param writer the PdfWriter to prepare_@param request in case we need locale etc. Shouldn't look at attributes._@throws DocumentException if thrown during writer preparation_@see com.lowagie.text.Document#open()_@see com.lowagie.text.pdf.PdfWriter#setPageEvent_@see com.lowagie.text.pdf.PdfWriter#setViewerPreferences_@see #getViewerPreferences();protected void prepareWriter(Map<String, Object> model, PdfWriter writer, HttpServletRequest request)_			throws DocumentException {__		writer.setViewerPreferences(getViewerPreferences())__	};prepare,the,given,pdf,writer,called,before,building,the,pdf,document,that,is,before,the,call,to,code,document,open,p,useful,for,registering,a,page,event,listener,for,example,the,default,implementation,sets,the,viewer,preferences,as,returned,by,this,class,s,code,get,viewer,preferences,method,param,model,the,model,in,case,meta,information,must,be,populated,from,it,param,writer,the,pdf,writer,to,prepare,param,request,in,case,we,need,locale,etc,shouldn,t,look,at,attributes,throws,document,exception,if,thrown,during,writer,preparation,see,com,lowagie,text,document,open,see,com,lowagie,text,pdf,pdf,writer,set,page,event,see,com,lowagie,text,pdf,pdf,writer,set,viewer,preferences,see,get,viewer,preferences;protected,void,prepare,writer,map,string,object,model,pdf,writer,writer,http,servlet,request,request,throws,document,exception,writer,set,viewer,preferences,get,viewer,preferences
AbstractPdfView -> protected void prepareWriter(Map<String, Object> model, PdfWriter writer, HttpServletRequest request) 			throws DocumentException;1520438925;Prepare the given PdfWriter. Called before building the PDF document,_that is, before the call to {@code Document.open()}._<p>Useful for registering a page event listener, for example._The default implementation sets the viewer preferences as returned_by this class's {@code getViewerPreferences()} method._@param model the model, in case meta information must be populated from it_@param writer the PdfWriter to prepare_@param request in case we need locale etc. Shouldn't look at attributes._@throws DocumentException if thrown during writer preparation_@see com.lowagie.text.Document#open()_@see com.lowagie.text.pdf.PdfWriter#setPageEvent_@see com.lowagie.text.pdf.PdfWriter#setViewerPreferences_@see #getViewerPreferences();protected void prepareWriter(Map<String, Object> model, PdfWriter writer, HttpServletRequest request)_			throws DocumentException {__		writer.setViewerPreferences(getViewerPreferences())__	};prepare,the,given,pdf,writer,called,before,building,the,pdf,document,that,is,before,the,call,to,code,document,open,p,useful,for,registering,a,page,event,listener,for,example,the,default,implementation,sets,the,viewer,preferences,as,returned,by,this,class,s,code,get,viewer,preferences,method,param,model,the,model,in,case,meta,information,must,be,populated,from,it,param,writer,the,pdf,writer,to,prepare,param,request,in,case,we,need,locale,etc,shouldn,t,look,at,attributes,throws,document,exception,if,thrown,during,writer,preparation,see,com,lowagie,text,document,open,see,com,lowagie,text,pdf,pdf,writer,set,page,event,see,com,lowagie,text,pdf,pdf,writer,set,viewer,preferences,see,get,viewer,preferences;protected,void,prepare,writer,map,string,object,model,pdf,writer,writer,http,servlet,request,request,throws,document,exception,writer,set,viewer,preferences,get,viewer,preferences
AbstractPdfView -> public AbstractPdfView();1328020251;This constructor sets the appropriate content type "application/pdf"._Note that IE won't take much notice of this, but there's not a lot we_can do about this. Generated documents should have a ".pdf" extension.;public AbstractPdfView() {_		setContentType("application/pdf")__	};this,constructor,sets,the,appropriate,content,type,application,pdf,note,that,ie,won,t,take,much,notice,of,this,but,there,s,not,a,lot,we,can,do,about,this,generated,documents,should,have,a,pdf,extension;public,abstract,pdf,view,set,content,type,application,pdf
AbstractPdfView -> public AbstractPdfView();1356735495;This constructor sets the appropriate content type "application/pdf"._Note that IE won't take much notice of this, but there's not a lot we_can do about this. Generated documents should have a ".pdf" extension.;public AbstractPdfView() {_		setContentType("application/pdf")__	};this,constructor,sets,the,appropriate,content,type,application,pdf,note,that,ie,won,t,take,much,notice,of,this,but,there,s,not,a,lot,we,can,do,about,this,generated,documents,should,have,a,pdf,extension;public,abstract,pdf,view,set,content,type,application,pdf
AbstractPdfView -> public AbstractPdfView();1385423968;This constructor sets the appropriate content type "application/pdf"._Note that IE won't take much notice of this, but there's not a lot we_can do about this. Generated documents should have a ".pdf" extension.;public AbstractPdfView() {_		setContentType("application/pdf")__	};this,constructor,sets,the,appropriate,content,type,application,pdf,note,that,ie,won,t,take,much,notice,of,this,but,there,s,not,a,lot,we,can,do,about,this,generated,documents,should,have,a,pdf,extension;public,abstract,pdf,view,set,content,type,application,pdf
AbstractPdfView -> public AbstractPdfView();1508843693;This constructor sets the appropriate content type "application/pdf"._Note that IE won't take much notice of this, but there's not a lot we_can do about this. Generated documents should have a ".pdf" extension.;public AbstractPdfView() {_		setContentType("application/pdf")__	};this,constructor,sets,the,appropriate,content,type,application,pdf,note,that,ie,won,t,take,much,notice,of,this,but,there,s,not,a,lot,we,can,do,about,this,generated,documents,should,have,a,pdf,extension;public,abstract,pdf,view,set,content,type,application,pdf
AbstractPdfView -> public AbstractPdfView();1520438925;This constructor sets the appropriate content type "application/pdf"._Note that IE won't take much notice of this, but there's not a lot we_can do about this. Generated documents should have a ".pdf" extension.;public AbstractPdfView() {_		setContentType("application/pdf")__	};this,constructor,sets,the,appropriate,content,type,application,pdf,note,that,ie,won,t,take,much,notice,of,this,but,there,s,not,a,lot,we,can,do,about,this,generated,documents,should,have,a,pdf,extension;public,abstract,pdf,view,set,content,type,application,pdf
AbstractPdfView -> protected PdfWriter newWriter(Document document, OutputStream os) throws DocumentException;1328020251;Create a new PdfWriter for the given iText Document._@param document the iText Document to create a writer for_@param os the OutputStream to write to_@return the PdfWriter instance to use_@throws DocumentException if thrown during writer creation;protected PdfWriter newWriter(Document document, OutputStream os) throws DocumentException {_		return PdfWriter.getInstance(document, os)__	};create,a,new,pdf,writer,for,the,given,i,text,document,param,document,the,i,text,document,to,create,a,writer,for,param,os,the,output,stream,to,write,to,return,the,pdf,writer,instance,to,use,throws,document,exception,if,thrown,during,writer,creation;protected,pdf,writer,new,writer,document,document,output,stream,os,throws,document,exception,return,pdf,writer,get,instance,document,os
AbstractPdfView -> protected PdfWriter newWriter(Document document, OutputStream os) throws DocumentException;1356735495;Create a new PdfWriter for the given iText Document._@param document the iText Document to create a writer for_@param os the OutputStream to write to_@return the PdfWriter instance to use_@throws DocumentException if thrown during writer creation;protected PdfWriter newWriter(Document document, OutputStream os) throws DocumentException {_		return PdfWriter.getInstance(document, os)__	};create,a,new,pdf,writer,for,the,given,i,text,document,param,document,the,i,text,document,to,create,a,writer,for,param,os,the,output,stream,to,write,to,return,the,pdf,writer,instance,to,use,throws,document,exception,if,thrown,during,writer,creation;protected,pdf,writer,new,writer,document,document,output,stream,os,throws,document,exception,return,pdf,writer,get,instance,document,os
AbstractPdfView -> protected PdfWriter newWriter(Document document, OutputStream os) throws DocumentException;1385423968;Create a new PdfWriter for the given iText Document._@param document the iText Document to create a writer for_@param os the OutputStream to write to_@return the PdfWriter instance to use_@throws DocumentException if thrown during writer creation;protected PdfWriter newWriter(Document document, OutputStream os) throws DocumentException {_		return PdfWriter.getInstance(document, os)__	};create,a,new,pdf,writer,for,the,given,i,text,document,param,document,the,i,text,document,to,create,a,writer,for,param,os,the,output,stream,to,write,to,return,the,pdf,writer,instance,to,use,throws,document,exception,if,thrown,during,writer,creation;protected,pdf,writer,new,writer,document,document,output,stream,os,throws,document,exception,return,pdf,writer,get,instance,document,os
AbstractPdfView -> protected PdfWriter newWriter(Document document, OutputStream os) throws DocumentException;1508843693;Create a new PdfWriter for the given iText Document._@param document the iText Document to create a writer for_@param os the OutputStream to write to_@return the PdfWriter instance to use_@throws DocumentException if thrown during writer creation;protected PdfWriter newWriter(Document document, OutputStream os) throws DocumentException {_		return PdfWriter.getInstance(document, os)__	};create,a,new,pdf,writer,for,the,given,i,text,document,param,document,the,i,text,document,to,create,a,writer,for,param,os,the,output,stream,to,write,to,return,the,pdf,writer,instance,to,use,throws,document,exception,if,thrown,during,writer,creation;protected,pdf,writer,new,writer,document,document,output,stream,os,throws,document,exception,return,pdf,writer,get,instance,document,os
AbstractPdfView -> protected PdfWriter newWriter(Document document, OutputStream os) throws DocumentException;1520438925;Create a new PdfWriter for the given iText Document._@param document the iText Document to create a writer for_@param os the OutputStream to write to_@return the PdfWriter instance to use_@throws DocumentException if thrown during writer creation;protected PdfWriter newWriter(Document document, OutputStream os) throws DocumentException {_		return PdfWriter.getInstance(document, os)__	};create,a,new,pdf,writer,for,the,given,i,text,document,param,document,the,i,text,document,to,create,a,writer,for,param,os,the,output,stream,to,write,to,return,the,pdf,writer,instance,to,use,throws,document,exception,if,thrown,during,writer,creation;protected,pdf,writer,new,writer,document,document,output,stream,os,throws,document,exception,return,pdf,writer,get,instance,document,os
AbstractPdfView -> protected void buildPdfMetadata(Map<String, Object> model, Document document, HttpServletRequest request);1328020251;Populate the iText Document's meta fields (author, title, etc.)._<br>Default is an empty implementation. Subclasses may override this method_to add meta fields such as title, subject, author, creator, keywords, etc._This method is called after assigning a PdfWriter to the Document and_before calling <code>document.open()</code>._@param model the model, in case meta information must be populated from it_@param document the iText document being populated_@param request in case we need locale etc. Shouldn't look at attributes._@see com.lowagie.text.Document#addTitle_@see com.lowagie.text.Document#addSubject_@see com.lowagie.text.Document#addKeywords_@see com.lowagie.text.Document#addAuthor_@see com.lowagie.text.Document#addCreator_@see com.lowagie.text.Document#addProducer_@see com.lowagie.text.Document#addCreationDate_@see com.lowagie.text.Document#addHeader;protected void buildPdfMetadata(Map<String, Object> model, Document document, HttpServletRequest request) {_	};populate,the,i,text,document,s,meta,fields,author,title,etc,br,default,is,an,empty,implementation,subclasses,may,override,this,method,to,add,meta,fields,such,as,title,subject,author,creator,keywords,etc,this,method,is,called,after,assigning,a,pdf,writer,to,the,document,and,before,calling,code,document,open,code,param,model,the,model,in,case,meta,information,must,be,populated,from,it,param,document,the,i,text,document,being,populated,param,request,in,case,we,need,locale,etc,shouldn,t,look,at,attributes,see,com,lowagie,text,document,add,title,see,com,lowagie,text,document,add,subject,see,com,lowagie,text,document,add,keywords,see,com,lowagie,text,document,add,author,see,com,lowagie,text,document,add,creator,see,com,lowagie,text,document,add,producer,see,com,lowagie,text,document,add,creation,date,see,com,lowagie,text,document,add,header;protected,void,build,pdf,metadata,map,string,object,model,document,document,http,servlet,request,request
AbstractPdfView -> protected void buildPdfMetadata(Map<String, Object> model, Document document, HttpServletRequest request);1356735495;Populate the iText Document's meta fields (author, title, etc.)._<br>Default is an empty implementation. Subclasses may override this method_to add meta fields such as title, subject, author, creator, keywords, etc._This method is called after assigning a PdfWriter to the Document and_before calling {@code document.open()}._@param model the model, in case meta information must be populated from it_@param document the iText document being populated_@param request in case we need locale etc. Shouldn't look at attributes._@see com.lowagie.text.Document#addTitle_@see com.lowagie.text.Document#addSubject_@see com.lowagie.text.Document#addKeywords_@see com.lowagie.text.Document#addAuthor_@see com.lowagie.text.Document#addCreator_@see com.lowagie.text.Document#addProducer_@see com.lowagie.text.Document#addCreationDate_@see com.lowagie.text.Document#addHeader;protected void buildPdfMetadata(Map<String, Object> model, Document document, HttpServletRequest request) {_	};populate,the,i,text,document,s,meta,fields,author,title,etc,br,default,is,an,empty,implementation,subclasses,may,override,this,method,to,add,meta,fields,such,as,title,subject,author,creator,keywords,etc,this,method,is,called,after,assigning,a,pdf,writer,to,the,document,and,before,calling,code,document,open,param,model,the,model,in,case,meta,information,must,be,populated,from,it,param,document,the,i,text,document,being,populated,param,request,in,case,we,need,locale,etc,shouldn,t,look,at,attributes,see,com,lowagie,text,document,add,title,see,com,lowagie,text,document,add,subject,see,com,lowagie,text,document,add,keywords,see,com,lowagie,text,document,add,author,see,com,lowagie,text,document,add,creator,see,com,lowagie,text,document,add,producer,see,com,lowagie,text,document,add,creation,date,see,com,lowagie,text,document,add,header;protected,void,build,pdf,metadata,map,string,object,model,document,document,http,servlet,request,request
AbstractPdfView -> protected void buildPdfMetadata(Map<String, Object> model, Document document, HttpServletRequest request);1385423968;Populate the iText Document's meta fields (author, title, etc.)._<br>Default is an empty implementation. Subclasses may override this method_to add meta fields such as title, subject, author, creator, keywords, etc._This method is called after assigning a PdfWriter to the Document and_before calling {@code document.open()}._@param model the model, in case meta information must be populated from it_@param document the iText document being populated_@param request in case we need locale etc. Shouldn't look at attributes._@see com.lowagie.text.Document#addTitle_@see com.lowagie.text.Document#addSubject_@see com.lowagie.text.Document#addKeywords_@see com.lowagie.text.Document#addAuthor_@see com.lowagie.text.Document#addCreator_@see com.lowagie.text.Document#addProducer_@see com.lowagie.text.Document#addCreationDate_@see com.lowagie.text.Document#addHeader;protected void buildPdfMetadata(Map<String, Object> model, Document document, HttpServletRequest request) {_	};populate,the,i,text,document,s,meta,fields,author,title,etc,br,default,is,an,empty,implementation,subclasses,may,override,this,method,to,add,meta,fields,such,as,title,subject,author,creator,keywords,etc,this,method,is,called,after,assigning,a,pdf,writer,to,the,document,and,before,calling,code,document,open,param,model,the,model,in,case,meta,information,must,be,populated,from,it,param,document,the,i,text,document,being,populated,param,request,in,case,we,need,locale,etc,shouldn,t,look,at,attributes,see,com,lowagie,text,document,add,title,see,com,lowagie,text,document,add,subject,see,com,lowagie,text,document,add,keywords,see,com,lowagie,text,document,add,author,see,com,lowagie,text,document,add,creator,see,com,lowagie,text,document,add,producer,see,com,lowagie,text,document,add,creation,date,see,com,lowagie,text,document,add,header;protected,void,build,pdf,metadata,map,string,object,model,document,document,http,servlet,request,request
AbstractPdfView -> protected void buildPdfMetadata(Map<String, Object> model, Document document, HttpServletRequest request);1508843693;Populate the iText Document's meta fields (author, title, etc.)._<br>Default is an empty implementation. Subclasses may override this method_to add meta fields such as title, subject, author, creator, keywords, etc._This method is called after assigning a PdfWriter to the Document and_before calling {@code document.open()}._@param model the model, in case meta information must be populated from it_@param document the iText document being populated_@param request in case we need locale etc. Shouldn't look at attributes._@see com.lowagie.text.Document#addTitle_@see com.lowagie.text.Document#addSubject_@see com.lowagie.text.Document#addKeywords_@see com.lowagie.text.Document#addAuthor_@see com.lowagie.text.Document#addCreator_@see com.lowagie.text.Document#addProducer_@see com.lowagie.text.Document#addCreationDate_@see com.lowagie.text.Document#addHeader;protected void buildPdfMetadata(Map<String, Object> model, Document document, HttpServletRequest request) {_	};populate,the,i,text,document,s,meta,fields,author,title,etc,br,default,is,an,empty,implementation,subclasses,may,override,this,method,to,add,meta,fields,such,as,title,subject,author,creator,keywords,etc,this,method,is,called,after,assigning,a,pdf,writer,to,the,document,and,before,calling,code,document,open,param,model,the,model,in,case,meta,information,must,be,populated,from,it,param,document,the,i,text,document,being,populated,param,request,in,case,we,need,locale,etc,shouldn,t,look,at,attributes,see,com,lowagie,text,document,add,title,see,com,lowagie,text,document,add,subject,see,com,lowagie,text,document,add,keywords,see,com,lowagie,text,document,add,author,see,com,lowagie,text,document,add,creator,see,com,lowagie,text,document,add,producer,see,com,lowagie,text,document,add,creation,date,see,com,lowagie,text,document,add,header;protected,void,build,pdf,metadata,map,string,object,model,document,document,http,servlet,request,request
AbstractPdfView -> protected void buildPdfMetadata(Map<String, Object> model, Document document, HttpServletRequest request);1520438925;Populate the iText Document's meta fields (author, title, etc.)._<br>Default is an empty implementation. Subclasses may override this method_to add meta fields such as title, subject, author, creator, keywords, etc._This method is called after assigning a PdfWriter to the Document and_before calling {@code document.open()}._@param model the model, in case meta information must be populated from it_@param document the iText document being populated_@param request in case we need locale etc. Shouldn't look at attributes._@see com.lowagie.text.Document#addTitle_@see com.lowagie.text.Document#addSubject_@see com.lowagie.text.Document#addKeywords_@see com.lowagie.text.Document#addAuthor_@see com.lowagie.text.Document#addCreator_@see com.lowagie.text.Document#addProducer_@see com.lowagie.text.Document#addCreationDate_@see com.lowagie.text.Document#addHeader;protected void buildPdfMetadata(Map<String, Object> model, Document document, HttpServletRequest request) {_	};populate,the,i,text,document,s,meta,fields,author,title,etc,br,default,is,an,empty,implementation,subclasses,may,override,this,method,to,add,meta,fields,such,as,title,subject,author,creator,keywords,etc,this,method,is,called,after,assigning,a,pdf,writer,to,the,document,and,before,calling,code,document,open,param,model,the,model,in,case,meta,information,must,be,populated,from,it,param,document,the,i,text,document,being,populated,param,request,in,case,we,need,locale,etc,shouldn,t,look,at,attributes,see,com,lowagie,text,document,add,title,see,com,lowagie,text,document,add,subject,see,com,lowagie,text,document,add,keywords,see,com,lowagie,text,document,add,author,see,com,lowagie,text,document,add,creator,see,com,lowagie,text,document,add,producer,see,com,lowagie,text,document,add,creation,date,see,com,lowagie,text,document,add,header;protected,void,build,pdf,metadata,map,string,object,model,document,document,http,servlet,request,request
AbstractPdfView -> protected abstract void buildPdfDocument(Map<String, Object> model, Document document, PdfWriter writer, 			HttpServletRequest request, HttpServletResponse response) throws Exception_;1328020251;Subclasses must implement this method to build an iText PDF document,_given the model. Called between <code>Document.open()</code> and_<code>Document.close()</code> calls._<p>Note that the passed-in HTTP response is just supposed to be used_for setting cookies or other HTTP headers. The built PDF document itself_will automatically get written to the response after this method returns._@param model the model Map_@param document the iText Document to add elements to_@param writer the PdfWriter to use_@param request in case we need locale etc. Shouldn't look at attributes._@param response in case we need to set cookies. Shouldn't write to it._@throws Exception any exception that occured during document building_@see com.lowagie.text.Document#open()_@see com.lowagie.text.Document#close();protected abstract void buildPdfDocument(Map<String, Object> model, Document document, PdfWriter writer,_			HttpServletRequest request, HttpServletResponse response) throws Exception_;subclasses,must,implement,this,method,to,build,an,i,text,pdf,document,given,the,model,called,between,code,document,open,code,and,code,document,close,code,calls,p,note,that,the,passed,in,http,response,is,just,supposed,to,be,used,for,setting,cookies,or,other,http,headers,the,built,pdf,document,itself,will,automatically,get,written,to,the,response,after,this,method,returns,param,model,the,model,map,param,document,the,i,text,document,to,add,elements,to,param,writer,the,pdf,writer,to,use,param,request,in,case,we,need,locale,etc,shouldn,t,look,at,attributes,param,response,in,case,we,need,to,set,cookies,shouldn,t,write,to,it,throws,exception,any,exception,that,occured,during,document,building,see,com,lowagie,text,document,open,see,com,lowagie,text,document,close;protected,abstract,void,build,pdf,document,map,string,object,model,document,document,pdf,writer,writer,http,servlet,request,request,http,servlet,response,response,throws,exception
AbstractPdfView -> protected abstract void buildPdfDocument(Map<String, Object> model, Document document, PdfWriter writer, 			HttpServletRequest request, HttpServletResponse response) throws Exception_;1356735495;Subclasses must implement this method to build an iText PDF document,_given the model. Called between {@code Document.open()} and_{@code Document.close()} calls._<p>Note that the passed-in HTTP response is just supposed to be used_for setting cookies or other HTTP headers. The built PDF document itself_will automatically get written to the response after this method returns._@param model the model Map_@param document the iText Document to add elements to_@param writer the PdfWriter to use_@param request in case we need locale etc. Shouldn't look at attributes._@param response in case we need to set cookies. Shouldn't write to it._@throws Exception any exception that occured during document building_@see com.lowagie.text.Document#open()_@see com.lowagie.text.Document#close();protected abstract void buildPdfDocument(Map<String, Object> model, Document document, PdfWriter writer,_			HttpServletRequest request, HttpServletResponse response) throws Exception_;subclasses,must,implement,this,method,to,build,an,i,text,pdf,document,given,the,model,called,between,code,document,open,and,code,document,close,calls,p,note,that,the,passed,in,http,response,is,just,supposed,to,be,used,for,setting,cookies,or,other,http,headers,the,built,pdf,document,itself,will,automatically,get,written,to,the,response,after,this,method,returns,param,model,the,model,map,param,document,the,i,text,document,to,add,elements,to,param,writer,the,pdf,writer,to,use,param,request,in,case,we,need,locale,etc,shouldn,t,look,at,attributes,param,response,in,case,we,need,to,set,cookies,shouldn,t,write,to,it,throws,exception,any,exception,that,occured,during,document,building,see,com,lowagie,text,document,open,see,com,lowagie,text,document,close;protected,abstract,void,build,pdf,document,map,string,object,model,document,document,pdf,writer,writer,http,servlet,request,request,http,servlet,response,response,throws,exception
AbstractPdfView -> protected abstract void buildPdfDocument(Map<String, Object> model, Document document, PdfWriter writer, 			HttpServletRequest request, HttpServletResponse response) throws Exception_;1385423968;Subclasses must implement this method to build an iText PDF document,_given the model. Called between {@code Document.open()} and_{@code Document.close()} calls._<p>Note that the passed-in HTTP response is just supposed to be used_for setting cookies or other HTTP headers. The built PDF document itself_will automatically get written to the response after this method returns._@param model the model Map_@param document the iText Document to add elements to_@param writer the PdfWriter to use_@param request in case we need locale etc. Shouldn't look at attributes._@param response in case we need to set cookies. Shouldn't write to it._@throws Exception any exception that occurred during document building_@see com.lowagie.text.Document#open()_@see com.lowagie.text.Document#close();protected abstract void buildPdfDocument(Map<String, Object> model, Document document, PdfWriter writer,_			HttpServletRequest request, HttpServletResponse response) throws Exception_;subclasses,must,implement,this,method,to,build,an,i,text,pdf,document,given,the,model,called,between,code,document,open,and,code,document,close,calls,p,note,that,the,passed,in,http,response,is,just,supposed,to,be,used,for,setting,cookies,or,other,http,headers,the,built,pdf,document,itself,will,automatically,get,written,to,the,response,after,this,method,returns,param,model,the,model,map,param,document,the,i,text,document,to,add,elements,to,param,writer,the,pdf,writer,to,use,param,request,in,case,we,need,locale,etc,shouldn,t,look,at,attributes,param,response,in,case,we,need,to,set,cookies,shouldn,t,write,to,it,throws,exception,any,exception,that,occurred,during,document,building,see,com,lowagie,text,document,open,see,com,lowagie,text,document,close;protected,abstract,void,build,pdf,document,map,string,object,model,document,document,pdf,writer,writer,http,servlet,request,request,http,servlet,response,response,throws,exception
AbstractPdfView -> protected abstract void buildPdfDocument(Map<String, Object> model, Document document, PdfWriter writer, 			HttpServletRequest request, HttpServletResponse response) throws Exception_;1508843693;Subclasses must implement this method to build an iText PDF document,_given the model. Called between {@code Document.open()} and_{@code Document.close()} calls._<p>Note that the passed-in HTTP response is just supposed to be used_for setting cookies or other HTTP headers. The built PDF document itself_will automatically get written to the response after this method returns._@param model the model Map_@param document the iText Document to add elements to_@param writer the PdfWriter to use_@param request in case we need locale etc. Shouldn't look at attributes._@param response in case we need to set cookies. Shouldn't write to it._@throws Exception any exception that occurred during document building_@see com.lowagie.text.Document#open()_@see com.lowagie.text.Document#close();protected abstract void buildPdfDocument(Map<String, Object> model, Document document, PdfWriter writer,_			HttpServletRequest request, HttpServletResponse response) throws Exception_;subclasses,must,implement,this,method,to,build,an,i,text,pdf,document,given,the,model,called,between,code,document,open,and,code,document,close,calls,p,note,that,the,passed,in,http,response,is,just,supposed,to,be,used,for,setting,cookies,or,other,http,headers,the,built,pdf,document,itself,will,automatically,get,written,to,the,response,after,this,method,returns,param,model,the,model,map,param,document,the,i,text,document,to,add,elements,to,param,writer,the,pdf,writer,to,use,param,request,in,case,we,need,locale,etc,shouldn,t,look,at,attributes,param,response,in,case,we,need,to,set,cookies,shouldn,t,write,to,it,throws,exception,any,exception,that,occurred,during,document,building,see,com,lowagie,text,document,open,see,com,lowagie,text,document,close;protected,abstract,void,build,pdf,document,map,string,object,model,document,document,pdf,writer,writer,http,servlet,request,request,http,servlet,response,response,throws,exception
AbstractPdfView -> protected abstract void buildPdfDocument(Map<String, Object> model, Document document, PdfWriter writer, 			HttpServletRequest request, HttpServletResponse response) throws Exception_;1520438925;Subclasses must implement this method to build an iText PDF document,_given the model. Called between {@code Document.open()} and_{@code Document.close()} calls._<p>Note that the passed-in HTTP response is just supposed to be used_for setting cookies or other HTTP headers. The built PDF document itself_will automatically get written to the response after this method returns._@param model the model Map_@param document the iText Document to add elements to_@param writer the PdfWriter to use_@param request in case we need locale etc. Shouldn't look at attributes._@param response in case we need to set cookies. Shouldn't write to it._@throws Exception any exception that occurred during document building_@see com.lowagie.text.Document#open()_@see com.lowagie.text.Document#close();protected abstract void buildPdfDocument(Map<String, Object> model, Document document, PdfWriter writer,_			HttpServletRequest request, HttpServletResponse response) throws Exception_;subclasses,must,implement,this,method,to,build,an,i,text,pdf,document,given,the,model,called,between,code,document,open,and,code,document,close,calls,p,note,that,the,passed,in,http,response,is,just,supposed,to,be,used,for,setting,cookies,or,other,http,headers,the,built,pdf,document,itself,will,automatically,get,written,to,the,response,after,this,method,returns,param,model,the,model,map,param,document,the,i,text,document,to,add,elements,to,param,writer,the,pdf,writer,to,use,param,request,in,case,we,need,locale,etc,shouldn,t,look,at,attributes,param,response,in,case,we,need,to,set,cookies,shouldn,t,write,to,it,throws,exception,any,exception,that,occurred,during,document,building,see,com,lowagie,text,document,open,see,com,lowagie,text,document,close;protected,abstract,void,build,pdf,document,map,string,object,model,document,document,pdf,writer,writer,http,servlet,request,request,http,servlet,response,response,throws,exception
