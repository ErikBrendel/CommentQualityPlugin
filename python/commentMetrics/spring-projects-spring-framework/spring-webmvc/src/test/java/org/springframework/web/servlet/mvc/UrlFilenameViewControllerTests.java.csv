# id;timestamp;commentText;codeText;commentWords;codeWords
UrlFilenameViewControllerTests -> public void testNestedPathisUsedAsViewName_InBreakingChangeFromSpring12Line() throws Exception;1328020251;This is the expected behavior, and it now has a test to prove it._http://opensource.atlassian.com/projects/spring/browse/SPR-2789;public void testNestedPathisUsedAsViewName_InBreakingChangeFromSpring12Line() throws Exception {_		UrlFilenameViewController ctrl = new UrlFilenameViewController()__		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/products/view.html")__		MockHttpServletResponse response = new MockHttpServletResponse()__		ModelAndView mv = ctrl.handleRequest(request, response)__		assertEquals("products/view", mv.getViewName())__		assertTrue(mv.getModel().isEmpty())__	};this,is,the,expected,behavior,and,it,now,has,a,test,to,prove,it,http,opensource,atlassian,com,projects,spring,browse,spr,2789;public,void,throws,exception,url,filename,view,controller,ctrl,new,url,filename,view,controller,mock,http,servlet,request,request,new,mock,http,servlet,request,get,products,view,html,mock,http,servlet,response,response,new,mock,http,servlet,response,model,and,view,mv,ctrl,handle,request,request,response,assert,equals,products,view,mv,get,view,name,assert,true,mv,get,model,is,empty
UrlFilenameViewControllerTests -> public void testNestedPathisUsedAsViewName_InBreakingChangeFromSpring12Line() throws Exception;1328092788;This is the expected behavior, and it now has a test to prove it._http://opensource.atlassian.com/projects/spring/browse/SPR-2789;public void testNestedPathisUsedAsViewName_InBreakingChangeFromSpring12Line() throws Exception {_		UrlFilenameViewController ctrl = new UrlFilenameViewController()__		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/products/view.html")__		MockHttpServletResponse response = new MockHttpServletResponse()__		ModelAndView mv = ctrl.handleRequest(request, response)__		assertEquals("products/view", mv.getViewName())__		assertTrue(mv.getModel().isEmpty())__	};this,is,the,expected,behavior,and,it,now,has,a,test,to,prove,it,http,opensource,atlassian,com,projects,spring,browse,spr,2789;public,void,throws,exception,url,filename,view,controller,ctrl,new,url,filename,view,controller,mock,http,servlet,request,request,new,mock,http,servlet,request,get,products,view,html,mock,http,servlet,response,response,new,mock,http,servlet,response,model,and,view,mv,ctrl,handle,request,request,response,assert,equals,products,view,mv,get,view,name,assert,true,mv,get,model,is,empty
UrlFilenameViewControllerTests -> public void testNestedPathisUsedAsViewName_InBreakingChangeFromSpring12Line() throws Exception;1346174472;This is the expected behavior, and it now has a test to prove it._http://opensource.atlassian.com/projects/spring/browse/SPR-2789;public void testNestedPathisUsedAsViewName_InBreakingChangeFromSpring12Line() throws Exception {_		UrlFilenameViewController ctrl = new UrlFilenameViewController()__		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/products/view.html")__		MockHttpServletResponse response = new MockHttpServletResponse()__		ModelAndView mv = ctrl.handleRequest(request, response)__		assertEquals("products/view", mv.getViewName())__		assertTrue(mv.getModel().isEmpty())__	};this,is,the,expected,behavior,and,it,now,has,a,test,to,prove,it,http,opensource,atlassian,com,projects,spring,browse,spr,2789;public,void,throws,exception,url,filename,view,controller,ctrl,new,url,filename,view,controller,mock,http,servlet,request,request,new,mock,http,servlet,request,get,products,view,html,mock,http,servlet,response,response,new,mock,http,servlet,response,model,and,view,mv,ctrl,handle,request,request,response,assert,equals,products,view,mv,get,view,name,assert,true,mv,get,model,is,empty
UrlFilenameViewControllerTests -> public void testNestedPathisUsedAsViewName_InBreakingChangeFromSpring12Line() throws Exception;1354292158;This is the expected behavior, and it now has a test to prove it._http://opensource.atlassian.com/projects/spring/browse/SPR-2789;public void testNestedPathisUsedAsViewName_InBreakingChangeFromSpring12Line() throws Exception {_		UrlFilenameViewController ctrl = new UrlFilenameViewController()__		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/products/view.html")__		MockHttpServletResponse response = new MockHttpServletResponse()__		ModelAndView mv = ctrl.handleRequest(request, response)__		assertEquals("products/view", mv.getViewName())__		assertTrue(mv.getModel().isEmpty())__	};this,is,the,expected,behavior,and,it,now,has,a,test,to,prove,it,http,opensource,atlassian,com,projects,spring,browse,spr,2789;public,void,throws,exception,url,filename,view,controller,ctrl,new,url,filename,view,controller,mock,http,servlet,request,request,new,mock,http,servlet,request,get,products,view,html,mock,http,servlet,response,response,new,mock,http,servlet,response,model,and,view,mv,ctrl,handle,request,request,response,assert,equals,products,view,mv,get,view,name,assert,true,mv,get,model,is,empty
UrlFilenameViewControllerTests -> @Test 	public void nestedPathisUsedAsViewName_InBreakingChangeFromSpring12Line() throws Exception;1443381471;This is the expected behavior, and it now has a test to prove it._http://opensource.atlassian.com/projects/spring/browse/SPR-2789;@Test_	public void nestedPathisUsedAsViewName_InBreakingChangeFromSpring12Line() throws Exception {_		UrlFilenameViewController ctrl = new UrlFilenameViewController()__		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/products/view.html")__		MockHttpServletResponse response = new MockHttpServletResponse()__		ModelAndView mv = ctrl.handleRequest(request, response)__		assertEquals("products/view", mv.getViewName())__		assertTrue(mv.getModel().isEmpty())__	};this,is,the,expected,behavior,and,it,now,has,a,test,to,prove,it,http,opensource,atlassian,com,projects,spring,browse,spr,2789;test,public,void,throws,exception,url,filename,view,controller,ctrl,new,url,filename,view,controller,mock,http,servlet,request,request,new,mock,http,servlet,request,get,products,view,html,mock,http,servlet,response,response,new,mock,http,servlet,response,model,and,view,mv,ctrl,handle,request,request,response,assert,equals,products,view,mv,get,view,name,assert,true,mv,get,model,is,empty
UrlFilenameViewControllerTests -> @Test 	public void nestedPathisUsedAsViewName_InBreakingChangeFromSpring12Line() throws Exception;1486634978;This is the expected behavior, and it now has a test to prove it._http://opensource.atlassian.com/projects/spring/browse/SPR-2789;@Test_	public void nestedPathisUsedAsViewName_InBreakingChangeFromSpring12Line() throws Exception {_		UrlFilenameViewController ctrl = new UrlFilenameViewController()__		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/products/view.html")__		MockHttpServletResponse response = new MockHttpServletResponse()__		ModelAndView mv = ctrl.handleRequest(request, response)__		assertEquals("products/view", mv.getViewName())__		assertTrue(mv.getModel().isEmpty())__	};this,is,the,expected,behavior,and,it,now,has,a,test,to,prove,it,http,opensource,atlassian,com,projects,spring,browse,spr,2789;test,public,void,throws,exception,url,filename,view,controller,ctrl,new,url,filename,view,controller,mock,http,servlet,request,request,new,mock,http,servlet,request,get,products,view,html,mock,http,servlet,response,response,new,mock,http,servlet,response,model,and,view,mv,ctrl,handle,request,request,response,assert,equals,products,view,mv,get,view,name,assert,true,mv,get,model,is,empty
UrlFilenameViewControllerTests -> @Test 	public void nestedPathisUsedAsViewName_InBreakingChangeFromSpring12Line() throws Exception;1486635693;This is the expected behavior, and it now has a test to prove it._http://opensource.atlassian.com/projects/spring/browse/SPR-2789;@Test_	public void nestedPathisUsedAsViewName_InBreakingChangeFromSpring12Line() throws Exception {_		UrlFilenameViewController ctrl = new UrlFilenameViewController()__		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/products/view.html")__		MockHttpServletResponse response = new MockHttpServletResponse()__		ModelAndView mv = ctrl.handleRequest(request, response)__		assertEquals("products/view", mv.getViewName())__		assertTrue(mv.getModel().isEmpty())__	};this,is,the,expected,behavior,and,it,now,has,a,test,to,prove,it,http,opensource,atlassian,com,projects,spring,browse,spr,2789;test,public,void,throws,exception,url,filename,view,controller,ctrl,new,url,filename,view,controller,mock,http,servlet,request,request,new,mock,http,servlet,request,get,products,view,html,mock,http,servlet,response,response,new,mock,http,servlet,response,model,and,view,mv,ctrl,handle,request,request,response,assert,equals,products,view,mv,get,view,name,assert,true,mv,get,model,is,empty
UrlFilenameViewControllerTests -> @Test 	public void nestedPathisUsedAsViewName_InBreakingChangeFromSpring12Line() throws Exception;1508532146;This is the expected behavior, and it now has a test to prove it._http://opensource.atlassian.com/projects/spring/browse/SPR-2789;@Test_	public void nestedPathisUsedAsViewName_InBreakingChangeFromSpring12Line() throws Exception {_		UrlFilenameViewController ctrl = new UrlFilenameViewController()__		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/products/view.html")__		MockHttpServletResponse response = new MockHttpServletResponse()__		ModelAndView mv = ctrl.handleRequest(request, response)__		assertEquals("products/view", mv.getViewName())__		assertTrue(mv.getModel().isEmpty())__	};this,is,the,expected,behavior,and,it,now,has,a,test,to,prove,it,http,opensource,atlassian,com,projects,spring,browse,spr,2789;test,public,void,throws,exception,url,filename,view,controller,ctrl,new,url,filename,view,controller,mock,http,servlet,request,request,new,mock,http,servlet,request,get,products,view,html,mock,http,servlet,response,response,new,mock,http,servlet,response,model,and,view,mv,ctrl,handle,request,request,response,assert,equals,products,view,mv,get,view,name,assert,true,mv,get,model,is,empty
