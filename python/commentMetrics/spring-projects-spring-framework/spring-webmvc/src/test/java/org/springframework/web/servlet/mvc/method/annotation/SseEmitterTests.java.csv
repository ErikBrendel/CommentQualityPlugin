commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Before public void setup() throws IOException {     this.handler = new TestHandler().     this.emitter = new SseEmitter().     this.emitter.initialize(this.handler). }
false;public;0;8;;@Test public void send() throws Exception {     this.emitter.send("foo").     this.handler.assertSentObjectCount(3).     this.handler.assertObject(0, "data:", SseEmitter.TEXT_PLAIN).     this.handler.assertObject(1, "foo").     this.handler.assertObject(2, "\n\n", SseEmitter.TEXT_PLAIN). }
false;public;0;8;;@Test public void sendWithMediaType() throws Exception {     this.emitter.send("foo", MediaType.TEXT_PLAIN).     this.handler.assertSentObjectCount(3).     this.handler.assertObject(0, "data:", SseEmitter.TEXT_PLAIN).     this.handler.assertObject(1, "foo", MediaType.TEXT_PLAIN).     this.handler.assertObject(2, "\n\n", SseEmitter.TEXT_PLAIN). }
false;public;0;5;;@Test public void sendEventEmpty() throws Exception {     this.emitter.send(event()).     this.handler.assertSentObjectCount(0). }
false;public;0;8;;@Test public void sendEventWithDataLine() throws Exception {     this.emitter.send(event().data("foo")).     this.handler.assertSentObjectCount(3).     this.handler.assertObject(0, "data:", SseEmitter.TEXT_PLAIN).     this.handler.assertObject(1, "foo").     this.handler.assertObject(2, "\n\n", SseEmitter.TEXT_PLAIN). }
false;public;0;10;;@Test public void sendEventWithTwoDataLines() throws Exception {     this.emitter.send(event().data("foo").data("bar")).     this.handler.assertSentObjectCount(5).     this.handler.assertObject(0, "data:", SseEmitter.TEXT_PLAIN).     this.handler.assertObject(1, "foo").     this.handler.assertObject(2, "\ndata:", SseEmitter.TEXT_PLAIN).     this.handler.assertObject(3, "bar").     this.handler.assertObject(4, "\n\n", SseEmitter.TEXT_PLAIN). }
false;public;0;8;;@Test public void sendEventFull() throws Exception {     this.emitter.send(event().comment("blah").name("test").reconnectTime(5000L).id("1").data("foo")).     this.handler.assertSentObjectCount(3).     this.handler.assertObject(0, ":blah\nevent:test\nretry:5000\nid:1\ndata:", SseEmitter.TEXT_PLAIN).     this.handler.assertObject(1, "foo").     this.handler.assertObject(2, "\n\n", SseEmitter.TEXT_PLAIN). }
false;public;0;10;;@Test public void sendEventFullWithTwoDataLinesInTheMiddle() throws Exception {     this.emitter.send(event().comment("blah").data("foo").data("bar").name("test").reconnectTime(5000L).id("1")).     this.handler.assertSentObjectCount(5).     this.handler.assertObject(0, ":blah\ndata:", SseEmitter.TEXT_PLAIN).     this.handler.assertObject(1, "foo").     this.handler.assertObject(2, "\ndata:", SseEmitter.TEXT_PLAIN).     this.handler.assertObject(3, "bar").     this.handler.assertObject(4, "\nevent:test\nretry:5000\nid:1\n\n", SseEmitter.TEXT_PLAIN). }
false;public;1;3;;public void assertSentObjectCount(int size) {     assertEquals(size, this.objects.size()). }
false;public;2;3;;public void assertObject(int index, Object object) {     assertObject(index, object, null). }
false;public;3;5;;public void assertObject(int index, Object object, MediaType mediaType) {     assertTrue(index <= this.objects.size()).     assertEquals(object, this.objects.get(index)).     assertEquals(mediaType, this.mediaTypes.get(index)). }
false;public;2;5;;@Override public void send(Object data, MediaType mediaType) throws IOException {     this.objects.add(data).     this.mediaTypes.add(mediaType). }
false;public;0;3;;@Override public void complete() { }
false;public;1;3;;@Override public void completeWithError(Throwable failure) { }
false;public;1;3;;@Override public void onTimeout(Runnable callback) { }
false;public;1;3;;@Override public void onError(Consumer<Throwable> callback) { }
false;public;1;3;;@Override public void onCompletion(Runnable callback) { }
