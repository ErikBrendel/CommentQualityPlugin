# id;timestamp;commentText;codeText;commentWords;codeWords
XmlWebApplicationContextTests -> @Override 	public void testEvents() throws Exception;1356735495;Overridden as we can't trust superclass method_@see org.springframework.context.AbstractApplicationContextTests#testEvents();@Override_	public void testEvents() throws Exception {_		TestListener listener = (TestListener) this.applicationContext.getBean("testListener")__		listener.zeroCounter()__		TestListener parentListener = (TestListener) this.applicationContext.getParent().getBean("parentListener")__		parentListener.zeroCounter()___		parentListener.zeroCounter()__		assertTrue("0 events before publication", listener.getEventCount() == 0)__		assertTrue("0 parent events before publication", parentListener.getEventCount() == 0)__		this.applicationContext.publishEvent(new MyEvent(this))__		assertTrue("1 events after publication, not " + listener.getEventCount(), listener.getEventCount() == 1)__		assertTrue("1 parent events after publication", parentListener.getEventCount() == 1)__	};overridden,as,we,can,t,trust,superclass,method,see,org,springframework,context,abstract,application,context,tests,test,events;override,public,void,test,events,throws,exception,test,listener,listener,test,listener,this,application,context,get,bean,test,listener,listener,zero,counter,test,listener,parent,listener,test,listener,this,application,context,get,parent,get,bean,parent,listener,parent,listener,zero,counter,parent,listener,zero,counter,assert,true,0,events,before,publication,listener,get,event,count,0,assert,true,0,parent,events,before,publication,parent,listener,get,event,count,0,this,application,context,publish,event,new,my,event,this,assert,true,1,events,after,publication,not,listener,get,event,count,listener,get,event,count,1,assert,true,1,parent,events,after,publication,parent,listener,get,event,count,1
XmlWebApplicationContextTests -> @Override 	public void testEvents() throws Exception;1362408075;Overridden as we can't trust superclass method_@see org.springframework.context.AbstractApplicationContextTests#testEvents();@Override_	public void testEvents() throws Exception {_		TestListener listener = (TestListener) this.applicationContext.getBean("testListener")__		listener.zeroCounter()__		TestListener parentListener = (TestListener) this.applicationContext.getParent().getBean("parentListener")__		parentListener.zeroCounter()___		parentListener.zeroCounter()__		assertTrue("0 events before publication", listener.getEventCount() == 0)__		assertTrue("0 parent events before publication", parentListener.getEventCount() == 0)__		this.applicationContext.publishEvent(new MyEvent(this))__		assertTrue("1 events after publication, not " + listener.getEventCount(), listener.getEventCount() == 1)__		assertTrue("1 parent events after publication", parentListener.getEventCount() == 1)__	};overridden,as,we,can,t,trust,superclass,method,see,org,springframework,context,abstract,application,context,tests,test,events;override,public,void,test,events,throws,exception,test,listener,listener,test,listener,this,application,context,get,bean,test,listener,listener,zero,counter,test,listener,parent,listener,test,listener,this,application,context,get,parent,get,bean,parent,listener,parent,listener,zero,counter,parent,listener,zero,counter,assert,true,0,events,before,publication,listener,get,event,count,0,assert,true,0,parent,events,before,publication,parent,listener,get,event,count,0,this,application,context,publish,event,new,my,event,this,assert,true,1,events,after,publication,not,listener,get,event,count,listener,get,event,count,1,assert,true,1,parent,events,after,publication,parent,listener,get,event,count,1
XmlWebApplicationContextTests -> @Override 	protected void doTestEvents(TestListener listener, TestListener parentListener, 			MyEvent event);1382381986;Overridden as we can't trust superclass method_@see org.springframework.context.AbstractApplicationContextTests#testEvents();@Override_	protected void doTestEvents(TestListener listener, TestListener parentListener,_			MyEvent event) {_		TestListener listenerBean = (TestListener) this.applicationContext.getBean("testListener")__		TestListener parentListenerBean = (TestListener) this.applicationContext.getParent().getBean("parentListener")__		super.doTestEvents(listenerBean, parentListenerBean, event)__	};overridden,as,we,can,t,trust,superclass,method,see,org,springframework,context,abstract,application,context,tests,test,events;override,protected,void,do,test,events,test,listener,listener,test,listener,parent,listener,my,event,event,test,listener,listener,bean,test,listener,this,application,context,get,bean,test,listener,test,listener,parent,listener,bean,test,listener,this,application,context,get,parent,get,bean,parent,listener,super,do,test,events,listener,bean,parent,listener,bean,event
XmlWebApplicationContextTests -> @Override 	protected void doTestEvents(TestListener listener, TestListener parentListener, 			MyEvent event);1413848647;Overridden as we can't trust superclass method_@see org.springframework.context.AbstractApplicationContextTests#testEvents();@Override_	protected void doTestEvents(TestListener listener, TestListener parentListener,_			MyEvent event) {_		TestListener listenerBean = (TestListener) this.applicationContext.getBean("testListener")__		TestListener parentListenerBean = (TestListener) this.applicationContext.getParent().getBean("parentListener")__		super.doTestEvents(listenerBean, parentListenerBean, event)__	};overridden,as,we,can,t,trust,superclass,method,see,org,springframework,context,abstract,application,context,tests,test,events;override,protected,void,do,test,events,test,listener,listener,test,listener,parent,listener,my,event,event,test,listener,listener,bean,test,listener,this,application,context,get,bean,test,listener,test,listener,parent,listener,bean,test,listener,this,application,context,get,parent,get,bean,parent,listener,super,do,test,events,listener,bean,parent,listener,bean,event
XmlWebApplicationContextTests -> @Override 	protected void doTestEvents(TestListener listener, TestListener parentListener, 			MyEvent event);1443381471;Overridden as we can't trust superclass method_@see org.springframework.context.AbstractApplicationContextTests#testEvents();@Override_	protected void doTestEvents(TestListener listener, TestListener parentListener,_			MyEvent event) {_		TestListener listenerBean = (TestListener) this.applicationContext.getBean("testListener")__		TestListener parentListenerBean = (TestListener) this.applicationContext.getParent().getBean("parentListener")__		super.doTestEvents(listenerBean, parentListenerBean, event)__	};overridden,as,we,can,t,trust,superclass,method,see,org,springframework,context,abstract,application,context,tests,test,events;override,protected,void,do,test,events,test,listener,listener,test,listener,parent,listener,my,event,event,test,listener,listener,bean,test,listener,this,application,context,get,bean,test,listener,test,listener,parent,listener,bean,test,listener,this,application,context,get,parent,get,bean,parent,listener,super,do,test,events,listener,bean,parent,listener,bean,event
XmlWebApplicationContextTests -> @Override 	protected void doTestEvents(TestListener listener, TestListener parentListener, 			MyEvent event);1534082111;Overridden as we can't trust superclass method_@see org.springframework.context.AbstractApplicationContextTests#testEvents();@Override_	protected void doTestEvents(TestListener listener, TestListener parentListener,_			MyEvent event) {_		TestListener listenerBean = (TestListener) this.applicationContext.getBean("testListener")__		TestListener parentListenerBean = (TestListener) this.applicationContext.getParent().getBean("parentListener")__		super.doTestEvents(listenerBean, parentListenerBean, event)__	};overridden,as,we,can,t,trust,superclass,method,see,org,springframework,context,abstract,application,context,tests,test,events;override,protected,void,do,test,events,test,listener,listener,test,listener,parent,listener,my,event,event,test,listener,listener,bean,test,listener,this,application,context,get,bean,test,listener,test,listener,parent,listener,bean,test,listener,this,application,context,get,parent,get,bean,parent,listener,super,do,test,events,listener,bean,parent,listener,bean,event
XmlWebApplicationContextTests -> InitAndIB -> public void customInit() throws ServletException;1328020251;Init method;public void customInit() throws ServletException {_			if (!this.afterPropertiesSetInvoked)_				fail()__			this.initMethodInvoked = true__		};init,method;public,void,custom,init,throws,servlet,exception,if,this,after,properties,set,invoked,fail,this,init,method,invoked,true
XmlWebApplicationContextTests -> InitAndIB -> public void customInit() throws ServletException;1338032393;Init method;public void customInit() throws ServletException {_			if (!this.afterPropertiesSetInvoked)_				fail()__			this.initMethodInvoked = true__		};init,method;public,void,custom,init,throws,servlet,exception,if,this,after,properties,set,invoked,fail,this,init,method,invoked,true
XmlWebApplicationContextTests -> InitAndIB -> public void customInit() throws ServletException;1354292158;Init method;public void customInit() throws ServletException {_			if (!this.afterPropertiesSetInvoked)_				fail()__			this.initMethodInvoked = true__		};init,method;public,void,custom,init,throws,servlet,exception,if,this,after,properties,set,invoked,fail,this,init,method,invoked,true
XmlWebApplicationContextTests -> InitAndIB -> public void customInit() throws ServletException;1356735495;Init method;public void customInit() throws ServletException {_			if (!this.afterPropertiesSetInvoked)_				fail()__			this.initMethodInvoked = true__		};init,method;public,void,custom,init,throws,servlet,exception,if,this,after,properties,set,invoked,fail,this,init,method,invoked,true
XmlWebApplicationContextTests -> InitAndIB -> public void customInit() throws ServletException;1362408075;Init method;public void customInit() throws ServletException {_			if (!this.afterPropertiesSetInvoked)_				fail()__			this.initMethodInvoked = true__		};init,method;public,void,custom,init,throws,servlet,exception,if,this,after,properties,set,invoked,fail,this,init,method,invoked,true
XmlWebApplicationContextTests -> InitAndIB -> public void customInit() throws ServletException;1382381986;Init method;public void customInit() throws ServletException {_			if (!this.afterPropertiesSetInvoked)_				fail()__			this.initMethodInvoked = true__		};init,method;public,void,custom,init,throws,servlet,exception,if,this,after,properties,set,invoked,fail,this,init,method,invoked,true
XmlWebApplicationContextTests -> InitAndIB -> public void customInit() throws ServletException;1413848647;Init method;public void customInit() throws ServletException {_			if (!this.afterPropertiesSetInvoked)_				fail()__			this.initMethodInvoked = true__		};init,method;public,void,custom,init,throws,servlet,exception,if,this,after,properties,set,invoked,fail,this,init,method,invoked,true
XmlWebApplicationContextTests -> InitAndIB -> public void customInit() throws ServletException;1443381471;Init method;public void customInit() throws ServletException {_			if (!this.afterPropertiesSetInvoked)_				fail()__			this.initMethodInvoked = true__		};init,method;public,void,custom,init,throws,servlet,exception,if,this,after,properties,set,invoked,fail,this,init,method,invoked,true
XmlWebApplicationContextTests -> InitAndIB -> public void customInit() throws ServletException;1534082111;Init method;public void customInit() throws ServletException {_			if (!this.afterPropertiesSetInvoked)_				fail()__			this.initMethodInvoked = true__		};init,method;public,void,custom,init,throws,servlet,exception,if,this,after,properties,set,invoked,fail,this,init,method,invoked,true
XmlWebApplicationContextTests -> public void testEvents() throws Exception;1328020251;Overridden as we can't trust superclass method_@see org.springframework.context.AbstractApplicationContextTests#testEvents();public void testEvents() throws Exception {_		TestListener listener = (TestListener) this.applicationContext.getBean("testListener")__		listener.zeroCounter()__		TestListener parentListener = (TestListener) this.applicationContext.getParent().getBean("parentListener")__		parentListener.zeroCounter()__		_		parentListener.zeroCounter()__		assertTrue("0 events before publication", listener.getEventCount() == 0)__		assertTrue("0 parent events before publication", parentListener.getEventCount() == 0)__		this.applicationContext.publishEvent(new MyEvent(this))__		assertTrue("1 events after publication, not " + listener.getEventCount(), listener.getEventCount() == 1)__		assertTrue("1 parent events after publication", parentListener.getEventCount() == 1)__	};overridden,as,we,can,t,trust,superclass,method,see,org,springframework,context,abstract,application,context,tests,test,events;public,void,test,events,throws,exception,test,listener,listener,test,listener,this,application,context,get,bean,test,listener,listener,zero,counter,test,listener,parent,listener,test,listener,this,application,context,get,parent,get,bean,parent,listener,parent,listener,zero,counter,parent,listener,zero,counter,assert,true,0,events,before,publication,listener,get,event,count,0,assert,true,0,parent,events,before,publication,parent,listener,get,event,count,0,this,application,context,publish,event,new,my,event,this,assert,true,1,events,after,publication,not,listener,get,event,count,listener,get,event,count,1,assert,true,1,parent,events,after,publication,parent,listener,get,event,count,1
XmlWebApplicationContextTests -> public void testEvents() throws Exception;1338032393;Overridden as we can't trust superclass method_@see org.springframework.context.AbstractApplicationContextTests#testEvents();public void testEvents() throws Exception {_		TestListener listener = (TestListener) this.applicationContext.getBean("testListener")__		listener.zeroCounter()__		TestListener parentListener = (TestListener) this.applicationContext.getParent().getBean("parentListener")__		parentListener.zeroCounter()__		_		parentListener.zeroCounter()__		assertTrue("0 events before publication", listener.getEventCount() == 0)__		assertTrue("0 parent events before publication", parentListener.getEventCount() == 0)__		this.applicationContext.publishEvent(new MyEvent(this))__		assertTrue("1 events after publication, not " + listener.getEventCount(), listener.getEventCount() == 1)__		assertTrue("1 parent events after publication", parentListener.getEventCount() == 1)__	};overridden,as,we,can,t,trust,superclass,method,see,org,springframework,context,abstract,application,context,tests,test,events;public,void,test,events,throws,exception,test,listener,listener,test,listener,this,application,context,get,bean,test,listener,listener,zero,counter,test,listener,parent,listener,test,listener,this,application,context,get,parent,get,bean,parent,listener,parent,listener,zero,counter,parent,listener,zero,counter,assert,true,0,events,before,publication,listener,get,event,count,0,assert,true,0,parent,events,before,publication,parent,listener,get,event,count,0,this,application,context,publish,event,new,my,event,this,assert,true,1,events,after,publication,not,listener,get,event,count,listener,get,event,count,1,assert,true,1,parent,events,after,publication,parent,listener,get,event,count,1
XmlWebApplicationContextTests -> public void testEvents() throws Exception;1354292158;Overridden as we can't trust superclass method_@see org.springframework.context.AbstractApplicationContextTests#testEvents();public void testEvents() throws Exception {_		TestListener listener = (TestListener) this.applicationContext.getBean("testListener")__		listener.zeroCounter()__		TestListener parentListener = (TestListener) this.applicationContext.getParent().getBean("parentListener")__		parentListener.zeroCounter()__		_		parentListener.zeroCounter()__		assertTrue("0 events before publication", listener.getEventCount() == 0)__		assertTrue("0 parent events before publication", parentListener.getEventCount() == 0)__		this.applicationContext.publishEvent(new MyEvent(this))__		assertTrue("1 events after publication, not " + listener.getEventCount(), listener.getEventCount() == 1)__		assertTrue("1 parent events after publication", parentListener.getEventCount() == 1)__	};overridden,as,we,can,t,trust,superclass,method,see,org,springframework,context,abstract,application,context,tests,test,events;public,void,test,events,throws,exception,test,listener,listener,test,listener,this,application,context,get,bean,test,listener,listener,zero,counter,test,listener,parent,listener,test,listener,this,application,context,get,parent,get,bean,parent,listener,parent,listener,zero,counter,parent,listener,zero,counter,assert,true,0,events,before,publication,listener,get,event,count,0,assert,true,0,parent,events,before,publication,parent,listener,get,event,count,0,this,application,context,publish,event,new,my,event,this,assert,true,1,events,after,publication,not,listener,get,event,count,listener,get,event,count,1,assert,true,1,parent,events,after,publication,parent,listener,get,event,count,1
