# id;timestamp;commentText;codeText;commentWords;codeWords
SelectTagTests -> public void testWithMultiMapWithItemValueAndItemLabel() throws Exception;1328020251;Tests new support added as a result of <a_href="http://opensource.atlassian.com/projects/spring/browse/SPR-2660"_target="_blank">SPR-2660</a>._<p>_Specifically, if the <code>items</code> attribute is supplied a_{@link Map}, and <code>itemValue</code> and <code>itemLabel</code>_are supplied non-null values, then:_</p>_<ul>_<li><code>itemValue</code> will be used as the property name of the_map's <em>key</em>, and</li>_<li><code>itemLabel</code> will be used as the property name of the_map's <em>value</em>.</li>_</ul>;public void testWithMultiMapWithItemValueAndItemLabel() throws Exception {__		_		final Locale defaultLocale = Locale.getDefault()__		_		_		Locale.setDefault(Locale.US)___		try {_			final Country austria = Country.COUNTRY_AT__			final Country usa = Country.COUNTRY_US__			final Map someMap = new HashMap()__			someMap.put(austria, LOCALE_AT)__			someMap.put(usa, Locale.US)__			this.bean.setSomeMap(someMap)___			this.tag.setPath("someMap")_ _			this.tag.setItems("${countryToLocaleMap}")_ _			this.tag.setItemValue("isoCode")_ _			this.tag.setItemLabel("displayLanguage")_ __			BeanPropertyBindingResult bindingResult = new BeanPropertyBindingResult(getTestBean(), COMMAND_NAME)__			bindingResult.getPropertyAccessor().registerCustomEditor(Country.class, new PropertyEditorSupport() {__				public void setAsText(final String text) throws IllegalArgumentException {_					setValue(Country.getCountryWithIsoCode(text))__				}__				public String getAsText() {_					return ((Country) getValue()).getIsoCode()__				}_			})__			exposeBindingResult(bindingResult)___			int result = this.tag.doStartTag()__			assertEquals(Tag.SKIP_BODY, result)___			String output = getOutput()__			output = "<doc>" + output + "</doc>"___			SAXReader reader = new SAXReader()__			Document document = reader.read(new StringReader(output))__			Element rootElement = document.getRootElement()__			assertEquals(2, rootElement.elements().size())___			Element selectElement = rootElement.element("select")__			assertEquals("select", selectElement.getName())__			assertEquals("someMap", selectElement.attribute("name").getValue())___			List children = selectElement.elements()__			assertEquals("Incorrect number of children", 3, children.size())___			Element e__			e = (Element) selectElement.selectSingleNode("option[@value = '" + austria.getIsoCode() + "']")__			assertNotNull("Option node not found with Country ISO code value [" + austria.getIsoCode() + "].", e)__			assertEquals("AT node not selected.", "selected", e.attribute("selected").getValue())__			assertEquals("AT Locale displayLanguage property not used for option label.",_					LOCALE_AT.getDisplayLanguage(), e.getData())___			e = (Element) selectElement.selectSingleNode("option[@value = '" + usa.getIsoCode() + "']")__			assertNotNull("Option node not found with Country ISO code value [" + usa.getIsoCode() + "].", e)__			assertEquals("US node not selected.", "selected", e.attribute("selected").getValue())__			assertEquals("US Locale displayLanguage property not used for option label.",_					Locale.US.getDisplayLanguage(), e.getData())___		}_		finally {_			_			Locale.setDefault(defaultLocale)__		}_	};tests,new,support,added,as,a,result,of,a,href,http,opensource,atlassian,com,projects,spring,browse,spr,2660,target,spr,2660,a,p,specifically,if,the,code,items,code,attribute,is,supplied,a,link,map,and,code,item,value,code,and,code,item,label,code,are,supplied,non,null,values,then,p,ul,li,code,item,value,code,will,be,used,as,the,property,name,of,the,map,s,em,key,em,and,li,li,code,item,label,code,will,be,used,as,the,property,name,of,the,map,s,em,value,em,li,ul;public,void,test,with,multi,map,with,item,value,and,item,label,throws,exception,final,locale,default,locale,locale,get,default,locale,set,default,locale,us,try,final,country,austria,country,final,country,usa,country,final,map,some,map,new,hash,map,some,map,put,austria,some,map,put,usa,locale,us,this,bean,set,some,map,some,map,this,tag,set,path,some,map,this,tag,set,items,country,to,locale,map,this,tag,set,item,value,iso,code,this,tag,set,item,label,display,language,bean,property,binding,result,binding,result,new,bean,property,binding,result,get,test,bean,binding,result,get,property,accessor,register,custom,editor,country,class,new,property,editor,support,public,void,set,as,text,final,string,text,throws,illegal,argument,exception,set,value,country,get,country,with,iso,code,text,public,string,get,as,text,return,country,get,value,get,iso,code,expose,binding,result,binding,result,int,result,this,tag,do,start,tag,assert,equals,tag,result,string,output,get,output,output,doc,output,doc,saxreader,reader,new,saxreader,document,document,reader,read,new,string,reader,output,element,root,element,document,get,root,element,assert,equals,2,root,element,elements,size,element,select,element,root,element,element,select,assert,equals,select,select,element,get,name,assert,equals,some,map,select,element,attribute,name,get,value,list,children,select,element,elements,assert,equals,incorrect,number,of,children,3,children,size,element,e,e,element,select,element,select,single,node,option,value,austria,get,iso,code,assert,not,null,option,node,not,found,with,country,iso,code,value,austria,get,iso,code,e,assert,equals,at,node,not,selected,selected,e,attribute,selected,get,value,assert,equals,at,locale,display,language,property,not,used,for,option,label,get,display,language,e,get,data,e,element,select,element,select,single,node,option,value,usa,get,iso,code,assert,not,null,option,node,not,found,with,country,iso,code,value,usa,get,iso,code,e,assert,equals,us,node,not,selected,selected,e,attribute,selected,get,value,assert,equals,us,locale,display,language,property,not,used,for,option,label,locale,us,get,display,language,e,get,data,finally,locale,set,default,default,locale
SelectTagTests -> public void testWithMultiMapWithItemValueAndItemLabel() throws Exception;1345650228;Tests new support added as a result of <a_href="http://opensource.atlassian.com/projects/spring/browse/SPR-2660"_target="_blank">SPR-2660</a>._<p>_Specifically, if the <code>items</code> attribute is supplied a_{@link Map}, and <code>itemValue</code> and <code>itemLabel</code>_are supplied non-null values, then:_</p>_<ul>_<li><code>itemValue</code> will be used as the property name of the_map's <em>key</em>, and</li>_<li><code>itemLabel</code> will be used as the property name of the_map's <em>value</em>.</li>_</ul>;public void testWithMultiMapWithItemValueAndItemLabel() throws Exception {__		_		final Locale defaultLocale = Locale.getDefault()__		_		_		Locale.setDefault(Locale.US)___		try {_			final Country austria = Country.COUNTRY_AT__			final Country usa = Country.COUNTRY_US__			final Map someMap = new HashMap()__			someMap.put(austria, LOCALE_AT)__			someMap.put(usa, Locale.US)__			this.bean.setSomeMap(someMap)___			this.tag.setPath("someMap")_ _			this.tag.setItems("${countryToLocaleMap}")_ _			this.tag.setItemValue("isoCode")_ _			this.tag.setItemLabel("displayLanguage")_ __			BeanPropertyBindingResult bindingResult = new BeanPropertyBindingResult(getTestBean(), COMMAND_NAME)__			bindingResult.getPropertyAccessor().registerCustomEditor(Country.class, new PropertyEditorSupport() {__				public void setAsText(final String text) throws IllegalArgumentException {_					setValue(Country.getCountryWithIsoCode(text))__				}__				public String getAsText() {_					return ((Country) getValue()).getIsoCode()__				}_			})__			exposeBindingResult(bindingResult)___			int result = this.tag.doStartTag()__			assertEquals(Tag.SKIP_BODY, result)___			String output = getOutput()__			output = "<doc>" + output + "</doc>"___			SAXReader reader = new SAXReader()__			Document document = reader.read(new StringReader(output))__			Element rootElement = document.getRootElement()__			assertEquals(2, rootElement.elements().size())___			Element selectElement = rootElement.element("select")__			assertEquals("select", selectElement.getName())__			assertEquals("someMap", selectElement.attribute("name").getValue())___			List children = selectElement.elements()__			assertEquals("Incorrect number of children", 3, children.size())___			Element e__			e = (Element) selectElement.selectSingleNode("option[@value = '" + austria.getIsoCode() + "']")__			assertNotNull("Option node not found with Country ISO code value [" + austria.getIsoCode() + "].", e)__			assertEquals("AT node not selected.", "selected", e.attribute("selected").getValue())__			assertEquals("AT Locale displayLanguage property not used for option label.",_					LOCALE_AT.getDisplayLanguage(), e.getData())___			e = (Element) selectElement.selectSingleNode("option[@value = '" + usa.getIsoCode() + "']")__			assertNotNull("Option node not found with Country ISO code value [" + usa.getIsoCode() + "].", e)__			assertEquals("US node not selected.", "selected", e.attribute("selected").getValue())__			assertEquals("US Locale displayLanguage property not used for option label.",_					Locale.US.getDisplayLanguage(), e.getData())___		}_		finally {_			_			Locale.setDefault(defaultLocale)__		}_	};tests,new,support,added,as,a,result,of,a,href,http,opensource,atlassian,com,projects,spring,browse,spr,2660,target,spr,2660,a,p,specifically,if,the,code,items,code,attribute,is,supplied,a,link,map,and,code,item,value,code,and,code,item,label,code,are,supplied,non,null,values,then,p,ul,li,code,item,value,code,will,be,used,as,the,property,name,of,the,map,s,em,key,em,and,li,li,code,item,label,code,will,be,used,as,the,property,name,of,the,map,s,em,value,em,li,ul;public,void,test,with,multi,map,with,item,value,and,item,label,throws,exception,final,locale,default,locale,locale,get,default,locale,set,default,locale,us,try,final,country,austria,country,final,country,usa,country,final,map,some,map,new,hash,map,some,map,put,austria,some,map,put,usa,locale,us,this,bean,set,some,map,some,map,this,tag,set,path,some,map,this,tag,set,items,country,to,locale,map,this,tag,set,item,value,iso,code,this,tag,set,item,label,display,language,bean,property,binding,result,binding,result,new,bean,property,binding,result,get,test,bean,binding,result,get,property,accessor,register,custom,editor,country,class,new,property,editor,support,public,void,set,as,text,final,string,text,throws,illegal,argument,exception,set,value,country,get,country,with,iso,code,text,public,string,get,as,text,return,country,get,value,get,iso,code,expose,binding,result,binding,result,int,result,this,tag,do,start,tag,assert,equals,tag,result,string,output,get,output,output,doc,output,doc,saxreader,reader,new,saxreader,document,document,reader,read,new,string,reader,output,element,root,element,document,get,root,element,assert,equals,2,root,element,elements,size,element,select,element,root,element,element,select,assert,equals,select,select,element,get,name,assert,equals,some,map,select,element,attribute,name,get,value,list,children,select,element,elements,assert,equals,incorrect,number,of,children,3,children,size,element,e,e,element,select,element,select,single,node,option,value,austria,get,iso,code,assert,not,null,option,node,not,found,with,country,iso,code,value,austria,get,iso,code,e,assert,equals,at,node,not,selected,selected,e,attribute,selected,get,value,assert,equals,at,locale,display,language,property,not,used,for,option,label,get,display,language,e,get,data,e,element,select,element,select,single,node,option,value,usa,get,iso,code,assert,not,null,option,node,not,found,with,country,iso,code,value,usa,get,iso,code,e,assert,equals,us,node,not,selected,selected,e,attribute,selected,get,value,assert,equals,us,locale,display,language,property,not,used,for,option,label,locale,us,get,display,language,e,get,data,finally,locale,set,default,default,locale
SelectTagTests -> public void testWithMultiMapWithItemValueAndItemLabel() throws Exception;1354292158;Tests new support added as a result of <a_href="http://opensource.atlassian.com/projects/spring/browse/SPR-2660"_target="_blank">SPR-2660</a>._<p>_Specifically, if the <code>items</code> attribute is supplied a_{@link Map}, and <code>itemValue</code> and <code>itemLabel</code>_are supplied non-null values, then:_</p>_<ul>_<li><code>itemValue</code> will be used as the property name of the_map's <em>key</em>, and</li>_<li><code>itemLabel</code> will be used as the property name of the_map's <em>value</em>.</li>_</ul>;public void testWithMultiMapWithItemValueAndItemLabel() throws Exception {__		_		final Locale defaultLocale = Locale.getDefault()__		_		_		Locale.setDefault(Locale.US)___		try {_			final Country austria = Country.COUNTRY_AT__			final Country usa = Country.COUNTRY_US__			final Map someMap = new HashMap()__			someMap.put(austria, LOCALE_AT)__			someMap.put(usa, Locale.US)__			this.bean.setSomeMap(someMap)___			this.tag.setPath("someMap")_ _			this.tag.setItems("${countryToLocaleMap}")_ _			this.tag.setItemValue("isoCode")_ _			this.tag.setItemLabel("displayLanguage")_ __			BeanPropertyBindingResult bindingResult = new BeanPropertyBindingResult(getTestBean(), COMMAND_NAME)__			bindingResult.getPropertyAccessor().registerCustomEditor(Country.class, new PropertyEditorSupport() {__				public void setAsText(final String text) throws IllegalArgumentException {_					setValue(Country.getCountryWithIsoCode(text))__				}__				public String getAsText() {_					return ((Country) getValue()).getIsoCode()__				}_			})__			exposeBindingResult(bindingResult)___			int result = this.tag.doStartTag()__			assertEquals(Tag.SKIP_BODY, result)___			String output = getOutput()__			output = "<doc>" + output + "</doc>"___			SAXReader reader = new SAXReader()__			Document document = reader.read(new StringReader(output))__			Element rootElement = document.getRootElement()__			assertEquals(2, rootElement.elements().size())___			Element selectElement = rootElement.element("select")__			assertEquals("select", selectElement.getName())__			assertEquals("someMap", selectElement.attribute("name").getValue())___			List children = selectElement.elements()__			assertEquals("Incorrect number of children", 3, children.size())___			Element e__			e = (Element) selectElement.selectSingleNode("option[@value = '" + austria.getIsoCode() + "']")__			assertNotNull("Option node not found with Country ISO code value [" + austria.getIsoCode() + "].", e)__			assertEquals("AT node not selected.", "selected", e.attribute("selected").getValue())__			assertEquals("AT Locale displayLanguage property not used for option label.",_					LOCALE_AT.getDisplayLanguage(), e.getData())___			e = (Element) selectElement.selectSingleNode("option[@value = '" + usa.getIsoCode() + "']")__			assertNotNull("Option node not found with Country ISO code value [" + usa.getIsoCode() + "].", e)__			assertEquals("US node not selected.", "selected", e.attribute("selected").getValue())__			assertEquals("US Locale displayLanguage property not used for option label.",_					Locale.US.getDisplayLanguage(), e.getData())___		}_		finally {_			_			Locale.setDefault(defaultLocale)__		}_	};tests,new,support,added,as,a,result,of,a,href,http,opensource,atlassian,com,projects,spring,browse,spr,2660,target,spr,2660,a,p,specifically,if,the,code,items,code,attribute,is,supplied,a,link,map,and,code,item,value,code,and,code,item,label,code,are,supplied,non,null,values,then,p,ul,li,code,item,value,code,will,be,used,as,the,property,name,of,the,map,s,em,key,em,and,li,li,code,item,label,code,will,be,used,as,the,property,name,of,the,map,s,em,value,em,li,ul;public,void,test,with,multi,map,with,item,value,and,item,label,throws,exception,final,locale,default,locale,locale,get,default,locale,set,default,locale,us,try,final,country,austria,country,final,country,usa,country,final,map,some,map,new,hash,map,some,map,put,austria,some,map,put,usa,locale,us,this,bean,set,some,map,some,map,this,tag,set,path,some,map,this,tag,set,items,country,to,locale,map,this,tag,set,item,value,iso,code,this,tag,set,item,label,display,language,bean,property,binding,result,binding,result,new,bean,property,binding,result,get,test,bean,binding,result,get,property,accessor,register,custom,editor,country,class,new,property,editor,support,public,void,set,as,text,final,string,text,throws,illegal,argument,exception,set,value,country,get,country,with,iso,code,text,public,string,get,as,text,return,country,get,value,get,iso,code,expose,binding,result,binding,result,int,result,this,tag,do,start,tag,assert,equals,tag,result,string,output,get,output,output,doc,output,doc,saxreader,reader,new,saxreader,document,document,reader,read,new,string,reader,output,element,root,element,document,get,root,element,assert,equals,2,root,element,elements,size,element,select,element,root,element,element,select,assert,equals,select,select,element,get,name,assert,equals,some,map,select,element,attribute,name,get,value,list,children,select,element,elements,assert,equals,incorrect,number,of,children,3,children,size,element,e,e,element,select,element,select,single,node,option,value,austria,get,iso,code,assert,not,null,option,node,not,found,with,country,iso,code,value,austria,get,iso,code,e,assert,equals,at,node,not,selected,selected,e,attribute,selected,get,value,assert,equals,at,locale,display,language,property,not,used,for,option,label,get,display,language,e,get,data,e,element,select,element,select,single,node,option,value,usa,get,iso,code,assert,not,null,option,node,not,found,with,country,iso,code,value,usa,get,iso,code,e,assert,equals,us,node,not,selected,selected,e,attribute,selected,get,value,assert,equals,us,locale,display,language,property,not,used,for,option,label,locale,us,get,display,language,e,get,data,finally,locale,set,default,default,locale
SelectTagTests -> public void testWithMultiMapWithItemValueAndItemLabel() throws Exception;1356735495;Tests new support added as a result of <a_href="http://opensource.atlassian.com/projects/spring/browse/SPR-2660"_target="_blank">SPR-2660</a>._<p>_Specifically, if the {@code items} attribute is supplied a_{@link Map}, and {@code itemValue} and {@code itemLabel}_are supplied non-null values, then:_</p>_<ul>_<li>{@code itemValue} will be used as the property name of the_map's <em>key</em>, and</li>_<li>{@code itemLabel} will be used as the property name of the_map's <em>value</em>.</li>_</ul>;public void testWithMultiMapWithItemValueAndItemLabel() throws Exception {__		_		final Locale defaultLocale = Locale.getDefault()__		_		_		Locale.setDefault(Locale.US)___		try {_			final Country austria = Country.COUNTRY_AT__			final Country usa = Country.COUNTRY_US__			final Map someMap = new HashMap()__			someMap.put(austria, LOCALE_AT)__			someMap.put(usa, Locale.US)__			this.bean.setSomeMap(someMap)___			this.tag.setPath("someMap")_ _			this.tag.setItems("${countryToLocaleMap}")_ _			this.tag.setItemValue("isoCode")_ _			this.tag.setItemLabel("displayLanguage")_ __			BeanPropertyBindingResult bindingResult = new BeanPropertyBindingResult(getTestBean(), COMMAND_NAME)__			bindingResult.getPropertyAccessor().registerCustomEditor(Country.class, new PropertyEditorSupport() {__				@Override_				public void setAsText(final String text) throws IllegalArgumentException {_					setValue(Country.getCountryWithIsoCode(text))__				}__				@Override_				public String getAsText() {_					return ((Country) getValue()).getIsoCode()__				}_			})__			exposeBindingResult(bindingResult)___			int result = this.tag.doStartTag()__			assertEquals(Tag.SKIP_BODY, result)___			String output = getOutput()__			output = "<doc>" + output + "</doc>"___			SAXReader reader = new SAXReader()__			Document document = reader.read(new StringReader(output))__			Element rootElement = document.getRootElement()__			assertEquals(2, rootElement.elements().size())___			Element selectElement = rootElement.element("select")__			assertEquals("select", selectElement.getName())__			assertEquals("someMap", selectElement.attribute("name").getValue())___			List children = selectElement.elements()__			assertEquals("Incorrect number of children", 3, children.size())___			Element e__			e = (Element) selectElement.selectSingleNode("option[@value = '" + austria.getIsoCode() + "']")__			assertNotNull("Option node not found with Country ISO code value [" + austria.getIsoCode() + "].", e)__			assertEquals("AT node not selected.", "selected", e.attribute("selected").getValue())__			assertEquals("AT Locale displayLanguage property not used for option label.",_					LOCALE_AT.getDisplayLanguage(), e.getData())___			e = (Element) selectElement.selectSingleNode("option[@value = '" + usa.getIsoCode() + "']")__			assertNotNull("Option node not found with Country ISO code value [" + usa.getIsoCode() + "].", e)__			assertEquals("US node not selected.", "selected", e.attribute("selected").getValue())__			assertEquals("US Locale displayLanguage property not used for option label.",_					Locale.US.getDisplayLanguage(), e.getData())___		}_		finally {_			_			Locale.setDefault(defaultLocale)__		}_	};tests,new,support,added,as,a,result,of,a,href,http,opensource,atlassian,com,projects,spring,browse,spr,2660,target,spr,2660,a,p,specifically,if,the,code,items,attribute,is,supplied,a,link,map,and,code,item,value,and,code,item,label,are,supplied,non,null,values,then,p,ul,li,code,item,value,will,be,used,as,the,property,name,of,the,map,s,em,key,em,and,li,li,code,item,label,will,be,used,as,the,property,name,of,the,map,s,em,value,em,li,ul;public,void,test,with,multi,map,with,item,value,and,item,label,throws,exception,final,locale,default,locale,locale,get,default,locale,set,default,locale,us,try,final,country,austria,country,final,country,usa,country,final,map,some,map,new,hash,map,some,map,put,austria,some,map,put,usa,locale,us,this,bean,set,some,map,some,map,this,tag,set,path,some,map,this,tag,set,items,country,to,locale,map,this,tag,set,item,value,iso,code,this,tag,set,item,label,display,language,bean,property,binding,result,binding,result,new,bean,property,binding,result,get,test,bean,binding,result,get,property,accessor,register,custom,editor,country,class,new,property,editor,support,override,public,void,set,as,text,final,string,text,throws,illegal,argument,exception,set,value,country,get,country,with,iso,code,text,override,public,string,get,as,text,return,country,get,value,get,iso,code,expose,binding,result,binding,result,int,result,this,tag,do,start,tag,assert,equals,tag,result,string,output,get,output,output,doc,output,doc,saxreader,reader,new,saxreader,document,document,reader,read,new,string,reader,output,element,root,element,document,get,root,element,assert,equals,2,root,element,elements,size,element,select,element,root,element,element,select,assert,equals,select,select,element,get,name,assert,equals,some,map,select,element,attribute,name,get,value,list,children,select,element,elements,assert,equals,incorrect,number,of,children,3,children,size,element,e,e,element,select,element,select,single,node,option,value,austria,get,iso,code,assert,not,null,option,node,not,found,with,country,iso,code,value,austria,get,iso,code,e,assert,equals,at,node,not,selected,selected,e,attribute,selected,get,value,assert,equals,at,locale,display,language,property,not,used,for,option,label,get,display,language,e,get,data,e,element,select,element,select,single,node,option,value,usa,get,iso,code,assert,not,null,option,node,not,found,with,country,iso,code,value,usa,get,iso,code,e,assert,equals,us,node,not,selected,selected,e,attribute,selected,get,value,assert,equals,us,locale,display,language,property,not,used,for,option,label,locale,us,get,display,language,e,get,data,finally,locale,set,default,default,locale
SelectTagTests -> public void testWithMultiMapWithItemValueAndItemLabel() throws Exception;1362408075;Tests new support added as a result of <a_href="http://opensource.atlassian.com/projects/spring/browse/SPR-2660"_target="_blank">SPR-2660</a>._<p>_Specifically, if the {@code items} attribute is supplied a_{@link Map}, and {@code itemValue} and {@code itemLabel}_are supplied non-null values, then:_</p>_<ul>_<li>{@code itemValue} will be used as the property name of the_map's <em>key</em>, and</li>_<li>{@code itemLabel} will be used as the property name of the_map's <em>value</em>.</li>_</ul>;public void testWithMultiMapWithItemValueAndItemLabel() throws Exception {__		_		final Locale defaultLocale = Locale.getDefault()__		_		_		Locale.setDefault(Locale.US)___		try {_			final Country austria = Country.COUNTRY_AT__			final Country usa = Country.COUNTRY_US__			final Map someMap = new HashMap()__			someMap.put(austria, LOCALE_AT)__			someMap.put(usa, Locale.US)__			this.bean.setSomeMap(someMap)___			this.tag.setPath("someMap")_ _			this.tag.setItems("${countryToLocaleMap}")_ _			this.tag.setItemValue("isoCode")_ _			this.tag.setItemLabel("displayLanguage")_ __			BeanPropertyBindingResult bindingResult = new BeanPropertyBindingResult(getTestBean(), COMMAND_NAME)__			bindingResult.getPropertyAccessor().registerCustomEditor(Country.class, new PropertyEditorSupport() {__				@Override_				public void setAsText(final String text) throws IllegalArgumentException {_					setValue(Country.getCountryWithIsoCode(text))__				}__				@Override_				public String getAsText() {_					return ((Country) getValue()).getIsoCode()__				}_			})__			exposeBindingResult(bindingResult)___			int result = this.tag.doStartTag()__			assertEquals(Tag.SKIP_BODY, result)___			String output = getOutput()__			output = "<doc>" + output + "</doc>"___			SAXReader reader = new SAXReader()__			Document document = reader.read(new StringReader(output))__			Element rootElement = document.getRootElement()__			assertEquals(2, rootElement.elements().size())___			Element selectElement = rootElement.element("select")__			assertEquals("select", selectElement.getName())__			assertEquals("someMap", selectElement.attribute("name").getValue())___			List children = selectElement.elements()__			assertEquals("Incorrect number of children", 3, children.size())___			Element e__			e = (Element) selectElement.selectSingleNode("option[@value = '" + austria.getIsoCode() + "']")__			assertNotNull("Option node not found with Country ISO code value [" + austria.getIsoCode() + "].", e)__			assertEquals("AT node not selected.", "selected", e.attribute("selected").getValue())__			assertEquals("AT Locale displayLanguage property not used for option label.",_					LOCALE_AT.getDisplayLanguage(), e.getData())___			e = (Element) selectElement.selectSingleNode("option[@value = '" + usa.getIsoCode() + "']")__			assertNotNull("Option node not found with Country ISO code value [" + usa.getIsoCode() + "].", e)__			assertEquals("US node not selected.", "selected", e.attribute("selected").getValue())__			assertEquals("US Locale displayLanguage property not used for option label.",_					Locale.US.getDisplayLanguage(), e.getData())___		}_		finally {_			_			Locale.setDefault(defaultLocale)__		}_	};tests,new,support,added,as,a,result,of,a,href,http,opensource,atlassian,com,projects,spring,browse,spr,2660,target,spr,2660,a,p,specifically,if,the,code,items,attribute,is,supplied,a,link,map,and,code,item,value,and,code,item,label,are,supplied,non,null,values,then,p,ul,li,code,item,value,will,be,used,as,the,property,name,of,the,map,s,em,key,em,and,li,li,code,item,label,will,be,used,as,the,property,name,of,the,map,s,em,value,em,li,ul;public,void,test,with,multi,map,with,item,value,and,item,label,throws,exception,final,locale,default,locale,locale,get,default,locale,set,default,locale,us,try,final,country,austria,country,final,country,usa,country,final,map,some,map,new,hash,map,some,map,put,austria,some,map,put,usa,locale,us,this,bean,set,some,map,some,map,this,tag,set,path,some,map,this,tag,set,items,country,to,locale,map,this,tag,set,item,value,iso,code,this,tag,set,item,label,display,language,bean,property,binding,result,binding,result,new,bean,property,binding,result,get,test,bean,binding,result,get,property,accessor,register,custom,editor,country,class,new,property,editor,support,override,public,void,set,as,text,final,string,text,throws,illegal,argument,exception,set,value,country,get,country,with,iso,code,text,override,public,string,get,as,text,return,country,get,value,get,iso,code,expose,binding,result,binding,result,int,result,this,tag,do,start,tag,assert,equals,tag,result,string,output,get,output,output,doc,output,doc,saxreader,reader,new,saxreader,document,document,reader,read,new,string,reader,output,element,root,element,document,get,root,element,assert,equals,2,root,element,elements,size,element,select,element,root,element,element,select,assert,equals,select,select,element,get,name,assert,equals,some,map,select,element,attribute,name,get,value,list,children,select,element,elements,assert,equals,incorrect,number,of,children,3,children,size,element,e,e,element,select,element,select,single,node,option,value,austria,get,iso,code,assert,not,null,option,node,not,found,with,country,iso,code,value,austria,get,iso,code,e,assert,equals,at,node,not,selected,selected,e,attribute,selected,get,value,assert,equals,at,locale,display,language,property,not,used,for,option,label,get,display,language,e,get,data,e,element,select,element,select,single,node,option,value,usa,get,iso,code,assert,not,null,option,node,not,found,with,country,iso,code,value,usa,get,iso,code,e,assert,equals,us,node,not,selected,selected,e,attribute,selected,get,value,assert,equals,us,locale,display,language,property,not,used,for,option,label,locale,us,get,display,language,e,get,data,finally,locale,set,default,default,locale
SelectTagTests -> public void testWithMultiMapWithItemValueAndItemLabel() throws Exception;1363707046;Tests new support added as a result of <a_href="http://opensource.atlassian.com/projects/spring/browse/SPR-2660"_target="_blank">SPR-2660</a>._<p>_Specifically, if the {@code items} attribute is supplied a_{@link Map}, and {@code itemValue} and {@code itemLabel}_are supplied non-null values, then:_</p>_<ul>_<li>{@code itemValue} will be used as the property name of the_map's <em>key</em>, and</li>_<li>{@code itemLabel} will be used as the property name of the_map's <em>value</em>.</li>_</ul>;public void testWithMultiMapWithItemValueAndItemLabel() throws Exception {__		_		final Locale defaultLocale = Locale.getDefault()__		_		_		Locale.setDefault(Locale.US)___		try {_			final Country austria = Country.COUNTRY_AT__			final Country usa = Country.COUNTRY_US__			final Map someMap = new HashMap()__			someMap.put(austria, LOCALE_AT)__			someMap.put(usa, Locale.US)__			this.bean.setSomeMap(someMap)___			this.tag.setPath("someMap")_ _			this.tag.setItems(getCountryToLocaleMap())__			this.tag.setItemValue("isoCode")_ _			this.tag.setItemLabel("displayLanguage")_ __			BeanPropertyBindingResult bindingResult = new BeanPropertyBindingResult(getTestBean(), COMMAND_NAME)__			bindingResult.getPropertyAccessor().registerCustomEditor(Country.class, new PropertyEditorSupport() {__				@Override_				public void setAsText(final String text) throws IllegalArgumentException {_					setValue(Country.getCountryWithIsoCode(text))__				}__				@Override_				public String getAsText() {_					return ((Country) getValue()).getIsoCode()__				}_			})__			exposeBindingResult(bindingResult)___			int result = this.tag.doStartTag()__			assertEquals(Tag.SKIP_BODY, result)___			String output = getOutput()__			output = "<doc>" + output + "</doc>"___			SAXReader reader = new SAXReader()__			Document document = reader.read(new StringReader(output))__			Element rootElement = document.getRootElement()__			assertEquals(2, rootElement.elements().size())___			Element selectElement = rootElement.element("select")__			assertEquals("select", selectElement.getName())__			assertEquals("someMap", selectElement.attribute("name").getValue())___			List children = selectElement.elements()__			assertEquals("Incorrect number of children", 3, children.size())___			Element e__			e = (Element) selectElement.selectSingleNode("option[@value = '" + austria.getIsoCode() + "']")__			assertNotNull("Option node not found with Country ISO code value [" + austria.getIsoCode() + "].", e)__			assertEquals("AT node not selected.", "selected", e.attribute("selected").getValue())__			assertEquals("AT Locale displayLanguage property not used for option label.",_					LOCALE_AT.getDisplayLanguage(), e.getData())___			e = (Element) selectElement.selectSingleNode("option[@value = '" + usa.getIsoCode() + "']")__			assertNotNull("Option node not found with Country ISO code value [" + usa.getIsoCode() + "].", e)__			assertEquals("US node not selected.", "selected", e.attribute("selected").getValue())__			assertEquals("US Locale displayLanguage property not used for option label.",_					Locale.US.getDisplayLanguage(), e.getData())___		}_		finally {_			_			Locale.setDefault(defaultLocale)__		}_	};tests,new,support,added,as,a,result,of,a,href,http,opensource,atlassian,com,projects,spring,browse,spr,2660,target,spr,2660,a,p,specifically,if,the,code,items,attribute,is,supplied,a,link,map,and,code,item,value,and,code,item,label,are,supplied,non,null,values,then,p,ul,li,code,item,value,will,be,used,as,the,property,name,of,the,map,s,em,key,em,and,li,li,code,item,label,will,be,used,as,the,property,name,of,the,map,s,em,value,em,li,ul;public,void,test,with,multi,map,with,item,value,and,item,label,throws,exception,final,locale,default,locale,locale,get,default,locale,set,default,locale,us,try,final,country,austria,country,final,country,usa,country,final,map,some,map,new,hash,map,some,map,put,austria,some,map,put,usa,locale,us,this,bean,set,some,map,some,map,this,tag,set,path,some,map,this,tag,set,items,get,country,to,locale,map,this,tag,set,item,value,iso,code,this,tag,set,item,label,display,language,bean,property,binding,result,binding,result,new,bean,property,binding,result,get,test,bean,binding,result,get,property,accessor,register,custom,editor,country,class,new,property,editor,support,override,public,void,set,as,text,final,string,text,throws,illegal,argument,exception,set,value,country,get,country,with,iso,code,text,override,public,string,get,as,text,return,country,get,value,get,iso,code,expose,binding,result,binding,result,int,result,this,tag,do,start,tag,assert,equals,tag,result,string,output,get,output,output,doc,output,doc,saxreader,reader,new,saxreader,document,document,reader,read,new,string,reader,output,element,root,element,document,get,root,element,assert,equals,2,root,element,elements,size,element,select,element,root,element,element,select,assert,equals,select,select,element,get,name,assert,equals,some,map,select,element,attribute,name,get,value,list,children,select,element,elements,assert,equals,incorrect,number,of,children,3,children,size,element,e,e,element,select,element,select,single,node,option,value,austria,get,iso,code,assert,not,null,option,node,not,found,with,country,iso,code,value,austria,get,iso,code,e,assert,equals,at,node,not,selected,selected,e,attribute,selected,get,value,assert,equals,at,locale,display,language,property,not,used,for,option,label,get,display,language,e,get,data,e,element,select,element,select,single,node,option,value,usa,get,iso,code,assert,not,null,option,node,not,found,with,country,iso,code,value,usa,get,iso,code,e,assert,equals,us,node,not,selected,selected,e,attribute,selected,get,value,assert,equals,us,locale,display,language,property,not,used,for,option,label,locale,us,get,display,language,e,get,data,finally,locale,set,default,default,locale
SelectTagTests -> public void testWithMultiMapWithItemValueAndItemLabel() throws Exception;1391968721;Tests new support added as a result of <a_href="http://opensource.atlassian.com/projects/spring/browse/SPR-2660"_target="_blank">SPR-2660</a>._<p>_Specifically, if the {@code items} attribute is supplied a_{@link Map}, and {@code itemValue} and {@code itemLabel}_are supplied non-null values, then:_</p>_<ul>_<li>{@code itemValue} will be used as the property name of the_map's <em>key</em>, and</li>_<li>{@code itemLabel} will be used as the property name of the_map's <em>value</em>.</li>_</ul>;public void testWithMultiMapWithItemValueAndItemLabel() throws Exception {__		_		final Locale defaultLocale = Locale.getDefault()__		_		_		Locale.setDefault(Locale.US)___		try {_			final Country austria = Country.COUNTRY_AT__			final Country usa = Country.COUNTRY_US__			final Map someMap = new HashMap()__			someMap.put(austria, LOCALE_AT)__			someMap.put(usa, Locale.US)__			this.bean.setSomeMap(someMap)___			this.tag.setPath("someMap")_ _			this.tag.setItems(getCountryToLocaleMap())__			this.tag.setItemValue("isoCode")_ _			this.tag.setItemLabel("displayLanguage")_ __			BeanPropertyBindingResult bindingResult = new BeanPropertyBindingResult(getTestBean(), COMMAND_NAME)__			bindingResult.getPropertyAccessor().registerCustomEditor(Country.class, new PropertyEditorSupport() {__				@Override_				public void setAsText(final String text) throws IllegalArgumentException {_					setValue(Country.getCountryWithIsoCode(text))__				}__				@Override_				public String getAsText() {_					return ((Country) getValue()).getIsoCode()__				}_			})__			exposeBindingResult(bindingResult)___			int result = this.tag.doStartTag()__			assertEquals(Tag.SKIP_BODY, result)___			String output = getOutput()__			output = "<doc>" + output + "</doc>"___			SAXReader reader = new SAXReader()__			Document document = reader.read(new StringReader(output))__			Element rootElement = document.getRootElement()__			assertEquals(2, rootElement.elements().size())___			Element selectElement = rootElement.element("select")__			assertEquals("select", selectElement.getName())__			assertEquals("someMap", selectElement.attribute("name").getValue())___			List children = selectElement.elements()__			assertEquals("Incorrect number of children", 3, children.size())___			Element e__			e = (Element) selectElement.selectSingleNode("option[@value = '" + austria.getIsoCode() + "']")__			assertNotNull("Option node not found with Country ISO code value [" + austria.getIsoCode() + "].", e)__			assertEquals("AT node not selected.", "selected", e.attribute("selected").getValue())__			assertEquals("AT Locale displayLanguage property not used for option label.",_					LOCALE_AT.getDisplayLanguage(), e.getData())___			e = (Element) selectElement.selectSingleNode("option[@value = '" + usa.getIsoCode() + "']")__			assertNotNull("Option node not found with Country ISO code value [" + usa.getIsoCode() + "].", e)__			assertEquals("US node not selected.", "selected", e.attribute("selected").getValue())__			assertEquals("US Locale displayLanguage property not used for option label.",_					Locale.US.getDisplayLanguage(), e.getData())___		}_		finally {_			_			Locale.setDefault(defaultLocale)__		}_	};tests,new,support,added,as,a,result,of,a,href,http,opensource,atlassian,com,projects,spring,browse,spr,2660,target,spr,2660,a,p,specifically,if,the,code,items,attribute,is,supplied,a,link,map,and,code,item,value,and,code,item,label,are,supplied,non,null,values,then,p,ul,li,code,item,value,will,be,used,as,the,property,name,of,the,map,s,em,key,em,and,li,li,code,item,label,will,be,used,as,the,property,name,of,the,map,s,em,value,em,li,ul;public,void,test,with,multi,map,with,item,value,and,item,label,throws,exception,final,locale,default,locale,locale,get,default,locale,set,default,locale,us,try,final,country,austria,country,final,country,usa,country,final,map,some,map,new,hash,map,some,map,put,austria,some,map,put,usa,locale,us,this,bean,set,some,map,some,map,this,tag,set,path,some,map,this,tag,set,items,get,country,to,locale,map,this,tag,set,item,value,iso,code,this,tag,set,item,label,display,language,bean,property,binding,result,binding,result,new,bean,property,binding,result,get,test,bean,binding,result,get,property,accessor,register,custom,editor,country,class,new,property,editor,support,override,public,void,set,as,text,final,string,text,throws,illegal,argument,exception,set,value,country,get,country,with,iso,code,text,override,public,string,get,as,text,return,country,get,value,get,iso,code,expose,binding,result,binding,result,int,result,this,tag,do,start,tag,assert,equals,tag,result,string,output,get,output,output,doc,output,doc,saxreader,reader,new,saxreader,document,document,reader,read,new,string,reader,output,element,root,element,document,get,root,element,assert,equals,2,root,element,elements,size,element,select,element,root,element,element,select,assert,equals,select,select,element,get,name,assert,equals,some,map,select,element,attribute,name,get,value,list,children,select,element,elements,assert,equals,incorrect,number,of,children,3,children,size,element,e,e,element,select,element,select,single,node,option,value,austria,get,iso,code,assert,not,null,option,node,not,found,with,country,iso,code,value,austria,get,iso,code,e,assert,equals,at,node,not,selected,selected,e,attribute,selected,get,value,assert,equals,at,locale,display,language,property,not,used,for,option,label,get,display,language,e,get,data,e,element,select,element,select,single,node,option,value,usa,get,iso,code,assert,not,null,option,node,not,found,with,country,iso,code,value,usa,get,iso,code,e,assert,equals,us,node,not,selected,selected,e,attribute,selected,get,value,assert,equals,us,locale,display,language,property,not,used,for,option,label,locale,us,get,display,language,e,get,data,finally,locale,set,default,default,locale
SelectTagTests -> public void testWithMultiMapWithItemValueAndItemLabel() throws Exception;1397058152;Tests new support added as a result of <a_href="http://opensource.atlassian.com/projects/spring/browse/SPR-2660"_target="_blank">SPR-2660</a>._<p>_Specifically, if the {@code items} attribute is supplied a_{@link Map}, and {@code itemValue} and {@code itemLabel}_are supplied non-null values, then:_</p>_<ul>_<li>{@code itemValue} will be used as the property name of the_map's <em>key</em>, and</li>_<li>{@code itemLabel} will be used as the property name of the_map's <em>value</em>.</li>_</ul>;public void testWithMultiMapWithItemValueAndItemLabel() throws Exception {_		_		final Locale defaultLocale = Locale.getDefault()__		_		_		Locale.setDefault(Locale.US)___		try {_			final Country austria = Country.COUNTRY_AT__			final Country usa = Country.COUNTRY_US__			final Map someMap = new HashMap()__			someMap.put(austria, LOCALE_AT)__			someMap.put(usa, Locale.US)__			this.bean.setSomeMap(someMap)___			this.tag.setPath("someMap")_ _			this.tag.setItems(getCountryToLocaleMap())__			this.tag.setItemValue("isoCode")_ _			this.tag.setItemLabel("displayLanguage")_ __			BeanPropertyBindingResult bindingResult = new BeanPropertyBindingResult(getTestBean(), COMMAND_NAME)__			bindingResult.getPropertyAccessor().registerCustomEditor(Country.class, new PropertyEditorSupport() {_				@Override_				public void setAsText(final String text) throws IllegalArgumentException {_					setValue(Country.getCountryWithIsoCode(text))__				}__				@Override_				public String getAsText() {_					return ((Country) getValue()).getIsoCode()__				}_			})__			exposeBindingResult(bindingResult)___			int result = this.tag.doStartTag()__			assertEquals(Tag.SKIP_BODY, result)___			String output = getOutput()__			output = "<doc>" + output + "</doc>"___			SAXReader reader = new SAXReader()__			Document document = reader.read(new StringReader(output))__			Element rootElement = document.getRootElement()__			assertEquals(2, rootElement.elements().size())___			Element selectElement = rootElement.element("select")__			assertEquals("select", selectElement.getName())__			assertEquals("someMap", selectElement.attribute("name").getValue())___			List children = selectElement.elements()__			assertEquals("Incorrect number of children", 3, children.size())___			Element e__			e = (Element) selectElement.selectSingleNode("option[@value = '" + austria.getIsoCode() + "']")__			assertNotNull("Option node not found with Country ISO code value [" + austria.getIsoCode() + "].", e)__			assertEquals("AT node not selected.", "selected", e.attribute("selected").getValue())__			assertEquals("AT Locale displayLanguage property not used for option label.",_					LOCALE_AT.getDisplayLanguage(), e.getData())___			e = (Element) selectElement.selectSingleNode("option[@value = '" + usa.getIsoCode() + "']")__			assertNotNull("Option node not found with Country ISO code value [" + usa.getIsoCode() + "].", e)__			assertEquals("US node not selected.", "selected", e.attribute("selected").getValue())__			assertEquals("US Locale displayLanguage property not used for option label.",_					Locale.US.getDisplayLanguage(), e.getData())___		}_		finally {_			_			Locale.setDefault(defaultLocale)__		}_	};tests,new,support,added,as,a,result,of,a,href,http,opensource,atlassian,com,projects,spring,browse,spr,2660,target,spr,2660,a,p,specifically,if,the,code,items,attribute,is,supplied,a,link,map,and,code,item,value,and,code,item,label,are,supplied,non,null,values,then,p,ul,li,code,item,value,will,be,used,as,the,property,name,of,the,map,s,em,key,em,and,li,li,code,item,label,will,be,used,as,the,property,name,of,the,map,s,em,value,em,li,ul;public,void,test,with,multi,map,with,item,value,and,item,label,throws,exception,final,locale,default,locale,locale,get,default,locale,set,default,locale,us,try,final,country,austria,country,final,country,usa,country,final,map,some,map,new,hash,map,some,map,put,austria,some,map,put,usa,locale,us,this,bean,set,some,map,some,map,this,tag,set,path,some,map,this,tag,set,items,get,country,to,locale,map,this,tag,set,item,value,iso,code,this,tag,set,item,label,display,language,bean,property,binding,result,binding,result,new,bean,property,binding,result,get,test,bean,binding,result,get,property,accessor,register,custom,editor,country,class,new,property,editor,support,override,public,void,set,as,text,final,string,text,throws,illegal,argument,exception,set,value,country,get,country,with,iso,code,text,override,public,string,get,as,text,return,country,get,value,get,iso,code,expose,binding,result,binding,result,int,result,this,tag,do,start,tag,assert,equals,tag,result,string,output,get,output,output,doc,output,doc,saxreader,reader,new,saxreader,document,document,reader,read,new,string,reader,output,element,root,element,document,get,root,element,assert,equals,2,root,element,elements,size,element,select,element,root,element,element,select,assert,equals,select,select,element,get,name,assert,equals,some,map,select,element,attribute,name,get,value,list,children,select,element,elements,assert,equals,incorrect,number,of,children,3,children,size,element,e,e,element,select,element,select,single,node,option,value,austria,get,iso,code,assert,not,null,option,node,not,found,with,country,iso,code,value,austria,get,iso,code,e,assert,equals,at,node,not,selected,selected,e,attribute,selected,get,value,assert,equals,at,locale,display,language,property,not,used,for,option,label,get,display,language,e,get,data,e,element,select,element,select,single,node,option,value,usa,get,iso,code,assert,not,null,option,node,not,found,with,country,iso,code,value,usa,get,iso,code,e,assert,equals,us,node,not,selected,selected,e,attribute,selected,get,value,assert,equals,us,locale,display,language,property,not,used,for,option,label,locale,us,get,display,language,e,get,data,finally,locale,set,default,default,locale
SelectTagTests -> public void testWithMultiMapWithItemValueAndItemLabel() throws Exception;1403692611;Tests new support added as a result of <a_href="http://opensource.atlassian.com/projects/spring/browse/SPR-2660"_target="_blank">SPR-2660</a>._<p>_Specifically, if the {@code items} attribute is supplied a_{@link Map}, and {@code itemValue} and {@code itemLabel}_are supplied non-null values, then:_</p>_<ul>_<li>{@code itemValue} will be used as the property name of the_map's <em>key</em>, and</li>_<li>{@code itemLabel} will be used as the property name of the_map's <em>value</em>.</li>_</ul>;public void testWithMultiMapWithItemValueAndItemLabel() throws Exception {_		_		final Locale defaultLocale = Locale.getDefault()__		_		_		Locale.setDefault(Locale.US)___		try {_			final Country austria = Country.COUNTRY_AT__			final Country usa = Country.COUNTRY_US__			final Map someMap = new HashMap()__			someMap.put(austria, LOCALE_AT)__			someMap.put(usa, Locale.US)__			this.bean.setSomeMap(someMap)___			this.tag.setPath("someMap")_ _			this.tag.setItems(getCountryToLocaleMap())__			this.tag.setItemValue("isoCode")_ _			this.tag.setItemLabel("displayLanguage")_ __			BeanPropertyBindingResult bindingResult = new BeanPropertyBindingResult(getTestBean(), COMMAND_NAME)__			bindingResult.getPropertyAccessor().registerCustomEditor(Country.class, new PropertyEditorSupport() {_				@Override_				public void setAsText(final String text) throws IllegalArgumentException {_					setValue(Country.getCountryWithIsoCode(text))__				}__				@Override_				public String getAsText() {_					return ((Country) getValue()).getIsoCode()__				}_			})__			exposeBindingResult(bindingResult)___			int result = this.tag.doStartTag()__			assertEquals(Tag.SKIP_BODY, result)___			String output = getOutput()__			output = "<doc>" + output + "</doc>"___			SAXReader reader = new SAXReader()__			Document document = reader.read(new StringReader(output))__			Element rootElement = document.getRootElement()__			assertEquals(2, rootElement.elements().size())___			Element selectElement = rootElement.element("select")__			assertEquals("select", selectElement.getName())__			assertEquals("someMap", selectElement.attribute("name").getValue())___			List children = selectElement.elements()__			assertEquals("Incorrect number of children", 3, children.size())___			Element e__			e = (Element) selectElement.selectSingleNode("option[@value = '" + austria.getIsoCode() + "']")__			assertNotNull("Option node not found with Country ISO code value [" + austria.getIsoCode() + "].", e)__			assertEquals("AT node not selected.", "selected", e.attribute("selected").getValue())__			assertEquals("AT Locale displayLanguage property not used for option label.",_					LOCALE_AT.getDisplayLanguage(), e.getData())___			e = (Element) selectElement.selectSingleNode("option[@value = '" + usa.getIsoCode() + "']")__			assertNotNull("Option node not found with Country ISO code value [" + usa.getIsoCode() + "].", e)__			assertEquals("US node not selected.", "selected", e.attribute("selected").getValue())__			assertEquals("US Locale displayLanguage property not used for option label.",_					Locale.US.getDisplayLanguage(), e.getData())___		}_		finally {_			_			Locale.setDefault(defaultLocale)__		}_	};tests,new,support,added,as,a,result,of,a,href,http,opensource,atlassian,com,projects,spring,browse,spr,2660,target,spr,2660,a,p,specifically,if,the,code,items,attribute,is,supplied,a,link,map,and,code,item,value,and,code,item,label,are,supplied,non,null,values,then,p,ul,li,code,item,value,will,be,used,as,the,property,name,of,the,map,s,em,key,em,and,li,li,code,item,label,will,be,used,as,the,property,name,of,the,map,s,em,value,em,li,ul;public,void,test,with,multi,map,with,item,value,and,item,label,throws,exception,final,locale,default,locale,locale,get,default,locale,set,default,locale,us,try,final,country,austria,country,final,country,usa,country,final,map,some,map,new,hash,map,some,map,put,austria,some,map,put,usa,locale,us,this,bean,set,some,map,some,map,this,tag,set,path,some,map,this,tag,set,items,get,country,to,locale,map,this,tag,set,item,value,iso,code,this,tag,set,item,label,display,language,bean,property,binding,result,binding,result,new,bean,property,binding,result,get,test,bean,binding,result,get,property,accessor,register,custom,editor,country,class,new,property,editor,support,override,public,void,set,as,text,final,string,text,throws,illegal,argument,exception,set,value,country,get,country,with,iso,code,text,override,public,string,get,as,text,return,country,get,value,get,iso,code,expose,binding,result,binding,result,int,result,this,tag,do,start,tag,assert,equals,tag,result,string,output,get,output,output,doc,output,doc,saxreader,reader,new,saxreader,document,document,reader,read,new,string,reader,output,element,root,element,document,get,root,element,assert,equals,2,root,element,elements,size,element,select,element,root,element,element,select,assert,equals,select,select,element,get,name,assert,equals,some,map,select,element,attribute,name,get,value,list,children,select,element,elements,assert,equals,incorrect,number,of,children,3,children,size,element,e,e,element,select,element,select,single,node,option,value,austria,get,iso,code,assert,not,null,option,node,not,found,with,country,iso,code,value,austria,get,iso,code,e,assert,equals,at,node,not,selected,selected,e,attribute,selected,get,value,assert,equals,at,locale,display,language,property,not,used,for,option,label,get,display,language,e,get,data,e,element,select,element,select,single,node,option,value,usa,get,iso,code,assert,not,null,option,node,not,found,with,country,iso,code,value,usa,get,iso,code,e,assert,equals,us,node,not,selected,selected,e,attribute,selected,get,value,assert,equals,us,locale,display,language,property,not,used,for,option,label,locale,us,get,display,language,e,get,data,finally,locale,set,default,default,locale
SelectTagTests -> @Test 	public void withMultiMapWithItemValueAndItemLabel() throws Exception;1443381471;Tests new support added as a result of <a_href="http://opensource.atlassian.com/projects/spring/browse/SPR-2660"_target="_blank">SPR-2660</a>._<p>_Specifically, if the {@code items} attribute is supplied a_{@link Map}, and {@code itemValue} and {@code itemLabel}_are supplied non-null values, then:_</p>_<ul>_<li>{@code itemValue} will be used as the property name of the_map's <em>key</em>, and</li>_<li>{@code itemLabel} will be used as the property name of the_map's <em>value</em>.</li>_</ul>;@Test_	public void withMultiMapWithItemValueAndItemLabel() throws Exception {_		_		final Locale defaultLocale = Locale.getDefault()__		_		_		Locale.setDefault(Locale.US)___		try {_			final Country austria = Country.COUNTRY_AT__			final Country usa = Country.COUNTRY_US__			final Map someMap = new HashMap()__			someMap.put(austria, LOCALE_AT)__			someMap.put(usa, Locale.US)__			this.bean.setSomeMap(someMap)___			this.tag.setPath("someMap")_ _			this.tag.setItems(getCountryToLocaleMap())__			this.tag.setItemValue("isoCode")_ _			this.tag.setItemLabel("displayLanguage")_ __			BeanPropertyBindingResult bindingResult = new BeanPropertyBindingResult(getTestBean(), COMMAND_NAME)__			bindingResult.getPropertyAccessor().registerCustomEditor(Country.class, new PropertyEditorSupport() {_				@Override_				public void setAsText(final String text) throws IllegalArgumentException {_					setValue(Country.getCountryWithIsoCode(text))__				}__				@Override_				public String getAsText() {_					return ((Country) getValue()).getIsoCode()__				}_			})__			exposeBindingResult(bindingResult)___			int result = this.tag.doStartTag()__			assertEquals(Tag.SKIP_BODY, result)___			String output = getOutput()__			output = "<doc>" + output + "</doc>"___			SAXReader reader = new SAXReader()__			Document document = reader.read(new StringReader(output))__			Element rootElement = document.getRootElement()__			assertEquals(2, rootElement.elements().size())___			Element selectElement = rootElement.element("select")__			assertEquals("select", selectElement.getName())__			assertEquals("someMap", selectElement.attribute("name").getValue())___			List children = selectElement.elements()__			assertEquals("Incorrect number of children", 3, children.size())___			Element e__			e = (Element) selectElement.selectSingleNode("option[@value = '" + austria.getIsoCode() + "']")__			assertNotNull("Option node not found with Country ISO code value [" + austria.getIsoCode() + "].", e)__			assertEquals("AT node not selected.", "selected", e.attribute("selected").getValue())__			assertEquals("AT Locale displayLanguage property not used for option label.",_					LOCALE_AT.getDisplayLanguage(), e.getData())___			e = (Element) selectElement.selectSingleNode("option[@value = '" + usa.getIsoCode() + "']")__			assertNotNull("Option node not found with Country ISO code value [" + usa.getIsoCode() + "].", e)__			assertEquals("US node not selected.", "selected", e.attribute("selected").getValue())__			assertEquals("US Locale displayLanguage property not used for option label.",_					Locale.US.getDisplayLanguage(), e.getData())___		}_		finally {_			_			Locale.setDefault(defaultLocale)__		}_	};tests,new,support,added,as,a,result,of,a,href,http,opensource,atlassian,com,projects,spring,browse,spr,2660,target,spr,2660,a,p,specifically,if,the,code,items,attribute,is,supplied,a,link,map,and,code,item,value,and,code,item,label,are,supplied,non,null,values,then,p,ul,li,code,item,value,will,be,used,as,the,property,name,of,the,map,s,em,key,em,and,li,li,code,item,label,will,be,used,as,the,property,name,of,the,map,s,em,value,em,li,ul;test,public,void,with,multi,map,with,item,value,and,item,label,throws,exception,final,locale,default,locale,locale,get,default,locale,set,default,locale,us,try,final,country,austria,country,final,country,usa,country,final,map,some,map,new,hash,map,some,map,put,austria,some,map,put,usa,locale,us,this,bean,set,some,map,some,map,this,tag,set,path,some,map,this,tag,set,items,get,country,to,locale,map,this,tag,set,item,value,iso,code,this,tag,set,item,label,display,language,bean,property,binding,result,binding,result,new,bean,property,binding,result,get,test,bean,binding,result,get,property,accessor,register,custom,editor,country,class,new,property,editor,support,override,public,void,set,as,text,final,string,text,throws,illegal,argument,exception,set,value,country,get,country,with,iso,code,text,override,public,string,get,as,text,return,country,get,value,get,iso,code,expose,binding,result,binding,result,int,result,this,tag,do,start,tag,assert,equals,tag,result,string,output,get,output,output,doc,output,doc,saxreader,reader,new,saxreader,document,document,reader,read,new,string,reader,output,element,root,element,document,get,root,element,assert,equals,2,root,element,elements,size,element,select,element,root,element,element,select,assert,equals,select,select,element,get,name,assert,equals,some,map,select,element,attribute,name,get,value,list,children,select,element,elements,assert,equals,incorrect,number,of,children,3,children,size,element,e,e,element,select,element,select,single,node,option,value,austria,get,iso,code,assert,not,null,option,node,not,found,with,country,iso,code,value,austria,get,iso,code,e,assert,equals,at,node,not,selected,selected,e,attribute,selected,get,value,assert,equals,at,locale,display,language,property,not,used,for,option,label,get,display,language,e,get,data,e,element,select,element,select,single,node,option,value,usa,get,iso,code,assert,not,null,option,node,not,found,with,country,iso,code,value,usa,get,iso,code,e,assert,equals,us,node,not,selected,selected,e,attribute,selected,get,value,assert,equals,us,locale,display,language,property,not,used,for,option,label,locale,us,get,display,language,e,get,data,finally,locale,set,default,default,locale
SelectTagTests -> @Test 	public void withMultiMapWithItemValueAndItemLabel() throws Exception;1467730834;Tests new support added as a result of <a_href="http://opensource.atlassian.com/projects/spring/browse/SPR-2660"_target="_blank">SPR-2660</a>._<p>_Specifically, if the {@code items} attribute is supplied a_{@link Map}, and {@code itemValue} and {@code itemLabel}_are supplied non-null values, then:_</p>_<ul>_<li>{@code itemValue} will be used as the property name of the_map's <em>key</em>, and</li>_<li>{@code itemLabel} will be used as the property name of the_map's <em>value</em>.</li>_</ul>;@Test_	public void withMultiMapWithItemValueAndItemLabel() throws Exception {_		_		final Locale defaultLocale = Locale.getDefault()__		_		_		Locale.setDefault(Locale.US)___		try {_			final Country austria = Country.COUNTRY_AT__			final Country usa = Country.COUNTRY_US__			final Map someMap = new HashMap()__			someMap.put(austria, LOCALE_AT)__			someMap.put(usa, Locale.US)__			this.bean.setSomeMap(someMap)___			this.tag.setPath("someMap")_ _			this.tag.setItems(getCountryToLocaleMap())__			this.tag.setItemValue("isoCode")_ _			this.tag.setItemLabel("displayLanguage")_ __			BeanPropertyBindingResult bindingResult = new BeanPropertyBindingResult(getTestBean(), COMMAND_NAME)__			bindingResult.getPropertyAccessor().registerCustomEditor(Country.class, new PropertyEditorSupport() {_				@Override_				public void setAsText(final String text) throws IllegalArgumentException {_					setValue(Country.getCountryWithIsoCode(text))__				}__				@Override_				public String getAsText() {_					return ((Country) getValue()).getIsoCode()__				}_			})__			exposeBindingResult(bindingResult)___			int result = this.tag.doStartTag()__			assertEquals(Tag.SKIP_BODY, result)___			String output = getOutput()__			output = "<doc>" + output + "</doc>"___			SAXReader reader = new SAXReader()__			Document document = reader.read(new StringReader(output))__			Element rootElement = document.getRootElement()__			assertEquals(2, rootElement.elements().size())___			Element selectElement = rootElement.element("select")__			assertEquals("select", selectElement.getName())__			assertEquals("someMap", selectElement.attribute("name").getValue())___			List children = selectElement.elements()__			assertEquals("Incorrect number of children", 3, children.size())___			Element e__			e = (Element) selectElement.selectSingleNode("option[@value = '" + austria.getIsoCode() + "']")__			assertNotNull("Option node not found with Country ISO code value [" + austria.getIsoCode() + "].", e)__			assertEquals("AT node not selected.", "selected", e.attribute("selected").getValue())__			assertEquals("AT Locale displayLanguage property not used for option label.",_					LOCALE_AT.getDisplayLanguage(), e.getData())___			e = (Element) selectElement.selectSingleNode("option[@value = '" + usa.getIsoCode() + "']")__			assertNotNull("Option node not found with Country ISO code value [" + usa.getIsoCode() + "].", e)__			assertEquals("US node not selected.", "selected", e.attribute("selected").getValue())__			assertEquals("US Locale displayLanguage property not used for option label.",_					Locale.US.getDisplayLanguage(), e.getData())___		}_		finally {_			_			Locale.setDefault(defaultLocale)__		}_	};tests,new,support,added,as,a,result,of,a,href,http,opensource,atlassian,com,projects,spring,browse,spr,2660,target,spr,2660,a,p,specifically,if,the,code,items,attribute,is,supplied,a,link,map,and,code,item,value,and,code,item,label,are,supplied,non,null,values,then,p,ul,li,code,item,value,will,be,used,as,the,property,name,of,the,map,s,em,key,em,and,li,li,code,item,label,will,be,used,as,the,property,name,of,the,map,s,em,value,em,li,ul;test,public,void,with,multi,map,with,item,value,and,item,label,throws,exception,final,locale,default,locale,locale,get,default,locale,set,default,locale,us,try,final,country,austria,country,final,country,usa,country,final,map,some,map,new,hash,map,some,map,put,austria,some,map,put,usa,locale,us,this,bean,set,some,map,some,map,this,tag,set,path,some,map,this,tag,set,items,get,country,to,locale,map,this,tag,set,item,value,iso,code,this,tag,set,item,label,display,language,bean,property,binding,result,binding,result,new,bean,property,binding,result,get,test,bean,binding,result,get,property,accessor,register,custom,editor,country,class,new,property,editor,support,override,public,void,set,as,text,final,string,text,throws,illegal,argument,exception,set,value,country,get,country,with,iso,code,text,override,public,string,get,as,text,return,country,get,value,get,iso,code,expose,binding,result,binding,result,int,result,this,tag,do,start,tag,assert,equals,tag,result,string,output,get,output,output,doc,output,doc,saxreader,reader,new,saxreader,document,document,reader,read,new,string,reader,output,element,root,element,document,get,root,element,assert,equals,2,root,element,elements,size,element,select,element,root,element,element,select,assert,equals,select,select,element,get,name,assert,equals,some,map,select,element,attribute,name,get,value,list,children,select,element,elements,assert,equals,incorrect,number,of,children,3,children,size,element,e,e,element,select,element,select,single,node,option,value,austria,get,iso,code,assert,not,null,option,node,not,found,with,country,iso,code,value,austria,get,iso,code,e,assert,equals,at,node,not,selected,selected,e,attribute,selected,get,value,assert,equals,at,locale,display,language,property,not,used,for,option,label,get,display,language,e,get,data,e,element,select,element,select,single,node,option,value,usa,get,iso,code,assert,not,null,option,node,not,found,with,country,iso,code,value,usa,get,iso,code,e,assert,equals,us,node,not,selected,selected,e,attribute,selected,get,value,assert,equals,us,locale,display,language,property,not,used,for,option,label,locale,us,get,display,language,e,get,data,finally,locale,set,default,default,locale
