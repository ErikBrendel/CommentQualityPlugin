commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;10;;@BeforeClass public static void setupOnce() {     RequestMappingHandlerAdapter adapter = new RequestMappingHandlerAdapter().     adapter.setApplicationContext(new StaticWebApplicationContext()).     adapter.afterPropertiesSet().     RESOLVER_COUNT = adapter.getArgumentResolvers().size().     INIT_BINDER_RESOLVER_COUNT = adapter.getInitBinderArgumentResolvers().size().     HANDLER_COUNT = adapter.getReturnValueHandlers().size(). }
false;public;0;8;;@Before public void setup() throws Exception {     this.webAppContext = new StaticWebApplicationContext().     this.handlerAdapter = new RequestMappingHandlerAdapter().     this.handlerAdapter.setApplicationContext(this.webAppContext).     this.request = new MockHttpServletRequest("GET", "/").     this.response = new MockHttpServletResponse(). }
false;public;0;9;;@Test public void cacheControlWithoutSessionAttributes() throws Exception {     HandlerMethod handlerMethod = handlerMethod(new SimpleController(), "handle").     this.handlerAdapter.setCacheSeconds(100).     this.handlerAdapter.afterPropertiesSet().     this.handlerAdapter.handle(this.request, this.response, handlerMethod).     assertTrue(response.getHeader("Cache-Control").contains("max-age")). }
false;public;0;9;;@Test public void cacheControlWithSessionAttributes() throws Exception {     SessionAttributeController handler = new SessionAttributeController().     this.handlerAdapter.setCacheSeconds(100).     this.handlerAdapter.afterPropertiesSet().     this.handlerAdapter.handle(this.request, this.response, handlerMethod(handler, "handle")).     assertEquals("no-store", this.response.getHeader("Cache-Control")). }
false;public;0;18;;@Test public void setAlwaysUseRedirectAttributes() throws Exception {     HandlerMethodArgumentResolver redirectAttributesResolver = new RedirectAttributesMethodArgumentResolver().     HandlerMethodArgumentResolver modelResolver = new ModelMethodProcessor().     HandlerMethodReturnValueHandler viewHandler = new ViewNameMethodReturnValueHandler().     this.handlerAdapter.setArgumentResolvers(Arrays.asList(redirectAttributesResolver, modelResolver)).     this.handlerAdapter.setReturnValueHandlers(Collections.singletonList(viewHandler)).     this.handlerAdapter.setIgnoreDefaultModelOnRedirect(true).     this.handlerAdapter.afterPropertiesSet().     this.request.setAttribute(DispatcherServlet.OUTPUT_FLASH_MAP_ATTRIBUTE, new FlashMap()).     HandlerMethod handlerMethod = handlerMethod(new RedirectAttributeController(), "handle", Model.class).     ModelAndView mav = this.handlerAdapter.handle(request, response, handlerMethod).     assertTrue("Without RedirectAttributes arg, model should be empty", mav.getModel().isEmpty()). }
false;public;0;9;;@Test public void setCustomArgumentResolvers() throws Exception {     HandlerMethodArgumentResolver resolver = new ServletRequestMethodArgumentResolver().     this.handlerAdapter.setCustomArgumentResolvers(Collections.singletonList(resolver)).     this.handlerAdapter.afterPropertiesSet().     assertTrue(this.handlerAdapter.getArgumentResolvers().contains(resolver)).     assertMethodProcessorCount(RESOLVER_COUNT + 1, INIT_BINDER_RESOLVER_COUNT + 1, HANDLER_COUNT). }
false;public;0;8;;@Test public void setArgumentResolvers() throws Exception {     HandlerMethodArgumentResolver resolver = new ServletRequestMethodArgumentResolver().     this.handlerAdapter.setArgumentResolvers(Collections.singletonList(resolver)).     this.handlerAdapter.afterPropertiesSet().     assertMethodProcessorCount(1, INIT_BINDER_RESOLVER_COUNT, HANDLER_COUNT). }
false;public;0;8;;@Test public void setInitBinderArgumentResolvers() throws Exception {     HandlerMethodArgumentResolver resolver = new ServletRequestMethodArgumentResolver().     this.handlerAdapter.setInitBinderArgumentResolvers(Collections.singletonList(resolver)).     this.handlerAdapter.afterPropertiesSet().     assertMethodProcessorCount(RESOLVER_COUNT, 1, HANDLER_COUNT). }
false;public;0;9;;@Test public void setCustomReturnValueHandlers() {     HandlerMethodReturnValueHandler handler = new ViewNameMethodReturnValueHandler().     this.handlerAdapter.setCustomReturnValueHandlers(Collections.singletonList(handler)).     this.handlerAdapter.afterPropertiesSet().     assertTrue(this.handlerAdapter.getReturnValueHandlers().contains(handler)).     assertMethodProcessorCount(RESOLVER_COUNT, INIT_BINDER_RESOLVER_COUNT, HANDLER_COUNT + 1). }
false;public;0;8;;@Test public void setReturnValueHandlers() {     HandlerMethodReturnValueHandler handler = new ModelMethodProcessor().     this.handlerAdapter.setReturnValueHandlers(Collections.singletonList(handler)).     this.handlerAdapter.afterPropertiesSet().     assertMethodProcessorCount(RESOLVER_COUNT, INIT_BINDER_RESOLVER_COUNT, 1). }
false;public;0;12;;@Test public void modelAttributeAdvice() throws Exception {     this.webAppContext.registerSingleton("maa", ModelAttributeAdvice.class).     this.webAppContext.refresh().     HandlerMethod handlerMethod = handlerMethod(new SimpleController(), "handle").     this.handlerAdapter.afterPropertiesSet().     ModelAndView mav = this.handlerAdapter.handle(this.request, this.response, handlerMethod).     assertEquals("lAttr1", mav.getModel().get("attr1")).     assertEquals("gAttr2", mav.getModel().get("attr2")). }
false;public;0;15;;@Test public void modelAttributeAdviceInParentContext() throws Exception {     StaticWebApplicationContext parent = new StaticWebApplicationContext().     parent.registerSingleton("maa", ModelAttributeAdvice.class).     parent.refresh().     this.webAppContext.setParent(parent).     this.webAppContext.refresh().     HandlerMethod handlerMethod = handlerMethod(new SimpleController(), "handle").     this.handlerAdapter.afterPropertiesSet().     ModelAndView mav = this.handlerAdapter.handle(this.request, this.response, handlerMethod).     assertEquals("lAttr1", mav.getModel().get("attr1")).     assertEquals("gAttr2", mav.getModel().get("attr2")). }
false;public;0;14;;@Test public void modelAttributePackageNameAdvice() throws Exception {     this.webAppContext.registerSingleton("mapa", ModelAttributePackageAdvice.class).     this.webAppContext.registerSingleton("manupa", ModelAttributeNotUsedPackageAdvice.class).     this.webAppContext.refresh().     HandlerMethod handlerMethod = handlerMethod(new SimpleController(), "handle").     this.handlerAdapter.afterPropertiesSet().     ModelAndView mav = this.handlerAdapter.handle(this.request, this.response, handlerMethod).     assertEquals("lAttr1", mav.getModel().get("attr1")).     assertEquals("gAttr2", mav.getModel().get("attr2")).     assertEquals(null, mav.getModel().get("attr3")). }
false;public;0;19;;// SPR-10859 @Test public void responseBodyAdvice() throws Exception {     List<HttpMessageConverter<?>> converters = new ArrayList<>().     converters.add(new MappingJackson2HttpMessageConverter()).     this.handlerAdapter.setMessageConverters(converters).     this.webAppContext.registerSingleton("rba", ResponseCodeSuppressingAdvice.class).     this.webAppContext.refresh().     this.request.addHeader("Accept", MediaType.APPLICATION_JSON_VALUE).     this.request.setParameter("c", "callback").     HandlerMethod handlerMethod = handlerMethod(new SimpleController(), "handleBadRequest").     this.handlerAdapter.afterPropertiesSet().     this.handlerAdapter.handle(this.request, this.response, handlerMethod).     assertEquals(200, this.response.getStatus()).     assertEquals("{\"status\":400,\"message\":\"body\"}", this.response.getContentAsString()). }
false;private;3;4;;private HandlerMethod handlerMethod(Object handler, String methodName, Class<?>... paramTypes) throws Exception {     Method method = handler.getClass().getDeclaredMethod(methodName, paramTypes).     return new InvocableHandlerMethod(handler, method). }
false;private;3;5;;private void assertMethodProcessorCount(int resolverCount, int initBinderResolverCount, int handlerCount) {     assertEquals(resolverCount, this.handlerAdapter.getArgumentResolvers().size()).     assertEquals(initBinderResolverCount, this.handlerAdapter.getInitBinderArgumentResolvers().size()).     assertEquals(handlerCount, this.handlerAdapter.getReturnValueHandlers().size()). }
false;public;1;4;;@ModelAttribute public void addAttributes(Model model) {     model.addAttribute("attr1", "lAttr1"). }
false;public;0;3;;public String handle() {     return null. }
false;public;0;4;;public ResponseEntity<Map<String, String>> handleWithResponseEntity() {     return new ResponseEntity<>(Collections.singletonMap("foo", "bar"), HttpStatus.OK). }
false;public;0;3;;public ResponseEntity<String> handleBadRequest() {     return new ResponseEntity<>("body", HttpStatus.BAD_REQUEST). }
false;public;0;3;;@SuppressWarnings("unused") public void handle() { }
false;public;1;4;;public String handle(Model model) {     model.addAttribute("someAttr", "someAttrValue").     return "redirect:/path". }
false;public;1;6;;@SuppressWarnings("unused") @ModelAttribute public void addAttributes(Model model) {     model.addAttribute("attr1", "gAttr1").     model.addAttribute("attr2", "gAttr2"). }
false;public;1;5;;@SuppressWarnings("unused") @ModelAttribute public void addAttributes(Model model) {     model.addAttribute("attr2", "gAttr2"). }
false;public;1;5;;@SuppressWarnings("unused") @ModelAttribute public void addAttributes(Model model) {     model.addAttribute("attr3", "gAttr3"). }
false;protected;5;12;;@Override protected void beforeBodyWriteInternal(MappingJacksonValue bodyContainer, MediaType contentType, MethodParameter returnType, ServerHttpRequest request, ServerHttpResponse response) {     int status = ((ServletServerHttpResponse) response).getServletResponse().getStatus().     response.setStatusCode(HttpStatus.OK).     Map<String, Object> map = new LinkedHashMap<>().     map.put("status", status).     map.put("message", bodyContainer.getValue()).     bodyContainer.setValue(map). }
