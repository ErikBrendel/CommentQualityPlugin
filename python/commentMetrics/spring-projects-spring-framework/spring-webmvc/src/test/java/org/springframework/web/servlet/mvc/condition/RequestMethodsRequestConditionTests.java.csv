commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void getMatchingCondition() {     testMatch(new RequestMethodsRequestCondition(GET), GET).     testMatch(new RequestMethodsRequestCondition(GET, POST), GET).     testNoMatch(new RequestMethodsRequestCondition(GET), POST). }
false;public;0;6;;@Test public void getMatchingConditionWithHttpHead() {     testMatch(new RequestMethodsRequestCondition(HEAD), HEAD).     testMatch(new RequestMethodsRequestCondition(GET), GET).     testNoMatch(new RequestMethodsRequestCondition(POST), HEAD). }
false;public;0;11;;@Test public void getMatchingConditionWithEmptyConditions() {     RequestMethodsRequestCondition condition = new RequestMethodsRequestCondition().     for (RequestMethod method : RequestMethod.values()) {         if (method != OPTIONS) {             HttpServletRequest request = new MockHttpServletRequest(method.name(), "").             assertNotNull(condition.getMatchingCondition(request)).         }     }     testNoMatch(condition, OPTIONS). }
false;public;0;6;;@Test public void getMatchingConditionWithCustomMethod() {     HttpServletRequest request = new MockHttpServletRequest("PROPFIND", "").     assertNotNull(new RequestMethodsRequestCondition().getMatchingCondition(request)).     assertNull(new RequestMethodsRequestCondition(GET, POST).getMatchingCondition(request)). }
false;public;0;10;;@Test public void getMatchingConditionWithCorsPreFlight() throws Exception {     MockHttpServletRequest request = new MockHttpServletRequest("OPTIONS", "").     request.addHeader("Origin", "http://example.com").     request.addHeader(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "PUT").     assertNotNull(new RequestMethodsRequestCondition().getMatchingCondition(request)).     assertNotNull(new RequestMethodsRequestCondition(PUT).getMatchingCondition(request)).     assertNull(new RequestMethodsRequestCondition(DELETE).getMatchingCondition(request)). }
false;public;0;11;;// SPR-14410 @Test public void getMatchingConditionWithHttpOptionsInErrorDispatch() throws Exception {     MockHttpServletRequest request = new MockHttpServletRequest("OPTIONS", "/path").     request.setDispatcherType(DispatcherType.ERROR).     RequestMethodsRequestCondition condition = new RequestMethodsRequestCondition().     RequestMethodsRequestCondition result = condition.getMatchingCondition(request).     assertNotNull(result).     assertSame(condition, result). }
false;public;0;20;;@Test public void compareTo() {     RequestMethodsRequestCondition c1 = new RequestMethodsRequestCondition(GET, HEAD).     RequestMethodsRequestCondition c2 = new RequestMethodsRequestCondition(POST).     RequestMethodsRequestCondition c3 = new RequestMethodsRequestCondition().     MockHttpServletRequest request = new MockHttpServletRequest().     int result = c1.compareTo(c2, request).     assertTrue("Invalid comparison result: " + result, result < 0).     result = c2.compareTo(c1, request).     assertTrue("Invalid comparison result: " + result, result > 0).     result = c2.compareTo(c3, request).     assertTrue("Invalid comparison result: " + result, result < 0).     result = c1.compareTo(c1, request).     assertEquals("Invalid comparison result ", 0, result). }
false;public;0;8;;@Test public void combine() {     RequestMethodsRequestCondition condition1 = new RequestMethodsRequestCondition(GET).     RequestMethodsRequestCondition condition2 = new RequestMethodsRequestCondition(POST).     RequestMethodsRequestCondition result = condition1.combine(condition2).     assertEquals(2, result.getContent().size()). }
false;private;2;6;;private void testMatch(RequestMethodsRequestCondition condition, RequestMethod method) {     MockHttpServletRequest request = new MockHttpServletRequest(method.name(), "").     RequestMethodsRequestCondition actual = condition.getMatchingCondition(request).     assertNotNull(actual).     assertEquals(Collections.singleton(method), actual.getContent()). }
false;private;2;4;;private void testNoMatch(RequestMethodsRequestCondition condition, RequestMethod method) {     MockHttpServletRequest request = new MockHttpServletRequest(method.name(), "").     assertNull(condition.getMatchingCondition(request)). }
