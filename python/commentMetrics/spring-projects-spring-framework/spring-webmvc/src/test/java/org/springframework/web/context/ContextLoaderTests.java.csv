# id;timestamp;commentText;codeText;commentWords;codeWords
ContextLoaderTests -> @Test 	public void testContextLoaderListenerWithCustomizedContextLoader();1328020251;Addresses the issues raised in <a_href="http://opensource.atlassian.com/projects/spring/browse/SPR-4008"_target="_blank">SPR-4008</a>: <em>Supply an opportunity to customize_context before calling refresh in ContextLoaders</em>.;@Test_	public void testContextLoaderListenerWithCustomizedContextLoader() {_		final StringBuffer buffer = new StringBuffer()__		final String expectedContents = "customizeContext() was called"__		final MockServletContext sc = new MockServletContext("")__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM,_				"/org/springframework/web/context/WEB-INF/applicationContext.xml")__		final ServletContextListener listener = new ContextLoaderListener() {_			protected void customizeContext(ServletContext servletContext, ConfigurableWebApplicationContext applicationContext) {_				assertNotNull("The ServletContext should not be null.", servletContext)__				assertEquals("Verifying that we received the expected ServletContext.", sc, servletContext)__				assertFalse("The ApplicationContext should not yet have been refreshed.", applicationContext.isActive())__				buffer.append(expectedContents)__			}_		}__		listener.contextInitialized(new ServletContextEvent(sc))__		assertEquals("customizeContext() should have been called.", expectedContents, buffer.toString())__	};addresses,the,issues,raised,in,a,href,http,opensource,atlassian,com,projects,spring,browse,spr,4008,target,spr,4008,a,em,supply,an,opportunity,to,customize,context,before,calling,refresh,in,context,loaders,em;test,public,void,test,context,loader,listener,with,customized,context,loader,final,string,buffer,buffer,new,string,buffer,final,string,expected,contents,customize,context,was,called,final,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,org,springframework,web,context,web,inf,application,context,xml,final,servlet,context,listener,listener,new,context,loader,listener,protected,void,customize,context,servlet,context,servlet,context,configurable,web,application,context,application,context,assert,not,null,the,servlet,context,should,not,be,null,servlet,context,assert,equals,verifying,that,we,received,the,expected,servlet,context,sc,servlet,context,assert,false,the,application,context,should,not,yet,have,been,refreshed,application,context,is,active,buffer,append,expected,contents,listener,context,initialized,new,servlet,context,event,sc,assert,equals,customize,context,should,have,been,called,expected,contents,buffer,to,string
ContextLoaderTests -> @Test 	public void testContextLoaderListenerWithCustomizedContextLoader();1329142650;Addresses the issues raised in <a_href="http://opensource.atlassian.com/projects/spring/browse/SPR-4008"_target="_blank">SPR-4008</a>: <em>Supply an opportunity to customize_context before calling refresh in ContextLoaders</em>.;@Test_	public void testContextLoaderListenerWithCustomizedContextLoader() {_		final StringBuffer buffer = new StringBuffer()__		final String expectedContents = "customizeContext() was called"__		final MockServletContext sc = new MockServletContext("")__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM,_				"/org/springframework/web/context/WEB-INF/applicationContext.xml")__		final ServletContextListener listener = new ContextLoaderListener() {_			protected void customizeContext(ServletContext servletContext, ConfigurableWebApplicationContext applicationContext) {_				assertNotNull("The ServletContext should not be null.", servletContext)__				assertEquals("Verifying that we received the expected ServletContext.", sc, servletContext)__				assertFalse("The ApplicationContext should not yet have been refreshed.", applicationContext.isActive())__				buffer.append(expectedContents)__			}_		}__		listener.contextInitialized(new ServletContextEvent(sc))__		assertEquals("customizeContext() should have been called.", expectedContents, buffer.toString())__	};addresses,the,issues,raised,in,a,href,http,opensource,atlassian,com,projects,spring,browse,spr,4008,target,spr,4008,a,em,supply,an,opportunity,to,customize,context,before,calling,refresh,in,context,loaders,em;test,public,void,test,context,loader,listener,with,customized,context,loader,final,string,buffer,buffer,new,string,buffer,final,string,expected,contents,customize,context,was,called,final,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,org,springframework,web,context,web,inf,application,context,xml,final,servlet,context,listener,listener,new,context,loader,listener,protected,void,customize,context,servlet,context,servlet,context,configurable,web,application,context,application,context,assert,not,null,the,servlet,context,should,not,be,null,servlet,context,assert,equals,verifying,that,we,received,the,expected,servlet,context,sc,servlet,context,assert,false,the,application,context,should,not,yet,have,been,refreshed,application,context,is,active,buffer,append,expected,contents,listener,context,initialized,new,servlet,context,event,sc,assert,equals,customize,context,should,have,been,called,expected,contents,buffer,to,string
ContextLoaderTests -> @Test 	public void testContextLoaderListenerWithCustomizedContextLoader();1354292158;Addresses the issues raised in <a_href="http://opensource.atlassian.com/projects/spring/browse/SPR-4008"_target="_blank">SPR-4008</a>: <em>Supply an opportunity to customize_context before calling refresh in ContextLoaders</em>.;@Test_	public void testContextLoaderListenerWithCustomizedContextLoader() {_		final StringBuffer buffer = new StringBuffer()__		final String expectedContents = "customizeContext() was called"__		final MockServletContext sc = new MockServletContext("")__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM,_				"/org/springframework/web/context/WEB-INF/applicationContext.xml")__		final ServletContextListener listener = new ContextLoaderListener() {_			protected void customizeContext(ServletContext servletContext, ConfigurableWebApplicationContext applicationContext) {_				assertNotNull("The ServletContext should not be null.", servletContext)__				assertEquals("Verifying that we received the expected ServletContext.", sc, servletContext)__				assertFalse("The ApplicationContext should not yet have been refreshed.", applicationContext.isActive())__				buffer.append(expectedContents)__			}_		}__		listener.contextInitialized(new ServletContextEvent(sc))__		assertEquals("customizeContext() should have been called.", expectedContents, buffer.toString())__	};addresses,the,issues,raised,in,a,href,http,opensource,atlassian,com,projects,spring,browse,spr,4008,target,spr,4008,a,em,supply,an,opportunity,to,customize,context,before,calling,refresh,in,context,loaders,em;test,public,void,test,context,loader,listener,with,customized,context,loader,final,string,buffer,buffer,new,string,buffer,final,string,expected,contents,customize,context,was,called,final,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,org,springframework,web,context,web,inf,application,context,xml,final,servlet,context,listener,listener,new,context,loader,listener,protected,void,customize,context,servlet,context,servlet,context,configurable,web,application,context,application,context,assert,not,null,the,servlet,context,should,not,be,null,servlet,context,assert,equals,verifying,that,we,received,the,expected,servlet,context,sc,servlet,context,assert,false,the,application,context,should,not,yet,have,been,refreshed,application,context,is,active,buffer,append,expected,contents,listener,context,initialized,new,servlet,context,event,sc,assert,equals,customize,context,should,have,been,called,expected,contents,buffer,to,string
ContextLoaderTests -> @Test 	public void testContextLoaderListenerWithCustomizedContextLoader();1356735495;Addresses the issues raised in <a_href="http://opensource.atlassian.com/projects/spring/browse/SPR-4008"_target="_blank">SPR-4008</a>: <em>Supply an opportunity to customize_context before calling refresh in ContextLoaders</em>.;@Test_	public void testContextLoaderListenerWithCustomizedContextLoader() {_		final StringBuffer buffer = new StringBuffer()__		final String expectedContents = "customizeContext() was called"__		final MockServletContext sc = new MockServletContext("")__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM,_				"/org/springframework/web/context/WEB-INF/applicationContext.xml")__		final ServletContextListener listener = new ContextLoaderListener() {_			@Override_			protected void customizeContext(ServletContext servletContext, ConfigurableWebApplicationContext applicationContext) {_				assertNotNull("The ServletContext should not be null.", servletContext)__				assertEquals("Verifying that we received the expected ServletContext.", sc, servletContext)__				assertFalse("The ApplicationContext should not yet have been refreshed.", applicationContext.isActive())__				buffer.append(expectedContents)__			}_		}__		listener.contextInitialized(new ServletContextEvent(sc))__		assertEquals("customizeContext() should have been called.", expectedContents, buffer.toString())__	};addresses,the,issues,raised,in,a,href,http,opensource,atlassian,com,projects,spring,browse,spr,4008,target,spr,4008,a,em,supply,an,opportunity,to,customize,context,before,calling,refresh,in,context,loaders,em;test,public,void,test,context,loader,listener,with,customized,context,loader,final,string,buffer,buffer,new,string,buffer,final,string,expected,contents,customize,context,was,called,final,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,org,springframework,web,context,web,inf,application,context,xml,final,servlet,context,listener,listener,new,context,loader,listener,override,protected,void,customize,context,servlet,context,servlet,context,configurable,web,application,context,application,context,assert,not,null,the,servlet,context,should,not,be,null,servlet,context,assert,equals,verifying,that,we,received,the,expected,servlet,context,sc,servlet,context,assert,false,the,application,context,should,not,yet,have,been,refreshed,application,context,is,active,buffer,append,expected,contents,listener,context,initialized,new,servlet,context,event,sc,assert,equals,customize,context,should,have,been,called,expected,contents,buffer,to,string
ContextLoaderTests -> @Test 	public void testContextLoaderListenerWithCustomizedContextLoader();1362408075;Addresses the issues raised in <a_href="http://opensource.atlassian.com/projects/spring/browse/SPR-4008"_target="_blank">SPR-4008</a>: <em>Supply an opportunity to customize_context before calling refresh in ContextLoaders</em>.;@Test_	public void testContextLoaderListenerWithCustomizedContextLoader() {_		final StringBuffer buffer = new StringBuffer()__		final String expectedContents = "customizeContext() was called"__		final MockServletContext sc = new MockServletContext("")__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM,_				"/org/springframework/web/context/WEB-INF/applicationContext.xml")__		final ServletContextListener listener = new ContextLoaderListener() {_			@Override_			protected void customizeContext(ServletContext servletContext, ConfigurableWebApplicationContext applicationContext) {_				assertNotNull("The ServletContext should not be null.", servletContext)__				assertEquals("Verifying that we received the expected ServletContext.", sc, servletContext)__				assertFalse("The ApplicationContext should not yet have been refreshed.", applicationContext.isActive())__				buffer.append(expectedContents)__			}_		}__		listener.contextInitialized(new ServletContextEvent(sc))__		assertEquals("customizeContext() should have been called.", expectedContents, buffer.toString())__	};addresses,the,issues,raised,in,a,href,http,opensource,atlassian,com,projects,spring,browse,spr,4008,target,spr,4008,a,em,supply,an,opportunity,to,customize,context,before,calling,refresh,in,context,loaders,em;test,public,void,test,context,loader,listener,with,customized,context,loader,final,string,buffer,buffer,new,string,buffer,final,string,expected,contents,customize,context,was,called,final,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,org,springframework,web,context,web,inf,application,context,xml,final,servlet,context,listener,listener,new,context,loader,listener,override,protected,void,customize,context,servlet,context,servlet,context,configurable,web,application,context,application,context,assert,not,null,the,servlet,context,should,not,be,null,servlet,context,assert,equals,verifying,that,we,received,the,expected,servlet,context,sc,servlet,context,assert,false,the,application,context,should,not,yet,have,been,refreshed,application,context,is,active,buffer,append,expected,contents,listener,context,initialized,new,servlet,context,event,sc,assert,equals,customize,context,should,have,been,called,expected,contents,buffer,to,string
ContextLoaderTests -> @Test 	public void testContextLoaderListenerWithCustomizedContextLoader();1389820887;Addresses the issues raised in <a_href="http://opensource.atlassian.com/projects/spring/browse/SPR-4008"_target="_blank">SPR-4008</a>: <em>Supply an opportunity to customize_context before calling refresh in ContextLoaders</em>.;@Test_	public void testContextLoaderListenerWithCustomizedContextLoader() {_		final StringBuffer buffer = new StringBuffer()__		final String expectedContents = "customizeContext() was called"__		final MockServletContext sc = new MockServletContext("")__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM,_				"/org/springframework/web/context/WEB-INF/applicationContext.xml")__		ServletContextListener listener = new ContextLoaderListener() {_			@Override_			protected void customizeContext(ServletContext sc, ConfigurableWebApplicationContext wac) {_				assertNotNull("The ServletContext should not be null.", sc)__				assertEquals("Verifying that we received the expected ServletContext.", sc, sc)__				assertFalse("The ApplicationContext should not yet have been refreshed.", wac.isActive())__				buffer.append(expectedContents)__			}_		}__		listener.contextInitialized(new ServletContextEvent(sc))__		assertEquals("customizeContext() should have been called.", expectedContents, buffer.toString())__	};addresses,the,issues,raised,in,a,href,http,opensource,atlassian,com,projects,spring,browse,spr,4008,target,spr,4008,a,em,supply,an,opportunity,to,customize,context,before,calling,refresh,in,context,loaders,em;test,public,void,test,context,loader,listener,with,customized,context,loader,final,string,buffer,buffer,new,string,buffer,final,string,expected,contents,customize,context,was,called,final,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,org,springframework,web,context,web,inf,application,context,xml,servlet,context,listener,listener,new,context,loader,listener,override,protected,void,customize,context,servlet,context,sc,configurable,web,application,context,wac,assert,not,null,the,servlet,context,should,not,be,null,sc,assert,equals,verifying,that,we,received,the,expected,servlet,context,sc,sc,assert,false,the,application,context,should,not,yet,have,been,refreshed,wac,is,active,buffer,append,expected,contents,listener,context,initialized,new,servlet,context,event,sc,assert,equals,customize,context,should,have,been,called,expected,contents,buffer,to,string
ContextLoaderTests -> @Test 	public void testContextLoaderListenerWithCustomizedContextLoader();1427815317;Addresses the issues raised in <a_href="http://opensource.atlassian.com/projects/spring/browse/SPR-4008"_target="_blank">SPR-4008</a>: <em>Supply an opportunity to customize_context before calling refresh in ContextLoaders</em>.;@Test_	public void testContextLoaderListenerWithCustomizedContextLoader() {_		final StringBuffer buffer = new StringBuffer()__		final String expectedContents = "customizeContext() was called"__		final MockServletContext sc = new MockServletContext("")__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM,_				"/org/springframework/web/context/WEB-INF/applicationContext.xml")__		ServletContextListener listener = new ContextLoaderListener() {_			@Override_			protected void customizeContext(ServletContext sc, ConfigurableWebApplicationContext wac) {_				assertNotNull("The ServletContext should not be null.", sc)__				assertEquals("Verifying that we received the expected ServletContext.", sc, sc)__				assertFalse("The ApplicationContext should not yet have been refreshed.", wac.isActive())__				buffer.append(expectedContents)__			}_		}__		listener.contextInitialized(new ServletContextEvent(sc))__		assertEquals("customizeContext() should have been called.", expectedContents, buffer.toString())__	};addresses,the,issues,raised,in,a,href,http,opensource,atlassian,com,projects,spring,browse,spr,4008,target,spr,4008,a,em,supply,an,opportunity,to,customize,context,before,calling,refresh,in,context,loaders,em;test,public,void,test,context,loader,listener,with,customized,context,loader,final,string,buffer,buffer,new,string,buffer,final,string,expected,contents,customize,context,was,called,final,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,org,springframework,web,context,web,inf,application,context,xml,servlet,context,listener,listener,new,context,loader,listener,override,protected,void,customize,context,servlet,context,sc,configurable,web,application,context,wac,assert,not,null,the,servlet,context,should,not,be,null,sc,assert,equals,verifying,that,we,received,the,expected,servlet,context,sc,sc,assert,false,the,application,context,should,not,yet,have,been,refreshed,wac,is,active,buffer,append,expected,contents,listener,context,initialized,new,servlet,context,event,sc,assert,equals,customize,context,should,have,been,called,expected,contents,buffer,to,string
ContextLoaderTests -> @Test 	public void testContextLoaderListenerWithCustomizedContextLoader();1456332614;Addresses the issues raised in <a_href="http://opensource.atlassian.com/projects/spring/browse/SPR-4008"_target="_blank">SPR-4008</a>: <em>Supply an opportunity to customize_context before calling refresh in ContextLoaders</em>.;@Test_	public void testContextLoaderListenerWithCustomizedContextLoader() {_		final StringBuffer buffer = new StringBuffer()__		final String expectedContents = "customizeContext() was called"__		final MockServletContext sc = new MockServletContext("")__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM,_				"/org/springframework/web/context/WEB-INF/applicationContext.xml")__		ServletContextListener listener = new ContextLoaderListener() {_			@Override_			protected void customizeContext(ServletContext sc, ConfigurableWebApplicationContext wac) {_				assertNotNull("The ServletContext should not be null.", sc)__				assertEquals("Verifying that we received the expected ServletContext.", sc, sc)__				assertFalse("The ApplicationContext should not yet have been refreshed.", wac.isActive())__				buffer.append(expectedContents)__			}_		}__		listener.contextInitialized(new ServletContextEvent(sc))__		assertEquals("customizeContext() should have been called.", expectedContents, buffer.toString())__	};addresses,the,issues,raised,in,a,href,http,opensource,atlassian,com,projects,spring,browse,spr,4008,target,spr,4008,a,em,supply,an,opportunity,to,customize,context,before,calling,refresh,in,context,loaders,em;test,public,void,test,context,loader,listener,with,customized,context,loader,final,string,buffer,buffer,new,string,buffer,final,string,expected,contents,customize,context,was,called,final,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,org,springframework,web,context,web,inf,application,context,xml,servlet,context,listener,listener,new,context,loader,listener,override,protected,void,customize,context,servlet,context,sc,configurable,web,application,context,wac,assert,not,null,the,servlet,context,should,not,be,null,sc,assert,equals,verifying,that,we,received,the,expected,servlet,context,sc,sc,assert,false,the,application,context,should,not,yet,have,been,refreshed,wac,is,active,buffer,append,expected,contents,listener,context,initialized,new,servlet,context,event,sc,assert,equals,customize,context,should,have,been,called,expected,contents,buffer,to,string
ContextLoaderTests -> @Test 	public void testContextLoaderListenerWithCustomizedContextLoader();1484657917;Addresses the issues raised in <a_href="http://opensource.atlassian.com/projects/spring/browse/SPR-4008"_target="_blank">SPR-4008</a>: <em>Supply an opportunity to customize_context before calling refresh in ContextLoaders</em>.;@Test_	public void testContextLoaderListenerWithCustomizedContextLoader() {_		final StringBuffer buffer = new StringBuffer()__		final String expectedContents = "customizeContext() was called"__		final MockServletContext sc = new MockServletContext("")__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM,_				"/org/springframework/web/context/WEB-INF/applicationContext.xml")__		ServletContextListener listener = new ContextLoaderListener() {_			@Override_			protected void customizeContext(ServletContext sc, ConfigurableWebApplicationContext wac) {_				assertNotNull("The ServletContext should not be null.", sc)__				assertEquals("Verifying that we received the expected ServletContext.", sc, sc)__				assertFalse("The ApplicationContext should not yet have been refreshed.", wac.isActive())__				buffer.append(expectedContents)__			}_		}__		listener.contextInitialized(new ServletContextEvent(sc))__		assertEquals("customizeContext() should have been called.", expectedContents, buffer.toString())__	};addresses,the,issues,raised,in,a,href,http,opensource,atlassian,com,projects,spring,browse,spr,4008,target,spr,4008,a,em,supply,an,opportunity,to,customize,context,before,calling,refresh,in,context,loaders,em;test,public,void,test,context,loader,listener,with,customized,context,loader,final,string,buffer,buffer,new,string,buffer,final,string,expected,contents,customize,context,was,called,final,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,org,springframework,web,context,web,inf,application,context,xml,servlet,context,listener,listener,new,context,loader,listener,override,protected,void,customize,context,servlet,context,sc,configurable,web,application,context,wac,assert,not,null,the,servlet,context,should,not,be,null,sc,assert,equals,verifying,that,we,received,the,expected,servlet,context,sc,sc,assert,false,the,application,context,should,not,yet,have,been,refreshed,wac,is,active,buffer,append,expected,contents,listener,context,initialized,new,servlet,context,event,sc,assert,equals,customize,context,should,have,been,called,expected,contents,buffer,to,string
ContextLoaderTests -> @Test 	public void testContextLoaderListenerWithCustomizedContextLoader();1508532146;Addresses the issues raised in <a_href="http://opensource.atlassian.com/projects/spring/browse/SPR-4008"_target="_blank">SPR-4008</a>: <em>Supply an opportunity to customize_context before calling refresh in ContextLoaders</em>.;@Test_	public void testContextLoaderListenerWithCustomizedContextLoader() {_		final StringBuffer buffer = new StringBuffer()__		final String expectedContents = "customizeContext() was called"__		final MockServletContext sc = new MockServletContext("")__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM,_				"/org/springframework/web/context/WEB-INF/applicationContext.xml")__		ServletContextListener listener = new ContextLoaderListener() {_			@Override_			protected void customizeContext(ServletContext sc, ConfigurableWebApplicationContext wac) {_				assertNotNull("The ServletContext should not be null.", sc)__				assertEquals("Verifying that we received the expected ServletContext.", sc, sc)__				assertFalse("The ApplicationContext should not yet have been refreshed.", wac.isActive())__				buffer.append(expectedContents)__			}_		}__		listener.contextInitialized(new ServletContextEvent(sc))__		assertEquals("customizeContext() should have been called.", expectedContents, buffer.toString())__	};addresses,the,issues,raised,in,a,href,http,opensource,atlassian,com,projects,spring,browse,spr,4008,target,spr,4008,a,em,supply,an,opportunity,to,customize,context,before,calling,refresh,in,context,loaders,em;test,public,void,test,context,loader,listener,with,customized,context,loader,final,string,buffer,buffer,new,string,buffer,final,string,expected,contents,customize,context,was,called,final,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,org,springframework,web,context,web,inf,application,context,xml,servlet,context,listener,listener,new,context,loader,listener,override,protected,void,customize,context,servlet,context,sc,configurable,web,application,context,wac,assert,not,null,the,servlet,context,should,not,be,null,sc,assert,equals,verifying,that,we,received,the,expected,servlet,context,sc,sc,assert,false,the,application,context,should,not,yet,have,been,refreshed,wac,is,active,buffer,append,expected,contents,listener,context,initialized,new,servlet,context,event,sc,assert,equals,customize,context,should,have,been,called,expected,contents,buffer,to,string
ContextLoaderTests -> @Test 	public void testContextLoaderListenerWithCustomizedContextLoader();1522843494;Addresses the issues raised in <a_href="http://opensource.atlassian.com/projects/spring/browse/SPR-4008"_target="_blank">SPR-4008</a>: <em>Supply an opportunity to customize_context before calling refresh in ContextLoaders</em>.;@Test_	public void testContextLoaderListenerWithCustomizedContextLoader() {_		final StringBuffer buffer = new StringBuffer()__		final String expectedContents = "customizeContext() was called"__		final MockServletContext sc = new MockServletContext("")__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM,_				"/org/springframework/web/context/WEB-INF/applicationContext.xml")__		ServletContextListener listener = new ContextLoaderListener() {_			@Override_			protected void customizeContext(ServletContext sc, ConfigurableWebApplicationContext wac) {_				assertNotNull("The ServletContext should not be null.", sc)__				assertEquals("Verifying that we received the expected ServletContext.", sc, sc)__				assertFalse("The ApplicationContext should not yet have been refreshed.", wac.isActive())__				buffer.append(expectedContents)__			}_		}__		listener.contextInitialized(new ServletContextEvent(sc))__		assertEquals("customizeContext() should have been called.", expectedContents, buffer.toString())__	};addresses,the,issues,raised,in,a,href,http,opensource,atlassian,com,projects,spring,browse,spr,4008,target,spr,4008,a,em,supply,an,opportunity,to,customize,context,before,calling,refresh,in,context,loaders,em;test,public,void,test,context,loader,listener,with,customized,context,loader,final,string,buffer,buffer,new,string,buffer,final,string,expected,contents,customize,context,was,called,final,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,org,springframework,web,context,web,inf,application,context,xml,servlet,context,listener,listener,new,context,loader,listener,override,protected,void,customize,context,servlet,context,sc,configurable,web,application,context,wac,assert,not,null,the,servlet,context,should,not,be,null,sc,assert,equals,verifying,that,we,received,the,expected,servlet,context,sc,sc,assert,false,the,application,context,should,not,yet,have,been,refreshed,wac,is,active,buffer,append,expected,contents,listener,context,initialized,new,servlet,context,event,sc,assert,equals,customize,context,should,have,been,called,expected,contents,buffer,to,string
