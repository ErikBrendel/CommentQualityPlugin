commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void typeLevel() throws Exception {     initServlet(TypeLevelImpl.class).     MockHttpServletRequest request = new MockHttpServletRequest("GET", "/test").     MockHttpServletResponse response = new MockHttpServletResponse().     servlet.service(request, response).     assertEquals("doIt", response.getContentAsString()). }
false;public;0;9;;@Test public void methodLevel() throws Exception {     initServlet(MethodLevelImpl.class).     MockHttpServletRequest request = new MockHttpServletRequest("GET", "/test").     MockHttpServletResponse response = new MockHttpServletResponse().     servlet.service(request, response).     assertEquals("doIt", response.getContentAsString()). }
false;public;0;9;;@Test public void typeAndMethodLevel() throws Exception {     initServlet(TypeAndMethodLevelImpl.class).     MockHttpServletRequest request = new MockHttpServletRequest("GET", "/hotels/bookings").     MockHttpServletResponse response = new MockHttpServletResponse().     servlet.service(request, response).     assertEquals("doIt", response.getContentAsString()). }
false;protected;1;14;;@Override protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {     GenericWebApplicationContext wac = new GenericWebApplicationContext().     wac.registerBeanDefinition("controller", new RootBeanDefinition(controllerClass)).     DefaultAdvisorAutoProxyCreator autoProxyCreator = new DefaultAdvisorAutoProxyCreator().     autoProxyCreator.setProxyTargetClass(true).     autoProxyCreator.setBeanFactory(wac.getBeanFactory()).     wac.getBeanFactory().addBeanPostProcessor(autoProxyCreator).     Pointcut pointcut = new AnnotationMatchingPointcut(Controller.class).     DefaultPointcutAdvisor advisor = new DefaultPointcutAdvisor(pointcut, new SimpleTraceInterceptor(true)).     wac.getBeanFactory().registerSingleton("advisor", advisor).     wac.refresh().     return wac. }
false;private;1;20;;@SuppressWarnings("serial") private void initServlet(final Class<?> controllerClass) throws ServletException {     servlet = new DispatcherServlet() {          @Override         protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {             GenericWebApplicationContext wac = new GenericWebApplicationContext().             wac.registerBeanDefinition("controller", new RootBeanDefinition(controllerClass)).             DefaultAdvisorAutoProxyCreator autoProxyCreator = new DefaultAdvisorAutoProxyCreator().             autoProxyCreator.setProxyTargetClass(true).             autoProxyCreator.setBeanFactory(wac.getBeanFactory()).             wac.getBeanFactory().addBeanPostProcessor(autoProxyCreator).             Pointcut pointcut = new AnnotationMatchingPointcut(Controller.class).             DefaultPointcutAdvisor advisor = new DefaultPointcutAdvisor(pointcut, new SimpleTraceInterceptor(true)).             wac.getBeanFactory().registerSingleton("advisor", advisor).             wac.refresh().             return wac.         }     }.     servlet.init(new MockServletConfig()). }
false;public;1;4;;@RequestMapping public void doIt(Writer writer) throws IOException {     writer.write("doIt"). }
false;public;1;4;;@RequestMapping("/test") public void doIt(Writer writer) throws IOException {     writer.write("doIt"). }
false;public;1;4;;@RequestMapping("/bookings") public void doIt(Writer writer) throws IOException {     writer.write("doIt"). }
