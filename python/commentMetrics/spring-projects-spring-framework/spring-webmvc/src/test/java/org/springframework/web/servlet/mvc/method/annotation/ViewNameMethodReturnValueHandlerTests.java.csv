commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Before public void setup() throws NoSuchMethodException {     this.handler = new ViewNameMethodReturnValueHandler().     this.mavContainer = new ModelAndViewContainer().     this.webRequest = new ServletWebRequest(new MockHttpServletRequest()).     this.param = new MethodParameter(getClass().getDeclaredMethod("viewName"), -1). }
false;public;0;4;;@Test public void supportsReturnType() throws Exception {     assertTrue(this.handler.supportsReturnType(this.param)). }
false;public;0;5;;@Test public void returnViewName() throws Exception {     this.handler.handleReturnValue("testView", this.param, this.mavContainer, this.webRequest).     assertEquals("testView", this.mavContainer.getViewName()). }
false;public;0;8;;@Test public void returnViewNameRedirect() throws Exception {     ModelMap redirectModel = new RedirectAttributesModelMap().     this.mavContainer.setRedirectModel(redirectModel).     this.handler.handleReturnValue("redirect:testView", this.param, this.mavContainer, this.webRequest).     assertEquals("redirect:testView", this.mavContainer.getViewName()).     assertSame(redirectModel, this.mavContainer.getModel()). }
false;public;0;9;;@Test public void returnViewCustomRedirect() throws Exception {     ModelMap redirectModel = new RedirectAttributesModelMap().     this.mavContainer.setRedirectModel(redirectModel).     this.handler.setRedirectPatterns("myRedirect:*").     this.handler.handleReturnValue("myRedirect:testView", this.param, this.mavContainer, this.webRequest).     assertEquals("myRedirect:testView", this.mavContainer.getViewName()).     assertSame(redirectModel, this.mavContainer.getModel()). }
false;public;0;9;;@Test public void returnViewRedirectWithCustomRedirectPattern() throws Exception {     ModelMap redirectModel = new RedirectAttributesModelMap().     this.mavContainer.setRedirectModel(redirectModel).     this.handler.setRedirectPatterns("myRedirect:*").     this.handler.handleReturnValue("redirect:testView", this.param, this.mavContainer, this.webRequest).     assertEquals("redirect:testView", this.mavContainer.getViewName()).     assertSame(redirectModel, this.mavContainer.getModel()). }
false;;0;4;;@SuppressWarnings("unused") String viewName() {     return null. }
