commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Before public void setup() throws Exception {     this.applicationContext = new StaticApplicationContext().     this.configurer = new GroovyMarkupConfigurer().     this.configurer.setResourceLoaderPath(RESOURCE_LOADER_PATH). }
false;public;0;14;;@Test public void defaultTemplateEngine() throws Exception {     this.configurer.setApplicationContext(this.applicationContext).     this.configurer.afterPropertiesSet().     TemplateEngine engine = this.configurer.getTemplateEngine().     assertNotNull(engine).     assertEquals(MarkupTemplateEngine.class, engine.getClass()).     MarkupTemplateEngine markupEngine = (MarkupTemplateEngine) engine.     TemplateConfiguration configuration = markupEngine.getTemplateConfiguration().     assertNotNull(configuration).     assertEquals(GroovyMarkupConfigurer.class, configuration.getClass()). }
false;public;0;10;;@Test public void customTemplateEngine() throws Exception {     this.configurer.setApplicationContext(this.applicationContext).     this.configurer.setTemplateEngine(new TestTemplateEngine()).     this.configurer.afterPropertiesSet().     TemplateEngine engine = this.configurer.getTemplateEngine().     assertNotNull(engine).     assertEquals(TestTemplateEngine.class, engine.getClass()). }
false;public;0;15;;@Test public void customTemplateConfiguration() throws Exception {     this.configurer.setApplicationContext(this.applicationContext).     this.configurer.setCacheTemplates(false).     this.configurer.afterPropertiesSet().     TemplateEngine engine = this.configurer.getTemplateEngine().     assertNotNull(engine).     assertEquals(MarkupTemplateEngine.class, engine.getClass()).     MarkupTemplateEngine markupEngine = (MarkupTemplateEngine) engine.     TemplateConfiguration configuration = markupEngine.getTemplateConfiguration().     assertNotNull(configuration).     assertFalse(configuration.isCacheTemplates()). }
false;public;0;23;;@Test @SuppressWarnings("resource") public void parentLoader() throws Exception {     this.configurer.setApplicationContext(this.applicationContext).     ClassLoader classLoader = this.configurer.createTemplateClassLoader().     assertNotNull(classLoader).     URLClassLoader urlClassLoader = (URLClassLoader) classLoader.     assertThat(Arrays.asList(urlClassLoader.getURLs()), Matchers.hasSize(1)).     assertThat(Arrays.asList(urlClassLoader.getURLs()).get(0).toString(), Matchers.endsWith("org/springframework/web/servlet/view/groovy/")).     this.configurer.setResourceLoaderPath(RESOURCE_LOADER_PATH + ",classpath:org/springframework/web/servlet/view/").     classLoader = this.configurer.createTemplateClassLoader().     assertNotNull(classLoader).     urlClassLoader = (URLClassLoader) classLoader.     assertThat(Arrays.asList(urlClassLoader.getURLs()), Matchers.hasSize(2)).     assertThat(Arrays.asList(urlClassLoader.getURLs()).get(0).toString(), Matchers.endsWith("org/springframework/web/servlet/view/groovy/")).     assertThat(Arrays.asList(urlClassLoader.getURLs()).get(1).toString(), Matchers.endsWith("org/springframework/web/servlet/view/")). }
false;public;0;5;;@Test public void resolveSampleTemplate() throws Exception {     URL url = this.configurer.resolveTemplate(getClass().getClassLoader(), TEMPLATE_PREFIX + "test.tpl").     Assert.assertNotNull(url). }
false;public;0;7;;@Test public void resolveI18nFullLocale() throws Exception {     LocaleContextHolder.setLocale(Locale.GERMANY).     URL url = this.configurer.resolveTemplate(getClass().getClassLoader(), TEMPLATE_PREFIX + "i18n.tpl").     Assert.assertNotNull(url).     Assert.assertThat(url.getPath(), Matchers.containsString("i18n_de_DE.tpl")). }
false;public;0;7;;@Test public void resolveI18nPartialLocale() throws Exception {     LocaleContextHolder.setLocale(Locale.FRANCE).     URL url = this.configurer.resolveTemplate(getClass().getClassLoader(), TEMPLATE_PREFIX + "i18n.tpl").     Assert.assertNotNull(url).     Assert.assertThat(url.getPath(), Matchers.containsString("i18n_fr.tpl")). }
false;public;0;7;;@Test public void resolveI18nDefaultLocale() throws Exception {     LocaleContextHolder.setLocale(Locale.US).     URL url = this.configurer.resolveTemplate(getClass().getClassLoader(), TEMPLATE_PREFIX + "i18n.tpl").     Assert.assertNotNull(url).     Assert.assertThat(url.getPath(), Matchers.containsString("i18n.tpl")). }
false;public;0;6;;@Test(expected = IOException.class) public void failMissingTemplate() throws Exception {     LocaleContextHolder.setLocale(Locale.US).     this.configurer.resolveTemplate(getClass().getClassLoader(), TEMPLATE_PREFIX + "missing.tpl").     Assert.fail(). }
