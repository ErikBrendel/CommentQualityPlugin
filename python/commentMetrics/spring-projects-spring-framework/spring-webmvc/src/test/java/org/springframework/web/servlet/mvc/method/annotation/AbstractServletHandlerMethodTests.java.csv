# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractServletHandlerMethodTests -> @SuppressWarnings("serial") 	protected WebApplicationContext initServlet( 			final ApplicationContextInitializer<GenericWebApplicationContext> initializer, 			final Class<?>... controllerClasses) throws ServletException;1346174472;Initialize a DispatcherServlet instance registering zero or more controller classes_and also providing additional bean definitions through a callback.;@SuppressWarnings("serial")_	protected WebApplicationContext initServlet(_			final ApplicationContextInitializer<GenericWebApplicationContext> initializer,_			final Class<?>... controllerClasses) throws ServletException {__		final GenericWebApplicationContext wac = new GenericWebApplicationContext()___		servlet = new DispatcherServlet() {_			@Override_			protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_				for (Class<?> clazz : controllerClasses) {_					wac.registerBeanDefinition(clazz.getSimpleName(), new RootBeanDefinition(clazz))__				}__				Class<?> mappingType = RequestMappingHandlerMapping.class__				RootBeanDefinition beanDef = new RootBeanDefinition(mappingType)__				beanDef.getPropertyValues().add("removeSemicolonContent", "false")__				wac.registerBeanDefinition("handlerMapping", beanDef)___				Class<?> adapterType = RequestMappingHandlerAdapter.class__				wac.registerBeanDefinition("handlerAdapter", new RootBeanDefinition(adapterType))___				Class<?> resolverType = ExceptionHandlerExceptionResolver.class__				wac.registerBeanDefinition("requestMappingResolver", new RootBeanDefinition(resolverType))___				resolverType = ResponseStatusExceptionResolver.class__				wac.registerBeanDefinition("responseStatusResolver", new RootBeanDefinition(resolverType))___				resolverType = DefaultHandlerExceptionResolver.class__				wac.registerBeanDefinition("defaultResolver", new RootBeanDefinition(resolverType))___				if (initializer != null) {_					initializer.initialize(wac)__				}__				wac.refresh()__				return wac__			}_		}___		servlet.init(new MockServletConfig())___		return wac__	};initialize,a,dispatcher,servlet,instance,registering,zero,or,more,controller,classes,and,also,providing,additional,bean,definitions,through,a,callback;suppress,warnings,serial,protected,web,application,context,init,servlet,final,application,context,initializer,generic,web,application,context,initializer,final,class,controller,classes,throws,servlet,exception,final,generic,web,application,context,wac,new,generic,web,application,context,servlet,new,dispatcher,servlet,override,protected,web,application,context,create,web,application,context,web,application,context,parent,for,class,clazz,controller,classes,wac,register,bean,definition,clazz,get,simple,name,new,root,bean,definition,clazz,class,mapping,type,request,mapping,handler,mapping,class,root,bean,definition,bean,def,new,root,bean,definition,mapping,type,bean,def,get,property,values,add,remove,semicolon,content,false,wac,register,bean,definition,handler,mapping,bean,def,class,adapter,type,request,mapping,handler,adapter,class,wac,register,bean,definition,handler,adapter,new,root,bean,definition,adapter,type,class,resolver,type,exception,handler,exception,resolver,class,wac,register,bean,definition,request,mapping,resolver,new,root,bean,definition,resolver,type,resolver,type,response,status,exception,resolver,class,wac,register,bean,definition,response,status,resolver,new,root,bean,definition,resolver,type,resolver,type,default,handler,exception,resolver,class,wac,register,bean,definition,default,resolver,new,root,bean,definition,resolver,type,if,initializer,null,initializer,initialize,wac,wac,refresh,return,wac,servlet,init,new,mock,servlet,config,return,wac
AbstractServletHandlerMethodTests -> @SuppressWarnings("serial") 	protected WebApplicationContext initServlet( 			final ApplicationContextInitializer<GenericWebApplicationContext> initializer, 			final Class<?>... controllerClasses) throws ServletException;1354292158;Initialize a DispatcherServlet instance registering zero or more controller classes_and also providing additional bean definitions through a callback.;@SuppressWarnings("serial")_	protected WebApplicationContext initServlet(_			final ApplicationContextInitializer<GenericWebApplicationContext> initializer,_			final Class<?>... controllerClasses) throws ServletException {__		final GenericWebApplicationContext wac = new GenericWebApplicationContext()___		servlet = new DispatcherServlet() {_			@Override_			protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_				for (Class<?> clazz : controllerClasses) {_					wac.registerBeanDefinition(clazz.getSimpleName(), new RootBeanDefinition(clazz))__				}__				Class<?> mappingType = RequestMappingHandlerMapping.class__				RootBeanDefinition beanDef = new RootBeanDefinition(mappingType)__				beanDef.getPropertyValues().add("removeSemicolonContent", "false")__				wac.registerBeanDefinition("handlerMapping", beanDef)___				Class<?> adapterType = RequestMappingHandlerAdapter.class__				wac.registerBeanDefinition("handlerAdapter", new RootBeanDefinition(adapterType))___				Class<?> resolverType = ExceptionHandlerExceptionResolver.class__				wac.registerBeanDefinition("requestMappingResolver", new RootBeanDefinition(resolverType))___				resolverType = ResponseStatusExceptionResolver.class__				wac.registerBeanDefinition("responseStatusResolver", new RootBeanDefinition(resolverType))___				resolverType = DefaultHandlerExceptionResolver.class__				wac.registerBeanDefinition("defaultResolver", new RootBeanDefinition(resolverType))___				if (initializer != null) {_					initializer.initialize(wac)__				}__				wac.refresh()__				return wac__			}_		}___		servlet.init(new MockServletConfig())___		return wac__	};initialize,a,dispatcher,servlet,instance,registering,zero,or,more,controller,classes,and,also,providing,additional,bean,definitions,through,a,callback;suppress,warnings,serial,protected,web,application,context,init,servlet,final,application,context,initializer,generic,web,application,context,initializer,final,class,controller,classes,throws,servlet,exception,final,generic,web,application,context,wac,new,generic,web,application,context,servlet,new,dispatcher,servlet,override,protected,web,application,context,create,web,application,context,web,application,context,parent,for,class,clazz,controller,classes,wac,register,bean,definition,clazz,get,simple,name,new,root,bean,definition,clazz,class,mapping,type,request,mapping,handler,mapping,class,root,bean,definition,bean,def,new,root,bean,definition,mapping,type,bean,def,get,property,values,add,remove,semicolon,content,false,wac,register,bean,definition,handler,mapping,bean,def,class,adapter,type,request,mapping,handler,adapter,class,wac,register,bean,definition,handler,adapter,new,root,bean,definition,adapter,type,class,resolver,type,exception,handler,exception,resolver,class,wac,register,bean,definition,request,mapping,resolver,new,root,bean,definition,resolver,type,resolver,type,response,status,exception,resolver,class,wac,register,bean,definition,response,status,resolver,new,root,bean,definition,resolver,type,resolver,type,default,handler,exception,resolver,class,wac,register,bean,definition,default,resolver,new,root,bean,definition,resolver,type,if,initializer,null,initializer,initialize,wac,wac,refresh,return,wac,servlet,init,new,mock,servlet,config,return,wac
AbstractServletHandlerMethodTests -> @SuppressWarnings("serial") 	protected WebApplicationContext initServlet( 			final ApplicationContextInitializer<GenericWebApplicationContext> initializer, 			final Class<?>... controllerClasses) throws ServletException;1357119417;Initialize a DispatcherServlet instance registering zero or more controller classes_and also providing additional bean definitions through a callback.;@SuppressWarnings("serial")_	protected WebApplicationContext initServlet(_			final ApplicationContextInitializer<GenericWebApplicationContext> initializer,_			final Class<?>... controllerClasses) throws ServletException {__		final GenericWebApplicationContext wac = new GenericWebApplicationContext()___		servlet = new DispatcherServlet() {_			@Override_			protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_				for (Class<?> clazz : controllerClasses) {_					wac.registerBeanDefinition(clazz.getSimpleName(), new RootBeanDefinition(clazz))__				}__				Class<?> mappingType = RequestMappingHandlerMapping.class__				RootBeanDefinition beanDef = new RootBeanDefinition(mappingType)__				beanDef.getPropertyValues().add("removeSemicolonContent", "false")__				wac.registerBeanDefinition("handlerMapping", beanDef)___				Class<?> adapterType = RequestMappingHandlerAdapter.class__				wac.registerBeanDefinition("handlerAdapter", new RootBeanDefinition(adapterType))___				Class<?> resolverType = ExceptionHandlerExceptionResolver.class__				wac.registerBeanDefinition("requestMappingResolver", new RootBeanDefinition(resolverType))___				resolverType = ResponseStatusExceptionResolver.class__				wac.registerBeanDefinition("responseStatusResolver", new RootBeanDefinition(resolverType))___				resolverType = DefaultHandlerExceptionResolver.class__				wac.registerBeanDefinition("defaultResolver", new RootBeanDefinition(resolverType))___				if (initializer != null) {_					initializer.initialize(wac)__				}__				wac.refresh()__				return wac__			}_		}___		servlet.init(new MockServletConfig())___		return wac__	};initialize,a,dispatcher,servlet,instance,registering,zero,or,more,controller,classes,and,also,providing,additional,bean,definitions,through,a,callback;suppress,warnings,serial,protected,web,application,context,init,servlet,final,application,context,initializer,generic,web,application,context,initializer,final,class,controller,classes,throws,servlet,exception,final,generic,web,application,context,wac,new,generic,web,application,context,servlet,new,dispatcher,servlet,override,protected,web,application,context,create,web,application,context,web,application,context,parent,for,class,clazz,controller,classes,wac,register,bean,definition,clazz,get,simple,name,new,root,bean,definition,clazz,class,mapping,type,request,mapping,handler,mapping,class,root,bean,definition,bean,def,new,root,bean,definition,mapping,type,bean,def,get,property,values,add,remove,semicolon,content,false,wac,register,bean,definition,handler,mapping,bean,def,class,adapter,type,request,mapping,handler,adapter,class,wac,register,bean,definition,handler,adapter,new,root,bean,definition,adapter,type,class,resolver,type,exception,handler,exception,resolver,class,wac,register,bean,definition,request,mapping,resolver,new,root,bean,definition,resolver,type,resolver,type,response,status,exception,resolver,class,wac,register,bean,definition,response,status,resolver,new,root,bean,definition,resolver,type,resolver,type,default,handler,exception,resolver,class,wac,register,bean,definition,default,resolver,new,root,bean,definition,resolver,type,if,initializer,null,initializer,initialize,wac,wac,refresh,return,wac,servlet,init,new,mock,servlet,config,return,wac
AbstractServletHandlerMethodTests -> @SuppressWarnings("serial") 	protected WebApplicationContext initServlet( 			final ApplicationContextInitializer<GenericWebApplicationContext> initializer, 			final Class<?>... controllerClasses) throws ServletException;1394019686;Initialize a DispatcherServlet instance registering zero or more controller classes_and also providing additional bean definitions through a callback.;@SuppressWarnings("serial")_	protected WebApplicationContext initServlet(_			final ApplicationContextInitializer<GenericWebApplicationContext> initializer,_			final Class<?>... controllerClasses) throws ServletException {__		final GenericWebApplicationContext wac = new GenericWebApplicationContext()___		servlet = new DispatcherServlet() {_			@Override_			protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_				for (Class<?> clazz : controllerClasses) {_					wac.registerBeanDefinition(clazz.getSimpleName(), new RootBeanDefinition(clazz))__				}__				Class<?> mappingType = RequestMappingHandlerMapping.class__				RootBeanDefinition beanDef = new RootBeanDefinition(mappingType)__				beanDef.getPropertyValues().add("removeSemicolonContent", "false")__				wac.registerBeanDefinition("handlerMapping", beanDef)___				Class<?> adapterType = RequestMappingHandlerAdapter.class__				wac.registerBeanDefinition("handlerAdapter", new RootBeanDefinition(adapterType))___				Class<?> resolverType = ExceptionHandlerExceptionResolver.class__				wac.registerBeanDefinition("requestMappingResolver", new RootBeanDefinition(resolverType))___				resolverType = ResponseStatusExceptionResolver.class__				wac.registerBeanDefinition("responseStatusResolver", new RootBeanDefinition(resolverType))___				resolverType = DefaultHandlerExceptionResolver.class__				wac.registerBeanDefinition("defaultResolver", new RootBeanDefinition(resolverType))___				if (initializer != null) {_					initializer.initialize(wac)__				}__				wac.refresh()__				return wac__			}_		}___		servlet.init(new MockServletConfig())___		return wac__	};initialize,a,dispatcher,servlet,instance,registering,zero,or,more,controller,classes,and,also,providing,additional,bean,definitions,through,a,callback;suppress,warnings,serial,protected,web,application,context,init,servlet,final,application,context,initializer,generic,web,application,context,initializer,final,class,controller,classes,throws,servlet,exception,final,generic,web,application,context,wac,new,generic,web,application,context,servlet,new,dispatcher,servlet,override,protected,web,application,context,create,web,application,context,web,application,context,parent,for,class,clazz,controller,classes,wac,register,bean,definition,clazz,get,simple,name,new,root,bean,definition,clazz,class,mapping,type,request,mapping,handler,mapping,class,root,bean,definition,bean,def,new,root,bean,definition,mapping,type,bean,def,get,property,values,add,remove,semicolon,content,false,wac,register,bean,definition,handler,mapping,bean,def,class,adapter,type,request,mapping,handler,adapter,class,wac,register,bean,definition,handler,adapter,new,root,bean,definition,adapter,type,class,resolver,type,exception,handler,exception,resolver,class,wac,register,bean,definition,request,mapping,resolver,new,root,bean,definition,resolver,type,resolver,type,response,status,exception,resolver,class,wac,register,bean,definition,response,status,resolver,new,root,bean,definition,resolver,type,resolver,type,default,handler,exception,resolver,class,wac,register,bean,definition,default,resolver,new,root,bean,definition,resolver,type,if,initializer,null,initializer,initialize,wac,wac,refresh,return,wac,servlet,init,new,mock,servlet,config,return,wac
AbstractServletHandlerMethodTests -> @SuppressWarnings("serial") 	protected WebApplicationContext initServlet( 			final ApplicationContextInitializer<GenericWebApplicationContext> initializer, 			final Class<?>... controllerClasses) throws ServletException;1413848647;Initialize a DispatcherServlet instance registering zero or more controller classes_and also providing additional bean definitions through a callback.;@SuppressWarnings("serial")_	protected WebApplicationContext initServlet(_			final ApplicationContextInitializer<GenericWebApplicationContext> initializer,_			final Class<?>... controllerClasses) throws ServletException {__		final GenericWebApplicationContext wac = new GenericWebApplicationContext()___		servlet = new DispatcherServlet() {_			@Override_			protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {_				for (Class<?> clazz : controllerClasses) {_					wac.registerBeanDefinition(clazz.getSimpleName(), new RootBeanDefinition(clazz))__				}__				Class<?> mappingType = RequestMappingHandlerMapping.class__				RootBeanDefinition beanDef = new RootBeanDefinition(mappingType)__				beanDef.getPropertyValues().add("removeSemicolonContent", "false")__				wac.registerBeanDefinition("handlerMapping", beanDef)___				Class<?> adapterType = RequestMappingHandlerAdapter.class__				wac.registerBeanDefinition("handlerAdapter", new RootBeanDefinition(adapterType))___				Class<?> resolverType = ExceptionHandlerExceptionResolver.class__				wac.registerBeanDefinition("requestMappingResolver", new RootBeanDefinition(resolverType))___				resolverType = ResponseStatusExceptionResolver.class__				wac.registerBeanDefinition("responseStatusResolver", new RootBeanDefinition(resolverType))___				resolverType = DefaultHandlerExceptionResolver.class__				wac.registerBeanDefinition("defaultResolver", new RootBeanDefinition(resolverType))___				if (initializer != null) {_					initializer.initialize(wac)__				}__				wac.refresh()__				return wac__			}_		}___		servlet.init(new MockServletConfig())___		return wac__	};initialize,a,dispatcher,servlet,instance,registering,zero,or,more,controller,classes,and,also,providing,additional,bean,definitions,through,a,callback;suppress,warnings,serial,protected,web,application,context,init,servlet,final,application,context,initializer,generic,web,application,context,initializer,final,class,controller,classes,throws,servlet,exception,final,generic,web,application,context,wac,new,generic,web,application,context,servlet,new,dispatcher,servlet,override,protected,web,application,context,create,web,application,context,web,application,context,parent,for,class,clazz,controller,classes,wac,register,bean,definition,clazz,get,simple,name,new,root,bean,definition,clazz,class,mapping,type,request,mapping,handler,mapping,class,root,bean,definition,bean,def,new,root,bean,definition,mapping,type,bean,def,get,property,values,add,remove,semicolon,content,false,wac,register,bean,definition,handler,mapping,bean,def,class,adapter,type,request,mapping,handler,adapter,class,wac,register,bean,definition,handler,adapter,new,root,bean,definition,adapter,type,class,resolver,type,exception,handler,exception,resolver,class,wac,register,bean,definition,request,mapping,resolver,new,root,bean,definition,resolver,type,resolver,type,response,status,exception,resolver,class,wac,register,bean,definition,response,status,resolver,new,root,bean,definition,resolver,type,resolver,type,default,handler,exception,resolver,class,wac,register,bean,definition,default,resolver,new,root,bean,definition,resolver,type,if,initializer,null,initializer,initialize,wac,wac,refresh,return,wac,servlet,init,new,mock,servlet,config,return,wac
AbstractServletHandlerMethodTests -> @SuppressWarnings("serial") 	protected WebApplicationContext initServlet( 			final ApplicationContextInitializer<GenericWebApplicationContext> initializer, 			final Class<?>... controllerClasses) throws ServletException;1496242568;Initialize a DispatcherServlet instance registering zero or more controller classes_and also providing additional bean definitions through a callback.;@SuppressWarnings("serial")_	protected WebApplicationContext initServlet(_			final ApplicationContextInitializer<GenericWebApplicationContext> initializer,_			final Class<?>... controllerClasses) throws ServletException {__		final GenericWebApplicationContext wac = new GenericWebApplicationContext()___		servlet = new DispatcherServlet() {_			@Override_			protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_				for (Class<?> clazz : controllerClasses) {_					wac.registerBeanDefinition(clazz.getSimpleName(), new RootBeanDefinition(clazz))__				}__				Class<?> mappingType = RequestMappingHandlerMapping.class__				RootBeanDefinition beanDef = new RootBeanDefinition(mappingType)__				beanDef.getPropertyValues().add("removeSemicolonContent", "false")__				wac.registerBeanDefinition("handlerMapping", beanDef)___				Class<?> adapterType = RequestMappingHandlerAdapter.class__				wac.registerBeanDefinition("handlerAdapter", new RootBeanDefinition(adapterType))___				Class<?> resolverType = ExceptionHandlerExceptionResolver.class__				wac.registerBeanDefinition("requestMappingResolver", new RootBeanDefinition(resolverType))___				resolverType = ResponseStatusExceptionResolver.class__				wac.registerBeanDefinition("responseStatusResolver", new RootBeanDefinition(resolverType))___				resolverType = DefaultHandlerExceptionResolver.class__				wac.registerBeanDefinition("defaultResolver", new RootBeanDefinition(resolverType))___				if (initializer != null) {_					initializer.initialize(wac)__				}__				wac.refresh()__				return wac__			}_		}___		servlet.init(new MockServletConfig())___		return wac__	};initialize,a,dispatcher,servlet,instance,registering,zero,or,more,controller,classes,and,also,providing,additional,bean,definitions,through,a,callback;suppress,warnings,serial,protected,web,application,context,init,servlet,final,application,context,initializer,generic,web,application,context,initializer,final,class,controller,classes,throws,servlet,exception,final,generic,web,application,context,wac,new,generic,web,application,context,servlet,new,dispatcher,servlet,override,protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,for,class,clazz,controller,classes,wac,register,bean,definition,clazz,get,simple,name,new,root,bean,definition,clazz,class,mapping,type,request,mapping,handler,mapping,class,root,bean,definition,bean,def,new,root,bean,definition,mapping,type,bean,def,get,property,values,add,remove,semicolon,content,false,wac,register,bean,definition,handler,mapping,bean,def,class,adapter,type,request,mapping,handler,adapter,class,wac,register,bean,definition,handler,adapter,new,root,bean,definition,adapter,type,class,resolver,type,exception,handler,exception,resolver,class,wac,register,bean,definition,request,mapping,resolver,new,root,bean,definition,resolver,type,resolver,type,response,status,exception,resolver,class,wac,register,bean,definition,response,status,resolver,new,root,bean,definition,resolver,type,resolver,type,default,handler,exception,resolver,class,wac,register,bean,definition,default,resolver,new,root,bean,definition,resolver,type,if,initializer,null,initializer,initialize,wac,wac,refresh,return,wac,servlet,init,new,mock,servlet,config,return,wac
AbstractServletHandlerMethodTests -> @SuppressWarnings("serial") 	protected WebApplicationContext initServlet( 			final ApplicationContextInitializer<GenericWebApplicationContext> initializer, 			final Class<?>... controllerClasses) throws ServletException;1502960560;Initialize a DispatcherServlet instance registering zero or more controller classes_and also providing additional bean definitions through a callback.;@SuppressWarnings("serial")_	protected WebApplicationContext initServlet(_			final ApplicationContextInitializer<GenericWebApplicationContext> initializer,_			final Class<?>... controllerClasses) throws ServletException {__		final GenericWebApplicationContext wac = new GenericWebApplicationContext()___		servlet = new DispatcherServlet() {_			@Override_			protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_				for (Class<?> clazz : controllerClasses) {_					wac.registerBeanDefinition(clazz.getSimpleName(), new RootBeanDefinition(clazz))__				}__				RootBeanDefinition mappingDef = new RootBeanDefinition(RequestMappingHandlerMapping.class)__				mappingDef.getPropertyValues().add("removeSemicolonContent", "false")__				wac.registerBeanDefinition("handlerMapping", mappingDef)___				wac.registerBeanDefinition("handlerAdapter", new RootBeanDefinition(RequestMappingHandlerAdapter.class))___				wac.registerBeanDefinition("requestMappingResolver", new RootBeanDefinition(ExceptionHandlerExceptionResolver.class))___				wac.registerBeanDefinition("responseStatusResolver", new RootBeanDefinition(ResponseStatusExceptionResolver.class))___				wac.registerBeanDefinition("defaultResolver", new RootBeanDefinition(DefaultHandlerExceptionResolver.class))___				if (initializer != null) {_					initializer.initialize(wac)__				}__				wac.refresh()__				return wac__			}_		}___		servlet.init(new MockServletConfig())___		return wac__	};initialize,a,dispatcher,servlet,instance,registering,zero,or,more,controller,classes,and,also,providing,additional,bean,definitions,through,a,callback;suppress,warnings,serial,protected,web,application,context,init,servlet,final,application,context,initializer,generic,web,application,context,initializer,final,class,controller,classes,throws,servlet,exception,final,generic,web,application,context,wac,new,generic,web,application,context,servlet,new,dispatcher,servlet,override,protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,for,class,clazz,controller,classes,wac,register,bean,definition,clazz,get,simple,name,new,root,bean,definition,clazz,root,bean,definition,mapping,def,new,root,bean,definition,request,mapping,handler,mapping,class,mapping,def,get,property,values,add,remove,semicolon,content,false,wac,register,bean,definition,handler,mapping,mapping,def,wac,register,bean,definition,handler,adapter,new,root,bean,definition,request,mapping,handler,adapter,class,wac,register,bean,definition,request,mapping,resolver,new,root,bean,definition,exception,handler,exception,resolver,class,wac,register,bean,definition,response,status,resolver,new,root,bean,definition,response,status,exception,resolver,class,wac,register,bean,definition,default,resolver,new,root,bean,definition,default,handler,exception,resolver,class,if,initializer,null,initializer,initialize,wac,wac,refresh,return,wac,servlet,init,new,mock,servlet,config,return,wac
AbstractServletHandlerMethodTests -> @SuppressWarnings("serial") 	protected WebApplicationContext initServlet( 			final ApplicationContextInitializer<GenericWebApplicationContext> initializer, 			final Class<?>... controllerClasses) throws ServletException;1508532146;Initialize a DispatcherServlet instance registering zero or more controller classes_and also providing additional bean definitions through a callback.;@SuppressWarnings("serial")_	protected WebApplicationContext initServlet(_			final ApplicationContextInitializer<GenericWebApplicationContext> initializer,_			final Class<?>... controllerClasses) throws ServletException {__		final GenericWebApplicationContext wac = new GenericWebApplicationContext()___		servlet = new DispatcherServlet() {_			@Override_			protected WebApplicationContext createWebApplicationContext(@Nullable WebApplicationContext parent) {_				for (Class<?> clazz : controllerClasses) {_					wac.registerBeanDefinition(clazz.getSimpleName(), new RootBeanDefinition(clazz))__				}__				RootBeanDefinition mappingDef = new RootBeanDefinition(RequestMappingHandlerMapping.class)__				mappingDef.getPropertyValues().add("removeSemicolonContent", "false")__				wac.registerBeanDefinition("handlerMapping", mappingDef)__				wac.registerBeanDefinition("handlerAdapter",_						new RootBeanDefinition(RequestMappingHandlerAdapter.class))__				wac.registerBeanDefinition("requestMappingResolver",_						new RootBeanDefinition(ExceptionHandlerExceptionResolver.class))__				wac.registerBeanDefinition("responseStatusResolver",_						new RootBeanDefinition(ResponseStatusExceptionResolver.class))__				wac.registerBeanDefinition("defaultResolver",_						new RootBeanDefinition(DefaultHandlerExceptionResolver.class))___				if (initializer != null) {_					initializer.initialize(wac)__				}__				wac.refresh()__				return wac__			}_		}___		servlet.init(new MockServletConfig())___		return wac__	};initialize,a,dispatcher,servlet,instance,registering,zero,or,more,controller,classes,and,also,providing,additional,bean,definitions,through,a,callback;suppress,warnings,serial,protected,web,application,context,init,servlet,final,application,context,initializer,generic,web,application,context,initializer,final,class,controller,classes,throws,servlet,exception,final,generic,web,application,context,wac,new,generic,web,application,context,servlet,new,dispatcher,servlet,override,protected,web,application,context,create,web,application,context,nullable,web,application,context,parent,for,class,clazz,controller,classes,wac,register,bean,definition,clazz,get,simple,name,new,root,bean,definition,clazz,root,bean,definition,mapping,def,new,root,bean,definition,request,mapping,handler,mapping,class,mapping,def,get,property,values,add,remove,semicolon,content,false,wac,register,bean,definition,handler,mapping,mapping,def,wac,register,bean,definition,handler,adapter,new,root,bean,definition,request,mapping,handler,adapter,class,wac,register,bean,definition,request,mapping,resolver,new,root,bean,definition,exception,handler,exception,resolver,class,wac,register,bean,definition,response,status,resolver,new,root,bean,definition,response,status,exception,resolver,class,wac,register,bean,definition,default,resolver,new,root,bean,definition,default,handler,exception,resolver,class,if,initializer,null,initializer,initialize,wac,wac,refresh,return,wac,servlet,init,new,mock,servlet,config,return,wac
AbstractServletHandlerMethodTests -> protected WebApplicationContext initServletWithControllers(final Class<?>... controllerClasses) 			throws ServletException;1328020251;Initialize a DispatcherServlet instance registering zero or more controller classes.;protected WebApplicationContext initServletWithControllers(final Class<?>... controllerClasses)_			throws ServletException {_		return initServlet(null, controllerClasses)__	};initialize,a,dispatcher,servlet,instance,registering,zero,or,more,controller,classes;protected,web,application,context,init,servlet,with,controllers,final,class,controller,classes,throws,servlet,exception,return,init,servlet,null,controller,classes
AbstractServletHandlerMethodTests -> protected WebApplicationContext initServletWithControllers(final Class<?>... controllerClasses) 			throws ServletException;1346174472;Initialize a DispatcherServlet instance registering zero or more controller classes.;protected WebApplicationContext initServletWithControllers(final Class<?>... controllerClasses)_			throws ServletException {_		return initServlet(null, controllerClasses)__	};initialize,a,dispatcher,servlet,instance,registering,zero,or,more,controller,classes;protected,web,application,context,init,servlet,with,controllers,final,class,controller,classes,throws,servlet,exception,return,init,servlet,null,controller,classes
AbstractServletHandlerMethodTests -> protected WebApplicationContext initServletWithControllers(final Class<?>... controllerClasses) 			throws ServletException;1354292158;Initialize a DispatcherServlet instance registering zero or more controller classes.;protected WebApplicationContext initServletWithControllers(final Class<?>... controllerClasses)_			throws ServletException {_		return initServlet(null, controllerClasses)__	};initialize,a,dispatcher,servlet,instance,registering,zero,or,more,controller,classes;protected,web,application,context,init,servlet,with,controllers,final,class,controller,classes,throws,servlet,exception,return,init,servlet,null,controller,classes
AbstractServletHandlerMethodTests -> protected WebApplicationContext initServletWithControllers(final Class<?>... controllerClasses) 			throws ServletException;1357119417;Initialize a DispatcherServlet instance registering zero or more controller classes.;protected WebApplicationContext initServletWithControllers(final Class<?>... controllerClasses)_			throws ServletException {_		return initServlet(null, controllerClasses)__	};initialize,a,dispatcher,servlet,instance,registering,zero,or,more,controller,classes;protected,web,application,context,init,servlet,with,controllers,final,class,controller,classes,throws,servlet,exception,return,init,servlet,null,controller,classes
AbstractServletHandlerMethodTests -> protected WebApplicationContext initServletWithControllers(final Class<?>... controllerClasses) 			throws ServletException;1394019686;Initialize a DispatcherServlet instance registering zero or more controller classes.;protected WebApplicationContext initServletWithControllers(final Class<?>... controllerClasses)_			throws ServletException {_		return initServlet(null, controllerClasses)__	};initialize,a,dispatcher,servlet,instance,registering,zero,or,more,controller,classes;protected,web,application,context,init,servlet,with,controllers,final,class,controller,classes,throws,servlet,exception,return,init,servlet,null,controller,classes
AbstractServletHandlerMethodTests -> protected WebApplicationContext initServletWithControllers(final Class<?>... controllerClasses) 			throws ServletException;1413848647;Initialize a DispatcherServlet instance registering zero or more controller classes.;protected WebApplicationContext initServletWithControllers(final Class<?>... controllerClasses)_			throws ServletException {_		return initServlet(null, controllerClasses)__	};initialize,a,dispatcher,servlet,instance,registering,zero,or,more,controller,classes;protected,web,application,context,init,servlet,with,controllers,final,class,controller,classes,throws,servlet,exception,return,init,servlet,null,controller,classes
AbstractServletHandlerMethodTests -> protected WebApplicationContext initServletWithControllers(final Class<?>... controllerClasses) 			throws ServletException;1496242568;Initialize a DispatcherServlet instance registering zero or more controller classes.;protected WebApplicationContext initServletWithControllers(final Class<?>... controllerClasses)_			throws ServletException {_		return initServlet(null, controllerClasses)__	};initialize,a,dispatcher,servlet,instance,registering,zero,or,more,controller,classes;protected,web,application,context,init,servlet,with,controllers,final,class,controller,classes,throws,servlet,exception,return,init,servlet,null,controller,classes
AbstractServletHandlerMethodTests -> protected WebApplicationContext initServletWithControllers(final Class<?>... controllerClasses) 			throws ServletException;1502960560;Initialize a DispatcherServlet instance registering zero or more controller classes.;protected WebApplicationContext initServletWithControllers(final Class<?>... controllerClasses)_			throws ServletException {__		return initServlet(null, controllerClasses)__	};initialize,a,dispatcher,servlet,instance,registering,zero,or,more,controller,classes;protected,web,application,context,init,servlet,with,controllers,final,class,controller,classes,throws,servlet,exception,return,init,servlet,null,controller,classes
AbstractServletHandlerMethodTests -> protected WebApplicationContext initServletWithControllers(final Class<?>... controllerClasses) 			throws ServletException;1508532146;Initialize a DispatcherServlet instance registering zero or more controller classes.;protected WebApplicationContext initServletWithControllers(final Class<?>... controllerClasses)_			throws ServletException {__		return initServlet(null, controllerClasses)__	};initialize,a,dispatcher,servlet,instance,registering,zero,or,more,controller,classes;protected,web,application,context,init,servlet,with,controllers,final,class,controller,classes,throws,servlet,exception,return,init,servlet,null,controller,classes
