# id;timestamp;commentText;codeText;commentWords;codeWords
MvcNamespaceTests -> private void doTestCustomValidator(String xml) throws Exception;1386016136;@throws Exception;private void doTestCustomValidator(String xml) throws Exception {_		loadBeanDefinitions(xml, 13)___		RequestMappingHandlerMapping mapping = appContext.getBean(RequestMappingHandlerMapping.class)__		assertNotNull(mapping)__		assertFalse(mapping.getUrlPathHelper().shouldRemoveSemicolonContent())___		RequestMappingHandlerAdapter adapter = appContext.getBean(RequestMappingHandlerAdapter.class)__		assertNotNull(adapter)__		assertEquals(true, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"))___		_		MockHttpServletRequest request = new MockHttpServletRequest()__		request.addParameter("date", "2009-10-31")__		MockHttpServletResponse response = new MockHttpServletResponse()__		adapter.handle(request, response, handlerMethod)___		assertTrue(appContext.getBean(TestValidator.class).validatorInvoked)__		assertFalse(handler.recordedValidationError)__	};throws,exception;private,void,do,test,custom,validator,string,xml,throws,exception,load,bean,definitions,xml,13,request,mapping,handler,mapping,mapping,app,context,get,bean,request,mapping,handler,mapping,class,assert,not,null,mapping,assert,false,mapping,get,url,path,helper,should,remove,semicolon,content,request,mapping,handler,adapter,adapter,app,context,get,bean,request,mapping,handler,adapter,class,assert,not,null,adapter,assert,equals,true,new,direct,field,accessor,adapter,get,property,value,ignore,default,model,on,redirect,mock,http,servlet,request,request,new,mock,http,servlet,request,request,add,parameter,date,2009,10,31,mock,http,servlet,response,response,new,mock,http,servlet,response,adapter,handle,request,response,handler,method,assert,true,app,context,get,bean,test,validator,class,validator,invoked,assert,false,handler,recorded,validation,error
MvcNamespaceTests -> private void doTestCustomValidator(String xml) throws Exception;1388785441;@throws Exception;private void doTestCustomValidator(String xml) throws Exception {_		loadBeanDefinitions(xml, 13)___		RequestMappingHandlerMapping mapping = appContext.getBean(RequestMappingHandlerMapping.class)__		assertNotNull(mapping)__		assertFalse(mapping.getUrlPathHelper().shouldRemoveSemicolonContent())___		RequestMappingHandlerAdapter adapter = appContext.getBean(RequestMappingHandlerAdapter.class)__		assertNotNull(adapter)__		assertEquals(true, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"))___		_		MockHttpServletRequest request = new MockHttpServletRequest()__		request.addParameter("date", "2009-10-31")__		MockHttpServletResponse response = new MockHttpServletResponse()__		adapter.handle(request, response, handlerMethod)___		assertTrue(appContext.getBean(TestValidator.class).validatorInvoked)__		assertFalse(handler.recordedValidationError)__	};throws,exception;private,void,do,test,custom,validator,string,xml,throws,exception,load,bean,definitions,xml,13,request,mapping,handler,mapping,mapping,app,context,get,bean,request,mapping,handler,mapping,class,assert,not,null,mapping,assert,false,mapping,get,url,path,helper,should,remove,semicolon,content,request,mapping,handler,adapter,adapter,app,context,get,bean,request,mapping,handler,adapter,class,assert,not,null,adapter,assert,equals,true,new,direct,field,accessor,adapter,get,property,value,ignore,default,model,on,redirect,mock,http,servlet,request,request,new,mock,http,servlet,request,request,add,parameter,date,2009,10,31,mock,http,servlet,response,response,new,mock,http,servlet,response,adapter,handle,request,response,handler,method,assert,true,app,context,get,bean,test,validator,class,validator,invoked,assert,false,handler,recorded,validation,error
MvcNamespaceTests -> private void doTestCustomValidator(String xml) throws Exception;1402499224;@throws Exception;private void doTestCustomValidator(String xml) throws Exception {_		loadBeanDefinitions(xml, 13)___		RequestMappingHandlerMapping mapping = appContext.getBean(RequestMappingHandlerMapping.class)__		assertNotNull(mapping)__		assertFalse(mapping.getUrlPathHelper().shouldRemoveSemicolonContent())___		RequestMappingHandlerAdapter adapter = appContext.getBean(RequestMappingHandlerAdapter.class)__		assertNotNull(adapter)__		assertEquals(true, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"))___		_		MockHttpServletRequest request = new MockHttpServletRequest()__		request.addParameter("date", "2009-10-31")__		MockHttpServletResponse response = new MockHttpServletResponse()__		adapter.handle(request, response, handlerMethod)___		assertTrue(appContext.getBean(TestValidator.class).validatorInvoked)__		assertFalse(handler.recordedValidationError)__	};throws,exception;private,void,do,test,custom,validator,string,xml,throws,exception,load,bean,definitions,xml,13,request,mapping,handler,mapping,mapping,app,context,get,bean,request,mapping,handler,mapping,class,assert,not,null,mapping,assert,false,mapping,get,url,path,helper,should,remove,semicolon,content,request,mapping,handler,adapter,adapter,app,context,get,bean,request,mapping,handler,adapter,class,assert,not,null,adapter,assert,equals,true,new,direct,field,accessor,adapter,get,property,value,ignore,default,model,on,redirect,mock,http,servlet,request,request,new,mock,http,servlet,request,request,add,parameter,date,2009,10,31,mock,http,servlet,response,response,new,mock,http,servlet,response,adapter,handle,request,response,handler,method,assert,true,app,context,get,bean,test,validator,class,validator,invoked,assert,false,handler,recorded,validation,error
MvcNamespaceTests -> private void doTestCustomValidator(String xml) throws Exception;1404312428;@throws Exception;private void doTestCustomValidator(String xml) throws Exception {_		loadBeanDefinitions(xml, 13)___		RequestMappingHandlerMapping mapping = appContext.getBean(RequestMappingHandlerMapping.class)__		assertNotNull(mapping)__		assertFalse(mapping.getUrlPathHelper().shouldRemoveSemicolonContent())___		RequestMappingHandlerAdapter adapter = appContext.getBean(RequestMappingHandlerAdapter.class)__		assertNotNull(adapter)__		assertEquals(true, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"))___		_		MockHttpServletRequest request = new MockHttpServletRequest()__		request.addParameter("date", "2009-10-31")__		MockHttpServletResponse response = new MockHttpServletResponse()__		adapter.handle(request, response, handlerMethod)___		assertTrue(appContext.getBean(TestValidator.class).validatorInvoked)__		assertFalse(handler.recordedValidationError)__	};throws,exception;private,void,do,test,custom,validator,string,xml,throws,exception,load,bean,definitions,xml,13,request,mapping,handler,mapping,mapping,app,context,get,bean,request,mapping,handler,mapping,class,assert,not,null,mapping,assert,false,mapping,get,url,path,helper,should,remove,semicolon,content,request,mapping,handler,adapter,adapter,app,context,get,bean,request,mapping,handler,adapter,class,assert,not,null,adapter,assert,equals,true,new,direct,field,accessor,adapter,get,property,value,ignore,default,model,on,redirect,mock,http,servlet,request,request,new,mock,http,servlet,request,request,add,parameter,date,2009,10,31,mock,http,servlet,response,response,new,mock,http,servlet,response,adapter,handle,request,response,handler,method,assert,true,app,context,get,bean,test,validator,class,validator,invoked,assert,false,handler,recorded,validation,error
MvcNamespaceTests -> private void doTestCustomValidator(String xml) throws Exception;1405200227;@throws Exception;private void doTestCustomValidator(String xml) throws Exception {_		loadBeanDefinitions(xml, 13)___		RequestMappingHandlerMapping mapping = appContext.getBean(RequestMappingHandlerMapping.class)__		assertNotNull(mapping)__		assertFalse(mapping.getUrlPathHelper().shouldRemoveSemicolonContent())___		RequestMappingHandlerAdapter adapter = appContext.getBean(RequestMappingHandlerAdapter.class)__		assertNotNull(adapter)__		assertEquals(true, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"))___		_		MockHttpServletRequest request = new MockHttpServletRequest()__		request.addParameter("date", "2009-10-31")__		MockHttpServletResponse response = new MockHttpServletResponse()__		adapter.handle(request, response, handlerMethod)___		assertTrue(appContext.getBean(TestValidator.class).validatorInvoked)__		assertFalse(handler.recordedValidationError)__	};throws,exception;private,void,do,test,custom,validator,string,xml,throws,exception,load,bean,definitions,xml,13,request,mapping,handler,mapping,mapping,app,context,get,bean,request,mapping,handler,mapping,class,assert,not,null,mapping,assert,false,mapping,get,url,path,helper,should,remove,semicolon,content,request,mapping,handler,adapter,adapter,app,context,get,bean,request,mapping,handler,adapter,class,assert,not,null,adapter,assert,equals,true,new,direct,field,accessor,adapter,get,property,value,ignore,default,model,on,redirect,mock,http,servlet,request,request,new,mock,http,servlet,request,request,add,parameter,date,2009,10,31,mock,http,servlet,response,response,new,mock,http,servlet,response,adapter,handle,request,response,handler,method,assert,true,app,context,get,bean,test,validator,class,validator,invoked,assert,false,handler,recorded,validation,error
MvcNamespaceTests -> private void doTestCustomValidator(String xml) throws Exception;1405200227;@throws Exception;private void doTestCustomValidator(String xml) throws Exception {_		loadBeanDefinitions(xml, 13)___		RequestMappingHandlerMapping mapping = appContext.getBean(RequestMappingHandlerMapping.class)__		assertNotNull(mapping)__		assertFalse(mapping.getUrlPathHelper().shouldRemoveSemicolonContent())___		RequestMappingHandlerAdapter adapter = appContext.getBean(RequestMappingHandlerAdapter.class)__		assertNotNull(adapter)__		assertEquals(true, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"))___		_		MockHttpServletRequest request = new MockHttpServletRequest()__		request.addParameter("date", "2009-10-31")__		MockHttpServletResponse response = new MockHttpServletResponse()__		adapter.handle(request, response, handlerMethod)___		assertTrue(appContext.getBean(TestValidator.class).validatorInvoked)__		assertFalse(handler.recordedValidationError)__	};throws,exception;private,void,do,test,custom,validator,string,xml,throws,exception,load,bean,definitions,xml,13,request,mapping,handler,mapping,mapping,app,context,get,bean,request,mapping,handler,mapping,class,assert,not,null,mapping,assert,false,mapping,get,url,path,helper,should,remove,semicolon,content,request,mapping,handler,adapter,adapter,app,context,get,bean,request,mapping,handler,adapter,class,assert,not,null,adapter,assert,equals,true,new,direct,field,accessor,adapter,get,property,value,ignore,default,model,on,redirect,mock,http,servlet,request,request,new,mock,http,servlet,request,request,add,parameter,date,2009,10,31,mock,http,servlet,response,response,new,mock,http,servlet,response,adapter,handle,request,response,handler,method,assert,true,app,context,get,bean,test,validator,class,validator,invoked,assert,false,handler,recorded,validation,error
MvcNamespaceTests -> private void doTestCustomValidator(String xml) throws Exception;1405200227;@throws Exception;private void doTestCustomValidator(String xml) throws Exception {_		loadBeanDefinitions(xml, 13)___		RequestMappingHandlerMapping mapping = appContext.getBean(RequestMappingHandlerMapping.class)__		assertNotNull(mapping)__		assertFalse(mapping.getUrlPathHelper().shouldRemoveSemicolonContent())___		RequestMappingHandlerAdapter adapter = appContext.getBean(RequestMappingHandlerAdapter.class)__		assertNotNull(adapter)__		assertEquals(true, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"))___		_		MockHttpServletRequest request = new MockHttpServletRequest()__		request.addParameter("date", "2009-10-31")__		MockHttpServletResponse response = new MockHttpServletResponse()__		adapter.handle(request, response, handlerMethod)___		assertTrue(appContext.getBean(TestValidator.class).validatorInvoked)__		assertFalse(handler.recordedValidationError)__	};throws,exception;private,void,do,test,custom,validator,string,xml,throws,exception,load,bean,definitions,xml,13,request,mapping,handler,mapping,mapping,app,context,get,bean,request,mapping,handler,mapping,class,assert,not,null,mapping,assert,false,mapping,get,url,path,helper,should,remove,semicolon,content,request,mapping,handler,adapter,adapter,app,context,get,bean,request,mapping,handler,adapter,class,assert,not,null,adapter,assert,equals,true,new,direct,field,accessor,adapter,get,property,value,ignore,default,model,on,redirect,mock,http,servlet,request,request,new,mock,http,servlet,request,request,add,parameter,date,2009,10,31,mock,http,servlet,response,response,new,mock,http,servlet,response,adapter,handle,request,response,handler,method,assert,true,app,context,get,bean,test,validator,class,validator,invoked,assert,false,handler,recorded,validation,error
MvcNamespaceTests -> private void doTestCustomValidator(String xml) throws Exception;1405306409;@throws Exception;private void doTestCustomValidator(String xml) throws Exception {_		loadBeanDefinitions(xml, 13)___		RequestMappingHandlerMapping mapping = appContext.getBean(RequestMappingHandlerMapping.class)__		assertNotNull(mapping)__		assertFalse(mapping.getUrlPathHelper().shouldRemoveSemicolonContent())___		RequestMappingHandlerAdapter adapter = appContext.getBean(RequestMappingHandlerAdapter.class)__		assertNotNull(adapter)__		assertEquals(true, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"))___		_		MockHttpServletRequest request = new MockHttpServletRequest()__		request.addParameter("date", "2009-10-31")__		MockHttpServletResponse response = new MockHttpServletResponse()__		adapter.handle(request, response, handlerMethod)___		assertTrue(appContext.getBean(TestValidator.class).validatorInvoked)__		assertFalse(handler.recordedValidationError)__	};throws,exception;private,void,do,test,custom,validator,string,xml,throws,exception,load,bean,definitions,xml,13,request,mapping,handler,mapping,mapping,app,context,get,bean,request,mapping,handler,mapping,class,assert,not,null,mapping,assert,false,mapping,get,url,path,helper,should,remove,semicolon,content,request,mapping,handler,adapter,adapter,app,context,get,bean,request,mapping,handler,adapter,class,assert,not,null,adapter,assert,equals,true,new,direct,field,accessor,adapter,get,property,value,ignore,default,model,on,redirect,mock,http,servlet,request,request,new,mock,http,servlet,request,request,add,parameter,date,2009,10,31,mock,http,servlet,response,response,new,mock,http,servlet,response,adapter,handle,request,response,handler,method,assert,true,app,context,get,bean,test,validator,class,validator,invoked,assert,false,handler,recorded,validation,error
MvcNamespaceTests -> private void doTestCustomValidator(String xml) throws Exception;1405561410;@throws Exception;private void doTestCustomValidator(String xml) throws Exception {_		loadBeanDefinitions(xml, 13)___		RequestMappingHandlerMapping mapping = appContext.getBean(RequestMappingHandlerMapping.class)__		assertNotNull(mapping)__		assertFalse(mapping.getUrlPathHelper().shouldRemoveSemicolonContent())___		RequestMappingHandlerAdapter adapter = appContext.getBean(RequestMappingHandlerAdapter.class)__		assertNotNull(adapter)__		assertEquals(true, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"))___		_		MockHttpServletRequest request = new MockHttpServletRequest()__		request.addParameter("date", "2009-10-31")__		MockHttpServletResponse response = new MockHttpServletResponse()__		adapter.handle(request, response, handlerMethod)___		assertTrue(appContext.getBean(TestValidator.class).validatorInvoked)__		assertFalse(handler.recordedValidationError)__	};throws,exception;private,void,do,test,custom,validator,string,xml,throws,exception,load,bean,definitions,xml,13,request,mapping,handler,mapping,mapping,app,context,get,bean,request,mapping,handler,mapping,class,assert,not,null,mapping,assert,false,mapping,get,url,path,helper,should,remove,semicolon,content,request,mapping,handler,adapter,adapter,app,context,get,bean,request,mapping,handler,adapter,class,assert,not,null,adapter,assert,equals,true,new,direct,field,accessor,adapter,get,property,value,ignore,default,model,on,redirect,mock,http,servlet,request,request,new,mock,http,servlet,request,request,add,parameter,date,2009,10,31,mock,http,servlet,response,response,new,mock,http,servlet,response,adapter,handle,request,response,handler,method,assert,true,app,context,get,bean,test,validator,class,validator,invoked,assert,false,handler,recorded,validation,error
MvcNamespaceTests -> private void doTestCustomValidator(String xml) throws Exception;1405561410;@throws Exception;private void doTestCustomValidator(String xml) throws Exception {_		loadBeanDefinitions(xml, 13)___		RequestMappingHandlerMapping mapping = appContext.getBean(RequestMappingHandlerMapping.class)__		assertNotNull(mapping)__		assertFalse(mapping.getUrlPathHelper().shouldRemoveSemicolonContent())___		RequestMappingHandlerAdapter adapter = appContext.getBean(RequestMappingHandlerAdapter.class)__		assertNotNull(adapter)__		assertEquals(true, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"))___		_		MockHttpServletRequest request = new MockHttpServletRequest()__		request.addParameter("date", "2009-10-31")__		MockHttpServletResponse response = new MockHttpServletResponse()__		adapter.handle(request, response, handlerMethod)___		assertTrue(appContext.getBean(TestValidator.class).validatorInvoked)__		assertFalse(handler.recordedValidationError)__	};throws,exception;private,void,do,test,custom,validator,string,xml,throws,exception,load,bean,definitions,xml,13,request,mapping,handler,mapping,mapping,app,context,get,bean,request,mapping,handler,mapping,class,assert,not,null,mapping,assert,false,mapping,get,url,path,helper,should,remove,semicolon,content,request,mapping,handler,adapter,adapter,app,context,get,bean,request,mapping,handler,adapter,class,assert,not,null,adapter,assert,equals,true,new,direct,field,accessor,adapter,get,property,value,ignore,default,model,on,redirect,mock,http,servlet,request,request,new,mock,http,servlet,request,request,add,parameter,date,2009,10,31,mock,http,servlet,response,response,new,mock,http,servlet,response,adapter,handle,request,response,handler,method,assert,true,app,context,get,bean,test,validator,class,validator,invoked,assert,false,handler,recorded,validation,error
MvcNamespaceTests -> private void doTestCustomValidator(String xml) throws Exception;1405652648;@throws Exception;private void doTestCustomValidator(String xml) throws Exception {_		loadBeanDefinitions(xml, 13)___		RequestMappingHandlerMapping mapping = appContext.getBean(RequestMappingHandlerMapping.class)__		assertNotNull(mapping)__		assertFalse(mapping.getUrlPathHelper().shouldRemoveSemicolonContent())___		RequestMappingHandlerAdapter adapter = appContext.getBean(RequestMappingHandlerAdapter.class)__		assertNotNull(adapter)__		assertEquals(true, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"))___		_		MockHttpServletRequest request = new MockHttpServletRequest()__		request.addParameter("date", "2009-10-31")__		MockHttpServletResponse response = new MockHttpServletResponse()__		adapter.handle(request, response, handlerMethod)___		assertTrue(appContext.getBean(TestValidator.class).validatorInvoked)__		assertFalse(handler.recordedValidationError)__	};throws,exception;private,void,do,test,custom,validator,string,xml,throws,exception,load,bean,definitions,xml,13,request,mapping,handler,mapping,mapping,app,context,get,bean,request,mapping,handler,mapping,class,assert,not,null,mapping,assert,false,mapping,get,url,path,helper,should,remove,semicolon,content,request,mapping,handler,adapter,adapter,app,context,get,bean,request,mapping,handler,adapter,class,assert,not,null,adapter,assert,equals,true,new,direct,field,accessor,adapter,get,property,value,ignore,default,model,on,redirect,mock,http,servlet,request,request,new,mock,http,servlet,request,request,add,parameter,date,2009,10,31,mock,http,servlet,response,response,new,mock,http,servlet,response,adapter,handle,request,response,handler,method,assert,true,app,context,get,bean,test,validator,class,validator,invoked,assert,false,handler,recorded,validation,error
MvcNamespaceTests -> private void doTestCustomValidator(String xml) throws Exception;1407154420;@throws Exception;private void doTestCustomValidator(String xml) throws Exception {_		loadBeanDefinitions(xml, 13)___		RequestMappingHandlerMapping mapping = appContext.getBean(RequestMappingHandlerMapping.class)__		assertNotNull(mapping)__		assertFalse(mapping.getUrlPathHelper().shouldRemoveSemicolonContent())___		RequestMappingHandlerAdapter adapter = appContext.getBean(RequestMappingHandlerAdapter.class)__		assertNotNull(adapter)__		assertEquals(true, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"))___		_		MockHttpServletRequest request = new MockHttpServletRequest()__		request.addParameter("date", "2009-10-31")__		MockHttpServletResponse response = new MockHttpServletResponse()__		adapter.handle(request, response, handlerMethod)___		assertTrue(appContext.getBean(TestValidator.class).validatorInvoked)__		assertFalse(handler.recordedValidationError)__	};throws,exception;private,void,do,test,custom,validator,string,xml,throws,exception,load,bean,definitions,xml,13,request,mapping,handler,mapping,mapping,app,context,get,bean,request,mapping,handler,mapping,class,assert,not,null,mapping,assert,false,mapping,get,url,path,helper,should,remove,semicolon,content,request,mapping,handler,adapter,adapter,app,context,get,bean,request,mapping,handler,adapter,class,assert,not,null,adapter,assert,equals,true,new,direct,field,accessor,adapter,get,property,value,ignore,default,model,on,redirect,mock,http,servlet,request,request,new,mock,http,servlet,request,request,add,parameter,date,2009,10,31,mock,http,servlet,response,response,new,mock,http,servlet,response,adapter,handle,request,response,handler,method,assert,true,app,context,get,bean,test,validator,class,validator,invoked,assert,false,handler,recorded,validation,error
MvcNamespaceTests -> private void doTestCustomValidator(String xml) throws Exception;1409320969;@throws Exception;private void doTestCustomValidator(String xml) throws Exception {_		loadBeanDefinitions(xml, 13)___		RequestMappingHandlerMapping mapping = appContext.getBean(RequestMappingHandlerMapping.class)__		assertNotNull(mapping)__		assertFalse(mapping.getUrlPathHelper().shouldRemoveSemicolonContent())___		RequestMappingHandlerAdapter adapter = appContext.getBean(RequestMappingHandlerAdapter.class)__		assertNotNull(adapter)__		assertEquals(true, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"))___		_		MockHttpServletRequest request = new MockHttpServletRequest()__		request.addParameter("date", "2009-10-31")__		MockHttpServletResponse response = new MockHttpServletResponse()__		adapter.handle(request, response, handlerMethod)___		assertTrue(appContext.getBean(TestValidator.class).validatorInvoked)__		assertFalse(handler.recordedValidationError)__	};throws,exception;private,void,do,test,custom,validator,string,xml,throws,exception,load,bean,definitions,xml,13,request,mapping,handler,mapping,mapping,app,context,get,bean,request,mapping,handler,mapping,class,assert,not,null,mapping,assert,false,mapping,get,url,path,helper,should,remove,semicolon,content,request,mapping,handler,adapter,adapter,app,context,get,bean,request,mapping,handler,adapter,class,assert,not,null,adapter,assert,equals,true,new,direct,field,accessor,adapter,get,property,value,ignore,default,model,on,redirect,mock,http,servlet,request,request,new,mock,http,servlet,request,request,add,parameter,date,2009,10,31,mock,http,servlet,response,response,new,mock,http,servlet,response,adapter,handle,request,response,handler,method,assert,true,app,context,get,bean,test,validator,class,validator,invoked,assert,false,handler,recorded,validation,error
MvcNamespaceTests -> private void doTestCustomValidator(String xml) throws Exception;1409331339;@throws Exception;private void doTestCustomValidator(String xml) throws Exception {_		loadBeanDefinitions(xml, 13)___		RequestMappingHandlerMapping mapping = appContext.getBean(RequestMappingHandlerMapping.class)__		assertNotNull(mapping)__		assertFalse(mapping.getUrlPathHelper().shouldRemoveSemicolonContent())___		RequestMappingHandlerAdapter adapter = appContext.getBean(RequestMappingHandlerAdapter.class)__		assertNotNull(adapter)__		assertEquals(true, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"))___		_		MockHttpServletRequest request = new MockHttpServletRequest()__		request.addParameter("date", "2009-10-31")__		MockHttpServletResponse response = new MockHttpServletResponse()__		adapter.handle(request, response, handlerMethod)___		assertTrue(appContext.getBean(TestValidator.class).validatorInvoked)__		assertFalse(handler.recordedValidationError)__	};throws,exception;private,void,do,test,custom,validator,string,xml,throws,exception,load,bean,definitions,xml,13,request,mapping,handler,mapping,mapping,app,context,get,bean,request,mapping,handler,mapping,class,assert,not,null,mapping,assert,false,mapping,get,url,path,helper,should,remove,semicolon,content,request,mapping,handler,adapter,adapter,app,context,get,bean,request,mapping,handler,adapter,class,assert,not,null,adapter,assert,equals,true,new,direct,field,accessor,adapter,get,property,value,ignore,default,model,on,redirect,mock,http,servlet,request,request,new,mock,http,servlet,request,request,add,parameter,date,2009,10,31,mock,http,servlet,response,response,new,mock,http,servlet,response,adapter,handle,request,response,handler,method,assert,true,app,context,get,bean,test,validator,class,validator,invoked,assert,false,handler,recorded,validation,error
MvcNamespaceTests -> private void doTestCustomValidator(String xml) throws Exception;1409804208;@throws Exception;private void doTestCustomValidator(String xml) throws Exception {_		loadBeanDefinitions(xml, 13)___		RequestMappingHandlerMapping mapping = appContext.getBean(RequestMappingHandlerMapping.class)__		assertNotNull(mapping)__		assertFalse(mapping.getUrlPathHelper().shouldRemoveSemicolonContent())___		RequestMappingHandlerAdapter adapter = appContext.getBean(RequestMappingHandlerAdapter.class)__		assertNotNull(adapter)__		assertEquals(true, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"))___		_		MockHttpServletRequest request = new MockHttpServletRequest()__		request.addParameter("date", "2009-10-31")__		MockHttpServletResponse response = new MockHttpServletResponse()__		adapter.handle(request, response, handlerMethod)___		assertTrue(appContext.getBean(TestValidator.class).validatorInvoked)__		assertFalse(handler.recordedValidationError)__	};throws,exception;private,void,do,test,custom,validator,string,xml,throws,exception,load,bean,definitions,xml,13,request,mapping,handler,mapping,mapping,app,context,get,bean,request,mapping,handler,mapping,class,assert,not,null,mapping,assert,false,mapping,get,url,path,helper,should,remove,semicolon,content,request,mapping,handler,adapter,adapter,app,context,get,bean,request,mapping,handler,adapter,class,assert,not,null,adapter,assert,equals,true,new,direct,field,accessor,adapter,get,property,value,ignore,default,model,on,redirect,mock,http,servlet,request,request,new,mock,http,servlet,request,request,add,parameter,date,2009,10,31,mock,http,servlet,response,response,new,mock,http,servlet,response,adapter,handle,request,response,handler,method,assert,true,app,context,get,bean,test,validator,class,validator,invoked,assert,false,handler,recorded,validation,error
MvcNamespaceTests -> private void doTestCustomValidator(String xml) throws Exception;1412047095;@throws Exception;private void doTestCustomValidator(String xml) throws Exception {_		loadBeanDefinitions(xml, 13)___		RequestMappingHandlerMapping mapping = appContext.getBean(RequestMappingHandlerMapping.class)__		assertNotNull(mapping)__		assertFalse(mapping.getUrlPathHelper().shouldRemoveSemicolonContent())___		RequestMappingHandlerAdapter adapter = appContext.getBean(RequestMappingHandlerAdapter.class)__		assertNotNull(adapter)__		assertEquals(true, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"))___		_		MockHttpServletRequest request = new MockHttpServletRequest()__		request.addParameter("date", "2009-10-31")__		MockHttpServletResponse response = new MockHttpServletResponse()__		adapter.handle(request, response, handlerMethod)___		assertTrue(appContext.getBean(TestValidator.class).validatorInvoked)__		assertFalse(handler.recordedValidationError)__	};throws,exception;private,void,do,test,custom,validator,string,xml,throws,exception,load,bean,definitions,xml,13,request,mapping,handler,mapping,mapping,app,context,get,bean,request,mapping,handler,mapping,class,assert,not,null,mapping,assert,false,mapping,get,url,path,helper,should,remove,semicolon,content,request,mapping,handler,adapter,adapter,app,context,get,bean,request,mapping,handler,adapter,class,assert,not,null,adapter,assert,equals,true,new,direct,field,accessor,adapter,get,property,value,ignore,default,model,on,redirect,mock,http,servlet,request,request,new,mock,http,servlet,request,request,add,parameter,date,2009,10,31,mock,http,servlet,response,response,new,mock,http,servlet,response,adapter,handle,request,response,handler,method,assert,true,app,context,get,bean,test,validator,class,validator,invoked,assert,false,handler,recorded,validation,error
MvcNamespaceTests -> private void doTestCustomValidator(String xml) throws Exception;1412047095;@throws Exception;private void doTestCustomValidator(String xml) throws Exception {_		loadBeanDefinitions(xml, 13)___		RequestMappingHandlerMapping mapping = appContext.getBean(RequestMappingHandlerMapping.class)__		assertNotNull(mapping)__		assertFalse(mapping.getUrlPathHelper().shouldRemoveSemicolonContent())___		RequestMappingHandlerAdapter adapter = appContext.getBean(RequestMappingHandlerAdapter.class)__		assertNotNull(adapter)__		assertEquals(true, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"))___		_		MockHttpServletRequest request = new MockHttpServletRequest()__		request.addParameter("date", "2009-10-31")__		MockHttpServletResponse response = new MockHttpServletResponse()__		adapter.handle(request, response, handlerMethod)___		assertTrue(appContext.getBean(TestValidator.class).validatorInvoked)__		assertFalse(handler.recordedValidationError)__	};throws,exception;private,void,do,test,custom,validator,string,xml,throws,exception,load,bean,definitions,xml,13,request,mapping,handler,mapping,mapping,app,context,get,bean,request,mapping,handler,mapping,class,assert,not,null,mapping,assert,false,mapping,get,url,path,helper,should,remove,semicolon,content,request,mapping,handler,adapter,adapter,app,context,get,bean,request,mapping,handler,adapter,class,assert,not,null,adapter,assert,equals,true,new,direct,field,accessor,adapter,get,property,value,ignore,default,model,on,redirect,mock,http,servlet,request,request,new,mock,http,servlet,request,request,add,parameter,date,2009,10,31,mock,http,servlet,response,response,new,mock,http,servlet,response,adapter,handle,request,response,handler,method,assert,true,app,context,get,bean,test,validator,class,validator,invoked,assert,false,handler,recorded,validation,error
MvcNamespaceTests -> private void doTestCustomValidator(String xml) throws Exception;1412047095;@throws Exception;private void doTestCustomValidator(String xml) throws Exception {_		loadBeanDefinitions(xml, 13)___		RequestMappingHandlerMapping mapping = appContext.getBean(RequestMappingHandlerMapping.class)__		assertNotNull(mapping)__		assertFalse(mapping.getUrlPathHelper().shouldRemoveSemicolonContent())___		RequestMappingHandlerAdapter adapter = appContext.getBean(RequestMappingHandlerAdapter.class)__		assertNotNull(adapter)__		assertEquals(true, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"))___		_		MockHttpServletRequest request = new MockHttpServletRequest()__		request.addParameter("date", "2009-10-31")__		MockHttpServletResponse response = new MockHttpServletResponse()__		adapter.handle(request, response, handlerMethod)___		assertTrue(appContext.getBean(TestValidator.class).validatorInvoked)__		assertFalse(handler.recordedValidationError)__	};throws,exception;private,void,do,test,custom,validator,string,xml,throws,exception,load,bean,definitions,xml,13,request,mapping,handler,mapping,mapping,app,context,get,bean,request,mapping,handler,mapping,class,assert,not,null,mapping,assert,false,mapping,get,url,path,helper,should,remove,semicolon,content,request,mapping,handler,adapter,adapter,app,context,get,bean,request,mapping,handler,adapter,class,assert,not,null,adapter,assert,equals,true,new,direct,field,accessor,adapter,get,property,value,ignore,default,model,on,redirect,mock,http,servlet,request,request,new,mock,http,servlet,request,request,add,parameter,date,2009,10,31,mock,http,servlet,response,response,new,mock,http,servlet,response,adapter,handle,request,response,handler,method,assert,true,app,context,get,bean,test,validator,class,validator,invoked,assert,false,handler,recorded,validation,error
MvcNamespaceTests -> private void doTestCustomValidator(String xml) throws Exception;1412087903;@throws Exception;private void doTestCustomValidator(String xml) throws Exception {_		loadBeanDefinitions(xml, 13)___		RequestMappingHandlerMapping mapping = appContext.getBean(RequestMappingHandlerMapping.class)__		assertNotNull(mapping)__		assertFalse(mapping.getUrlPathHelper().shouldRemoveSemicolonContent())___		RequestMappingHandlerAdapter adapter = appContext.getBean(RequestMappingHandlerAdapter.class)__		assertNotNull(adapter)__		assertEquals(true, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"))___		_		MockHttpServletRequest request = new MockHttpServletRequest()__		request.addParameter("date", "2009-10-31")__		MockHttpServletResponse response = new MockHttpServletResponse()__		adapter.handle(request, response, handlerMethod)___		assertTrue(appContext.getBean(TestValidator.class).validatorInvoked)__		assertFalse(handler.recordedValidationError)__	};throws,exception;private,void,do,test,custom,validator,string,xml,throws,exception,load,bean,definitions,xml,13,request,mapping,handler,mapping,mapping,app,context,get,bean,request,mapping,handler,mapping,class,assert,not,null,mapping,assert,false,mapping,get,url,path,helper,should,remove,semicolon,content,request,mapping,handler,adapter,adapter,app,context,get,bean,request,mapping,handler,adapter,class,assert,not,null,adapter,assert,equals,true,new,direct,field,accessor,adapter,get,property,value,ignore,default,model,on,redirect,mock,http,servlet,request,request,new,mock,http,servlet,request,request,add,parameter,date,2009,10,31,mock,http,servlet,response,response,new,mock,http,servlet,response,adapter,handle,request,response,handler,method,assert,true,app,context,get,bean,test,validator,class,validator,invoked,assert,false,handler,recorded,validation,error
MvcNamespaceTests -> private void doTestCustomValidator(String xml) throws Exception;1412087903;@throws Exception;private void doTestCustomValidator(String xml) throws Exception {_		loadBeanDefinitions(xml, 13)___		RequestMappingHandlerMapping mapping = appContext.getBean(RequestMappingHandlerMapping.class)__		assertNotNull(mapping)__		assertFalse(mapping.getUrlPathHelper().shouldRemoveSemicolonContent())___		RequestMappingHandlerAdapter adapter = appContext.getBean(RequestMappingHandlerAdapter.class)__		assertNotNull(adapter)__		assertEquals(true, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"))___		_		MockHttpServletRequest request = new MockHttpServletRequest()__		request.addParameter("date", "2009-10-31")__		MockHttpServletResponse response = new MockHttpServletResponse()__		adapter.handle(request, response, handlerMethod)___		assertTrue(appContext.getBean(TestValidator.class).validatorInvoked)__		assertFalse(handler.recordedValidationError)__	};throws,exception;private,void,do,test,custom,validator,string,xml,throws,exception,load,bean,definitions,xml,13,request,mapping,handler,mapping,mapping,app,context,get,bean,request,mapping,handler,mapping,class,assert,not,null,mapping,assert,false,mapping,get,url,path,helper,should,remove,semicolon,content,request,mapping,handler,adapter,adapter,app,context,get,bean,request,mapping,handler,adapter,class,assert,not,null,adapter,assert,equals,true,new,direct,field,accessor,adapter,get,property,value,ignore,default,model,on,redirect,mock,http,servlet,request,request,new,mock,http,servlet,request,request,add,parameter,date,2009,10,31,mock,http,servlet,response,response,new,mock,http,servlet,response,adapter,handle,request,response,handler,method,assert,true,app,context,get,bean,test,validator,class,validator,invoked,assert,false,handler,recorded,validation,error
MvcNamespaceTests -> private void doTestCustomValidator(String xml) throws Exception;1413848647;@throws Exception;private void doTestCustomValidator(String xml) throws Exception {_		loadBeanDefinitions(xml, 13)___		RequestMappingHandlerMapping mapping = appContext.getBean(RequestMappingHandlerMapping.class)__		assertNotNull(mapping)__		assertFalse(mapping.getUrlPathHelper().shouldRemoveSemicolonContent())___		RequestMappingHandlerAdapter adapter = appContext.getBean(RequestMappingHandlerAdapter.class)__		assertNotNull(adapter)__		assertEquals(true, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"))___		_		MockHttpServletRequest request = new MockHttpServletRequest()__		request.addParameter("date", "2009-10-31")__		MockHttpServletResponse response = new MockHttpServletResponse()__		adapter.handle(request, response, handlerMethod)___		assertTrue(appContext.getBean(TestValidator.class).validatorInvoked)__		assertFalse(handler.recordedValidationError)__	};throws,exception;private,void,do,test,custom,validator,string,xml,throws,exception,load,bean,definitions,xml,13,request,mapping,handler,mapping,mapping,app,context,get,bean,request,mapping,handler,mapping,class,assert,not,null,mapping,assert,false,mapping,get,url,path,helper,should,remove,semicolon,content,request,mapping,handler,adapter,adapter,app,context,get,bean,request,mapping,handler,adapter,class,assert,not,null,adapter,assert,equals,true,new,direct,field,accessor,adapter,get,property,value,ignore,default,model,on,redirect,mock,http,servlet,request,request,new,mock,http,servlet,request,request,add,parameter,date,2009,10,31,mock,http,servlet,response,response,new,mock,http,servlet,response,adapter,handle,request,response,handler,method,assert,true,app,context,get,bean,test,validator,class,validator,invoked,assert,false,handler,recorded,validation,error
MvcNamespaceTests -> private void doTestCustomValidator(String xml) throws Exception;1414415063;@throws Exception;private void doTestCustomValidator(String xml) throws Exception {_		loadBeanDefinitions(xml, 13)___		RequestMappingHandlerMapping mapping = appContext.getBean(RequestMappingHandlerMapping.class)__		assertNotNull(mapping)__		assertFalse(mapping.getUrlPathHelper().shouldRemoveSemicolonContent())___		RequestMappingHandlerAdapter adapter = appContext.getBean(RequestMappingHandlerAdapter.class)__		assertNotNull(adapter)__		assertEquals(true, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"))___		_		MockHttpServletRequest request = new MockHttpServletRequest()__		request.addParameter("date", "2009-10-31")__		MockHttpServletResponse response = new MockHttpServletResponse()__		adapter.handle(request, response, handlerMethod)___		assertTrue(appContext.getBean(TestValidator.class).validatorInvoked)__		assertFalse(handler.recordedValidationError)__	};throws,exception;private,void,do,test,custom,validator,string,xml,throws,exception,load,bean,definitions,xml,13,request,mapping,handler,mapping,mapping,app,context,get,bean,request,mapping,handler,mapping,class,assert,not,null,mapping,assert,false,mapping,get,url,path,helper,should,remove,semicolon,content,request,mapping,handler,adapter,adapter,app,context,get,bean,request,mapping,handler,adapter,class,assert,not,null,adapter,assert,equals,true,new,direct,field,accessor,adapter,get,property,value,ignore,default,model,on,redirect,mock,http,servlet,request,request,new,mock,http,servlet,request,request,add,parameter,date,2009,10,31,mock,http,servlet,response,response,new,mock,http,servlet,response,adapter,handle,request,response,handler,method,assert,true,app,context,get,bean,test,validator,class,validator,invoked,assert,false,handler,recorded,validation,error
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1328020251;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 14)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,14,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1342810066;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 14)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,14,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1342834322;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 15)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,15,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1342865802;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 15)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,15,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1345237516;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 15)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,15,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1351301394;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 15)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,15,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1351651119;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 15)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,15,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1354292158;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 15)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,15,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1356735495;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 15)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,15,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1368581529;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 15)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,15,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1382387168;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 16)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,16,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1382474312;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 16)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,16,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1382754578;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 16)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,16,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1386016136;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 16)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,16,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1388785441;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 16)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,16,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1402499224;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1404312428;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1405200227;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1405200227;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1405200227;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1405306409;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1405561410;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1405561410;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1405652648;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1407154420;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1409320969;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1409331339;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1409804208;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1412047095;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1412047095;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1412047095;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1412087903;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1412087903;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1413848647;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1414415063;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1416868464;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1421421182;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1425758558;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1425759378;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1427130064;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1429685224;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1430818727;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1432051268;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 18)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,18,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1433265252;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 19)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,19,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1436473186;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 19)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,19,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1436960373;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 19)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,19,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1436967737;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 19)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,19,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1437503583;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 19)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,19,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1440457332;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 19)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,19,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1440519027;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 19)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,19,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1446156060;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 19)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,19,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1446166711;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 19)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,19,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1446166965;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 19)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,19,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1457125561;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 19)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,19,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1457624120;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 19)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,19,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1462299157;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 19)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,19,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1467667858;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 19)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,19,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1467726413;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 19)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,19,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1467744603;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 19)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,19,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1472210853;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 19)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,19,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1476909116;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 19)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,19,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1487362018;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 19)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,19,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1496242568;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 19)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,19,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1498505691;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml", 19)___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,19,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1506562129;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml")___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1508532146;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml")___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1510251306;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml")___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1510940038;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml")___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1511387204;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml")___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1522843494;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml")___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1527081441;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml")___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
MvcNamespaceTests -> @Test 	public void testViewControllersOnWebSphere() throws Exception;1533715735;WebSphere gives trailing servlet path slashes by default!!;@Test_	public void testViewControllersOnWebSphere() throws Exception {_		loadBeanDefinitions("mvc-config-view-controllers.xml")___		SimpleUrlHandlerMapping mapping2 = appContext.getBean(SimpleUrlHandlerMapping.class)__		SimpleControllerHandlerAdapter adapter = appContext.getBean(SimpleControllerHandlerAdapter.class)___		MockHttpServletRequest request = new MockHttpServletRequest()__		request.setMethod("GET")__		request.setRequestURI("/myapp/app/bar")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		request.setAttribute("com.ibm.websphere.servlet.uri_non_decoded", "/myapp/app/bar")__		HandlerExecutionChain chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv2 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("baz", mv2.getViewName())___		request.setRequestURI("/myapp/app/")__		request.setContextPath("/myapp")__		request.setServletPath("/app/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		ModelAndView mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())___		request.setRequestURI("/myapp/")__		request.setContextPath("/myapp")__		request.setServletPath("/")__		chain = mapping2.getHandler(request)__		assertEquals(4, chain.getInterceptors().length)__		assertTrue(chain.getInterceptors()[1] instanceof ConversionServiceExposingInterceptor)__		assertTrue(chain.getInterceptors()[2] instanceof LocaleChangeInterceptor)__		assertTrue(chain.getInterceptors()[3] instanceof ThemeChangeInterceptor)__		mv3 = adapter.handle(request, new MockHttpServletResponse(), chain.getHandler())__		assertEquals("root", mv3.getViewName())__	};web,sphere,gives,trailing,servlet,path,slashes,by,default;test,public,void,test,view,controllers,on,web,sphere,throws,exception,load,bean,definitions,mvc,config,view,controllers,xml,simple,url,handler,mapping,mapping2,app,context,get,bean,simple,url,handler,mapping,class,simple,controller,handler,adapter,adapter,app,context,get,bean,simple,controller,handler,adapter,class,mock,http,servlet,request,request,new,mock,http,servlet,request,request,set,method,get,request,set,request,uri,myapp,app,bar,request,set,context,path,myapp,request,set,servlet,path,app,request,set,attribute,com,ibm,websphere,servlet,myapp,app,bar,handler,execution,chain,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv2,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,baz,mv2,get,view,name,request,set,request,uri,myapp,app,request,set,context,path,myapp,request,set,servlet,path,app,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,model,and,view,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name,request,set,request,uri,myapp,request,set,context,path,myapp,request,set,servlet,path,chain,mapping2,get,handler,request,assert,equals,4,chain,get,interceptors,length,assert,true,chain,get,interceptors,1,instanceof,conversion,service,exposing,interceptor,assert,true,chain,get,interceptors,2,instanceof,locale,change,interceptor,assert,true,chain,get,interceptors,3,instanceof,theme,change,interceptor,mv3,adapter,handle,request,new,mock,http,servlet,response,chain,get,handler,assert,equals,root,mv3,get,view,name
