commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Before public void setUp() throws Exception {     PageContext context = createPageContext().     parent = new MockArgumentSupportTag().     tag = new ArgumentTag().     tag.setPageContext(context).     tag.setParent(parent). }
false;public;0;9;;@Test public void argumentWithStringValue() throws JspException {     tag.setValue("value1").     int action = tag.doEndTag().     assertEquals(Tag.EVAL_PAGE, action).     assertEquals("value1", parent.getArgument()). }
false;public;0;7;;@Test public void argumentWithImplicitNullValue() throws JspException {     int action = tag.doEndTag().     assertEquals(Tag.EVAL_PAGE, action).     assertNull(parent.getArgument()). }
false;public;0;9;;@Test public void argumentWithExplicitNullValue() throws JspException {     tag.setValue(null).     int action = tag.doEndTag().     assertEquals(Tag.EVAL_PAGE, action).     assertNull(parent.getArgument()). }
false;public;0;10;;@Test public void argumentWithBodyValue() throws JspException {     tag.setBodyContent(new MockBodyContent("value2", new MockHttpServletResponse())).     int action = tag.doEndTag().     assertEquals(Tag.EVAL_PAGE, action).     assertEquals("value2", parent.getArgument()). }
false;public;0;22;;@Test public void argumentWithValueThenReleaseThenBodyValue() throws JspException {     tag.setValue("value3").     int action = tag.doEndTag().     assertEquals(Tag.EVAL_PAGE, action).     assertEquals("value3", parent.getArgument()).     tag.release().     parent = new MockArgumentSupportTag().     tag.setPageContext(createPageContext()).     tag.setParent(parent).     tag.setBodyContent(new MockBodyContent("value4", new MockHttpServletResponse())).     action = tag.doEndTag().     assertEquals(Tag.EVAL_PAGE, action).     assertEquals("value4", parent.getArgument()). }
false;public;1;4;;@Override public void addArgument(Object argument) {     this.argument = argument. }
false;private;0;3;;private Object getArgument() {     return argument. }
