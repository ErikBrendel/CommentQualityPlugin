commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Before public void setup() throws Exception {     resolver = new ServletCookieValueMethodArgumentResolver(null).     request = new MockHttpServletRequest().     webRequest = new ServletWebRequest(request, new MockHttpServletResponse()).     Method method = getClass().getMethod("params", Cookie.class, String.class).     cookieParameter = new SynthesizingMethodParameter(method, 0).     cookieStringParameter = new SynthesizingMethodParameter(method, 1). }
false;public;0;8;;@Test public void resolveCookieArgument() throws Exception {     Cookie expected = new Cookie("name", "foo").     request.setCookies(expected).     Cookie result = (Cookie) resolver.resolveArgument(cookieParameter, null, webRequest, null).     assertEquals("Invalid result", expected, result). }
false;public;0;8;;@Test public void resolveCookieStringArgument() throws Exception {     Cookie cookie = new Cookie("name", "foo").     request.setCookies(cookie).     String result = (String) resolver.resolveArgument(cookieStringParameter, null, webRequest, null).     assertEquals("Invalid result", cookie.getValue(), result). }
false;public;2;3;;public void params(@CookieValue("name") Cookie cookie, @CookieValue(name = "name", defaultValue = "bar") String cookieString) { }
