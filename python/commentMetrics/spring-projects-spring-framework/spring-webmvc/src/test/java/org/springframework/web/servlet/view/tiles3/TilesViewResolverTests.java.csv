commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Before public void setUp() {     StaticWebApplicationContext wac = new StaticWebApplicationContext().     wac.setServletContext(new MockServletContext()).     wac.refresh().     this.renderer = mock(Renderer.class).     this.viewResolver = new TilesViewResolver().     this.viewResolver.setRenderer(this.renderer).     this.viewResolver.setApplicationContext(wac). }
false;public;0;11;;@Test public void testResolve() throws Exception {     given(this.renderer.isRenderable(eq("/template.test"), isA(Request.class))).willReturn(true).     given(this.renderer.isRenderable(eq("/nonexistent.test"), isA(Request.class))).willReturn(false).     assertTrue(this.viewResolver.resolveViewName("/template.test", Locale.ITALY) instanceof TilesView).     assertNull(this.viewResolver.resolveViewName("/nonexistent.test", Locale.ITALY)).     verify(this.renderer).isRenderable(eq("/template.test"), isA(Request.class)).     verify(this.renderer).isRenderable(eq("/nonexistent.test"), isA(Request.class)). }
