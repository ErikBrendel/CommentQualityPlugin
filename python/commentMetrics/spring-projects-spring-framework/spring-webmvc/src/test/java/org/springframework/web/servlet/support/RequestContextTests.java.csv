commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Before public void init() {     GenericWebApplicationContext applicationContext = new GenericWebApplicationContext().     applicationContext.refresh().     servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, applicationContext). }
false;public;0;6;;@Test public void testGetContextUrl() throws Exception {     request.setContextPath("foo/").     RequestContext context = new RequestContext(request, response, servletContext, model).     assertEquals("foo/bar", context.getContextUrl("bar")). }
false;public;0;9;;@Test public void testGetContextUrlWithMap() throws Exception {     request.setContextPath("foo/").     RequestContext context = new RequestContext(request, response, servletContext, model).     Map<String, Object> map = new HashMap<>().     map.put("foo", "bar").     map.put("spam", "bucket").     assertEquals("foo/bar?spam=bucket", context.getContextUrl("{foo}?spam={spam}", map)). }
false;public;0;9;;@Test public void testGetContextUrlWithMapEscaping() throws Exception {     request.setContextPath("foo/").     RequestContext context = new RequestContext(request, response, servletContext, model).     Map<String, Object> map = new HashMap<>().     map.put("foo", "bar baz").     map.put("spam", "&bucket=").     assertEquals("foo/bar%20baz?spam=%26bucket%3D", context.getContextUrl("{foo}?spam={spam}", map)). }
false;public;0;13;;@Test public void testPathToServlet() throws Exception {     request.setContextPath("/app").     request.setServletPath("/servlet").     RequestContext context = new RequestContext(request, response, servletContext, model).     assertEquals("/app/servlet", context.getPathToServlet()).     request.setAttribute(WebUtils.FORWARD_CONTEXT_PATH_ATTRIBUTE, "/origApp").     request.setAttribute(WebUtils.FORWARD_SERVLET_PATH_ATTRIBUTE, "/origServlet").     assertEquals("/origApp/origServlet", context.getPathToServlet()). }
