# id;timestamp;commentText;codeText;commentWords;codeWords
CheckboxesTagTests -> @Test 	public void collectionOfItemPets() throws Exception;1443381471;Test case where items toString() doesn't fit the item ID;@Test_	public void collectionOfItemPets() throws Exception {_		this.tag.setPath("someSet")__		List allPets = new ArrayList()__		allPets.add(new ItemPet("PET1"))__		allPets.add(new ItemPet("PET2"))__		allPets.add(new ItemPet("PET3"))__		this.tag.setItems(allPets)__		this.tag.setItemValue("name")__		this.tag.setItemLabel("label")___		int result = this.tag.doStartTag()__		assertEquals(Tag.SKIP_BODY, result)___		String output = getOutput()___		_		output = "<doc>" + output + "</doc>"___		SAXReader reader = new SAXReader()__		Document document = reader.read(new StringReader(output))__		Element spanElement1 = (Element) document.getRootElement().elements().get(0)__		Element checkboxElement1 = (Element) spanElement1.elements().get(0)__		assertEquals("input", checkboxElement1.getName())__		assertEquals("checkbox", checkboxElement1.attribute("type").getValue())__		assertEquals("someSet", checkboxElement1.attribute("name").getValue())__		assertNotNull("should be checked", checkboxElement1.attribute("checked"))__		assertEquals("checked", checkboxElement1.attribute("checked").getValue())__		assertEquals("PET1", checkboxElement1.attribute("value").getValue())__		assertEquals("PET1", spanElement1.getStringValue())__		Element spanElement2 = (Element) document.getRootElement().elements().get(1)__		Element checkboxElement2 = (Element) spanElement2.elements().get(0)__		assertEquals("input", checkboxElement2.getName())__		assertEquals("checkbox", checkboxElement2.attribute("type").getValue())__		assertEquals("someSet", checkboxElement2.attribute("name").getValue())__		assertNotNull("should be checked", checkboxElement2.attribute("checked"))__		assertEquals("checked", checkboxElement2.attribute("checked").getValue())__		assertEquals("PET2", checkboxElement2.attribute("value").getValue())__		assertEquals("PET2", spanElement2.getStringValue())__		Element spanElement3 = (Element) document.getRootElement().elements().get(2)__		Element checkboxElement3 = (Element) spanElement3.elements().get(0)__		assertEquals("input", checkboxElement3.getName())__		assertEquals("checkbox", checkboxElement3.attribute("type").getValue())__		assertEquals("someSet", checkboxElement3.attribute("name").getValue())__		assertNull("not checked", checkboxElement3.attribute("checked"))__		assertEquals("PET3", checkboxElement3.attribute("value").getValue())__		assertEquals("PET3", spanElement3.getStringValue())__	};test,case,where,items,to,string,doesn,t,fit,the,item,id;test,public,void,collection,of,item,pets,throws,exception,this,tag,set,path,some,set,list,all,pets,new,array,list,all,pets,add,new,item,pet,pet1,all,pets,add,new,item,pet,pet2,all,pets,add,new,item,pet,pet3,this,tag,set,items,all,pets,this,tag,set,item,value,name,this,tag,set,item,label,label,int,result,this,tag,do,start,tag,assert,equals,tag,result,string,output,get,output,output,doc,output,doc,saxreader,reader,new,saxreader,document,document,reader,read,new,string,reader,output,element,span,element1,element,document,get,root,element,elements,get,0,element,checkbox,element1,element,span,element1,elements,get,0,assert,equals,input,checkbox,element1,get,name,assert,equals,checkbox,checkbox,element1,attribute,type,get,value,assert,equals,some,set,checkbox,element1,attribute,name,get,value,assert,not,null,should,be,checked,checkbox,element1,attribute,checked,assert,equals,checked,checkbox,element1,attribute,checked,get,value,assert,equals,pet1,checkbox,element1,attribute,value,get,value,assert,equals,pet1,span,element1,get,string,value,element,span,element2,element,document,get,root,element,elements,get,1,element,checkbox,element2,element,span,element2,elements,get,0,assert,equals,input,checkbox,element2,get,name,assert,equals,checkbox,checkbox,element2,attribute,type,get,value,assert,equals,some,set,checkbox,element2,attribute,name,get,value,assert,not,null,should,be,checked,checkbox,element2,attribute,checked,assert,equals,checked,checkbox,element2,attribute,checked,get,value,assert,equals,pet2,checkbox,element2,attribute,value,get,value,assert,equals,pet2,span,element2,get,string,value,element,span,element3,element,document,get,root,element,elements,get,2,element,checkbox,element3,element,span,element3,elements,get,0,assert,equals,input,checkbox,element3,get,name,assert,equals,checkbox,checkbox,element3,attribute,type,get,value,assert,equals,some,set,checkbox,element3,attribute,name,get,value,assert,null,not,checked,checkbox,element3,attribute,checked,assert,equals,pet3,checkbox,element3,attribute,value,get,value,assert,equals,pet3,span,element3,get,string,value
CheckboxesTagTests -> @Test 	public void collectionOfItemPets() throws Exception;1483518709;Test case where items toString() doesn't fit the item ID;@Test_	public void collectionOfItemPets() throws Exception {_		this.tag.setPath("someSet")__		List allPets = new ArrayList()__		allPets.add(new ItemPet("PET1"))__		allPets.add(new ItemPet("PET2"))__		allPets.add(new ItemPet("PET3"))__		this.tag.setItems(allPets)__		this.tag.setItemValue("name")__		this.tag.setItemLabel("label")___		int result = this.tag.doStartTag()__		assertEquals(Tag.SKIP_BODY, result)___		String output = getOutput()___		_		output = "<doc>" + output + "</doc>"___		SAXReader reader = new SAXReader()__		Document document = reader.read(new StringReader(output))__		Element spanElement1 = (Element) document.getRootElement().elements().get(0)__		Element checkboxElement1 = (Element) spanElement1.elements().get(0)__		assertEquals("input", checkboxElement1.getName())__		assertEquals("checkbox", checkboxElement1.attribute("type").getValue())__		assertEquals("someSet", checkboxElement1.attribute("name").getValue())__		assertNotNull("should be checked", checkboxElement1.attribute("checked"))__		assertEquals("checked", checkboxElement1.attribute("checked").getValue())__		assertEquals("PET1", checkboxElement1.attribute("value").getValue())__		assertEquals("PET1", spanElement1.getStringValue())__		Element spanElement2 = (Element) document.getRootElement().elements().get(1)__		Element checkboxElement2 = (Element) spanElement2.elements().get(0)__		assertEquals("input", checkboxElement2.getName())__		assertEquals("checkbox", checkboxElement2.attribute("type").getValue())__		assertEquals("someSet", checkboxElement2.attribute("name").getValue())__		assertNotNull("should be checked", checkboxElement2.attribute("checked"))__		assertEquals("checked", checkboxElement2.attribute("checked").getValue())__		assertEquals("PET2", checkboxElement2.attribute("value").getValue())__		assertEquals("PET2", spanElement2.getStringValue())__		Element spanElement3 = (Element) document.getRootElement().elements().get(2)__		Element checkboxElement3 = (Element) spanElement3.elements().get(0)__		assertEquals("input", checkboxElement3.getName())__		assertEquals("checkbox", checkboxElement3.attribute("type").getValue())__		assertEquals("someSet", checkboxElement3.attribute("name").getValue())__		assertNull("not checked", checkboxElement3.attribute("checked"))__		assertEquals("PET3", checkboxElement3.attribute("value").getValue())__		assertEquals("PET3", spanElement3.getStringValue())__	};test,case,where,items,to,string,doesn,t,fit,the,item,id;test,public,void,collection,of,item,pets,throws,exception,this,tag,set,path,some,set,list,all,pets,new,array,list,all,pets,add,new,item,pet,pet1,all,pets,add,new,item,pet,pet2,all,pets,add,new,item,pet,pet3,this,tag,set,items,all,pets,this,tag,set,item,value,name,this,tag,set,item,label,label,int,result,this,tag,do,start,tag,assert,equals,tag,result,string,output,get,output,output,doc,output,doc,saxreader,reader,new,saxreader,document,document,reader,read,new,string,reader,output,element,span,element1,element,document,get,root,element,elements,get,0,element,checkbox,element1,element,span,element1,elements,get,0,assert,equals,input,checkbox,element1,get,name,assert,equals,checkbox,checkbox,element1,attribute,type,get,value,assert,equals,some,set,checkbox,element1,attribute,name,get,value,assert,not,null,should,be,checked,checkbox,element1,attribute,checked,assert,equals,checked,checkbox,element1,attribute,checked,get,value,assert,equals,pet1,checkbox,element1,attribute,value,get,value,assert,equals,pet1,span,element1,get,string,value,element,span,element2,element,document,get,root,element,elements,get,1,element,checkbox,element2,element,span,element2,elements,get,0,assert,equals,input,checkbox,element2,get,name,assert,equals,checkbox,checkbox,element2,attribute,type,get,value,assert,equals,some,set,checkbox,element2,attribute,name,get,value,assert,not,null,should,be,checked,checkbox,element2,attribute,checked,assert,equals,checked,checkbox,element2,attribute,checked,get,value,assert,equals,pet2,checkbox,element2,attribute,value,get,value,assert,equals,pet2,span,element2,get,string,value,element,span,element3,element,document,get,root,element,elements,get,2,element,checkbox,element3,element,span,element3,elements,get,0,assert,equals,input,checkbox,element3,get,name,assert,equals,checkbox,checkbox,element3,attribute,type,get,value,assert,equals,some,set,checkbox,element3,attribute,name,get,value,assert,null,not,checked,checkbox,element3,attribute,checked,assert,equals,pet3,checkbox,element3,attribute,value,get,value,assert,equals,pet3,span,element3,get,string,value
CheckboxesTagTests -> public void testCollectionOfItemPets() throws Exception;1328020251;Test case where items toString() doesn't fit the item ID;public void testCollectionOfItemPets() throws Exception {_		this.tag.setPath("someSet")__		List allPets = new ArrayList()__		allPets.add(new ItemPet("PET1"))__		allPets.add(new ItemPet("PET2"))__		allPets.add(new ItemPet("PET3"))__		this.tag.setItems(allPets)__		this.tag.setItemValue("name")__		this.tag.setItemLabel("label")__		_		int result = this.tag.doStartTag()__		assertEquals(Tag.SKIP_BODY, result)__		_		String output = getOutput()__		_		_		output = "<doc>" + output + "</doc>"__		_		SAXReader reader = new SAXReader()__		Document document = reader.read(new StringReader(output))__		Element spanElement1 = (Element) document.getRootElement().elements().get(0)__		Element checkboxElement1 = (Element) spanElement1.elements().get(0)__		assertEquals("input", checkboxElement1.getName())__		assertEquals("checkbox", checkboxElement1.attribute("type").getValue())__		assertEquals("someSet", checkboxElement1.attribute("name").getValue())__		assertNotNull("should be checked", checkboxElement1.attribute("checked"))__		assertEquals("checked", checkboxElement1.attribute("checked").getValue())__		assertEquals("PET1", checkboxElement1.attribute("value").getValue())__		assertEquals("PET1", spanElement1.getStringValue())__		Element spanElement2 = (Element) document.getRootElement().elements().get(1)__		Element checkboxElement2 = (Element) spanElement2.elements().get(0)__		assertEquals("input", checkboxElement2.getName())__		assertEquals("checkbox", checkboxElement2.attribute("type").getValue())__		assertEquals("someSet", checkboxElement2.attribute("name").getValue())__		assertNotNull("should be checked", checkboxElement2.attribute("checked"))__		assertEquals("checked", checkboxElement2.attribute("checked").getValue())__		assertEquals("PET2", checkboxElement2.attribute("value").getValue())__		assertEquals("PET2", spanElement2.getStringValue())__		Element spanElement3 = (Element) document.getRootElement().elements().get(2)__		Element checkboxElement3 = (Element) spanElement3.elements().get(0)__		assertEquals("input", checkboxElement3.getName())__		assertEquals("checkbox", checkboxElement3.attribute("type").getValue())__		assertEquals("someSet", checkboxElement3.attribute("name").getValue())__		assertNull("not checked", checkboxElement3.attribute("checked"))__		assertEquals("PET3", checkboxElement3.attribute("value").getValue())__		assertEquals("PET3", spanElement3.getStringValue())__	};test,case,where,items,to,string,doesn,t,fit,the,item,id;public,void,test,collection,of,item,pets,throws,exception,this,tag,set,path,some,set,list,all,pets,new,array,list,all,pets,add,new,item,pet,pet1,all,pets,add,new,item,pet,pet2,all,pets,add,new,item,pet,pet3,this,tag,set,items,all,pets,this,tag,set,item,value,name,this,tag,set,item,label,label,int,result,this,tag,do,start,tag,assert,equals,tag,result,string,output,get,output,output,doc,output,doc,saxreader,reader,new,saxreader,document,document,reader,read,new,string,reader,output,element,span,element1,element,document,get,root,element,elements,get,0,element,checkbox,element1,element,span,element1,elements,get,0,assert,equals,input,checkbox,element1,get,name,assert,equals,checkbox,checkbox,element1,attribute,type,get,value,assert,equals,some,set,checkbox,element1,attribute,name,get,value,assert,not,null,should,be,checked,checkbox,element1,attribute,checked,assert,equals,checked,checkbox,element1,attribute,checked,get,value,assert,equals,pet1,checkbox,element1,attribute,value,get,value,assert,equals,pet1,span,element1,get,string,value,element,span,element2,element,document,get,root,element,elements,get,1,element,checkbox,element2,element,span,element2,elements,get,0,assert,equals,input,checkbox,element2,get,name,assert,equals,checkbox,checkbox,element2,attribute,type,get,value,assert,equals,some,set,checkbox,element2,attribute,name,get,value,assert,not,null,should,be,checked,checkbox,element2,attribute,checked,assert,equals,checked,checkbox,element2,attribute,checked,get,value,assert,equals,pet2,checkbox,element2,attribute,value,get,value,assert,equals,pet2,span,element2,get,string,value,element,span,element3,element,document,get,root,element,elements,get,2,element,checkbox,element3,element,span,element3,elements,get,0,assert,equals,input,checkbox,element3,get,name,assert,equals,checkbox,checkbox,element3,attribute,type,get,value,assert,equals,some,set,checkbox,element3,attribute,name,get,value,assert,null,not,checked,checkbox,element3,attribute,checked,assert,equals,pet3,checkbox,element3,attribute,value,get,value,assert,equals,pet3,span,element3,get,string,value
CheckboxesTagTests -> public void testCollectionOfItemPets() throws Exception;1356735495;Test case where items toString() doesn't fit the item ID;public void testCollectionOfItemPets() throws Exception {_		this.tag.setPath("someSet")__		List allPets = new ArrayList()__		allPets.add(new ItemPet("PET1"))__		allPets.add(new ItemPet("PET2"))__		allPets.add(new ItemPet("PET3"))__		this.tag.setItems(allPets)__		this.tag.setItemValue("name")__		this.tag.setItemLabel("label")___		int result = this.tag.doStartTag()__		assertEquals(Tag.SKIP_BODY, result)___		String output = getOutput()___		_		output = "<doc>" + output + "</doc>"___		SAXReader reader = new SAXReader()__		Document document = reader.read(new StringReader(output))__		Element spanElement1 = (Element) document.getRootElement().elements().get(0)__		Element checkboxElement1 = (Element) spanElement1.elements().get(0)__		assertEquals("input", checkboxElement1.getName())__		assertEquals("checkbox", checkboxElement1.attribute("type").getValue())__		assertEquals("someSet", checkboxElement1.attribute("name").getValue())__		assertNotNull("should be checked", checkboxElement1.attribute("checked"))__		assertEquals("checked", checkboxElement1.attribute("checked").getValue())__		assertEquals("PET1", checkboxElement1.attribute("value").getValue())__		assertEquals("PET1", spanElement1.getStringValue())__		Element spanElement2 = (Element) document.getRootElement().elements().get(1)__		Element checkboxElement2 = (Element) spanElement2.elements().get(0)__		assertEquals("input", checkboxElement2.getName())__		assertEquals("checkbox", checkboxElement2.attribute("type").getValue())__		assertEquals("someSet", checkboxElement2.attribute("name").getValue())__		assertNotNull("should be checked", checkboxElement2.attribute("checked"))__		assertEquals("checked", checkboxElement2.attribute("checked").getValue())__		assertEquals("PET2", checkboxElement2.attribute("value").getValue())__		assertEquals("PET2", spanElement2.getStringValue())__		Element spanElement3 = (Element) document.getRootElement().elements().get(2)__		Element checkboxElement3 = (Element) spanElement3.elements().get(0)__		assertEquals("input", checkboxElement3.getName())__		assertEquals("checkbox", checkboxElement3.attribute("type").getValue())__		assertEquals("someSet", checkboxElement3.attribute("name").getValue())__		assertNull("not checked", checkboxElement3.attribute("checked"))__		assertEquals("PET3", checkboxElement3.attribute("value").getValue())__		assertEquals("PET3", spanElement3.getStringValue())__	};test,case,where,items,to,string,doesn,t,fit,the,item,id;public,void,test,collection,of,item,pets,throws,exception,this,tag,set,path,some,set,list,all,pets,new,array,list,all,pets,add,new,item,pet,pet1,all,pets,add,new,item,pet,pet2,all,pets,add,new,item,pet,pet3,this,tag,set,items,all,pets,this,tag,set,item,value,name,this,tag,set,item,label,label,int,result,this,tag,do,start,tag,assert,equals,tag,result,string,output,get,output,output,doc,output,doc,saxreader,reader,new,saxreader,document,document,reader,read,new,string,reader,output,element,span,element1,element,document,get,root,element,elements,get,0,element,checkbox,element1,element,span,element1,elements,get,0,assert,equals,input,checkbox,element1,get,name,assert,equals,checkbox,checkbox,element1,attribute,type,get,value,assert,equals,some,set,checkbox,element1,attribute,name,get,value,assert,not,null,should,be,checked,checkbox,element1,attribute,checked,assert,equals,checked,checkbox,element1,attribute,checked,get,value,assert,equals,pet1,checkbox,element1,attribute,value,get,value,assert,equals,pet1,span,element1,get,string,value,element,span,element2,element,document,get,root,element,elements,get,1,element,checkbox,element2,element,span,element2,elements,get,0,assert,equals,input,checkbox,element2,get,name,assert,equals,checkbox,checkbox,element2,attribute,type,get,value,assert,equals,some,set,checkbox,element2,attribute,name,get,value,assert,not,null,should,be,checked,checkbox,element2,attribute,checked,assert,equals,checked,checkbox,element2,attribute,checked,get,value,assert,equals,pet2,checkbox,element2,attribute,value,get,value,assert,equals,pet2,span,element2,get,string,value,element,span,element3,element,document,get,root,element,elements,get,2,element,checkbox,element3,element,span,element3,elements,get,0,assert,equals,input,checkbox,element3,get,name,assert,equals,checkbox,checkbox,element3,attribute,type,get,value,assert,equals,some,set,checkbox,element3,attribute,name,get,value,assert,null,not,checked,checkbox,element3,attribute,checked,assert,equals,pet3,checkbox,element3,attribute,value,get,value,assert,equals,pet3,span,element3,get,string,value
CheckboxesTagTests -> public void testCollectionOfItemPets() throws Exception;1362408075;Test case where items toString() doesn't fit the item ID;public void testCollectionOfItemPets() throws Exception {_		this.tag.setPath("someSet")__		List allPets = new ArrayList()__		allPets.add(new ItemPet("PET1"))__		allPets.add(new ItemPet("PET2"))__		allPets.add(new ItemPet("PET3"))__		this.tag.setItems(allPets)__		this.tag.setItemValue("name")__		this.tag.setItemLabel("label")___		int result = this.tag.doStartTag()__		assertEquals(Tag.SKIP_BODY, result)___		String output = getOutput()___		_		output = "<doc>" + output + "</doc>"___		SAXReader reader = new SAXReader()__		Document document = reader.read(new StringReader(output))__		Element spanElement1 = (Element) document.getRootElement().elements().get(0)__		Element checkboxElement1 = (Element) spanElement1.elements().get(0)__		assertEquals("input", checkboxElement1.getName())__		assertEquals("checkbox", checkboxElement1.attribute("type").getValue())__		assertEquals("someSet", checkboxElement1.attribute("name").getValue())__		assertNotNull("should be checked", checkboxElement1.attribute("checked"))__		assertEquals("checked", checkboxElement1.attribute("checked").getValue())__		assertEquals("PET1", checkboxElement1.attribute("value").getValue())__		assertEquals("PET1", spanElement1.getStringValue())__		Element spanElement2 = (Element) document.getRootElement().elements().get(1)__		Element checkboxElement2 = (Element) spanElement2.elements().get(0)__		assertEquals("input", checkboxElement2.getName())__		assertEquals("checkbox", checkboxElement2.attribute("type").getValue())__		assertEquals("someSet", checkboxElement2.attribute("name").getValue())__		assertNotNull("should be checked", checkboxElement2.attribute("checked"))__		assertEquals("checked", checkboxElement2.attribute("checked").getValue())__		assertEquals("PET2", checkboxElement2.attribute("value").getValue())__		assertEquals("PET2", spanElement2.getStringValue())__		Element spanElement3 = (Element) document.getRootElement().elements().get(2)__		Element checkboxElement3 = (Element) spanElement3.elements().get(0)__		assertEquals("input", checkboxElement3.getName())__		assertEquals("checkbox", checkboxElement3.attribute("type").getValue())__		assertEquals("someSet", checkboxElement3.attribute("name").getValue())__		assertNull("not checked", checkboxElement3.attribute("checked"))__		assertEquals("PET3", checkboxElement3.attribute("value").getValue())__		assertEquals("PET3", spanElement3.getStringValue())__	};test,case,where,items,to,string,doesn,t,fit,the,item,id;public,void,test,collection,of,item,pets,throws,exception,this,tag,set,path,some,set,list,all,pets,new,array,list,all,pets,add,new,item,pet,pet1,all,pets,add,new,item,pet,pet2,all,pets,add,new,item,pet,pet3,this,tag,set,items,all,pets,this,tag,set,item,value,name,this,tag,set,item,label,label,int,result,this,tag,do,start,tag,assert,equals,tag,result,string,output,get,output,output,doc,output,doc,saxreader,reader,new,saxreader,document,document,reader,read,new,string,reader,output,element,span,element1,element,document,get,root,element,elements,get,0,element,checkbox,element1,element,span,element1,elements,get,0,assert,equals,input,checkbox,element1,get,name,assert,equals,checkbox,checkbox,element1,attribute,type,get,value,assert,equals,some,set,checkbox,element1,attribute,name,get,value,assert,not,null,should,be,checked,checkbox,element1,attribute,checked,assert,equals,checked,checkbox,element1,attribute,checked,get,value,assert,equals,pet1,checkbox,element1,attribute,value,get,value,assert,equals,pet1,span,element1,get,string,value,element,span,element2,element,document,get,root,element,elements,get,1,element,checkbox,element2,element,span,element2,elements,get,0,assert,equals,input,checkbox,element2,get,name,assert,equals,checkbox,checkbox,element2,attribute,type,get,value,assert,equals,some,set,checkbox,element2,attribute,name,get,value,assert,not,null,should,be,checked,checkbox,element2,attribute,checked,assert,equals,checked,checkbox,element2,attribute,checked,get,value,assert,equals,pet2,checkbox,element2,attribute,value,get,value,assert,equals,pet2,span,element2,get,string,value,element,span,element3,element,document,get,root,element,elements,get,2,element,checkbox,element3,element,span,element3,elements,get,0,assert,equals,input,checkbox,element3,get,name,assert,equals,checkbox,checkbox,element3,attribute,type,get,value,assert,equals,some,set,checkbox,element3,attribute,name,get,value,assert,null,not,checked,checkbox,element3,attribute,checked,assert,equals,pet3,checkbox,element3,attribute,value,get,value,assert,equals,pet3,span,element3,get,string,value
CheckboxesTagTests -> public void testCollectionOfItemPets() throws Exception;1363707046;Test case where items toString() doesn't fit the item ID;public void testCollectionOfItemPets() throws Exception {_		this.tag.setPath("someSet")__		List allPets = new ArrayList()__		allPets.add(new ItemPet("PET1"))__		allPets.add(new ItemPet("PET2"))__		allPets.add(new ItemPet("PET3"))__		this.tag.setItems(allPets)__		this.tag.setItemValue("name")__		this.tag.setItemLabel("label")___		int result = this.tag.doStartTag()__		assertEquals(Tag.SKIP_BODY, result)___		String output = getOutput()___		_		output = "<doc>" + output + "</doc>"___		SAXReader reader = new SAXReader()__		Document document = reader.read(new StringReader(output))__		Element spanElement1 = (Element) document.getRootElement().elements().get(0)__		Element checkboxElement1 = (Element) spanElement1.elements().get(0)__		assertEquals("input", checkboxElement1.getName())__		assertEquals("checkbox", checkboxElement1.attribute("type").getValue())__		assertEquals("someSet", checkboxElement1.attribute("name").getValue())__		assertNotNull("should be checked", checkboxElement1.attribute("checked"))__		assertEquals("checked", checkboxElement1.attribute("checked").getValue())__		assertEquals("PET1", checkboxElement1.attribute("value").getValue())__		assertEquals("PET1", spanElement1.getStringValue())__		Element spanElement2 = (Element) document.getRootElement().elements().get(1)__		Element checkboxElement2 = (Element) spanElement2.elements().get(0)__		assertEquals("input", checkboxElement2.getName())__		assertEquals("checkbox", checkboxElement2.attribute("type").getValue())__		assertEquals("someSet", checkboxElement2.attribute("name").getValue())__		assertNotNull("should be checked", checkboxElement2.attribute("checked"))__		assertEquals("checked", checkboxElement2.attribute("checked").getValue())__		assertEquals("PET2", checkboxElement2.attribute("value").getValue())__		assertEquals("PET2", spanElement2.getStringValue())__		Element spanElement3 = (Element) document.getRootElement().elements().get(2)__		Element checkboxElement3 = (Element) spanElement3.elements().get(0)__		assertEquals("input", checkboxElement3.getName())__		assertEquals("checkbox", checkboxElement3.attribute("type").getValue())__		assertEquals("someSet", checkboxElement3.attribute("name").getValue())__		assertNull("not checked", checkboxElement3.attribute("checked"))__		assertEquals("PET3", checkboxElement3.attribute("value").getValue())__		assertEquals("PET3", spanElement3.getStringValue())__	};test,case,where,items,to,string,doesn,t,fit,the,item,id;public,void,test,collection,of,item,pets,throws,exception,this,tag,set,path,some,set,list,all,pets,new,array,list,all,pets,add,new,item,pet,pet1,all,pets,add,new,item,pet,pet2,all,pets,add,new,item,pet,pet3,this,tag,set,items,all,pets,this,tag,set,item,value,name,this,tag,set,item,label,label,int,result,this,tag,do,start,tag,assert,equals,tag,result,string,output,get,output,output,doc,output,doc,saxreader,reader,new,saxreader,document,document,reader,read,new,string,reader,output,element,span,element1,element,document,get,root,element,elements,get,0,element,checkbox,element1,element,span,element1,elements,get,0,assert,equals,input,checkbox,element1,get,name,assert,equals,checkbox,checkbox,element1,attribute,type,get,value,assert,equals,some,set,checkbox,element1,attribute,name,get,value,assert,not,null,should,be,checked,checkbox,element1,attribute,checked,assert,equals,checked,checkbox,element1,attribute,checked,get,value,assert,equals,pet1,checkbox,element1,attribute,value,get,value,assert,equals,pet1,span,element1,get,string,value,element,span,element2,element,document,get,root,element,elements,get,1,element,checkbox,element2,element,span,element2,elements,get,0,assert,equals,input,checkbox,element2,get,name,assert,equals,checkbox,checkbox,element2,attribute,type,get,value,assert,equals,some,set,checkbox,element2,attribute,name,get,value,assert,not,null,should,be,checked,checkbox,element2,attribute,checked,assert,equals,checked,checkbox,element2,attribute,checked,get,value,assert,equals,pet2,checkbox,element2,attribute,value,get,value,assert,equals,pet2,span,element2,get,string,value,element,span,element3,element,document,get,root,element,elements,get,2,element,checkbox,element3,element,span,element3,elements,get,0,assert,equals,input,checkbox,element3,get,name,assert,equals,checkbox,checkbox,element3,attribute,type,get,value,assert,equals,some,set,checkbox,element3,attribute,name,get,value,assert,null,not,checked,checkbox,element3,attribute,checked,assert,equals,pet3,checkbox,element3,attribute,value,get,value,assert,equals,pet3,span,element3,get,string,value
CheckboxesTagTests -> public void testCollectionOfItemPets() throws Exception;1413848647;Test case where items toString() doesn't fit the item ID;public void testCollectionOfItemPets() throws Exception {_		this.tag.setPath("someSet")__		List allPets = new ArrayList()__		allPets.add(new ItemPet("PET1"))__		allPets.add(new ItemPet("PET2"))__		allPets.add(new ItemPet("PET3"))__		this.tag.setItems(allPets)__		this.tag.setItemValue("name")__		this.tag.setItemLabel("label")___		int result = this.tag.doStartTag()__		assertEquals(Tag.SKIP_BODY, result)___		String output = getOutput()___		_		output = "<doc>" + output + "</doc>"___		SAXReader reader = new SAXReader()__		Document document = reader.read(new StringReader(output))__		Element spanElement1 = (Element) document.getRootElement().elements().get(0)__		Element checkboxElement1 = (Element) spanElement1.elements().get(0)__		assertEquals("input", checkboxElement1.getName())__		assertEquals("checkbox", checkboxElement1.attribute("type").getValue())__		assertEquals("someSet", checkboxElement1.attribute("name").getValue())__		assertNotNull("should be checked", checkboxElement1.attribute("checked"))__		assertEquals("checked", checkboxElement1.attribute("checked").getValue())__		assertEquals("PET1", checkboxElement1.attribute("value").getValue())__		assertEquals("PET1", spanElement1.getStringValue())__		Element spanElement2 = (Element) document.getRootElement().elements().get(1)__		Element checkboxElement2 = (Element) spanElement2.elements().get(0)__		assertEquals("input", checkboxElement2.getName())__		assertEquals("checkbox", checkboxElement2.attribute("type").getValue())__		assertEquals("someSet", checkboxElement2.attribute("name").getValue())__		assertNotNull("should be checked", checkboxElement2.attribute("checked"))__		assertEquals("checked", checkboxElement2.attribute("checked").getValue())__		assertEquals("PET2", checkboxElement2.attribute("value").getValue())__		assertEquals("PET2", spanElement2.getStringValue())__		Element spanElement3 = (Element) document.getRootElement().elements().get(2)__		Element checkboxElement3 = (Element) spanElement3.elements().get(0)__		assertEquals("input", checkboxElement3.getName())__		assertEquals("checkbox", checkboxElement3.attribute("type").getValue())__		assertEquals("someSet", checkboxElement3.attribute("name").getValue())__		assertNull("not checked", checkboxElement3.attribute("checked"))__		assertEquals("PET3", checkboxElement3.attribute("value").getValue())__		assertEquals("PET3", spanElement3.getStringValue())__	};test,case,where,items,to,string,doesn,t,fit,the,item,id;public,void,test,collection,of,item,pets,throws,exception,this,tag,set,path,some,set,list,all,pets,new,array,list,all,pets,add,new,item,pet,pet1,all,pets,add,new,item,pet,pet2,all,pets,add,new,item,pet,pet3,this,tag,set,items,all,pets,this,tag,set,item,value,name,this,tag,set,item,label,label,int,result,this,tag,do,start,tag,assert,equals,tag,result,string,output,get,output,output,doc,output,doc,saxreader,reader,new,saxreader,document,document,reader,read,new,string,reader,output,element,span,element1,element,document,get,root,element,elements,get,0,element,checkbox,element1,element,span,element1,elements,get,0,assert,equals,input,checkbox,element1,get,name,assert,equals,checkbox,checkbox,element1,attribute,type,get,value,assert,equals,some,set,checkbox,element1,attribute,name,get,value,assert,not,null,should,be,checked,checkbox,element1,attribute,checked,assert,equals,checked,checkbox,element1,attribute,checked,get,value,assert,equals,pet1,checkbox,element1,attribute,value,get,value,assert,equals,pet1,span,element1,get,string,value,element,span,element2,element,document,get,root,element,elements,get,1,element,checkbox,element2,element,span,element2,elements,get,0,assert,equals,input,checkbox,element2,get,name,assert,equals,checkbox,checkbox,element2,attribute,type,get,value,assert,equals,some,set,checkbox,element2,attribute,name,get,value,assert,not,null,should,be,checked,checkbox,element2,attribute,checked,assert,equals,checked,checkbox,element2,attribute,checked,get,value,assert,equals,pet2,checkbox,element2,attribute,value,get,value,assert,equals,pet2,span,element2,get,string,value,element,span,element3,element,document,get,root,element,elements,get,2,element,checkbox,element3,element,span,element3,elements,get,0,assert,equals,input,checkbox,element3,get,name,assert,equals,checkbox,checkbox,element3,attribute,type,get,value,assert,equals,some,set,checkbox,element3,attribute,name,get,value,assert,null,not,checked,checkbox,element3,attribute,checked,assert,equals,pet3,checkbox,element3,attribute,value,get,value,assert,equals,pet3,span,element3,get,string,value
