commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;public void setMessageMap(Map<String, String> messageMap) {     this.messageMap = messageMap. }
false;public;1;3;;public void setThemeMessageMap(Map<String, String> themeMessageMap) {     this.themeMessageMap = themeMessageMap. }
true;public;1;3;/**  * @see org.springframework.web.servlet.support.RequestContext#getMessage(String)  */ ;/**  * @see org.springframework.web.servlet.support.RequestContext#getMessage(String)  */ public String getMessage(String code) {     return this.messageMap.get(code). }
true;public;2;4;/**  * @see org.springframework.web.servlet.support.RequestContext#getMessage(String, String)  */ ;/**  * @see org.springframework.web.servlet.support.RequestContext#getMessage(String, String)  */ public String getMessage(String code, String defaultMsg) {     String msg = this.messageMap.get(code).     return (msg != null ? msg : defaultMsg). }
true;public;2;3;/**  * @see org.springframework.web.servlet.support.RequestContext#getMessage(String, List)  */ ;/**  * @see org.springframework.web.servlet.support.RequestContext#getMessage(String, List)  */ public String getMessage(String code, List<?> args) {     return this.messageMap.get(code) + args. }
true;public;3;4;/**  * @see org.springframework.web.servlet.support.RequestContext#getMessage(String, List, String)  */ ;/**  * @see org.springframework.web.servlet.support.RequestContext#getMessage(String, List, String)  */ public String getMessage(String code, List<?> args, String defaultMsg) {     String msg = this.messageMap.get(code).     return (msg != null ? msg + args : defaultMsg). }
true;public;1;3;/**  * @see org.springframework.web.servlet.support.RequestContext#getThemeMessage(String)  */ ;/**  * @see org.springframework.web.servlet.support.RequestContext#getThemeMessage(String)  */ public String getThemeMessage(String code) {     return this.themeMessageMap.get(code). }
true;public;2;4;/**  * @see org.springframework.web.servlet.support.RequestContext#getThemeMessage(String, String)  */ ;/**  * @see org.springframework.web.servlet.support.RequestContext#getThemeMessage(String, String)  */ public String getThemeMessage(String code, String defaultMsg) {     String msg = this.themeMessageMap.get(code).     return (msg != null ? msg : defaultMsg). }
true;public;2;3;/**  * @see org.springframework.web.servlet.support.RequestContext#getThemeMessage(String, List)  */ ;/**  * @see org.springframework.web.servlet.support.RequestContext#getThemeMessage(String, List)  */ public String getThemeMessage(String code, List<?> args) {     return this.themeMessageMap.get(code) + args. }
true;public;3;4;/**  * @see org.springframework.web.servlet.support.RequestContext#getThemeMessage(String, List, String)  */ ;/**  * @see org.springframework.web.servlet.support.RequestContext#getThemeMessage(String, List, String)  */ public String getThemeMessage(String code, List<?> args, String defaultMsg) {     String msg = this.themeMessageMap.get(code).     return (msg != null ? msg + args : defaultMsg). }
false;public;1;3;;public void setContextPath(String contextPath) {     this.contextPath = contextPath. }
true;public;0;3;/**  * @see org.springframework.web.servlet.support.RequestContext#getContextPath()  */ ;/**  * @see org.springframework.web.servlet.support.RequestContext#getContextPath()  */ public String getContextPath() {     return this.contextPath. }
true;public;1;3;/**  * @see org.springframework.web.servlet.support.RequestContext#getContextUrl(String)  */ ;/**  * @see org.springframework.web.servlet.support.RequestContext#getContextUrl(String)  */ public String getContextUrl(String relativeUrl) {     return getContextPath() + relativeUrl. }
true;public;2;4;/**  * @see org.springframework.web.servlet.support.RequestContext#getContextUrl(String, Map)  */ ;/**  * @see org.springframework.web.servlet.support.RequestContext#getContextUrl(String, Map)  */ public String getContextUrl(String relativeUrl, Map<String, String> params) {     UriTemplate template = new UriTemplate(relativeUrl).     return getContextPath() + template.expand(params).toASCIIString(). }
true;public;1;3;/**  * @see org.springframework.web.servlet.support.RequestContext#getBindStatus(String)  */ ;/**  * @see org.springframework.web.servlet.support.RequestContext#getBindStatus(String)  */ public BindStatus getBindStatus(String path) throws IllegalStateException {     return new BindStatus(new RequestContext(this.request), path, false). }
true;public;2;3;/**  * @see org.springframework.web.servlet.support.RequestContext#getBindStatus(String, boolean)  */ ;/**  * @see org.springframework.web.servlet.support.RequestContext#getBindStatus(String, boolean)  */ public BindStatus getBindStatus(String path, boolean htmlEscape) throws IllegalStateException {     return new BindStatus(new RequestContext(this.request), path, true). }
