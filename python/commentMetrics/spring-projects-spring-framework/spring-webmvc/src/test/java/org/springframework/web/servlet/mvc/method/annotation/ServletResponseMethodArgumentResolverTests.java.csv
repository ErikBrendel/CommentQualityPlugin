commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Before public void setup() throws Exception {     resolver = new ServletResponseMethodArgumentResolver().     mavContainer = new ModelAndViewContainer().     servletResponse = new MockHttpServletResponse().     webRequest = new ServletWebRequest(new MockHttpServletRequest(), servletResponse).     method = getClass().getMethod("supportedParams", ServletResponse.class, OutputStream.class, Writer.class). }
false;public;0;9;;@Test public void servletResponse() throws Exception {     MethodParameter servletResponseParameter = new MethodParameter(method, 0).     assertTrue("ServletResponse not supported", resolver.supportsParameter(servletResponseParameter)).     Object result = resolver.resolveArgument(servletResponseParameter, mavContainer, webRequest, null).     assertSame("Invalid result", servletResponse, result).     assertTrue(mavContainer.isRequestHandled()). }
false;public;0;8;;// SPR-8983 @Test public void servletResponseNoMavContainer() throws Exception {     MethodParameter servletResponseParameter = new MethodParameter(method, 0).     assertTrue("ServletResponse not supported", resolver.supportsParameter(servletResponseParameter)).     Object result = resolver.resolveArgument(servletResponseParameter, null, webRequest, null).     assertSame("Invalid result", servletResponse, result). }
false;public;0;9;;@Test public void outputStream() throws Exception {     MethodParameter outputStreamParameter = new MethodParameter(method, 1).     assertTrue("OutputStream not supported", resolver.supportsParameter(outputStreamParameter)).     Object result = resolver.resolveArgument(outputStreamParameter, mavContainer, webRequest, null).     assertSame("Invalid result", servletResponse.getOutputStream(), result).     assertTrue(mavContainer.isRequestHandled()). }
false;public;0;9;;@Test public void writer() throws Exception {     MethodParameter writerParameter = new MethodParameter(method, 2).     assertTrue("Writer not supported", resolver.supportsParameter(writerParameter)).     Object result = resolver.resolveArgument(writerParameter, mavContainer, webRequest, null).     assertSame("Invalid result", servletResponse.getWriter(), result).     assertTrue(mavContainer.isRequestHandled()). }
false;public;3;3;;@SuppressWarnings("unused") public void supportedParams(ServletResponse p0, OutputStream p1, Writer p2) { }
