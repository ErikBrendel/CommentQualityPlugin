commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public Map<String, EnumSet<DispatcherType>> getMappings() {     return this.mappings. }
false;public;0;3;;public boolean isAsyncSupported() {     return this.asyncSupported. }
false;public;1;4;;@Override public void setAsyncSupported(boolean isAsyncSupported) {     this.asyncSupported = isAsyncSupported. }
false;public;3;8;;@Override public void addMappingForServletNames(EnumSet<DispatcherType> dispatcherTypes, boolean isMatchAfter, String... servletNames) {     for (String servletName : servletNames) {         this.mappings.put(servletName, dispatcherTypes).     } }
false;public;0;4;;// Not implemented @Override public String getName() {     return null. }
false;public;0;4;;@Override public Collection<String> getServletNameMappings() {     return null. }
false;public;3;4;;@Override public void addMappingForUrlPatterns(EnumSet<DispatcherType> dispatcherTypes, boolean isMatchAfter, String... urlPatterns) { }
false;public;0;4;;@Override public Collection<String> getUrlPatternMappings() {     return null. }
false;public;0;4;;@Override public String getClassName() {     return null. }
false;public;2;4;;@Override public boolean setInitParameter(String name, String value) {     return false. }
false;public;1;4;;@Override public String getInitParameter(String name) {     return null. }
false;public;1;4;;@Override public Set<String> setInitParameters(Map<String, String> initParameters) {     return null. }
false;public;0;4;;@Override public Map<String, String> getInitParameters() {     return null. }
