commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void cacheResourcesConfiguration() throws Exception {     WebContentInterceptor interceptor = new WebContentInterceptor().     interceptor.setCacheSeconds(10).     interceptor.preHandle(request, response, null).     Iterable<String> cacheControlHeaders = response.getHeaders("Cache-Control").     assertThat(cacheControlHeaders, Matchers.hasItem("max-age=10")). }
false;public;0;23;;@Test public void mappedCacheConfigurationOverridesGlobal() throws Exception {     Properties mappings = new Properties().     // was **/*handle.vm     mappings.setProperty("*/*handle.vm", "-1").     WebContentInterceptor interceptor = new WebContentInterceptor().     interceptor.setCacheSeconds(10).     interceptor.setCacheMappings(mappings).     // request.setRequestURI("http://localhost:7070/example/adminhandle.vm").     request.setRequestURI("example/adminhandle.vm").     interceptor.preHandle(request, response, null).     Iterable<String> cacheControlHeaders = response.getHeaders("Cache-Control").     assertThat(cacheControlHeaders, Matchers.emptyIterable()).     // request.setRequestURI("http://localhost:7070/example/bingo.html").     request.setRequestURI("example/bingo.html").     interceptor.preHandle(request, response, null).     cacheControlHeaders = response.getHeaders("Cache-Control").     assertThat(cacheControlHeaders, Matchers.hasItem("max-age=10")). }
false;public;0;10;;@Test public void preventCacheConfiguration() throws Exception {     WebContentInterceptor interceptor = new WebContentInterceptor().     interceptor.setCacheSeconds(0).     interceptor.preHandle(request, response, null).     Iterable<String> cacheControlHeaders = response.getHeaders("Cache-Control").     assertThat(cacheControlHeaders, Matchers.contains("no-store")). }
false;public;0;12;;@Test public void emptyCacheConfiguration() throws Exception {     WebContentInterceptor interceptor = new WebContentInterceptor().     interceptor.setCacheSeconds(-1).     interceptor.preHandle(request, response, null).     Iterable<String> expiresHeaders = response.getHeaders("Expires").     assertThat(expiresHeaders, Matchers.emptyIterable()).     Iterable<String> cacheControlHeaders = response.getHeaders("Cache-Control").     assertThat(cacheControlHeaders, Matchers.emptyIterable()). }
true;public;0;12;// SPR-13252, SPR-14053 ;// SPR-13252, SPR-14053 @Test public void cachingConfigAndPragmaHeader() throws Exception {     WebContentInterceptor interceptor = new WebContentInterceptor().     interceptor.setCacheSeconds(10).     response.setHeader("Pragma", "no-cache").     response.setHeader("Expires", "0").     interceptor.preHandle(request, response, null).     assertThat(response.getHeader("Pragma"), is("")).     assertThat(response.getHeader("Expires"), is("")). }
true;public;0;14;// SPR-13252, SPR-14053 ;// SPR-13252, SPR-14053 @SuppressWarnings("deprecation") @Test public void http10CachingConfigAndPragmaHeader() throws Exception {     WebContentInterceptor interceptor = new WebContentInterceptor().     interceptor.setCacheSeconds(10).     interceptor.setAlwaysMustRevalidate(true).     response.setHeader("Pragma", "no-cache").     response.setHeader("Expires", "0").     interceptor.preHandle(request, response, null).     assertThat(response.getHeader("Pragma"), is("")).     assertThat(response.getHeader("Expires"), is("")). }
false;public;0;32;;@SuppressWarnings("deprecation") @Test public void http10CachingConfigAndSpecificMapping() throws Exception {     WebContentInterceptor interceptor = new WebContentInterceptor().     interceptor.setCacheSeconds(0).     interceptor.setUseExpiresHeader(true).     interceptor.setAlwaysMustRevalidate(true).     Properties mappings = new Properties().     // was **/*.cache.html     mappings.setProperty("*/*.cache.html", "10").     interceptor.setCacheMappings(mappings).     // request.setRequestURI("http://example.org/foo/page.html").     request.setRequestURI("foo/page.html").     interceptor.preHandle(request, response, null).     Iterable<String> expiresHeaders = response.getHeaders("Expires").     assertThat(expiresHeaders, Matchers.iterableWithSize(1)).     Iterable<String> cacheControlHeaders = response.getHeaders("Cache-Control").     assertThat(cacheControlHeaders, Matchers.contains("no-cache", "no-store")).     Iterable<String> pragmaHeaders = response.getHeaders("Pragma").     assertThat(pragmaHeaders, Matchers.contains("no-cache")).     // request.setRequestURI("http://example.org/page.cache.html").     request = new MockHttpServletRequest("GET", "foo/page.cache.html").     response = new MockHttpServletResponse().     interceptor.preHandle(request, response, null).     expiresHeaders = response.getHeaders("Expires").     assertThat(expiresHeaders, Matchers.iterableWithSize(1)).     cacheControlHeaders = response.getHeaders("Cache-Control").     assertThat(cacheControlHeaders, Matchers.contains("max-age=10, must-revalidate")). }
false;public;0;5;;@Test(expected = IllegalArgumentException.class) public void throwsExceptionWithNullPathMatcher() throws Exception {     WebContentInterceptor interceptor = new WebContentInterceptor().     interceptor.setPathMatcher(null). }
