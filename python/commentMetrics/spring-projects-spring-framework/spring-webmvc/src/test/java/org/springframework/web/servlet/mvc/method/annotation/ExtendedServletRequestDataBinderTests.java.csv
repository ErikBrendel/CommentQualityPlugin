commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Before public void setup() {     this.request = new MockHttpServletRequest(). }
false;public;0;14;;@Test public void createBinder() throws Exception {     Map<String, String> uriTemplateVars = new HashMap<>().     uriTemplateVars.put("name", "nameValue").     uriTemplateVars.put("age", "25").     request.setAttribute(HandlerMapping.URI_TEMPLATE_VARIABLES_ATTRIBUTE, uriTemplateVars).     TestBean target = new TestBean().     WebDataBinder binder = new ExtendedServletRequestDataBinder(target, "").     ((ServletRequestDataBinder) binder).bind(request).     assertEquals("nameValue", target.getName()).     assertEquals(25, target.getAge()). }
false;public;0;16;;@Test public void uriTemplateVarAndRequestParam() throws Exception {     request.addParameter("age", "35").     Map<String, String> uriTemplateVars = new HashMap<>().     uriTemplateVars.put("name", "nameValue").     uriTemplateVars.put("age", "25").     request.setAttribute(HandlerMapping.URI_TEMPLATE_VARIABLES_ATTRIBUTE, uriTemplateVars).     TestBean target = new TestBean().     WebDataBinder binder = new ExtendedServletRequestDataBinder(target, "").     ((ServletRequestDataBinder) binder).bind(request).     assertEquals("nameValue", target.getName()).     assertEquals(35, target.getAge()). }
false;public;0;9;;@Test public void noUriTemplateVars() throws Exception {     TestBean target = new TestBean().     WebDataBinder binder = new ExtendedServletRequestDataBinder(target, "").     ((ServletRequestDataBinder) binder).bind(request).     assertEquals(null, target.getName()).     assertEquals(0, target.getAge()). }
