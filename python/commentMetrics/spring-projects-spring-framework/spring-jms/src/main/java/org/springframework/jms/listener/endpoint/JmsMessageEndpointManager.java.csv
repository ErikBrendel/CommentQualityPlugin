# id;timestamp;commentText;codeText;commentWords;codeWords
JmsMessageEndpointManager -> public void setActivationSpecFactory(@Nullable JmsActivationSpecFactory activationSpecFactory);1496837955;Set the factory for concrete JCA 1.5 ActivationSpec objects,_creating JCA ActivationSpecs based on_{@link #setActivationSpecConfig JmsActivationSpecConfig} objects._<p>This factory is dependent on the concrete JMS provider, e.g. on ActiveMQ._The default implementation simply guesses the ActivationSpec class name_from the provider's class name (e.g. "ActiveMQResourceAdapter" ->_"ActiveMQActivationSpec" in the same package), and populates the_ActivationSpec properties as suggested by the JCA 1.5 specification_(plus a couple of autodetected vendor-specific properties)._@see DefaultJmsActivationSpecFactory;public void setActivationSpecFactory(@Nullable JmsActivationSpecFactory activationSpecFactory) {_		this.activationSpecFactory =_				(activationSpecFactory != null ? activationSpecFactory : new DefaultJmsActivationSpecFactory())__	};set,the,factory,for,concrete,jca,1,5,activation,spec,objects,creating,jca,activation,specs,based,on,link,set,activation,spec,config,jms,activation,spec,config,objects,p,this,factory,is,dependent,on,the,concrete,jms,provider,e,g,on,active,mq,the,default,implementation,simply,guesses,the,activation,spec,class,name,from,the,provider,s,class,name,e,g,active,mqresource,adapter,active,mqactivation,spec,in,the,same,package,and,populates,the,activation,spec,properties,as,suggested,by,the,jca,1,5,specification,plus,a,couple,of,autodetected,vendor,specific,properties,see,default,jms,activation,spec,factory;public,void,set,activation,spec,factory,nullable,jms,activation,spec,factory,activation,spec,factory,this,activation,spec,factory,activation,spec,factory,null,activation,spec,factory,new,default,jms,activation,spec,factory
JmsMessageEndpointManager -> public void setActivationSpecFactory(@Nullable JmsActivationSpecFactory activationSpecFactory);1498780456;Set the factory for concrete JCA 1.5 ActivationSpec objects,_creating JCA ActivationSpecs based on_{@link #setActivationSpecConfig JmsActivationSpecConfig} objects._<p>This factory is dependent on the concrete JMS provider, e.g. on ActiveMQ._The default implementation simply guesses the ActivationSpec class name_from the provider's class name (e.g. "ActiveMQResourceAdapter" ->_"ActiveMQActivationSpec" in the same package), and populates the_ActivationSpec properties as suggested by the JCA 1.5 specification_(plus a couple of autodetected vendor-specific properties)._@see DefaultJmsActivationSpecFactory;public void setActivationSpecFactory(@Nullable JmsActivationSpecFactory activationSpecFactory) {_		this.activationSpecFactory =_				(activationSpecFactory != null ? activationSpecFactory : new DefaultJmsActivationSpecFactory())__	};set,the,factory,for,concrete,jca,1,5,activation,spec,objects,creating,jca,activation,specs,based,on,link,set,activation,spec,config,jms,activation,spec,config,objects,p,this,factory,is,dependent,on,the,concrete,jms,provider,e,g,on,active,mq,the,default,implementation,simply,guesses,the,activation,spec,class,name,from,the,provider,s,class,name,e,g,active,mqresource,adapter,active,mqactivation,spec,in,the,same,package,and,populates,the,activation,spec,properties,as,suggested,by,the,jca,1,5,specification,plus,a,couple,of,autodetected,vendor,specific,properties,see,default,jms,activation,spec,factory;public,void,set,activation,spec,factory,nullable,jms,activation,spec,factory,activation,spec,factory,this,activation,spec,factory,activation,spec,factory,null,activation,spec,factory,new,default,jms,activation,spec,factory
JmsMessageEndpointManager -> public void setActivationSpecFactory(@Nullable JmsActivationSpecFactory activationSpecFactory);1500448076;Set the factory for concrete JCA 1.5 ActivationSpec objects,_creating JCA ActivationSpecs based on_{@link #setActivationSpecConfig JmsActivationSpecConfig} objects._<p>This factory is dependent on the concrete JMS provider, e.g. on ActiveMQ._The default implementation simply guesses the ActivationSpec class name_from the provider's class name (e.g. "ActiveMQResourceAdapter" ->_"ActiveMQActivationSpec" in the same package), and populates the_ActivationSpec properties as suggested by the JCA 1.5 specification_(plus a couple of autodetected vendor-specific properties)._@see DefaultJmsActivationSpecFactory;public void setActivationSpecFactory(@Nullable JmsActivationSpecFactory activationSpecFactory) {_		this.activationSpecFactory =_				(activationSpecFactory != null ? activationSpecFactory : new DefaultJmsActivationSpecFactory())__	};set,the,factory,for,concrete,jca,1,5,activation,spec,objects,creating,jca,activation,specs,based,on,link,set,activation,spec,config,jms,activation,spec,config,objects,p,this,factory,is,dependent,on,the,concrete,jms,provider,e,g,on,active,mq,the,default,implementation,simply,guesses,the,activation,spec,class,name,from,the,provider,s,class,name,e,g,active,mqresource,adapter,active,mqactivation,spec,in,the,same,package,and,populates,the,activation,spec,properties,as,suggested,by,the,jca,1,5,specification,plus,a,couple,of,autodetected,vendor,specific,properties,see,default,jms,activation,spec,factory;public,void,set,activation,spec,factory,nullable,jms,activation,spec,factory,activation,spec,factory,this,activation,spec,factory,activation,spec,factory,null,activation,spec,factory,new,default,jms,activation,spec,factory
JmsMessageEndpointManager -> public void setActivationSpecFactory(@Nullable JmsActivationSpecFactory activationSpecFactory);1502974979;Set the factory for concrete JCA 1.5 ActivationSpec objects,_creating JCA ActivationSpecs based on_{@link #setActivationSpecConfig JmsActivationSpecConfig} objects._<p>This factory is dependent on the concrete JMS provider, e.g. on ActiveMQ._The default implementation simply guesses the ActivationSpec class name_from the provider's class name (e.g. "ActiveMQResourceAdapter" ->_"ActiveMQActivationSpec" in the same package), and populates the_ActivationSpec properties as suggested by the JCA 1.5 specification_(plus a couple of autodetected vendor-specific properties)._@see DefaultJmsActivationSpecFactory;public void setActivationSpecFactory(@Nullable JmsActivationSpecFactory activationSpecFactory) {_		this.activationSpecFactory =_				(activationSpecFactory != null ? activationSpecFactory : new DefaultJmsActivationSpecFactory())__	};set,the,factory,for,concrete,jca,1,5,activation,spec,objects,creating,jca,activation,specs,based,on,link,set,activation,spec,config,jms,activation,spec,config,objects,p,this,factory,is,dependent,on,the,concrete,jms,provider,e,g,on,active,mq,the,default,implementation,simply,guesses,the,activation,spec,class,name,from,the,provider,s,class,name,e,g,active,mqresource,adapter,active,mqactivation,spec,in,the,same,package,and,populates,the,activation,spec,properties,as,suggested,by,the,jca,1,5,specification,plus,a,couple,of,autodetected,vendor,specific,properties,see,default,jms,activation,spec,factory;public,void,set,activation,spec,factory,nullable,jms,activation,spec,factory,activation,spec,factory,this,activation,spec,factory,activation,spec,factory,null,activation,spec,factory,new,default,jms,activation,spec,factory
JmsMessageEndpointManager -> public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory);1328020251;Set the factory for concrete JCA 1.5 ActivationSpec objects,_creating JCA ActivationSpecs based on_{@link #setActivationSpecConfig JmsActivationSpecConfig} objects._<p>This factory is dependent on the concrete JMS provider, e.g. on ActiveMQ._The default implementation simply guesses the ActivationSpec class name_from the provider's class name (e.g. "ActiveMQResourceAdapter" ->_"ActiveMQActivationSpec" in the same package), and populates the_ActivationSpec properties as suggested by the JCA 1.5 specification_(plus a couple of autodetected vendor-specific properties)._@see DefaultJmsActivationSpecFactory;public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory) {_		this.activationSpecFactory =_				(activationSpecFactory != null ? activationSpecFactory : new DefaultJmsActivationSpecFactory())__	};set,the,factory,for,concrete,jca,1,5,activation,spec,objects,creating,jca,activation,specs,based,on,link,set,activation,spec,config,jms,activation,spec,config,objects,p,this,factory,is,dependent,on,the,concrete,jms,provider,e,g,on,active,mq,the,default,implementation,simply,guesses,the,activation,spec,class,name,from,the,provider,s,class,name,e,g,active,mqresource,adapter,active,mqactivation,spec,in,the,same,package,and,populates,the,activation,spec,properties,as,suggested,by,the,jca,1,5,specification,plus,a,couple,of,autodetected,vendor,specific,properties,see,default,jms,activation,spec,factory;public,void,set,activation,spec,factory,jms,activation,spec,factory,activation,spec,factory,this,activation,spec,factory,activation,spec,factory,null,activation,spec,factory,new,default,jms,activation,spec,factory
JmsMessageEndpointManager -> public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory);1356735495;Set the factory for concrete JCA 1.5 ActivationSpec objects,_creating JCA ActivationSpecs based on_{@link #setActivationSpecConfig JmsActivationSpecConfig} objects._<p>This factory is dependent on the concrete JMS provider, e.g. on ActiveMQ._The default implementation simply guesses the ActivationSpec class name_from the provider's class name (e.g. "ActiveMQResourceAdapter" ->_"ActiveMQActivationSpec" in the same package), and populates the_ActivationSpec properties as suggested by the JCA 1.5 specification_(plus a couple of autodetected vendor-specific properties)._@see DefaultJmsActivationSpecFactory;public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory) {_		this.activationSpecFactory =_				(activationSpecFactory != null ? activationSpecFactory : new DefaultJmsActivationSpecFactory())__	};set,the,factory,for,concrete,jca,1,5,activation,spec,objects,creating,jca,activation,specs,based,on,link,set,activation,spec,config,jms,activation,spec,config,objects,p,this,factory,is,dependent,on,the,concrete,jms,provider,e,g,on,active,mq,the,default,implementation,simply,guesses,the,activation,spec,class,name,from,the,provider,s,class,name,e,g,active,mqresource,adapter,active,mqactivation,spec,in,the,same,package,and,populates,the,activation,spec,properties,as,suggested,by,the,jca,1,5,specification,plus,a,couple,of,autodetected,vendor,specific,properties,see,default,jms,activation,spec,factory;public,void,set,activation,spec,factory,jms,activation,spec,factory,activation,spec,factory,this,activation,spec,factory,activation,spec,factory,null,activation,spec,factory,new,default,jms,activation,spec,factory
JmsMessageEndpointManager -> public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory);1357119239;Set the factory for concrete JCA 1.5 ActivationSpec objects,_creating JCA ActivationSpecs based on_{@link #setActivationSpecConfig JmsActivationSpecConfig} objects._<p>This factory is dependent on the concrete JMS provider, e.g. on ActiveMQ._The default implementation simply guesses the ActivationSpec class name_from the provider's class name (e.g. "ActiveMQResourceAdapter" ->_"ActiveMQActivationSpec" in the same package), and populates the_ActivationSpec properties as suggested by the JCA 1.5 specification_(plus a couple of autodetected vendor-specific properties)._@see DefaultJmsActivationSpecFactory;public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory) {_		this.activationSpecFactory =_				(activationSpecFactory != null ? activationSpecFactory : new DefaultJmsActivationSpecFactory())__	};set,the,factory,for,concrete,jca,1,5,activation,spec,objects,creating,jca,activation,specs,based,on,link,set,activation,spec,config,jms,activation,spec,config,objects,p,this,factory,is,dependent,on,the,concrete,jms,provider,e,g,on,active,mq,the,default,implementation,simply,guesses,the,activation,spec,class,name,from,the,provider,s,class,name,e,g,active,mqresource,adapter,active,mqactivation,spec,in,the,same,package,and,populates,the,activation,spec,properties,as,suggested,by,the,jca,1,5,specification,plus,a,couple,of,autodetected,vendor,specific,properties,see,default,jms,activation,spec,factory;public,void,set,activation,spec,factory,jms,activation,spec,factory,activation,spec,factory,this,activation,spec,factory,activation,spec,factory,null,activation,spec,factory,new,default,jms,activation,spec,factory
JmsMessageEndpointManager -> public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory);1368482696;Set the factory for concrete JCA 1.5 ActivationSpec objects,_creating JCA ActivationSpecs based on_{@link #setActivationSpecConfig JmsActivationSpecConfig} objects._<p>This factory is dependent on the concrete JMS provider, e.g. on ActiveMQ._The default implementation simply guesses the ActivationSpec class name_from the provider's class name (e.g. "ActiveMQResourceAdapter" ->_"ActiveMQActivationSpec" in the same package), and populates the_ActivationSpec properties as suggested by the JCA 1.5 specification_(plus a couple of autodetected vendor-specific properties)._@see DefaultJmsActivationSpecFactory;public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory) {_		this.activationSpecFactory =_				(activationSpecFactory != null ? activationSpecFactory : new DefaultJmsActivationSpecFactory())__	};set,the,factory,for,concrete,jca,1,5,activation,spec,objects,creating,jca,activation,specs,based,on,link,set,activation,spec,config,jms,activation,spec,config,objects,p,this,factory,is,dependent,on,the,concrete,jms,provider,e,g,on,active,mq,the,default,implementation,simply,guesses,the,activation,spec,class,name,from,the,provider,s,class,name,e,g,active,mqresource,adapter,active,mqactivation,spec,in,the,same,package,and,populates,the,activation,spec,properties,as,suggested,by,the,jca,1,5,specification,plus,a,couple,of,autodetected,vendor,specific,properties,see,default,jms,activation,spec,factory;public,void,set,activation,spec,factory,jms,activation,spec,factory,activation,spec,factory,this,activation,spec,factory,activation,spec,factory,null,activation,spec,factory,new,default,jms,activation,spec,factory
JmsMessageEndpointManager -> public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory);1383603297;Set the factory for concrete JCA 1.5 ActivationSpec objects,_creating JCA ActivationSpecs based on_{@link #setActivationSpecConfig JmsActivationSpecConfig} objects._<p>This factory is dependent on the concrete JMS provider, e.g. on ActiveMQ._The default implementation simply guesses the ActivationSpec class name_from the provider's class name (e.g. "ActiveMQResourceAdapter" ->_"ActiveMQActivationSpec" in the same package), and populates the_ActivationSpec properties as suggested by the JCA 1.5 specification_(plus a couple of autodetected vendor-specific properties)._@see DefaultJmsActivationSpecFactory;public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory) {_		this.activationSpecFactory =_				(activationSpecFactory != null ? activationSpecFactory : new DefaultJmsActivationSpecFactory())__	};set,the,factory,for,concrete,jca,1,5,activation,spec,objects,creating,jca,activation,specs,based,on,link,set,activation,spec,config,jms,activation,spec,config,objects,p,this,factory,is,dependent,on,the,concrete,jms,provider,e,g,on,active,mq,the,default,implementation,simply,guesses,the,activation,spec,class,name,from,the,provider,s,class,name,e,g,active,mqresource,adapter,active,mqactivation,spec,in,the,same,package,and,populates,the,activation,spec,properties,as,suggested,by,the,jca,1,5,specification,plus,a,couple,of,autodetected,vendor,specific,properties,see,default,jms,activation,spec,factory;public,void,set,activation,spec,factory,jms,activation,spec,factory,activation,spec,factory,this,activation,spec,factory,activation,spec,factory,null,activation,spec,factory,new,default,jms,activation,spec,factory
JmsMessageEndpointManager -> public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory);1397718966;Set the factory for concrete JCA 1.5 ActivationSpec objects,_creating JCA ActivationSpecs based on_{@link #setActivationSpecConfig JmsActivationSpecConfig} objects._<p>This factory is dependent on the concrete JMS provider, e.g. on ActiveMQ._The default implementation simply guesses the ActivationSpec class name_from the provider's class name (e.g. "ActiveMQResourceAdapter" ->_"ActiveMQActivationSpec" in the same package), and populates the_ActivationSpec properties as suggested by the JCA 1.5 specification_(plus a couple of autodetected vendor-specific properties)._@see DefaultJmsActivationSpecFactory;public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory) {_		this.activationSpecFactory =_				(activationSpecFactory != null ? activationSpecFactory : new DefaultJmsActivationSpecFactory())__	};set,the,factory,for,concrete,jca,1,5,activation,spec,objects,creating,jca,activation,specs,based,on,link,set,activation,spec,config,jms,activation,spec,config,objects,p,this,factory,is,dependent,on,the,concrete,jms,provider,e,g,on,active,mq,the,default,implementation,simply,guesses,the,activation,spec,class,name,from,the,provider,s,class,name,e,g,active,mqresource,adapter,active,mqactivation,spec,in,the,same,package,and,populates,the,activation,spec,properties,as,suggested,by,the,jca,1,5,specification,plus,a,couple,of,autodetected,vendor,specific,properties,see,default,jms,activation,spec,factory;public,void,set,activation,spec,factory,jms,activation,spec,factory,activation,spec,factory,this,activation,spec,factory,activation,spec,factory,null,activation,spec,factory,new,default,jms,activation,spec,factory
JmsMessageEndpointManager -> public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory);1398347811;Set the factory for concrete JCA 1.5 ActivationSpec objects,_creating JCA ActivationSpecs based on_{@link #setActivationSpecConfig JmsActivationSpecConfig} objects._<p>This factory is dependent on the concrete JMS provider, e.g. on ActiveMQ._The default implementation simply guesses the ActivationSpec class name_from the provider's class name (e.g. "ActiveMQResourceAdapter" ->_"ActiveMQActivationSpec" in the same package), and populates the_ActivationSpec properties as suggested by the JCA 1.5 specification_(plus a couple of autodetected vendor-specific properties)._@see DefaultJmsActivationSpecFactory;public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory) {_		this.activationSpecFactory =_				(activationSpecFactory != null ? activationSpecFactory : new DefaultJmsActivationSpecFactory())__	};set,the,factory,for,concrete,jca,1,5,activation,spec,objects,creating,jca,activation,specs,based,on,link,set,activation,spec,config,jms,activation,spec,config,objects,p,this,factory,is,dependent,on,the,concrete,jms,provider,e,g,on,active,mq,the,default,implementation,simply,guesses,the,activation,spec,class,name,from,the,provider,s,class,name,e,g,active,mqresource,adapter,active,mqactivation,spec,in,the,same,package,and,populates,the,activation,spec,properties,as,suggested,by,the,jca,1,5,specification,plus,a,couple,of,autodetected,vendor,specific,properties,see,default,jms,activation,spec,factory;public,void,set,activation,spec,factory,jms,activation,spec,factory,activation,spec,factory,this,activation,spec,factory,activation,spec,factory,null,activation,spec,factory,new,default,jms,activation,spec,factory
JmsMessageEndpointManager -> public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory);1405696881;Set the factory for concrete JCA 1.5 ActivationSpec objects,_creating JCA ActivationSpecs based on_{@link #setActivationSpecConfig JmsActivationSpecConfig} objects._<p>This factory is dependent on the concrete JMS provider, e.g. on ActiveMQ._The default implementation simply guesses the ActivationSpec class name_from the provider's class name (e.g. "ActiveMQResourceAdapter" ->_"ActiveMQActivationSpec" in the same package), and populates the_ActivationSpec properties as suggested by the JCA 1.5 specification_(plus a couple of autodetected vendor-specific properties)._@see DefaultJmsActivationSpecFactory;public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory) {_		this.activationSpecFactory =_				(activationSpecFactory != null ? activationSpecFactory : new DefaultJmsActivationSpecFactory())__	};set,the,factory,for,concrete,jca,1,5,activation,spec,objects,creating,jca,activation,specs,based,on,link,set,activation,spec,config,jms,activation,spec,config,objects,p,this,factory,is,dependent,on,the,concrete,jms,provider,e,g,on,active,mq,the,default,implementation,simply,guesses,the,activation,spec,class,name,from,the,provider,s,class,name,e,g,active,mqresource,adapter,active,mqactivation,spec,in,the,same,package,and,populates,the,activation,spec,properties,as,suggested,by,the,jca,1,5,specification,plus,a,couple,of,autodetected,vendor,specific,properties,see,default,jms,activation,spec,factory;public,void,set,activation,spec,factory,jms,activation,spec,factory,activation,spec,factory,this,activation,spec,factory,activation,spec,factory,null,activation,spec,factory,new,default,jms,activation,spec,factory
JmsMessageEndpointManager -> public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory);1429198188;Set the factory for concrete JCA 1.5 ActivationSpec objects,_creating JCA ActivationSpecs based on_{@link #setActivationSpecConfig JmsActivationSpecConfig} objects._<p>This factory is dependent on the concrete JMS provider, e.g. on ActiveMQ._The default implementation simply guesses the ActivationSpec class name_from the provider's class name (e.g. "ActiveMQResourceAdapter" ->_"ActiveMQActivationSpec" in the same package), and populates the_ActivationSpec properties as suggested by the JCA 1.5 specification_(plus a couple of autodetected vendor-specific properties)._@see DefaultJmsActivationSpecFactory;public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory) {_		this.activationSpecFactory =_				(activationSpecFactory != null ? activationSpecFactory : new DefaultJmsActivationSpecFactory())__	};set,the,factory,for,concrete,jca,1,5,activation,spec,objects,creating,jca,activation,specs,based,on,link,set,activation,spec,config,jms,activation,spec,config,objects,p,this,factory,is,dependent,on,the,concrete,jms,provider,e,g,on,active,mq,the,default,implementation,simply,guesses,the,activation,spec,class,name,from,the,provider,s,class,name,e,g,active,mqresource,adapter,active,mqactivation,spec,in,the,same,package,and,populates,the,activation,spec,properties,as,suggested,by,the,jca,1,5,specification,plus,a,couple,of,autodetected,vendor,specific,properties,see,default,jms,activation,spec,factory;public,void,set,activation,spec,factory,jms,activation,spec,factory,activation,spec,factory,this,activation,spec,factory,activation,spec,factory,null,activation,spec,factory,new,default,jms,activation,spec,factory
JmsMessageEndpointManager -> public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory);1429516293;Set the factory for concrete JCA 1.5 ActivationSpec objects,_creating JCA ActivationSpecs based on_{@link #setActivationSpecConfig JmsActivationSpecConfig} objects._<p>This factory is dependent on the concrete JMS provider, e.g. on ActiveMQ._The default implementation simply guesses the ActivationSpec class name_from the provider's class name (e.g. "ActiveMQResourceAdapter" ->_"ActiveMQActivationSpec" in the same package), and populates the_ActivationSpec properties as suggested by the JCA 1.5 specification_(plus a couple of autodetected vendor-specific properties)._@see DefaultJmsActivationSpecFactory;public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory) {_		this.activationSpecFactory =_				(activationSpecFactory != null ? activationSpecFactory : new DefaultJmsActivationSpecFactory())__	};set,the,factory,for,concrete,jca,1,5,activation,spec,objects,creating,jca,activation,specs,based,on,link,set,activation,spec,config,jms,activation,spec,config,objects,p,this,factory,is,dependent,on,the,concrete,jms,provider,e,g,on,active,mq,the,default,implementation,simply,guesses,the,activation,spec,class,name,from,the,provider,s,class,name,e,g,active,mqresource,adapter,active,mqactivation,spec,in,the,same,package,and,populates,the,activation,spec,properties,as,suggested,by,the,jca,1,5,specification,plus,a,couple,of,autodetected,vendor,specific,properties,see,default,jms,activation,spec,factory;public,void,set,activation,spec,factory,jms,activation,spec,factory,activation,spec,factory,this,activation,spec,factory,activation,spec,factory,null,activation,spec,factory,new,default,jms,activation,spec,factory
JmsMessageEndpointManager -> public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory);1492514138;Set the factory for concrete JCA 1.5 ActivationSpec objects,_creating JCA ActivationSpecs based on_{@link #setActivationSpecConfig JmsActivationSpecConfig} objects._<p>This factory is dependent on the concrete JMS provider, e.g. on ActiveMQ._The default implementation simply guesses the ActivationSpec class name_from the provider's class name (e.g. "ActiveMQResourceAdapter" ->_"ActiveMQActivationSpec" in the same package), and populates the_ActivationSpec properties as suggested by the JCA 1.5 specification_(plus a couple of autodetected vendor-specific properties)._@see DefaultJmsActivationSpecFactory;public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory) {_		this.activationSpecFactory =_				(activationSpecFactory != null ? activationSpecFactory : new DefaultJmsActivationSpecFactory())__	};set,the,factory,for,concrete,jca,1,5,activation,spec,objects,creating,jca,activation,specs,based,on,link,set,activation,spec,config,jms,activation,spec,config,objects,p,this,factory,is,dependent,on,the,concrete,jms,provider,e,g,on,active,mq,the,default,implementation,simply,guesses,the,activation,spec,class,name,from,the,provider,s,class,name,e,g,active,mqresource,adapter,active,mqactivation,spec,in,the,same,package,and,populates,the,activation,spec,properties,as,suggested,by,the,jca,1,5,specification,plus,a,couple,of,autodetected,vendor,specific,properties,see,default,jms,activation,spec,factory;public,void,set,activation,spec,factory,jms,activation,spec,factory,activation,spec,factory,this,activation,spec,factory,activation,spec,factory,null,activation,spec,factory,new,default,jms,activation,spec,factory
JmsMessageEndpointManager -> public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory);1495868221;Set the factory for concrete JCA 1.5 ActivationSpec objects,_creating JCA ActivationSpecs based on_{@link #setActivationSpecConfig JmsActivationSpecConfig} objects._<p>This factory is dependent on the concrete JMS provider, e.g. on ActiveMQ._The default implementation simply guesses the ActivationSpec class name_from the provider's class name (e.g. "ActiveMQResourceAdapter" ->_"ActiveMQActivationSpec" in the same package), and populates the_ActivationSpec properties as suggested by the JCA 1.5 specification_(plus a couple of autodetected vendor-specific properties)._@see DefaultJmsActivationSpecFactory;public void setActivationSpecFactory(JmsActivationSpecFactory activationSpecFactory) {_		this.activationSpecFactory =_				(activationSpecFactory != null ? activationSpecFactory : new DefaultJmsActivationSpecFactory())__	};set,the,factory,for,concrete,jca,1,5,activation,spec,objects,creating,jca,activation,specs,based,on,link,set,activation,spec,config,jms,activation,spec,config,objects,p,this,factory,is,dependent,on,the,concrete,jms,provider,e,g,on,active,mq,the,default,implementation,simply,guesses,the,activation,spec,class,name,from,the,provider,s,class,name,e,g,active,mqresource,adapter,active,mqactivation,spec,in,the,same,package,and,populates,the,activation,spec,properties,as,suggested,by,the,jca,1,5,specification,plus,a,couple,of,autodetected,vendor,specific,properties,see,default,jms,activation,spec,factory;public,void,set,activation,spec,factory,jms,activation,spec,factory,activation,spec,factory,this,activation,spec,factory,activation,spec,factory,null,activation,spec,factory,new,default,jms,activation,spec,factory
JmsMessageEndpointManager -> public void setDestinationResolver(DestinationResolver destinationResolver);1328020251;Set the DestinationResolver to use for resolving destination names_into the JCA 1.5 ActivationSpec "destination" property._<p>If not specified, destination names will simply be passed in as Strings._If specified, destination names will be resolved into Destination objects first._<p>Note that a DestinationResolver is usually specified on the JmsActivationSpecFactory_(see {@link StandardJmsActivationSpecFactory#setDestinationResolver}). This is simply_a shortcut for parameterizing the default JmsActivationSpecFactory_ it will replace_any custom JmsActivationSpecFactory that might have been set before._@see StandardJmsActivationSpecFactory#setDestinationResolver;public void setDestinationResolver(DestinationResolver destinationResolver) {_		DefaultJmsActivationSpecFactory factory = new DefaultJmsActivationSpecFactory()__		factory.setDestinationResolver(destinationResolver)__		this.activationSpecFactory = factory__	};set,the,destination,resolver,to,use,for,resolving,destination,names,into,the,jca,1,5,activation,spec,destination,property,p,if,not,specified,destination,names,will,simply,be,passed,in,as,strings,if,specified,destination,names,will,be,resolved,into,destination,objects,first,p,note,that,a,destination,resolver,is,usually,specified,on,the,jms,activation,spec,factory,see,link,standard,jms,activation,spec,factory,set,destination,resolver,this,is,simply,a,shortcut,for,parameterizing,the,default,jms,activation,spec,factory,it,will,replace,any,custom,jms,activation,spec,factory,that,might,have,been,set,before,see,standard,jms,activation,spec,factory,set,destination,resolver;public,void,set,destination,resolver,destination,resolver,destination,resolver,default,jms,activation,spec,factory,factory,new,default,jms,activation,spec,factory,factory,set,destination,resolver,destination,resolver,this,activation,spec,factory,factory
JmsMessageEndpointManager -> public void setDestinationResolver(DestinationResolver destinationResolver);1356735495;Set the DestinationResolver to use for resolving destination names_into the JCA 1.5 ActivationSpec "destination" property._<p>If not specified, destination names will simply be passed in as Strings._If specified, destination names will be resolved into Destination objects first._<p>Note that a DestinationResolver is usually specified on the JmsActivationSpecFactory_(see {@link StandardJmsActivationSpecFactory#setDestinationResolver}). This is simply_a shortcut for parameterizing the default JmsActivationSpecFactory_ it will replace_any custom JmsActivationSpecFactory that might have been set before._@see StandardJmsActivationSpecFactory#setDestinationResolver;public void setDestinationResolver(DestinationResolver destinationResolver) {_		DefaultJmsActivationSpecFactory factory = new DefaultJmsActivationSpecFactory()__		factory.setDestinationResolver(destinationResolver)__		this.activationSpecFactory = factory__	};set,the,destination,resolver,to,use,for,resolving,destination,names,into,the,jca,1,5,activation,spec,destination,property,p,if,not,specified,destination,names,will,simply,be,passed,in,as,strings,if,specified,destination,names,will,be,resolved,into,destination,objects,first,p,note,that,a,destination,resolver,is,usually,specified,on,the,jms,activation,spec,factory,see,link,standard,jms,activation,spec,factory,set,destination,resolver,this,is,simply,a,shortcut,for,parameterizing,the,default,jms,activation,spec,factory,it,will,replace,any,custom,jms,activation,spec,factory,that,might,have,been,set,before,see,standard,jms,activation,spec,factory,set,destination,resolver;public,void,set,destination,resolver,destination,resolver,destination,resolver,default,jms,activation,spec,factory,factory,new,default,jms,activation,spec,factory,factory,set,destination,resolver,destination,resolver,this,activation,spec,factory,factory
JmsMessageEndpointManager -> public void setDestinationResolver(DestinationResolver destinationResolver);1357119239;Set the DestinationResolver to use for resolving destination names_into the JCA 1.5 ActivationSpec "destination" property._<p>If not specified, destination names will simply be passed in as Strings._If specified, destination names will be resolved into Destination objects first._<p>Note that a DestinationResolver is usually specified on the JmsActivationSpecFactory_(see {@link StandardJmsActivationSpecFactory#setDestinationResolver}). This is simply_a shortcut for parameterizing the default JmsActivationSpecFactory_ it will replace_any custom JmsActivationSpecFactory that might have been set before._@see StandardJmsActivationSpecFactory#setDestinationResolver;public void setDestinationResolver(DestinationResolver destinationResolver) {_		DefaultJmsActivationSpecFactory factory = new DefaultJmsActivationSpecFactory()__		factory.setDestinationResolver(destinationResolver)__		this.activationSpecFactory = factory__	};set,the,destination,resolver,to,use,for,resolving,destination,names,into,the,jca,1,5,activation,spec,destination,property,p,if,not,specified,destination,names,will,simply,be,passed,in,as,strings,if,specified,destination,names,will,be,resolved,into,destination,objects,first,p,note,that,a,destination,resolver,is,usually,specified,on,the,jms,activation,spec,factory,see,link,standard,jms,activation,spec,factory,set,destination,resolver,this,is,simply,a,shortcut,for,parameterizing,the,default,jms,activation,spec,factory,it,will,replace,any,custom,jms,activation,spec,factory,that,might,have,been,set,before,see,standard,jms,activation,spec,factory,set,destination,resolver;public,void,set,destination,resolver,destination,resolver,destination,resolver,default,jms,activation,spec,factory,factory,new,default,jms,activation,spec,factory,factory,set,destination,resolver,destination,resolver,this,activation,spec,factory,factory
JmsMessageEndpointManager -> public void setDestinationResolver(DestinationResolver destinationResolver);1368482696;Set the DestinationResolver to use for resolving destination names_into the JCA 1.5 ActivationSpec "destination" property._<p>If not specified, destination names will simply be passed in as Strings._If specified, destination names will be resolved into Destination objects first._<p>Note that a DestinationResolver is usually specified on the JmsActivationSpecFactory_(see {@link StandardJmsActivationSpecFactory#setDestinationResolver}). This is simply_a shortcut for parameterizing the default JmsActivationSpecFactory_ it will replace_any custom JmsActivationSpecFactory that might have been set before._@see StandardJmsActivationSpecFactory#setDestinationResolver;public void setDestinationResolver(DestinationResolver destinationResolver) {_		DefaultJmsActivationSpecFactory factory = new DefaultJmsActivationSpecFactory()__		factory.setDestinationResolver(destinationResolver)__		this.activationSpecFactory = factory__	};set,the,destination,resolver,to,use,for,resolving,destination,names,into,the,jca,1,5,activation,spec,destination,property,p,if,not,specified,destination,names,will,simply,be,passed,in,as,strings,if,specified,destination,names,will,be,resolved,into,destination,objects,first,p,note,that,a,destination,resolver,is,usually,specified,on,the,jms,activation,spec,factory,see,link,standard,jms,activation,spec,factory,set,destination,resolver,this,is,simply,a,shortcut,for,parameterizing,the,default,jms,activation,spec,factory,it,will,replace,any,custom,jms,activation,spec,factory,that,might,have,been,set,before,see,standard,jms,activation,spec,factory,set,destination,resolver;public,void,set,destination,resolver,destination,resolver,destination,resolver,default,jms,activation,spec,factory,factory,new,default,jms,activation,spec,factory,factory,set,destination,resolver,destination,resolver,this,activation,spec,factory,factory
JmsMessageEndpointManager -> public void setDestinationResolver(DestinationResolver destinationResolver);1383603297;Set the DestinationResolver to use for resolving destination names_into the JCA 1.5 ActivationSpec "destination" property._<p>If not specified, destination names will simply be passed in as Strings._If specified, destination names will be resolved into Destination objects first._<p>Note that a DestinationResolver is usually specified on the JmsActivationSpecFactory_(see {@link StandardJmsActivationSpecFactory#setDestinationResolver}). This is simply_a shortcut for parameterizing the default JmsActivationSpecFactory_ it will replace_any custom JmsActivationSpecFactory that might have been set before._@see StandardJmsActivationSpecFactory#setDestinationResolver;public void setDestinationResolver(DestinationResolver destinationResolver) {_		DefaultJmsActivationSpecFactory factory = new DefaultJmsActivationSpecFactory()__		factory.setDestinationResolver(destinationResolver)__		this.activationSpecFactory = factory__	};set,the,destination,resolver,to,use,for,resolving,destination,names,into,the,jca,1,5,activation,spec,destination,property,p,if,not,specified,destination,names,will,simply,be,passed,in,as,strings,if,specified,destination,names,will,be,resolved,into,destination,objects,first,p,note,that,a,destination,resolver,is,usually,specified,on,the,jms,activation,spec,factory,see,link,standard,jms,activation,spec,factory,set,destination,resolver,this,is,simply,a,shortcut,for,parameterizing,the,default,jms,activation,spec,factory,it,will,replace,any,custom,jms,activation,spec,factory,that,might,have,been,set,before,see,standard,jms,activation,spec,factory,set,destination,resolver;public,void,set,destination,resolver,destination,resolver,destination,resolver,default,jms,activation,spec,factory,factory,new,default,jms,activation,spec,factory,factory,set,destination,resolver,destination,resolver,this,activation,spec,factory,factory
JmsMessageEndpointManager -> public void setDestinationResolver(DestinationResolver destinationResolver);1397718966;Set the DestinationResolver to use for resolving destination names_into the JCA 1.5 ActivationSpec "destination" property._<p>If not specified, destination names will simply be passed in as Strings._If specified, destination names will be resolved into Destination objects first._<p>Note that a DestinationResolver is usually specified on the JmsActivationSpecFactory_(see {@link StandardJmsActivationSpecFactory#setDestinationResolver}). This is simply_a shortcut for parameterizing the default JmsActivationSpecFactory_ it will replace_any custom JmsActivationSpecFactory that might have been set before._@see StandardJmsActivationSpecFactory#setDestinationResolver;public void setDestinationResolver(DestinationResolver destinationResolver) {_		DefaultJmsActivationSpecFactory factory = new DefaultJmsActivationSpecFactory()__		factory.setDestinationResolver(destinationResolver)__		this.activationSpecFactory = factory__	};set,the,destination,resolver,to,use,for,resolving,destination,names,into,the,jca,1,5,activation,spec,destination,property,p,if,not,specified,destination,names,will,simply,be,passed,in,as,strings,if,specified,destination,names,will,be,resolved,into,destination,objects,first,p,note,that,a,destination,resolver,is,usually,specified,on,the,jms,activation,spec,factory,see,link,standard,jms,activation,spec,factory,set,destination,resolver,this,is,simply,a,shortcut,for,parameterizing,the,default,jms,activation,spec,factory,it,will,replace,any,custom,jms,activation,spec,factory,that,might,have,been,set,before,see,standard,jms,activation,spec,factory,set,destination,resolver;public,void,set,destination,resolver,destination,resolver,destination,resolver,default,jms,activation,spec,factory,factory,new,default,jms,activation,spec,factory,factory,set,destination,resolver,destination,resolver,this,activation,spec,factory,factory
JmsMessageEndpointManager -> public void setDestinationResolver(DestinationResolver destinationResolver);1398347811;Set the DestinationResolver to use for resolving destination names_into the JCA 1.5 ActivationSpec "destination" property._<p>If not specified, destination names will simply be passed in as Strings._If specified, destination names will be resolved into Destination objects first._<p>Note that a DestinationResolver is usually specified on the JmsActivationSpecFactory_(see {@link StandardJmsActivationSpecFactory#setDestinationResolver}). This is simply_a shortcut for parameterizing the default JmsActivationSpecFactory_ it will replace_any custom JmsActivationSpecFactory that might have been set before._@see StandardJmsActivationSpecFactory#setDestinationResolver;public void setDestinationResolver(DestinationResolver destinationResolver) {_		DefaultJmsActivationSpecFactory factory = new DefaultJmsActivationSpecFactory()__		factory.setDestinationResolver(destinationResolver)__		this.activationSpecFactory = factory__	};set,the,destination,resolver,to,use,for,resolving,destination,names,into,the,jca,1,5,activation,spec,destination,property,p,if,not,specified,destination,names,will,simply,be,passed,in,as,strings,if,specified,destination,names,will,be,resolved,into,destination,objects,first,p,note,that,a,destination,resolver,is,usually,specified,on,the,jms,activation,spec,factory,see,link,standard,jms,activation,spec,factory,set,destination,resolver,this,is,simply,a,shortcut,for,parameterizing,the,default,jms,activation,spec,factory,it,will,replace,any,custom,jms,activation,spec,factory,that,might,have,been,set,before,see,standard,jms,activation,spec,factory,set,destination,resolver;public,void,set,destination,resolver,destination,resolver,destination,resolver,default,jms,activation,spec,factory,factory,new,default,jms,activation,spec,factory,factory,set,destination,resolver,destination,resolver,this,activation,spec,factory,factory
JmsMessageEndpointManager -> public void setDestinationResolver(DestinationResolver destinationResolver);1405696881;Set the DestinationResolver to use for resolving destination names_into the JCA 1.5 ActivationSpec "destination" property._<p>If not specified, destination names will simply be passed in as Strings._If specified, destination names will be resolved into Destination objects first._<p>Note that a DestinationResolver is usually specified on the JmsActivationSpecFactory_(see {@link StandardJmsActivationSpecFactory#setDestinationResolver}). This is simply_a shortcut for parameterizing the default JmsActivationSpecFactory_ it will replace_any custom JmsActivationSpecFactory that might have been set before._@see StandardJmsActivationSpecFactory#setDestinationResolver;public void setDestinationResolver(DestinationResolver destinationResolver) {_		DefaultJmsActivationSpecFactory factory = new DefaultJmsActivationSpecFactory()__		factory.setDestinationResolver(destinationResolver)__		this.activationSpecFactory = factory__	};set,the,destination,resolver,to,use,for,resolving,destination,names,into,the,jca,1,5,activation,spec,destination,property,p,if,not,specified,destination,names,will,simply,be,passed,in,as,strings,if,specified,destination,names,will,be,resolved,into,destination,objects,first,p,note,that,a,destination,resolver,is,usually,specified,on,the,jms,activation,spec,factory,see,link,standard,jms,activation,spec,factory,set,destination,resolver,this,is,simply,a,shortcut,for,parameterizing,the,default,jms,activation,spec,factory,it,will,replace,any,custom,jms,activation,spec,factory,that,might,have,been,set,before,see,standard,jms,activation,spec,factory,set,destination,resolver;public,void,set,destination,resolver,destination,resolver,destination,resolver,default,jms,activation,spec,factory,factory,new,default,jms,activation,spec,factory,factory,set,destination,resolver,destination,resolver,this,activation,spec,factory,factory
JmsMessageEndpointManager -> public void setDestinationResolver(DestinationResolver destinationResolver);1429198188;Set the DestinationResolver to use for resolving destination names_into the JCA 1.5 ActivationSpec "destination" property._<p>If not specified, destination names will simply be passed in as Strings._If specified, destination names will be resolved into Destination objects first._<p>Note that a DestinationResolver is usually specified on the JmsActivationSpecFactory_(see {@link StandardJmsActivationSpecFactory#setDestinationResolver}). This is simply_a shortcut for parameterizing the default JmsActivationSpecFactory_ it will replace_any custom JmsActivationSpecFactory that might have been set before._@see StandardJmsActivationSpecFactory#setDestinationResolver;public void setDestinationResolver(DestinationResolver destinationResolver) {_		DefaultJmsActivationSpecFactory factory = new DefaultJmsActivationSpecFactory()__		factory.setDestinationResolver(destinationResolver)__		this.activationSpecFactory = factory__	};set,the,destination,resolver,to,use,for,resolving,destination,names,into,the,jca,1,5,activation,spec,destination,property,p,if,not,specified,destination,names,will,simply,be,passed,in,as,strings,if,specified,destination,names,will,be,resolved,into,destination,objects,first,p,note,that,a,destination,resolver,is,usually,specified,on,the,jms,activation,spec,factory,see,link,standard,jms,activation,spec,factory,set,destination,resolver,this,is,simply,a,shortcut,for,parameterizing,the,default,jms,activation,spec,factory,it,will,replace,any,custom,jms,activation,spec,factory,that,might,have,been,set,before,see,standard,jms,activation,spec,factory,set,destination,resolver;public,void,set,destination,resolver,destination,resolver,destination,resolver,default,jms,activation,spec,factory,factory,new,default,jms,activation,spec,factory,factory,set,destination,resolver,destination,resolver,this,activation,spec,factory,factory
JmsMessageEndpointManager -> public void setDestinationResolver(DestinationResolver destinationResolver);1429516293;Set the DestinationResolver to use for resolving destination names_into the JCA 1.5 ActivationSpec "destination" property._<p>If not specified, destination names will simply be passed in as Strings._If specified, destination names will be resolved into Destination objects first._<p>Note that a DestinationResolver is usually specified on the JmsActivationSpecFactory_(see {@link StandardJmsActivationSpecFactory#setDestinationResolver}). This is simply_a shortcut for parameterizing the default JmsActivationSpecFactory_ it will replace_any custom JmsActivationSpecFactory that might have been set before._@see StandardJmsActivationSpecFactory#setDestinationResolver;public void setDestinationResolver(DestinationResolver destinationResolver) {_		DefaultJmsActivationSpecFactory factory = new DefaultJmsActivationSpecFactory()__		factory.setDestinationResolver(destinationResolver)__		this.activationSpecFactory = factory__	};set,the,destination,resolver,to,use,for,resolving,destination,names,into,the,jca,1,5,activation,spec,destination,property,p,if,not,specified,destination,names,will,simply,be,passed,in,as,strings,if,specified,destination,names,will,be,resolved,into,destination,objects,first,p,note,that,a,destination,resolver,is,usually,specified,on,the,jms,activation,spec,factory,see,link,standard,jms,activation,spec,factory,set,destination,resolver,this,is,simply,a,shortcut,for,parameterizing,the,default,jms,activation,spec,factory,it,will,replace,any,custom,jms,activation,spec,factory,that,might,have,been,set,before,see,standard,jms,activation,spec,factory,set,destination,resolver;public,void,set,destination,resolver,destination,resolver,destination,resolver,default,jms,activation,spec,factory,factory,new,default,jms,activation,spec,factory,factory,set,destination,resolver,destination,resolver,this,activation,spec,factory,factory
JmsMessageEndpointManager -> public void setDestinationResolver(DestinationResolver destinationResolver);1492514138;Set the DestinationResolver to use for resolving destination names_into the JCA 1.5 ActivationSpec "destination" property._<p>If not specified, destination names will simply be passed in as Strings._If specified, destination names will be resolved into Destination objects first._<p>Note that a DestinationResolver is usually specified on the JmsActivationSpecFactory_(see {@link StandardJmsActivationSpecFactory#setDestinationResolver}). This is simply_a shortcut for parameterizing the default JmsActivationSpecFactory_ it will replace_any custom JmsActivationSpecFactory that might have been set before._@see StandardJmsActivationSpecFactory#setDestinationResolver;public void setDestinationResolver(DestinationResolver destinationResolver) {_		DefaultJmsActivationSpecFactory factory = new DefaultJmsActivationSpecFactory()__		factory.setDestinationResolver(destinationResolver)__		this.activationSpecFactory = factory__	};set,the,destination,resolver,to,use,for,resolving,destination,names,into,the,jca,1,5,activation,spec,destination,property,p,if,not,specified,destination,names,will,simply,be,passed,in,as,strings,if,specified,destination,names,will,be,resolved,into,destination,objects,first,p,note,that,a,destination,resolver,is,usually,specified,on,the,jms,activation,spec,factory,see,link,standard,jms,activation,spec,factory,set,destination,resolver,this,is,simply,a,shortcut,for,parameterizing,the,default,jms,activation,spec,factory,it,will,replace,any,custom,jms,activation,spec,factory,that,might,have,been,set,before,see,standard,jms,activation,spec,factory,set,destination,resolver;public,void,set,destination,resolver,destination,resolver,destination,resolver,default,jms,activation,spec,factory,factory,new,default,jms,activation,spec,factory,factory,set,destination,resolver,destination,resolver,this,activation,spec,factory,factory
JmsMessageEndpointManager -> public void setDestinationResolver(DestinationResolver destinationResolver);1495868221;Set the DestinationResolver to use for resolving destination names_into the JCA 1.5 ActivationSpec "destination" property._<p>If not specified, destination names will simply be passed in as Strings._If specified, destination names will be resolved into Destination objects first._<p>Note that a DestinationResolver is usually specified on the JmsActivationSpecFactory_(see {@link StandardJmsActivationSpecFactory#setDestinationResolver}). This is simply_a shortcut for parameterizing the default JmsActivationSpecFactory_ it will replace_any custom JmsActivationSpecFactory that might have been set before._@see StandardJmsActivationSpecFactory#setDestinationResolver;public void setDestinationResolver(DestinationResolver destinationResolver) {_		DefaultJmsActivationSpecFactory factory = new DefaultJmsActivationSpecFactory()__		factory.setDestinationResolver(destinationResolver)__		this.activationSpecFactory = factory__	};set,the,destination,resolver,to,use,for,resolving,destination,names,into,the,jca,1,5,activation,spec,destination,property,p,if,not,specified,destination,names,will,simply,be,passed,in,as,strings,if,specified,destination,names,will,be,resolved,into,destination,objects,first,p,note,that,a,destination,resolver,is,usually,specified,on,the,jms,activation,spec,factory,see,link,standard,jms,activation,spec,factory,set,destination,resolver,this,is,simply,a,shortcut,for,parameterizing,the,default,jms,activation,spec,factory,it,will,replace,any,custom,jms,activation,spec,factory,that,might,have,been,set,before,see,standard,jms,activation,spec,factory,set,destination,resolver;public,void,set,destination,resolver,destination,resolver,destination,resolver,default,jms,activation,spec,factory,factory,new,default,jms,activation,spec,factory,factory,set,destination,resolver,destination,resolver,this,activation,spec,factory,factory
JmsMessageEndpointManager -> public void setDestinationResolver(DestinationResolver destinationResolver);1496837955;Set the DestinationResolver to use for resolving destination names_into the JCA 1.5 ActivationSpec "destination" property._<p>If not specified, destination names will simply be passed in as Strings._If specified, destination names will be resolved into Destination objects first._<p>Note that a DestinationResolver is usually specified on the JmsActivationSpecFactory_(see {@link StandardJmsActivationSpecFactory#setDestinationResolver}). This is simply_a shortcut for parameterizing the default JmsActivationSpecFactory_ it will replace_any custom JmsActivationSpecFactory that might have been set before._@see StandardJmsActivationSpecFactory#setDestinationResolver;public void setDestinationResolver(DestinationResolver destinationResolver) {_		DefaultJmsActivationSpecFactory factory = new DefaultJmsActivationSpecFactory()__		factory.setDestinationResolver(destinationResolver)__		this.activationSpecFactory = factory__	};set,the,destination,resolver,to,use,for,resolving,destination,names,into,the,jca,1,5,activation,spec,destination,property,p,if,not,specified,destination,names,will,simply,be,passed,in,as,strings,if,specified,destination,names,will,be,resolved,into,destination,objects,first,p,note,that,a,destination,resolver,is,usually,specified,on,the,jms,activation,spec,factory,see,link,standard,jms,activation,spec,factory,set,destination,resolver,this,is,simply,a,shortcut,for,parameterizing,the,default,jms,activation,spec,factory,it,will,replace,any,custom,jms,activation,spec,factory,that,might,have,been,set,before,see,standard,jms,activation,spec,factory,set,destination,resolver;public,void,set,destination,resolver,destination,resolver,destination,resolver,default,jms,activation,spec,factory,factory,new,default,jms,activation,spec,factory,factory,set,destination,resolver,destination,resolver,this,activation,spec,factory,factory
JmsMessageEndpointManager -> public void setDestinationResolver(DestinationResolver destinationResolver);1498780456;Set the DestinationResolver to use for resolving destination names_into the JCA 1.5 ActivationSpec "destination" property._<p>If not specified, destination names will simply be passed in as Strings._If specified, destination names will be resolved into Destination objects first._<p>Note that a DestinationResolver is usually specified on the JmsActivationSpecFactory_(see {@link StandardJmsActivationSpecFactory#setDestinationResolver}). This is simply_a shortcut for parameterizing the default JmsActivationSpecFactory_ it will replace_any custom JmsActivationSpecFactory that might have been set before._@see StandardJmsActivationSpecFactory#setDestinationResolver;public void setDestinationResolver(DestinationResolver destinationResolver) {_		DefaultJmsActivationSpecFactory factory = new DefaultJmsActivationSpecFactory()__		factory.setDestinationResolver(destinationResolver)__		this.activationSpecFactory = factory__	};set,the,destination,resolver,to,use,for,resolving,destination,names,into,the,jca,1,5,activation,spec,destination,property,p,if,not,specified,destination,names,will,simply,be,passed,in,as,strings,if,specified,destination,names,will,be,resolved,into,destination,objects,first,p,note,that,a,destination,resolver,is,usually,specified,on,the,jms,activation,spec,factory,see,link,standard,jms,activation,spec,factory,set,destination,resolver,this,is,simply,a,shortcut,for,parameterizing,the,default,jms,activation,spec,factory,it,will,replace,any,custom,jms,activation,spec,factory,that,might,have,been,set,before,see,standard,jms,activation,spec,factory,set,destination,resolver;public,void,set,destination,resolver,destination,resolver,destination,resolver,default,jms,activation,spec,factory,factory,new,default,jms,activation,spec,factory,factory,set,destination,resolver,destination,resolver,this,activation,spec,factory,factory
JmsMessageEndpointManager -> public void setDestinationResolver(DestinationResolver destinationResolver);1500448076;Set the DestinationResolver to use for resolving destination names_into the JCA 1.5 ActivationSpec "destination" property._<p>If not specified, destination names will simply be passed in as Strings._If specified, destination names will be resolved into Destination objects first._<p>Note that a DestinationResolver is usually specified on the JmsActivationSpecFactory_(see {@link StandardJmsActivationSpecFactory#setDestinationResolver}). This is simply_a shortcut for parameterizing the default JmsActivationSpecFactory_ it will replace_any custom JmsActivationSpecFactory that might have been set before._@see StandardJmsActivationSpecFactory#setDestinationResolver;public void setDestinationResolver(DestinationResolver destinationResolver) {_		DefaultJmsActivationSpecFactory factory = new DefaultJmsActivationSpecFactory()__		factory.setDestinationResolver(destinationResolver)__		this.activationSpecFactory = factory__	};set,the,destination,resolver,to,use,for,resolving,destination,names,into,the,jca,1,5,activation,spec,destination,property,p,if,not,specified,destination,names,will,simply,be,passed,in,as,strings,if,specified,destination,names,will,be,resolved,into,destination,objects,first,p,note,that,a,destination,resolver,is,usually,specified,on,the,jms,activation,spec,factory,see,link,standard,jms,activation,spec,factory,set,destination,resolver,this,is,simply,a,shortcut,for,parameterizing,the,default,jms,activation,spec,factory,it,will,replace,any,custom,jms,activation,spec,factory,that,might,have,been,set,before,see,standard,jms,activation,spec,factory,set,destination,resolver;public,void,set,destination,resolver,destination,resolver,destination,resolver,default,jms,activation,spec,factory,factory,new,default,jms,activation,spec,factory,factory,set,destination,resolver,destination,resolver,this,activation,spec,factory,factory
JmsMessageEndpointManager -> public void setDestinationResolver(DestinationResolver destinationResolver);1502974979;Set the DestinationResolver to use for resolving destination names_into the JCA 1.5 ActivationSpec "destination" property._<p>If not specified, destination names will simply be passed in as Strings._If specified, destination names will be resolved into Destination objects first._<p>Note that a DestinationResolver is usually specified on the JmsActivationSpecFactory_(see {@link StandardJmsActivationSpecFactory#setDestinationResolver}). This is simply_a shortcut for parameterizing the default JmsActivationSpecFactory_ it will replace_any custom JmsActivationSpecFactory that might have been set before._@see StandardJmsActivationSpecFactory#setDestinationResolver;public void setDestinationResolver(DestinationResolver destinationResolver) {_		DefaultJmsActivationSpecFactory factory = new DefaultJmsActivationSpecFactory()__		factory.setDestinationResolver(destinationResolver)__		this.activationSpecFactory = factory__	};set,the,destination,resolver,to,use,for,resolving,destination,names,into,the,jca,1,5,activation,spec,destination,property,p,if,not,specified,destination,names,will,simply,be,passed,in,as,strings,if,specified,destination,names,will,be,resolved,into,destination,objects,first,p,note,that,a,destination,resolver,is,usually,specified,on,the,jms,activation,spec,factory,see,link,standard,jms,activation,spec,factory,set,destination,resolver,this,is,simply,a,shortcut,for,parameterizing,the,default,jms,activation,spec,factory,it,will,replace,any,custom,jms,activation,spec,factory,that,might,have,been,set,before,see,standard,jms,activation,spec,factory,set,destination,resolver;public,void,set,destination,resolver,destination,resolver,destination,resolver,default,jms,activation,spec,factory,factory,new,default,jms,activation,spec,factory,factory,set,destination,resolver,destination,resolver,this,activation,spec,factory,factory
JmsMessageEndpointManager -> @Nullable 	public JmsActivationSpecConfig getActivationSpecConfig();1495868221;Return the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener. Return {@code null} if none is set.;@Nullable_	public JmsActivationSpecConfig getActivationSpecConfig() {_		return this.activationSpecConfig__	};return,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,return,code,null,if,none,is,set;nullable,public,jms,activation,spec,config,get,activation,spec,config,return,this,activation,spec,config
JmsMessageEndpointManager -> @Nullable 	public JmsActivationSpecConfig getActivationSpecConfig();1496837955;Return the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener. Return {@code null} if none is set.;@Nullable_	public JmsActivationSpecConfig getActivationSpecConfig() {_		return this.activationSpecConfig__	};return,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,return,code,null,if,none,is,set;nullable,public,jms,activation,spec,config,get,activation,spec,config,return,this,activation,spec,config
JmsMessageEndpointManager -> @Nullable 	public JmsActivationSpecConfig getActivationSpecConfig();1498780456;Return the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener. Return {@code null} if none is set.;@Nullable_	public JmsActivationSpecConfig getActivationSpecConfig() {_		return this.activationSpecConfig__	};return,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,return,code,null,if,none,is,set;nullable,public,jms,activation,spec,config,get,activation,spec,config,return,this,activation,spec,config
JmsMessageEndpointManager -> @Nullable 	public JmsActivationSpecConfig getActivationSpecConfig();1500448076;Return the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener. Return {@code null} if none is set.;@Nullable_	public JmsActivationSpecConfig getActivationSpecConfig() {_		return this.activationSpecConfig__	};return,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,return,code,null,if,none,is,set;nullable,public,jms,activation,spec,config,get,activation,spec,config,return,this,activation,spec,config
JmsMessageEndpointManager -> @Nullable 	public JmsActivationSpecConfig getActivationSpecConfig();1502974979;Return the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener. Return {@code null} if none is set.;@Nullable_	public JmsActivationSpecConfig getActivationSpecConfig() {_		return this.activationSpecConfig__	};return,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,return,code,null,if,none,is,set;nullable,public,jms,activation,spec,config,get,activation,spec,config,return,this,activation,spec,config
JmsMessageEndpointManager -> public void setActivationSpecConfig(@Nullable JmsActivationSpecConfig activationSpecConfig);1500448076;Specify the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener._<p>This config object will be turned into a concrete JCA 1.5 ActivationSpec_object through a {@link #setActivationSpecFactory JmsActivationSpecFactory}.;public void setActivationSpecConfig(@Nullable JmsActivationSpecConfig activationSpecConfig) {_		this.activationSpecConfig = activationSpecConfig__	};specify,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,p,this,config,object,will,be,turned,into,a,concrete,jca,1,5,activation,spec,object,through,a,link,set,activation,spec,factory,jms,activation,spec,factory;public,void,set,activation,spec,config,nullable,jms,activation,spec,config,activation,spec,config,this,activation,spec,config,activation,spec,config
JmsMessageEndpointManager -> public void setActivationSpecConfig(@Nullable JmsActivationSpecConfig activationSpecConfig);1502974979;Specify the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener._<p>This config object will be turned into a concrete JCA 1.5 ActivationSpec_object through a {@link #setActivationSpecFactory JmsActivationSpecFactory}.;public void setActivationSpecConfig(@Nullable JmsActivationSpecConfig activationSpecConfig) {_		this.activationSpecConfig = activationSpecConfig__	};specify,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,p,this,config,object,will,be,turned,into,a,concrete,jca,1,5,activation,spec,object,through,a,link,set,activation,spec,factory,jms,activation,spec,factory;public,void,set,activation,spec,config,nullable,jms,activation,spec,config,activation,spec,config,this,activation,spec,config,activation,spec,config
JmsMessageEndpointManager -> public void setMessageListener(MessageListener messageListener);1328020251;Set the JMS MessageListener for this endpoint._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setMessageListener;public void setMessageListener(MessageListener messageListener) {_		this.endpointFactory.setMessageListener(messageListener)__		this.messageListenerSet = true__	};set,the,jms,message,listener,for,this,endpoint,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,message,listener;public,void,set,message,listener,message,listener,message,listener,this,endpoint,factory,set,message,listener,message,listener,this,message,listener,set,true
JmsMessageEndpointManager -> public void setMessageListener(MessageListener messageListener);1356735495;Set the JMS MessageListener for this endpoint._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setMessageListener;public void setMessageListener(MessageListener messageListener) {_		this.endpointFactory.setMessageListener(messageListener)__		this.messageListenerSet = true__	};set,the,jms,message,listener,for,this,endpoint,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,message,listener;public,void,set,message,listener,message,listener,message,listener,this,endpoint,factory,set,message,listener,message,listener,this,message,listener,set,true
JmsMessageEndpointManager -> public void setMessageListener(MessageListener messageListener);1357119239;Set the JMS MessageListener for this endpoint._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setMessageListener;public void setMessageListener(MessageListener messageListener) {_		this.endpointFactory.setMessageListener(messageListener)__		this.messageListenerSet = true__	};set,the,jms,message,listener,for,this,endpoint,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,message,listener;public,void,set,message,listener,message,listener,message,listener,this,endpoint,factory,set,message,listener,message,listener,this,message,listener,set,true
JmsMessageEndpointManager -> public void setMessageListener(MessageListener messageListener);1368482696;Set the JMS MessageListener for this endpoint._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setMessageListener;public void setMessageListener(MessageListener messageListener) {_		this.endpointFactory.setMessageListener(messageListener)__		this.messageListenerSet = true__	};set,the,jms,message,listener,for,this,endpoint,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,message,listener;public,void,set,message,listener,message,listener,message,listener,this,endpoint,factory,set,message,listener,message,listener,this,message,listener,set,true
JmsMessageEndpointManager -> public void setMessageListener(MessageListener messageListener);1383603297;Set the JMS MessageListener for this endpoint._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setMessageListener;public void setMessageListener(MessageListener messageListener) {_		this.endpointFactory.setMessageListener(messageListener)__		this.messageListenerSet = true__	};set,the,jms,message,listener,for,this,endpoint,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,message,listener;public,void,set,message,listener,message,listener,message,listener,this,endpoint,factory,set,message,listener,message,listener,this,message,listener,set,true
JmsMessageEndpointManager -> public void setMessageListener(MessageListener messageListener);1397718966;Set the JMS MessageListener for this endpoint._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setMessageListener;public void setMessageListener(MessageListener messageListener) {_		this.endpointFactory.setMessageListener(messageListener)__		this.messageListenerSet = true__	};set,the,jms,message,listener,for,this,endpoint,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,message,listener;public,void,set,message,listener,message,listener,message,listener,this,endpoint,factory,set,message,listener,message,listener,this,message,listener,set,true
JmsMessageEndpointManager -> public void setMessageListener(MessageListener messageListener);1398347811;Set the JMS MessageListener for this endpoint._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setMessageListener;public void setMessageListener(MessageListener messageListener) {_		this.endpointFactory.setMessageListener(messageListener)__		this.messageListenerSet = true__	};set,the,jms,message,listener,for,this,endpoint,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,message,listener;public,void,set,message,listener,message,listener,message,listener,this,endpoint,factory,set,message,listener,message,listener,this,message,listener,set,true
JmsMessageEndpointManager -> public void setMessageListener(MessageListener messageListener);1405696881;Set the JMS MessageListener for this endpoint._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setMessageListener;public void setMessageListener(MessageListener messageListener) {_		this.endpointFactory.setMessageListener(messageListener)__		this.messageListenerSet = true__	};set,the,jms,message,listener,for,this,endpoint,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,message,listener;public,void,set,message,listener,message,listener,message,listener,this,endpoint,factory,set,message,listener,message,listener,this,message,listener,set,true
JmsMessageEndpointManager -> public void setMessageListener(MessageListener messageListener);1429198188;Set the JMS MessageListener for this endpoint._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setMessageListener;public void setMessageListener(MessageListener messageListener) {_		this.endpointFactory.setMessageListener(messageListener)__		this.messageListenerSet = true__	};set,the,jms,message,listener,for,this,endpoint,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,message,listener;public,void,set,message,listener,message,listener,message,listener,this,endpoint,factory,set,message,listener,message,listener,this,message,listener,set,true
JmsMessageEndpointManager -> public void setMessageListener(MessageListener messageListener);1429516293;Set the JMS MessageListener for this endpoint._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setMessageListener;public void setMessageListener(MessageListener messageListener) {_		this.endpointFactory.setMessageListener(messageListener)__		this.messageListenerSet = true__	};set,the,jms,message,listener,for,this,endpoint,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,message,listener;public,void,set,message,listener,message,listener,message,listener,this,endpoint,factory,set,message,listener,message,listener,this,message,listener,set,true
JmsMessageEndpointManager -> public void setMessageListener(MessageListener messageListener);1492514138;Set the JMS MessageListener for this endpoint._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setMessageListener;public void setMessageListener(MessageListener messageListener) {_		this.endpointFactory.setMessageListener(messageListener)__		this.messageListenerSet = true__	};set,the,jms,message,listener,for,this,endpoint,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,message,listener;public,void,set,message,listener,message,listener,message,listener,this,endpoint,factory,set,message,listener,message,listener,this,message,listener,set,true
JmsMessageEndpointManager -> public void setMessageListener(MessageListener messageListener);1495868221;Set the JMS MessageListener for this endpoint._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setMessageListener;public void setMessageListener(MessageListener messageListener) {_		this.endpointFactory.setMessageListener(messageListener)__		this.messageListenerSet = true__	};set,the,jms,message,listener,for,this,endpoint,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,message,listener;public,void,set,message,listener,message,listener,message,listener,this,endpoint,factory,set,message,listener,message,listener,this,message,listener,set,true
JmsMessageEndpointManager -> public void setMessageListener(MessageListener messageListener);1496837955;Set the JMS MessageListener for this endpoint._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setMessageListener;public void setMessageListener(MessageListener messageListener) {_		this.endpointFactory.setMessageListener(messageListener)__		this.messageListenerSet = true__	};set,the,jms,message,listener,for,this,endpoint,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,message,listener;public,void,set,message,listener,message,listener,message,listener,this,endpoint,factory,set,message,listener,message,listener,this,message,listener,set,true
JmsMessageEndpointManager -> public void setMessageListener(MessageListener messageListener);1498780456;Set the JMS MessageListener for this endpoint._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setMessageListener;public void setMessageListener(MessageListener messageListener) {_		this.endpointFactory.setMessageListener(messageListener)__		this.messageListenerSet = true__	};set,the,jms,message,listener,for,this,endpoint,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,message,listener;public,void,set,message,listener,message,listener,message,listener,this,endpoint,factory,set,message,listener,message,listener,this,message,listener,set,true
JmsMessageEndpointManager -> public void setMessageListener(MessageListener messageListener);1500448076;Set the JMS MessageListener for this endpoint._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setMessageListener;public void setMessageListener(MessageListener messageListener) {_		this.endpointFactory.setMessageListener(messageListener)__		this.messageListenerSet = true__	};set,the,jms,message,listener,for,this,endpoint,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,message,listener;public,void,set,message,listener,message,listener,message,listener,this,endpoint,factory,set,message,listener,message,listener,this,message,listener,set,true
JmsMessageEndpointManager -> public void setMessageListener(MessageListener messageListener);1502974979;Set the JMS MessageListener for this endpoint._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setMessageListener;public void setMessageListener(MessageListener messageListener) {_		this.endpointFactory.setMessageListener(messageListener)__		this.messageListenerSet = true__	};set,the,jms,message,listener,for,this,endpoint,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,message,listener;public,void,set,message,listener,message,listener,message,listener,this,endpoint,factory,set,message,listener,message,listener,this,message,listener,set,true
JmsMessageEndpointManager -> public JmsActivationSpecConfig getActivationSpecConfig();1397718966;Return the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener. Return {@code null} if none is set.;public JmsActivationSpecConfig getActivationSpecConfig() {_		return activationSpecConfig__	};return,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,return,code,null,if,none,is,set;public,jms,activation,spec,config,get,activation,spec,config,return,activation,spec,config
JmsMessageEndpointManager -> public JmsActivationSpecConfig getActivationSpecConfig();1398347811;Return the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener. Return {@code null} if none is set.;public JmsActivationSpecConfig getActivationSpecConfig() {_		return activationSpecConfig__	};return,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,return,code,null,if,none,is,set;public,jms,activation,spec,config,get,activation,spec,config,return,activation,spec,config
JmsMessageEndpointManager -> public JmsActivationSpecConfig getActivationSpecConfig();1405696881;Return the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener. Return {@code null} if none is set.;public JmsActivationSpecConfig getActivationSpecConfig() {_		return this.activationSpecConfig__	};return,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,return,code,null,if,none,is,set;public,jms,activation,spec,config,get,activation,spec,config,return,this,activation,spec,config
JmsMessageEndpointManager -> public JmsActivationSpecConfig getActivationSpecConfig();1429198188;Return the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener. Return {@code null} if none is set.;public JmsActivationSpecConfig getActivationSpecConfig() {_		return this.activationSpecConfig__	};return,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,return,code,null,if,none,is,set;public,jms,activation,spec,config,get,activation,spec,config,return,this,activation,spec,config
JmsMessageEndpointManager -> public JmsActivationSpecConfig getActivationSpecConfig();1429516293;Return the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener. Return {@code null} if none is set.;public JmsActivationSpecConfig getActivationSpecConfig() {_		return this.activationSpecConfig__	};return,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,return,code,null,if,none,is,set;public,jms,activation,spec,config,get,activation,spec,config,return,this,activation,spec,config
JmsMessageEndpointManager -> public JmsActivationSpecConfig getActivationSpecConfig();1492514138;Return the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener. Return {@code null} if none is set.;public JmsActivationSpecConfig getActivationSpecConfig() {_		return this.activationSpecConfig__	};return,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,return,code,null,if,none,is,set;public,jms,activation,spec,config,get,activation,spec,config,return,this,activation,spec,config
JmsMessageEndpointManager -> public void setTransactionManager(Object transactionManager);1328020251;Set the XA transaction manager to use for wrapping endpoint_invocations, enlisting the endpoint resource in each such transaction._<p>The passed-in object may be a transaction manager which implements_Spring's {@link org.springframework.transaction.jta.TransactionFactory}_interface, or a plain {@link javax.transaction.TransactionManager}._<p>If no transaction manager is specified, the endpoint invocation_will simply not be wrapped in an XA transaction. Consult your_resource provider's ActivationSpec documentation for the local_transaction options of your particular provider._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setTransactionManager;public void setTransactionManager(Object transactionManager) {_		this.endpointFactory.setTransactionManager(transactionManager)__	};set,the,xa,transaction,manager,to,use,for,wrapping,endpoint,invocations,enlisting,the,endpoint,resource,in,each,such,transaction,p,the,passed,in,object,may,be,a,transaction,manager,which,implements,spring,s,link,org,springframework,transaction,jta,transaction,factory,interface,or,a,plain,link,javax,transaction,transaction,manager,p,if,no,transaction,manager,is,specified,the,endpoint,invocation,will,simply,not,be,wrapped,in,an,xa,transaction,consult,your,resource,provider,s,activation,spec,documentation,for,the,local,transaction,options,of,your,particular,provider,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,transaction,manager;public,void,set,transaction,manager,object,transaction,manager,this,endpoint,factory,set,transaction,manager,transaction,manager
JmsMessageEndpointManager -> public void setTransactionManager(Object transactionManager);1356735495;Set the XA transaction manager to use for wrapping endpoint_invocations, enlisting the endpoint resource in each such transaction._<p>The passed-in object may be a transaction manager which implements_Spring's {@link org.springframework.transaction.jta.TransactionFactory}_interface, or a plain {@link javax.transaction.TransactionManager}._<p>If no transaction manager is specified, the endpoint invocation_will simply not be wrapped in an XA transaction. Consult your_resource provider's ActivationSpec documentation for the local_transaction options of your particular provider._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setTransactionManager;public void setTransactionManager(Object transactionManager) {_		this.endpointFactory.setTransactionManager(transactionManager)__	};set,the,xa,transaction,manager,to,use,for,wrapping,endpoint,invocations,enlisting,the,endpoint,resource,in,each,such,transaction,p,the,passed,in,object,may,be,a,transaction,manager,which,implements,spring,s,link,org,springframework,transaction,jta,transaction,factory,interface,or,a,plain,link,javax,transaction,transaction,manager,p,if,no,transaction,manager,is,specified,the,endpoint,invocation,will,simply,not,be,wrapped,in,an,xa,transaction,consult,your,resource,provider,s,activation,spec,documentation,for,the,local,transaction,options,of,your,particular,provider,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,transaction,manager;public,void,set,transaction,manager,object,transaction,manager,this,endpoint,factory,set,transaction,manager,transaction,manager
JmsMessageEndpointManager -> public void setTransactionManager(Object transactionManager);1357119239;Set the XA transaction manager to use for wrapping endpoint_invocations, enlisting the endpoint resource in each such transaction._<p>The passed-in object may be a transaction manager which implements_Spring's {@link org.springframework.transaction.jta.TransactionFactory}_interface, or a plain {@link javax.transaction.TransactionManager}._<p>If no transaction manager is specified, the endpoint invocation_will simply not be wrapped in an XA transaction. Consult your_resource provider's ActivationSpec documentation for the local_transaction options of your particular provider._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setTransactionManager;public void setTransactionManager(Object transactionManager) {_		this.endpointFactory.setTransactionManager(transactionManager)__	};set,the,xa,transaction,manager,to,use,for,wrapping,endpoint,invocations,enlisting,the,endpoint,resource,in,each,such,transaction,p,the,passed,in,object,may,be,a,transaction,manager,which,implements,spring,s,link,org,springframework,transaction,jta,transaction,factory,interface,or,a,plain,link,javax,transaction,transaction,manager,p,if,no,transaction,manager,is,specified,the,endpoint,invocation,will,simply,not,be,wrapped,in,an,xa,transaction,consult,your,resource,provider,s,activation,spec,documentation,for,the,local,transaction,options,of,your,particular,provider,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,transaction,manager;public,void,set,transaction,manager,object,transaction,manager,this,endpoint,factory,set,transaction,manager,transaction,manager
JmsMessageEndpointManager -> public void setTransactionManager(Object transactionManager);1368482696;Set the XA transaction manager to use for wrapping endpoint_invocations, enlisting the endpoint resource in each such transaction._<p>The passed-in object may be a transaction manager which implements_Spring's {@link org.springframework.transaction.jta.TransactionFactory}_interface, or a plain {@link javax.transaction.TransactionManager}._<p>If no transaction manager is specified, the endpoint invocation_will simply not be wrapped in an XA transaction. Consult your_resource provider's ActivationSpec documentation for the local_transaction options of your particular provider._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setTransactionManager;public void setTransactionManager(Object transactionManager) {_		this.endpointFactory.setTransactionManager(transactionManager)__	};set,the,xa,transaction,manager,to,use,for,wrapping,endpoint,invocations,enlisting,the,endpoint,resource,in,each,such,transaction,p,the,passed,in,object,may,be,a,transaction,manager,which,implements,spring,s,link,org,springframework,transaction,jta,transaction,factory,interface,or,a,plain,link,javax,transaction,transaction,manager,p,if,no,transaction,manager,is,specified,the,endpoint,invocation,will,simply,not,be,wrapped,in,an,xa,transaction,consult,your,resource,provider,s,activation,spec,documentation,for,the,local,transaction,options,of,your,particular,provider,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,transaction,manager;public,void,set,transaction,manager,object,transaction,manager,this,endpoint,factory,set,transaction,manager,transaction,manager
JmsMessageEndpointManager -> public void setTransactionManager(Object transactionManager);1383603297;Set the XA transaction manager to use for wrapping endpoint_invocations, enlisting the endpoint resource in each such transaction._<p>The passed-in object may be a transaction manager which implements_Spring's {@link org.springframework.transaction.jta.TransactionFactory}_interface, or a plain {@link javax.transaction.TransactionManager}._<p>If no transaction manager is specified, the endpoint invocation_will simply not be wrapped in an XA transaction. Consult your_resource provider's ActivationSpec documentation for the local_transaction options of your particular provider._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setTransactionManager;public void setTransactionManager(Object transactionManager) {_		this.endpointFactory.setTransactionManager(transactionManager)__	};set,the,xa,transaction,manager,to,use,for,wrapping,endpoint,invocations,enlisting,the,endpoint,resource,in,each,such,transaction,p,the,passed,in,object,may,be,a,transaction,manager,which,implements,spring,s,link,org,springframework,transaction,jta,transaction,factory,interface,or,a,plain,link,javax,transaction,transaction,manager,p,if,no,transaction,manager,is,specified,the,endpoint,invocation,will,simply,not,be,wrapped,in,an,xa,transaction,consult,your,resource,provider,s,activation,spec,documentation,for,the,local,transaction,options,of,your,particular,provider,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,transaction,manager;public,void,set,transaction,manager,object,transaction,manager,this,endpoint,factory,set,transaction,manager,transaction,manager
JmsMessageEndpointManager -> public void setTransactionManager(Object transactionManager);1397718966;Set the XA transaction manager to use for wrapping endpoint_invocations, enlisting the endpoint resource in each such transaction._<p>The passed-in object may be a transaction manager which implements_Spring's {@link org.springframework.transaction.jta.TransactionFactory}_interface, or a plain {@link javax.transaction.TransactionManager}._<p>If no transaction manager is specified, the endpoint invocation_will simply not be wrapped in an XA transaction. Consult your_resource provider's ActivationSpec documentation for the local_transaction options of your particular provider._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setTransactionManager;public void setTransactionManager(Object transactionManager) {_		this.endpointFactory.setTransactionManager(transactionManager)__	};set,the,xa,transaction,manager,to,use,for,wrapping,endpoint,invocations,enlisting,the,endpoint,resource,in,each,such,transaction,p,the,passed,in,object,may,be,a,transaction,manager,which,implements,spring,s,link,org,springframework,transaction,jta,transaction,factory,interface,or,a,plain,link,javax,transaction,transaction,manager,p,if,no,transaction,manager,is,specified,the,endpoint,invocation,will,simply,not,be,wrapped,in,an,xa,transaction,consult,your,resource,provider,s,activation,spec,documentation,for,the,local,transaction,options,of,your,particular,provider,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,transaction,manager;public,void,set,transaction,manager,object,transaction,manager,this,endpoint,factory,set,transaction,manager,transaction,manager
JmsMessageEndpointManager -> public void setTransactionManager(Object transactionManager);1398347811;Set the XA transaction manager to use for wrapping endpoint_invocations, enlisting the endpoint resource in each such transaction._<p>The passed-in object may be a transaction manager which implements_Spring's {@link org.springframework.transaction.jta.TransactionFactory}_interface, or a plain {@link javax.transaction.TransactionManager}._<p>If no transaction manager is specified, the endpoint invocation_will simply not be wrapped in an XA transaction. Consult your_resource provider's ActivationSpec documentation for the local_transaction options of your particular provider._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setTransactionManager;public void setTransactionManager(Object transactionManager) {_		this.endpointFactory.setTransactionManager(transactionManager)__	};set,the,xa,transaction,manager,to,use,for,wrapping,endpoint,invocations,enlisting,the,endpoint,resource,in,each,such,transaction,p,the,passed,in,object,may,be,a,transaction,manager,which,implements,spring,s,link,org,springframework,transaction,jta,transaction,factory,interface,or,a,plain,link,javax,transaction,transaction,manager,p,if,no,transaction,manager,is,specified,the,endpoint,invocation,will,simply,not,be,wrapped,in,an,xa,transaction,consult,your,resource,provider,s,activation,spec,documentation,for,the,local,transaction,options,of,your,particular,provider,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,transaction,manager;public,void,set,transaction,manager,object,transaction,manager,this,endpoint,factory,set,transaction,manager,transaction,manager
JmsMessageEndpointManager -> public void setTransactionManager(Object transactionManager);1405696881;Set the XA transaction manager to use for wrapping endpoint_invocations, enlisting the endpoint resource in each such transaction._<p>The passed-in object may be a transaction manager which implements_Spring's {@link org.springframework.transaction.jta.TransactionFactory}_interface, or a plain {@link javax.transaction.TransactionManager}._<p>If no transaction manager is specified, the endpoint invocation_will simply not be wrapped in an XA transaction. Consult your_resource provider's ActivationSpec documentation for the local_transaction options of your particular provider._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setTransactionManager;public void setTransactionManager(Object transactionManager) {_		this.endpointFactory.setTransactionManager(transactionManager)__	};set,the,xa,transaction,manager,to,use,for,wrapping,endpoint,invocations,enlisting,the,endpoint,resource,in,each,such,transaction,p,the,passed,in,object,may,be,a,transaction,manager,which,implements,spring,s,link,org,springframework,transaction,jta,transaction,factory,interface,or,a,plain,link,javax,transaction,transaction,manager,p,if,no,transaction,manager,is,specified,the,endpoint,invocation,will,simply,not,be,wrapped,in,an,xa,transaction,consult,your,resource,provider,s,activation,spec,documentation,for,the,local,transaction,options,of,your,particular,provider,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,transaction,manager;public,void,set,transaction,manager,object,transaction,manager,this,endpoint,factory,set,transaction,manager,transaction,manager
JmsMessageEndpointManager -> public void setTransactionManager(Object transactionManager);1429198188;Set the XA transaction manager to use for wrapping endpoint_invocations, enlisting the endpoint resource in each such transaction._<p>The passed-in object may be a transaction manager which implements_Spring's {@link org.springframework.transaction.jta.TransactionFactory}_interface, or a plain {@link javax.transaction.TransactionManager}._<p>If no transaction manager is specified, the endpoint invocation_will simply not be wrapped in an XA transaction. Consult your_resource provider's ActivationSpec documentation for the local_transaction options of your particular provider._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setTransactionManager;public void setTransactionManager(Object transactionManager) {_		this.endpointFactory.setTransactionManager(transactionManager)__	};set,the,xa,transaction,manager,to,use,for,wrapping,endpoint,invocations,enlisting,the,endpoint,resource,in,each,such,transaction,p,the,passed,in,object,may,be,a,transaction,manager,which,implements,spring,s,link,org,springframework,transaction,jta,transaction,factory,interface,or,a,plain,link,javax,transaction,transaction,manager,p,if,no,transaction,manager,is,specified,the,endpoint,invocation,will,simply,not,be,wrapped,in,an,xa,transaction,consult,your,resource,provider,s,activation,spec,documentation,for,the,local,transaction,options,of,your,particular,provider,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,transaction,manager;public,void,set,transaction,manager,object,transaction,manager,this,endpoint,factory,set,transaction,manager,transaction,manager
JmsMessageEndpointManager -> public void setTransactionManager(Object transactionManager);1429516293;Set the XA transaction manager to use for wrapping endpoint_invocations, enlisting the endpoint resource in each such transaction._<p>The passed-in object may be a transaction manager which implements_Spring's {@link org.springframework.transaction.jta.TransactionFactory}_interface, or a plain {@link javax.transaction.TransactionManager}._<p>If no transaction manager is specified, the endpoint invocation_will simply not be wrapped in an XA transaction. Consult your_resource provider's ActivationSpec documentation for the local_transaction options of your particular provider._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setTransactionManager;public void setTransactionManager(Object transactionManager) {_		this.endpointFactory.setTransactionManager(transactionManager)__	};set,the,xa,transaction,manager,to,use,for,wrapping,endpoint,invocations,enlisting,the,endpoint,resource,in,each,such,transaction,p,the,passed,in,object,may,be,a,transaction,manager,which,implements,spring,s,link,org,springframework,transaction,jta,transaction,factory,interface,or,a,plain,link,javax,transaction,transaction,manager,p,if,no,transaction,manager,is,specified,the,endpoint,invocation,will,simply,not,be,wrapped,in,an,xa,transaction,consult,your,resource,provider,s,activation,spec,documentation,for,the,local,transaction,options,of,your,particular,provider,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,transaction,manager;public,void,set,transaction,manager,object,transaction,manager,this,endpoint,factory,set,transaction,manager,transaction,manager
JmsMessageEndpointManager -> public void setTransactionManager(Object transactionManager);1492514138;Set the XA transaction manager to use for wrapping endpoint_invocations, enlisting the endpoint resource in each such transaction._<p>The passed-in object may be a transaction manager which implements_Spring's {@link org.springframework.transaction.jta.TransactionFactory}_interface, or a plain {@link javax.transaction.TransactionManager}._<p>If no transaction manager is specified, the endpoint invocation_will simply not be wrapped in an XA transaction. Consult your_resource provider's ActivationSpec documentation for the local_transaction options of your particular provider._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setTransactionManager;public void setTransactionManager(Object transactionManager) {_		this.endpointFactory.setTransactionManager(transactionManager)__	};set,the,xa,transaction,manager,to,use,for,wrapping,endpoint,invocations,enlisting,the,endpoint,resource,in,each,such,transaction,p,the,passed,in,object,may,be,a,transaction,manager,which,implements,spring,s,link,org,springframework,transaction,jta,transaction,factory,interface,or,a,plain,link,javax,transaction,transaction,manager,p,if,no,transaction,manager,is,specified,the,endpoint,invocation,will,simply,not,be,wrapped,in,an,xa,transaction,consult,your,resource,provider,s,activation,spec,documentation,for,the,local,transaction,options,of,your,particular,provider,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,transaction,manager;public,void,set,transaction,manager,object,transaction,manager,this,endpoint,factory,set,transaction,manager,transaction,manager
JmsMessageEndpointManager -> public void setTransactionManager(Object transactionManager);1495868221;Set the XA transaction manager to use for wrapping endpoint_invocations, enlisting the endpoint resource in each such transaction._<p>The passed-in object may be a transaction manager which implements_Spring's {@link org.springframework.transaction.jta.TransactionFactory}_interface, or a plain {@link javax.transaction.TransactionManager}._<p>If no transaction manager is specified, the endpoint invocation_will simply not be wrapped in an XA transaction. Consult your_resource provider's ActivationSpec documentation for the local_transaction options of your particular provider._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setTransactionManager;public void setTransactionManager(Object transactionManager) {_		this.endpointFactory.setTransactionManager(transactionManager)__	};set,the,xa,transaction,manager,to,use,for,wrapping,endpoint,invocations,enlisting,the,endpoint,resource,in,each,such,transaction,p,the,passed,in,object,may,be,a,transaction,manager,which,implements,spring,s,link,org,springframework,transaction,jta,transaction,factory,interface,or,a,plain,link,javax,transaction,transaction,manager,p,if,no,transaction,manager,is,specified,the,endpoint,invocation,will,simply,not,be,wrapped,in,an,xa,transaction,consult,your,resource,provider,s,activation,spec,documentation,for,the,local,transaction,options,of,your,particular,provider,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,transaction,manager;public,void,set,transaction,manager,object,transaction,manager,this,endpoint,factory,set,transaction,manager,transaction,manager
JmsMessageEndpointManager -> public void setTransactionManager(Object transactionManager);1496837955;Set the XA transaction manager to use for wrapping endpoint_invocations, enlisting the endpoint resource in each such transaction._<p>The passed-in object may be a transaction manager which implements_Spring's {@link org.springframework.transaction.jta.TransactionFactory}_interface, or a plain {@link javax.transaction.TransactionManager}._<p>If no transaction manager is specified, the endpoint invocation_will simply not be wrapped in an XA transaction. Consult your_resource provider's ActivationSpec documentation for the local_transaction options of your particular provider._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setTransactionManager;public void setTransactionManager(Object transactionManager) {_		this.endpointFactory.setTransactionManager(transactionManager)__	};set,the,xa,transaction,manager,to,use,for,wrapping,endpoint,invocations,enlisting,the,endpoint,resource,in,each,such,transaction,p,the,passed,in,object,may,be,a,transaction,manager,which,implements,spring,s,link,org,springframework,transaction,jta,transaction,factory,interface,or,a,plain,link,javax,transaction,transaction,manager,p,if,no,transaction,manager,is,specified,the,endpoint,invocation,will,simply,not,be,wrapped,in,an,xa,transaction,consult,your,resource,provider,s,activation,spec,documentation,for,the,local,transaction,options,of,your,particular,provider,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,transaction,manager;public,void,set,transaction,manager,object,transaction,manager,this,endpoint,factory,set,transaction,manager,transaction,manager
JmsMessageEndpointManager -> public void setTransactionManager(Object transactionManager);1498780456;Set the XA transaction manager to use for wrapping endpoint_invocations, enlisting the endpoint resource in each such transaction._<p>The passed-in object may be a transaction manager which implements_Spring's {@link org.springframework.transaction.jta.TransactionFactory}_interface, or a plain {@link javax.transaction.TransactionManager}._<p>If no transaction manager is specified, the endpoint invocation_will simply not be wrapped in an XA transaction. Consult your_resource provider's ActivationSpec documentation for the local_transaction options of your particular provider._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setTransactionManager;public void setTransactionManager(Object transactionManager) {_		this.endpointFactory.setTransactionManager(transactionManager)__	};set,the,xa,transaction,manager,to,use,for,wrapping,endpoint,invocations,enlisting,the,endpoint,resource,in,each,such,transaction,p,the,passed,in,object,may,be,a,transaction,manager,which,implements,spring,s,link,org,springframework,transaction,jta,transaction,factory,interface,or,a,plain,link,javax,transaction,transaction,manager,p,if,no,transaction,manager,is,specified,the,endpoint,invocation,will,simply,not,be,wrapped,in,an,xa,transaction,consult,your,resource,provider,s,activation,spec,documentation,for,the,local,transaction,options,of,your,particular,provider,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,transaction,manager;public,void,set,transaction,manager,object,transaction,manager,this,endpoint,factory,set,transaction,manager,transaction,manager
JmsMessageEndpointManager -> public void setTransactionManager(Object transactionManager);1500448076;Set the XA transaction manager to use for wrapping endpoint_invocations, enlisting the endpoint resource in each such transaction._<p>The passed-in object may be a transaction manager which implements_Spring's {@link org.springframework.transaction.jta.TransactionFactory}_interface, or a plain {@link javax.transaction.TransactionManager}._<p>If no transaction manager is specified, the endpoint invocation_will simply not be wrapped in an XA transaction. Consult your_resource provider's ActivationSpec documentation for the local_transaction options of your particular provider._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setTransactionManager;public void setTransactionManager(Object transactionManager) {_		this.endpointFactory.setTransactionManager(transactionManager)__	};set,the,xa,transaction,manager,to,use,for,wrapping,endpoint,invocations,enlisting,the,endpoint,resource,in,each,such,transaction,p,the,passed,in,object,may,be,a,transaction,manager,which,implements,spring,s,link,org,springframework,transaction,jta,transaction,factory,interface,or,a,plain,link,javax,transaction,transaction,manager,p,if,no,transaction,manager,is,specified,the,endpoint,invocation,will,simply,not,be,wrapped,in,an,xa,transaction,consult,your,resource,provider,s,activation,spec,documentation,for,the,local,transaction,options,of,your,particular,provider,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,transaction,manager;public,void,set,transaction,manager,object,transaction,manager,this,endpoint,factory,set,transaction,manager,transaction,manager
JmsMessageEndpointManager -> public void setTransactionManager(Object transactionManager);1502974979;Set the XA transaction manager to use for wrapping endpoint_invocations, enlisting the endpoint resource in each such transaction._<p>The passed-in object may be a transaction manager which implements_Spring's {@link org.springframework.transaction.jta.TransactionFactory}_interface, or a plain {@link javax.transaction.TransactionManager}._<p>If no transaction manager is specified, the endpoint invocation_will simply not be wrapped in an XA transaction. Consult your_resource provider's ActivationSpec documentation for the local_transaction options of your particular provider._<p>This is a shortcut for configuring a dedicated JmsMessageEndpointFactory._@see JmsMessageEndpointFactory#setTransactionManager;public void setTransactionManager(Object transactionManager) {_		this.endpointFactory.setTransactionManager(transactionManager)__	};set,the,xa,transaction,manager,to,use,for,wrapping,endpoint,invocations,enlisting,the,endpoint,resource,in,each,such,transaction,p,the,passed,in,object,may,be,a,transaction,manager,which,implements,spring,s,link,org,springframework,transaction,jta,transaction,factory,interface,or,a,plain,link,javax,transaction,transaction,manager,p,if,no,transaction,manager,is,specified,the,endpoint,invocation,will,simply,not,be,wrapped,in,an,xa,transaction,consult,your,resource,provider,s,activation,spec,documentation,for,the,local,transaction,options,of,your,particular,provider,p,this,is,a,shortcut,for,configuring,a,dedicated,jms,message,endpoint,factory,see,jms,message,endpoint,factory,set,transaction,manager;public,void,set,transaction,manager,object,transaction,manager,this,endpoint,factory,set,transaction,manager,transaction,manager
JmsMessageEndpointManager -> @Override 	public void setBeanName(String beanName);1383603297;Set the name of this message endpoint. Populated with the bean name_automatically when defined within Spring's bean factory.;@Override_	public void setBeanName(String beanName) {_		this.endpointFactory.setBeanName(beanName)__	};set,the,name,of,this,message,endpoint,populated,with,the,bean,name,automatically,when,defined,within,spring,s,bean,factory;override,public,void,set,bean,name,string,bean,name,this,endpoint,factory,set,bean,name,bean,name
JmsMessageEndpointManager -> @Override 	public void setBeanName(String beanName);1397718966;Set the name of this message endpoint. Populated with the bean name_automatically when defined within Spring's bean factory.;@Override_	public void setBeanName(String beanName) {_		this.endpointFactory.setBeanName(beanName)__	};set,the,name,of,this,message,endpoint,populated,with,the,bean,name,automatically,when,defined,within,spring,s,bean,factory;override,public,void,set,bean,name,string,bean,name,this,endpoint,factory,set,bean,name,bean,name
JmsMessageEndpointManager -> @Override 	public void setBeanName(String beanName);1398347811;Set the name of this message endpoint. Populated with the bean name_automatically when defined within Spring's bean factory.;@Override_	public void setBeanName(String beanName) {_		this.endpointFactory.setBeanName(beanName)__	};set,the,name,of,this,message,endpoint,populated,with,the,bean,name,automatically,when,defined,within,spring,s,bean,factory;override,public,void,set,bean,name,string,bean,name,this,endpoint,factory,set,bean,name,bean,name
JmsMessageEndpointManager -> @Override 	public void setBeanName(String beanName);1405696881;Set the name of this message endpoint. Populated with the bean name_automatically when defined within Spring's bean factory.;@Override_	public void setBeanName(String beanName) {_		this.endpointFactory.setBeanName(beanName)__	};set,the,name,of,this,message,endpoint,populated,with,the,bean,name,automatically,when,defined,within,spring,s,bean,factory;override,public,void,set,bean,name,string,bean,name,this,endpoint,factory,set,bean,name,bean,name
JmsMessageEndpointManager -> @Override 	public void setBeanName(String beanName);1429198188;Set the name of this message endpoint. Populated with the bean name_automatically when defined within Spring's bean factory.;@Override_	public void setBeanName(String beanName) {_		this.endpointFactory.setBeanName(beanName)__	};set,the,name,of,this,message,endpoint,populated,with,the,bean,name,automatically,when,defined,within,spring,s,bean,factory;override,public,void,set,bean,name,string,bean,name,this,endpoint,factory,set,bean,name,bean,name
JmsMessageEndpointManager -> @Override 	public void setBeanName(String beanName);1429516293;Set the name of this message endpoint. Populated with the bean name_automatically when defined within Spring's bean factory.;@Override_	public void setBeanName(String beanName) {_		this.endpointFactory.setBeanName(beanName)__	};set,the,name,of,this,message,endpoint,populated,with,the,bean,name,automatically,when,defined,within,spring,s,bean,factory;override,public,void,set,bean,name,string,bean,name,this,endpoint,factory,set,bean,name,bean,name
JmsMessageEndpointManager -> @Override 	public void setBeanName(String beanName);1492514138;Set the name of this message endpoint. Populated with the bean name_automatically when defined within Spring's bean factory.;@Override_	public void setBeanName(String beanName) {_		this.endpointFactory.setBeanName(beanName)__	};set,the,name,of,this,message,endpoint,populated,with,the,bean,name,automatically,when,defined,within,spring,s,bean,factory;override,public,void,set,bean,name,string,bean,name,this,endpoint,factory,set,bean,name,bean,name
JmsMessageEndpointManager -> @Override 	public void setBeanName(String beanName);1495868221;Set the name of this message endpoint. Populated with the bean name_automatically when defined within Spring's bean factory.;@Override_	public void setBeanName(String beanName) {_		this.endpointFactory.setBeanName(beanName)__	};set,the,name,of,this,message,endpoint,populated,with,the,bean,name,automatically,when,defined,within,spring,s,bean,factory;override,public,void,set,bean,name,string,bean,name,this,endpoint,factory,set,bean,name,bean,name
JmsMessageEndpointManager -> @Override 	public void setBeanName(String beanName);1496837955;Set the name of this message endpoint. Populated with the bean name_automatically when defined within Spring's bean factory.;@Override_	public void setBeanName(String beanName) {_		this.endpointFactory.setBeanName(beanName)__	};set,the,name,of,this,message,endpoint,populated,with,the,bean,name,automatically,when,defined,within,spring,s,bean,factory;override,public,void,set,bean,name,string,bean,name,this,endpoint,factory,set,bean,name,bean,name
JmsMessageEndpointManager -> @Override 	public void setBeanName(String beanName);1498780456;Set the name of this message endpoint. Populated with the bean name_automatically when defined within Spring's bean factory.;@Override_	public void setBeanName(String beanName) {_		this.endpointFactory.setBeanName(beanName)__	};set,the,name,of,this,message,endpoint,populated,with,the,bean,name,automatically,when,defined,within,spring,s,bean,factory;override,public,void,set,bean,name,string,bean,name,this,endpoint,factory,set,bean,name,bean,name
JmsMessageEndpointManager -> @Override 	public void setBeanName(String beanName);1500448076;Set the name of this message endpoint. Populated with the bean name_automatically when defined within Spring's bean factory.;@Override_	public void setBeanName(String beanName) {_		this.endpointFactory.setBeanName(beanName)__	};set,the,name,of,this,message,endpoint,populated,with,the,bean,name,automatically,when,defined,within,spring,s,bean,factory;override,public,void,set,bean,name,string,bean,name,this,endpoint,factory,set,bean,name,bean,name
JmsMessageEndpointManager -> @Override 	public void setBeanName(String beanName);1502974979;Set the name of this message endpoint. Populated with the bean name_automatically when defined within Spring's bean factory.;@Override_	public void setBeanName(String beanName) {_		this.endpointFactory.setBeanName(beanName)__	};set,the,name,of,this,message,endpoint,populated,with,the,bean,name,automatically,when,defined,within,spring,s,bean,factory;override,public,void,set,bean,name,string,bean,name,this,endpoint,factory,set,bean,name,bean,name
JmsMessageEndpointManager -> public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig);1328020251;Specify the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener._<p>This config object will be turned into a concrete JCA 1.5 ActivationSpec_object through a {@link #setActivationSpecFactory JmsActivationSpecFactory}.;public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig) {_		this.activationSpecConfig = activationSpecConfig__	};specify,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,p,this,config,object,will,be,turned,into,a,concrete,jca,1,5,activation,spec,object,through,a,link,set,activation,spec,factory,jms,activation,spec,factory;public,void,set,activation,spec,config,jms,activation,spec,config,activation,spec,config,this,activation,spec,config,activation,spec,config
JmsMessageEndpointManager -> public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig);1356735495;Specify the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener._<p>This config object will be turned into a concrete JCA 1.5 ActivationSpec_object through a {@link #setActivationSpecFactory JmsActivationSpecFactory}.;public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig) {_		this.activationSpecConfig = activationSpecConfig__	};specify,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,p,this,config,object,will,be,turned,into,a,concrete,jca,1,5,activation,spec,object,through,a,link,set,activation,spec,factory,jms,activation,spec,factory;public,void,set,activation,spec,config,jms,activation,spec,config,activation,spec,config,this,activation,spec,config,activation,spec,config
JmsMessageEndpointManager -> public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig);1357119239;Specify the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener._<p>This config object will be turned into a concrete JCA 1.5 ActivationSpec_object through a {@link #setActivationSpecFactory JmsActivationSpecFactory}.;public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig) {_		this.activationSpecConfig = activationSpecConfig__	};specify,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,p,this,config,object,will,be,turned,into,a,concrete,jca,1,5,activation,spec,object,through,a,link,set,activation,spec,factory,jms,activation,spec,factory;public,void,set,activation,spec,config,jms,activation,spec,config,activation,spec,config,this,activation,spec,config,activation,spec,config
JmsMessageEndpointManager -> public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig);1368482696;Specify the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener._<p>This config object will be turned into a concrete JCA 1.5 ActivationSpec_object through a {@link #setActivationSpecFactory JmsActivationSpecFactory}.;public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig) {_		this.activationSpecConfig = activationSpecConfig__	};specify,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,p,this,config,object,will,be,turned,into,a,concrete,jca,1,5,activation,spec,object,through,a,link,set,activation,spec,factory,jms,activation,spec,factory;public,void,set,activation,spec,config,jms,activation,spec,config,activation,spec,config,this,activation,spec,config,activation,spec,config
JmsMessageEndpointManager -> public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig);1383603297;Specify the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener._<p>This config object will be turned into a concrete JCA 1.5 ActivationSpec_object through a {@link #setActivationSpecFactory JmsActivationSpecFactory}.;public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig) {_		this.activationSpecConfig = activationSpecConfig__	};specify,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,p,this,config,object,will,be,turned,into,a,concrete,jca,1,5,activation,spec,object,through,a,link,set,activation,spec,factory,jms,activation,spec,factory;public,void,set,activation,spec,config,jms,activation,spec,config,activation,spec,config,this,activation,spec,config,activation,spec,config
JmsMessageEndpointManager -> public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig);1397718966;Specify the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener._<p>This config object will be turned into a concrete JCA 1.5 ActivationSpec_object through a {@link #setActivationSpecFactory JmsActivationSpecFactory}.;public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig) {_		this.activationSpecConfig = activationSpecConfig__	};specify,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,p,this,config,object,will,be,turned,into,a,concrete,jca,1,5,activation,spec,object,through,a,link,set,activation,spec,factory,jms,activation,spec,factory;public,void,set,activation,spec,config,jms,activation,spec,config,activation,spec,config,this,activation,spec,config,activation,spec,config
JmsMessageEndpointManager -> public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig);1398347811;Specify the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener._<p>This config object will be turned into a concrete JCA 1.5 ActivationSpec_object through a {@link #setActivationSpecFactory JmsActivationSpecFactory}.;public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig) {_		this.activationSpecConfig = activationSpecConfig__	};specify,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,p,this,config,object,will,be,turned,into,a,concrete,jca,1,5,activation,spec,object,through,a,link,set,activation,spec,factory,jms,activation,spec,factory;public,void,set,activation,spec,config,jms,activation,spec,config,activation,spec,config,this,activation,spec,config,activation,spec,config
JmsMessageEndpointManager -> public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig);1405696881;Specify the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener._<p>This config object will be turned into a concrete JCA 1.5 ActivationSpec_object through a {@link #setActivationSpecFactory JmsActivationSpecFactory}.;public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig) {_		this.activationSpecConfig = activationSpecConfig__	};specify,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,p,this,config,object,will,be,turned,into,a,concrete,jca,1,5,activation,spec,object,through,a,link,set,activation,spec,factory,jms,activation,spec,factory;public,void,set,activation,spec,config,jms,activation,spec,config,activation,spec,config,this,activation,spec,config,activation,spec,config
JmsMessageEndpointManager -> public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig);1429198188;Specify the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener._<p>This config object will be turned into a concrete JCA 1.5 ActivationSpec_object through a {@link #setActivationSpecFactory JmsActivationSpecFactory}.;public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig) {_		this.activationSpecConfig = activationSpecConfig__	};specify,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,p,this,config,object,will,be,turned,into,a,concrete,jca,1,5,activation,spec,object,through,a,link,set,activation,spec,factory,jms,activation,spec,factory;public,void,set,activation,spec,config,jms,activation,spec,config,activation,spec,config,this,activation,spec,config,activation,spec,config
JmsMessageEndpointManager -> public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig);1429516293;Specify the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener._<p>This config object will be turned into a concrete JCA 1.5 ActivationSpec_object through a {@link #setActivationSpecFactory JmsActivationSpecFactory}.;public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig) {_		this.activationSpecConfig = activationSpecConfig__	};specify,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,p,this,config,object,will,be,turned,into,a,concrete,jca,1,5,activation,spec,object,through,a,link,set,activation,spec,factory,jms,activation,spec,factory;public,void,set,activation,spec,config,jms,activation,spec,config,activation,spec,config,this,activation,spec,config,activation,spec,config
JmsMessageEndpointManager -> public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig);1492514138;Specify the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener._<p>This config object will be turned into a concrete JCA 1.5 ActivationSpec_object through a {@link #setActivationSpecFactory JmsActivationSpecFactory}.;public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig) {_		this.activationSpecConfig = activationSpecConfig__	};specify,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,p,this,config,object,will,be,turned,into,a,concrete,jca,1,5,activation,spec,object,through,a,link,set,activation,spec,factory,jms,activation,spec,factory;public,void,set,activation,spec,config,jms,activation,spec,config,activation,spec,config,this,activation,spec,config,activation,spec,config
JmsMessageEndpointManager -> public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig);1495868221;Specify the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener._<p>This config object will be turned into a concrete JCA 1.5 ActivationSpec_object through a {@link #setActivationSpecFactory JmsActivationSpecFactory}.;public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig) {_		this.activationSpecConfig = activationSpecConfig__	};specify,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,p,this,config,object,will,be,turned,into,a,concrete,jca,1,5,activation,spec,object,through,a,link,set,activation,spec,factory,jms,activation,spec,factory;public,void,set,activation,spec,config,jms,activation,spec,config,activation,spec,config,this,activation,spec,config,activation,spec,config
JmsMessageEndpointManager -> public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig);1496837955;Specify the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener._<p>This config object will be turned into a concrete JCA 1.5 ActivationSpec_object through a {@link #setActivationSpecFactory JmsActivationSpecFactory}.;public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig) {_		this.activationSpecConfig = activationSpecConfig__	};specify,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,p,this,config,object,will,be,turned,into,a,concrete,jca,1,5,activation,spec,object,through,a,link,set,activation,spec,factory,jms,activation,spec,factory;public,void,set,activation,spec,config,jms,activation,spec,config,activation,spec,config,this,activation,spec,config,activation,spec,config
JmsMessageEndpointManager -> public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig);1498780456;Specify the {@link JmsActivationSpecConfig} object that this endpoint manager_should use for activating its listener._<p>This config object will be turned into a concrete JCA 1.5 ActivationSpec_object through a {@link #setActivationSpecFactory JmsActivationSpecFactory}.;public void setActivationSpecConfig(JmsActivationSpecConfig activationSpecConfig) {_		this.activationSpecConfig = activationSpecConfig__	};specify,the,link,jms,activation,spec,config,object,that,this,endpoint,manager,should,use,for,activating,its,listener,p,this,config,object,will,be,turned,into,a,concrete,jca,1,5,activation,spec,object,through,a,link,set,activation,spec,factory,jms,activation,spec,factory;public,void,set,activation,spec,config,jms,activation,spec,config,activation,spec,config,this,activation,spec,config,activation,spec,config
JmsMessageEndpointManager -> public MessageListener getMessageListener();1397718966;Return the JMS MessageListener for this endpoint.;public MessageListener getMessageListener() {_		return this.endpointFactory.getMessageListener()__	};return,the,jms,message,listener,for,this,endpoint;public,message,listener,get,message,listener,return,this,endpoint,factory,get,message,listener
JmsMessageEndpointManager -> public MessageListener getMessageListener();1398347811;Return the JMS MessageListener for this endpoint.;public MessageListener getMessageListener() {_		return this.endpointFactory.getMessageListener()__	};return,the,jms,message,listener,for,this,endpoint;public,message,listener,get,message,listener,return,this,endpoint,factory,get,message,listener
JmsMessageEndpointManager -> public MessageListener getMessageListener();1405696881;Return the JMS MessageListener for this endpoint.;public MessageListener getMessageListener() {_		return this.endpointFactory.getMessageListener()__	};return,the,jms,message,listener,for,this,endpoint;public,message,listener,get,message,listener,return,this,endpoint,factory,get,message,listener
JmsMessageEndpointManager -> public MessageListener getMessageListener();1429198188;Return the JMS MessageListener for this endpoint.;public MessageListener getMessageListener() {_		return this.endpointFactory.getMessageListener()__	};return,the,jms,message,listener,for,this,endpoint;public,message,listener,get,message,listener,return,this,endpoint,factory,get,message,listener
JmsMessageEndpointManager -> public MessageListener getMessageListener();1429516293;Return the JMS MessageListener for this endpoint.;public MessageListener getMessageListener() {_		return this.endpointFactory.getMessageListener()__	};return,the,jms,message,listener,for,this,endpoint;public,message,listener,get,message,listener,return,this,endpoint,factory,get,message,listener
JmsMessageEndpointManager -> public MessageListener getMessageListener();1492514138;Return the JMS MessageListener for this endpoint.;public MessageListener getMessageListener() {_		return this.endpointFactory.getMessageListener()__	};return,the,jms,message,listener,for,this,endpoint;public,message,listener,get,message,listener,return,this,endpoint,factory,get,message,listener
JmsMessageEndpointManager -> public MessageListener getMessageListener();1495868221;Return the JMS MessageListener for this endpoint.;public MessageListener getMessageListener() {_		return this.endpointFactory.getMessageListener()__	};return,the,jms,message,listener,for,this,endpoint;public,message,listener,get,message,listener,return,this,endpoint,factory,get,message,listener
JmsMessageEndpointManager -> public MessageListener getMessageListener();1496837955;Return the JMS MessageListener for this endpoint.;public MessageListener getMessageListener() {_		return this.endpointFactory.getMessageListener()__	};return,the,jms,message,listener,for,this,endpoint;public,message,listener,get,message,listener,return,this,endpoint,factory,get,message,listener
JmsMessageEndpointManager -> public MessageListener getMessageListener();1498780456;Return the JMS MessageListener for this endpoint.;public MessageListener getMessageListener() {_		return this.endpointFactory.getMessageListener()__	};return,the,jms,message,listener,for,this,endpoint;public,message,listener,get,message,listener,return,this,endpoint,factory,get,message,listener
JmsMessageEndpointManager -> public MessageListener getMessageListener();1500448076;Return the JMS MessageListener for this endpoint.;public MessageListener getMessageListener() {_		return this.endpointFactory.getMessageListener()__	};return,the,jms,message,listener,for,this,endpoint;public,message,listener,get,message,listener,return,this,endpoint,factory,get,message,listener
JmsMessageEndpointManager -> public MessageListener getMessageListener();1502974979;Return the JMS MessageListener for this endpoint.;public MessageListener getMessageListener() {_		return this.endpointFactory.getMessageListener()__	};return,the,jms,message,listener,for,this,endpoint;public,message,listener,get,message,listener,return,this,endpoint,factory,get,message,listener
