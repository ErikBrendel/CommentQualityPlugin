commented;modifiers;parameterAmount;loc;comment;code
true;;2;1;/**  * Convert a Java object to a JMS Message using the supplied session  * to create the message object.  * @param object the object to convert  * @param session the Session to use for creating a JMS Message  * @return the JMS Message  * @throws javax.jms.JMSException if thrown by JMS API methods  * @throws MessageConversionException in case of conversion failure  */ ;/**  * Convert a Java object to a JMS Message using the supplied session  * to create the message object.  * @param object the object to convert  * @param session the Session to use for creating a JMS Message  * @return the JMS Message  * @throws javax.jms.JMSException if thrown by JMS API methods  * @throws MessageConversionException in case of conversion failure  */ Message toMessage(Object object, Session session) throws JMSException, MessageConversionException.
true;;1;1;/**  * Convert from a JMS Message to a Java object.  * @param message the message to convert  * @return the converted Java object  * @throws javax.jms.JMSException if thrown by JMS API methods  * @throws MessageConversionException in case of conversion failure  */ ;/**  * Convert from a JMS Message to a Java object.  * @param message the message to convert  * @return the converted Java object  * @throws javax.jms.JMSException if thrown by JMS API methods  * @throws MessageConversionException in case of conversion failure  */ Object fromMessage(Message message) throws JMSException, MessageConversionException.
