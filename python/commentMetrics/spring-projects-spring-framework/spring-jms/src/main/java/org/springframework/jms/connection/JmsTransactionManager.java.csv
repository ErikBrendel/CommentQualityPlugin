# id;timestamp;commentText;codeText;commentWords;codeWords
JmsTransactionManager -> protected Session createSession(Connection con) throws JMSException;1328020251;Create a JMS Session for the given Connection._<p>This implementation uses JMS 1.1 API._@param con the JMS Connection to create a Session for_@return the new JMS Session_@throws javax.jms.JMSException if thrown by JMS API methods;protected Session createSession(Connection con) throws JMSException {_		return con.createSession(true, Session.AUTO_ACKNOWLEDGE)__	};create,a,jms,session,for,the,given,connection,p,this,implementation,uses,jms,1,1,api,param,con,the,jms,connection,to,create,a,session,for,return,the,new,jms,session,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,session,create,session,connection,con,throws,jmsexception,return,con,create,session,true,session
JmsTransactionManager -> protected Session createSession(Connection con) throws JMSException;1329393628;Create a JMS Session for the given Connection._<p>This implementation uses JMS 1.1 API._@param con the JMS Connection to create a Session for_@return the new JMS Session_@throws javax.jms.JMSException if thrown by JMS API methods;protected Session createSession(Connection con) throws JMSException {_		return con.createSession(true, Session.AUTO_ACKNOWLEDGE)__	};create,a,jms,session,for,the,given,connection,p,this,implementation,uses,jms,1,1,api,param,con,the,jms,connection,to,create,a,session,for,return,the,new,jms,session,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,session,create,session,connection,con,throws,jmsexception,return,con,create,session,true,session
JmsTransactionManager -> protected Session createSession(Connection con) throws JMSException;1356735495;Create a JMS Session for the given Connection._<p>This implementation uses JMS 1.1 API._@param con the JMS Connection to create a Session for_@return the new JMS Session_@throws javax.jms.JMSException if thrown by JMS API methods;protected Session createSession(Connection con) throws JMSException {_		return con.createSession(true, Session.AUTO_ACKNOWLEDGE)__	};create,a,jms,session,for,the,given,connection,p,this,implementation,uses,jms,1,1,api,param,con,the,jms,connection,to,create,a,session,for,return,the,new,jms,session,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,session,create,session,connection,con,throws,jmsexception,return,con,create,session,true,session
JmsTransactionManager -> protected Session createSession(Connection con) throws JMSException;1357119239;Create a JMS Session for the given Connection._<p>This implementation uses JMS 1.1 API._@param con the JMS Connection to create a Session for_@return the new JMS Session_@throws javax.jms.JMSException if thrown by JMS API methods;protected Session createSession(Connection con) throws JMSException {_		return con.createSession(true, Session.AUTO_ACKNOWLEDGE)__	};create,a,jms,session,for,the,given,connection,p,this,implementation,uses,jms,1,1,api,param,con,the,jms,connection,to,create,a,session,for,return,the,new,jms,session,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,session,create,session,connection,con,throws,jmsexception,return,con,create,session,true,session
JmsTransactionManager -> protected Session createSession(Connection con) throws JMSException;1368482696;Create a JMS Session for the given Connection._<p>This implementation uses JMS 1.1 API._@param con the JMS Connection to create a Session for_@return the new JMS Session_@throws javax.jms.JMSException if thrown by JMS API methods;protected Session createSession(Connection con) throws JMSException {_		return con.createSession(true, Session.AUTO_ACKNOWLEDGE)__	};create,a,jms,session,for,the,given,connection,p,this,implementation,uses,jms,1,1,api,param,con,the,jms,connection,to,create,a,session,for,return,the,new,jms,session,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,session,create,session,connection,con,throws,jmsexception,return,con,create,session,true,session
JmsTransactionManager -> protected Session createSession(Connection con) throws JMSException;1374672550;Create a JMS Session for the given Connection._<p>This implementation uses JMS 1.1 API._@param con the JMS Connection to create a Session for_@return the new JMS Session_@throws javax.jms.JMSException if thrown by JMS API methods;protected Session createSession(Connection con) throws JMSException {_		return con.createSession(true, Session.AUTO_ACKNOWLEDGE)__	};create,a,jms,session,for,the,given,connection,p,this,implementation,uses,jms,1,1,api,param,con,the,jms,connection,to,create,a,session,for,return,the,new,jms,session,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,session,create,session,connection,con,throws,jmsexception,return,con,create,session,true,session
JmsTransactionManager -> protected Session createSession(Connection con) throws JMSException;1405696891;Create a JMS Session for the given Connection._<p>This implementation uses JMS 1.1 API._@param con the JMS Connection to create a Session for_@return the new JMS Session_@throws javax.jms.JMSException if thrown by JMS API methods;protected Session createSession(Connection con) throws JMSException {_		return con.createSession(true, Session.AUTO_ACKNOWLEDGE)__	};create,a,jms,session,for,the,given,connection,p,this,implementation,uses,jms,1,1,api,param,con,the,jms,connection,to,create,a,session,for,return,the,new,jms,session,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,session,create,session,connection,con,throws,jmsexception,return,con,create,session,true,session
JmsTransactionManager -> protected Session createSession(Connection con) throws JMSException;1412620305;Create a JMS Session for the given Connection._<p>This implementation uses JMS 1.1 API._@param con the JMS Connection to create a Session for_@return the new JMS Session_@throws javax.jms.JMSException if thrown by JMS API methods;protected Session createSession(Connection con) throws JMSException {_		return con.createSession(true, Session.AUTO_ACKNOWLEDGE)__	};create,a,jms,session,for,the,given,connection,p,this,implementation,uses,jms,1,1,api,param,con,the,jms,connection,to,create,a,session,for,return,the,new,jms,session,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,session,create,session,connection,con,throws,jmsexception,return,con,create,session,true,session
JmsTransactionManager -> protected Session createSession(Connection con) throws JMSException;1476521730;Create a JMS Session for the given Connection._<p>This implementation uses JMS 1.1 API._@param con the JMS Connection to create a Session for_@return the new JMS Session_@throws javax.jms.JMSException if thrown by JMS API methods;protected Session createSession(Connection con) throws JMSException {_		return con.createSession(true, Session.AUTO_ACKNOWLEDGE)__	};create,a,jms,session,for,the,given,connection,p,this,implementation,uses,jms,1,1,api,param,con,the,jms,connection,to,create,a,session,for,return,the,new,jms,session,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,session,create,session,connection,con,throws,jmsexception,return,con,create,session,true,session
JmsTransactionManager -> protected Session createSession(Connection con) throws JMSException;1486062666;Create a JMS Session for the given Connection._<p>This implementation uses JMS 1.1 API._@param con the JMS Connection to create a Session for_@return the new JMS Session_@throws javax.jms.JMSException if thrown by JMS API methods;protected Session createSession(Connection con) throws JMSException {_		return con.createSession(true, Session.AUTO_ACKNOWLEDGE)__	};create,a,jms,session,for,the,given,connection,p,this,implementation,uses,jms,1,1,api,param,con,the,jms,connection,to,create,a,session,for,return,the,new,jms,session,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,session,create,session,connection,con,throws,jmsexception,return,con,create,session,true,session
JmsTransactionManager -> protected Session createSession(Connection con) throws JMSException;1496259743;Create a JMS Session for the given Connection._<p>This implementation uses JMS 1.1 API._@param con the JMS Connection to create a Session for_@return the new JMS Session_@throws javax.jms.JMSException if thrown by JMS API methods;protected Session createSession(Connection con) throws JMSException {_		return con.createSession(true, Session.AUTO_ACKNOWLEDGE)__	};create,a,jms,session,for,the,given,connection,p,this,implementation,uses,jms,1,1,api,param,con,the,jms,connection,to,create,a,session,for,return,the,new,jms,session,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,session,create,session,connection,con,throws,jmsexception,return,con,create,session,true,session
JmsTransactionManager -> protected Session createSession(Connection con) throws JMSException;1496837955;Create a JMS Session for the given Connection._<p>This implementation uses JMS 1.1 API._@param con the JMS Connection to create a Session for_@return the new JMS Session_@throws javax.jms.JMSException if thrown by JMS API methods;protected Session createSession(Connection con) throws JMSException {_		return con.createSession(true, Session.AUTO_ACKNOWLEDGE)__	};create,a,jms,session,for,the,given,connection,p,this,implementation,uses,jms,1,1,api,param,con,the,jms,connection,to,create,a,session,for,return,the,new,jms,session,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,session,create,session,connection,con,throws,jmsexception,return,con,create,session,true,session
JmsTransactionManager -> protected Session createSession(Connection con) throws JMSException;1498780456;Create a JMS Session for the given Connection._<p>This implementation uses JMS 1.1 API._@param con the JMS Connection to create a Session for_@return the new JMS Session_@throws javax.jms.JMSException if thrown by JMS API methods;protected Session createSession(Connection con) throws JMSException {_		return con.createSession(true, Session.AUTO_ACKNOWLEDGE)__	};create,a,jms,session,for,the,given,connection,p,this,implementation,uses,jms,1,1,api,param,con,the,jms,connection,to,create,a,session,for,return,the,new,jms,session,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,session,create,session,connection,con,throws,jmsexception,return,con,create,session,true,session
JmsTransactionManager -> protected Session createSession(Connection con) throws JMSException;1500448076;Create a JMS Session for the given Connection._<p>This implementation uses JMS 1.1 API._@param con the JMS Connection to create a Session for_@return the new JMS Session_@throws javax.jms.JMSException if thrown by JMS API methods;protected Session createSession(Connection con) throws JMSException {_		return con.createSession(true, Session.AUTO_ACKNOWLEDGE)__	};create,a,jms,session,for,the,given,connection,p,this,implementation,uses,jms,1,1,api,param,con,the,jms,connection,to,create,a,session,for,return,the,new,jms,session,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,session,create,session,connection,con,throws,jmsexception,return,con,create,session,true,session
JmsTransactionManager -> protected Session createSession(Connection con) throws JMSException;1551199835;Create a JMS Session for the given Connection._<p>This implementation uses JMS 1.1 API._@param con the JMS Connection to create a Session for_@return the new JMS Session_@throws javax.jms.JMSException if thrown by JMS API methods;protected Session createSession(Connection con) throws JMSException {_		return con.createSession(true, Session.AUTO_ACKNOWLEDGE)__	};create,a,jms,session,for,the,given,connection,p,this,implementation,uses,jms,1,1,api,param,con,the,jms,connection,to,create,a,session,for,return,the,new,jms,session,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,session,create,session,connection,con,throws,jmsexception,return,con,create,session,true,session
JmsTransactionManager -> public void setConnectionFactory(ConnectionFactory cf);1328020251;Set the JMS ConnectionFactory that this instance should manage transactions for.;public void setConnectionFactory(ConnectionFactory cf) {_		if (cf instanceof TransactionAwareConnectionFactoryProxy) {_			_			_			_			this.connectionFactory = ((TransactionAwareConnectionFactoryProxy) cf).getTargetConnectionFactory()__		}_		else {_			this.connectionFactory = cf__		}_	};set,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,void,set,connection,factory,connection,factory,cf,if,cf,instanceof,transaction,aware,connection,factory,proxy,this,connection,factory,transaction,aware,connection,factory,proxy,cf,get,target,connection,factory,else,this,connection,factory,cf
JmsTransactionManager -> public void setConnectionFactory(ConnectionFactory cf);1329393628;Set the JMS ConnectionFactory that this instance should manage transactions for.;public void setConnectionFactory(ConnectionFactory cf) {_		if (cf instanceof TransactionAwareConnectionFactoryProxy) {_			_			_			_			this.connectionFactory = ((TransactionAwareConnectionFactoryProxy) cf).getTargetConnectionFactory()__		}_		else {_			this.connectionFactory = cf__		}_	};set,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,void,set,connection,factory,connection,factory,cf,if,cf,instanceof,transaction,aware,connection,factory,proxy,this,connection,factory,transaction,aware,connection,factory,proxy,cf,get,target,connection,factory,else,this,connection,factory,cf
JmsTransactionManager -> public void setConnectionFactory(ConnectionFactory cf);1356735495;Set the JMS ConnectionFactory that this instance should manage transactions for.;public void setConnectionFactory(ConnectionFactory cf) {_		if (cf instanceof TransactionAwareConnectionFactoryProxy) {_			_			_			_			this.connectionFactory = ((TransactionAwareConnectionFactoryProxy) cf).getTargetConnectionFactory()__		}_		else {_			this.connectionFactory = cf__		}_	};set,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,void,set,connection,factory,connection,factory,cf,if,cf,instanceof,transaction,aware,connection,factory,proxy,this,connection,factory,transaction,aware,connection,factory,proxy,cf,get,target,connection,factory,else,this,connection,factory,cf
JmsTransactionManager -> public void setConnectionFactory(ConnectionFactory cf);1357119239;Set the JMS ConnectionFactory that this instance should manage transactions for.;public void setConnectionFactory(ConnectionFactory cf) {_		if (cf instanceof TransactionAwareConnectionFactoryProxy) {_			_			_			_			this.connectionFactory = ((TransactionAwareConnectionFactoryProxy) cf).getTargetConnectionFactory()__		}_		else {_			this.connectionFactory = cf__		}_	};set,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,void,set,connection,factory,connection,factory,cf,if,cf,instanceof,transaction,aware,connection,factory,proxy,this,connection,factory,transaction,aware,connection,factory,proxy,cf,get,target,connection,factory,else,this,connection,factory,cf
JmsTransactionManager -> public void setConnectionFactory(ConnectionFactory cf);1368482696;Set the JMS ConnectionFactory that this instance should manage transactions for.;public void setConnectionFactory(ConnectionFactory cf) {_		if (cf instanceof TransactionAwareConnectionFactoryProxy) {_			_			_			_			this.connectionFactory = ((TransactionAwareConnectionFactoryProxy) cf).getTargetConnectionFactory()__		}_		else {_			this.connectionFactory = cf__		}_	};set,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,void,set,connection,factory,connection,factory,cf,if,cf,instanceof,transaction,aware,connection,factory,proxy,this,connection,factory,transaction,aware,connection,factory,proxy,cf,get,target,connection,factory,else,this,connection,factory,cf
JmsTransactionManager -> public void setConnectionFactory(ConnectionFactory cf);1374672550;Set the JMS ConnectionFactory that this instance should manage transactions for.;public void setConnectionFactory(ConnectionFactory cf) {_		if (cf instanceof TransactionAwareConnectionFactoryProxy) {_			_			_			_			this.connectionFactory = ((TransactionAwareConnectionFactoryProxy) cf).getTargetConnectionFactory()__		}_		else {_			this.connectionFactory = cf__		}_	};set,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,void,set,connection,factory,connection,factory,cf,if,cf,instanceof,transaction,aware,connection,factory,proxy,this,connection,factory,transaction,aware,connection,factory,proxy,cf,get,target,connection,factory,else,this,connection,factory,cf
JmsTransactionManager -> public void setConnectionFactory(ConnectionFactory cf);1405696891;Set the JMS ConnectionFactory that this instance should manage transactions for.;public void setConnectionFactory(ConnectionFactory cf) {_		if (cf instanceof TransactionAwareConnectionFactoryProxy) {_			_			_			_			this.connectionFactory = ((TransactionAwareConnectionFactoryProxy) cf).getTargetConnectionFactory()__		}_		else {_			this.connectionFactory = cf__		}_	};set,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,void,set,connection,factory,connection,factory,cf,if,cf,instanceof,transaction,aware,connection,factory,proxy,this,connection,factory,transaction,aware,connection,factory,proxy,cf,get,target,connection,factory,else,this,connection,factory,cf
JmsTransactionManager -> public void setConnectionFactory(ConnectionFactory cf);1412620305;Set the JMS ConnectionFactory that this instance should manage transactions for.;public void setConnectionFactory(ConnectionFactory cf) {_		if (cf instanceof TransactionAwareConnectionFactoryProxy) {_			_			_			_			this.connectionFactory = ((TransactionAwareConnectionFactoryProxy) cf).getTargetConnectionFactory()__		}_		else {_			this.connectionFactory = cf__		}_	};set,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,void,set,connection,factory,connection,factory,cf,if,cf,instanceof,transaction,aware,connection,factory,proxy,this,connection,factory,transaction,aware,connection,factory,proxy,cf,get,target,connection,factory,else,this,connection,factory,cf
JmsTransactionManager -> public void setConnectionFactory(ConnectionFactory cf);1476521730;Set the JMS ConnectionFactory that this instance should manage transactions for.;public void setConnectionFactory(ConnectionFactory cf) {_		if (cf instanceof TransactionAwareConnectionFactoryProxy) {_			_			_			_			this.connectionFactory = ((TransactionAwareConnectionFactoryProxy) cf).getTargetConnectionFactory()__		}_		else {_			this.connectionFactory = cf__		}_	};set,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,void,set,connection,factory,connection,factory,cf,if,cf,instanceof,transaction,aware,connection,factory,proxy,this,connection,factory,transaction,aware,connection,factory,proxy,cf,get,target,connection,factory,else,this,connection,factory,cf
JmsTransactionManager -> public void setConnectionFactory(ConnectionFactory cf);1486062666;Set the JMS ConnectionFactory that this instance should manage transactions for.;public void setConnectionFactory(ConnectionFactory cf) {_		if (cf instanceof TransactionAwareConnectionFactoryProxy) {_			_			_			_			this.connectionFactory = ((TransactionAwareConnectionFactoryProxy) cf).getTargetConnectionFactory()__		}_		else {_			this.connectionFactory = cf__		}_	};set,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,void,set,connection,factory,connection,factory,cf,if,cf,instanceof,transaction,aware,connection,factory,proxy,this,connection,factory,transaction,aware,connection,factory,proxy,cf,get,target,connection,factory,else,this,connection,factory,cf
JmsTransactionManager -> public void setConnectionFactory(ConnectionFactory cf);1496259743;Set the JMS ConnectionFactory that this instance should manage transactions for.;public void setConnectionFactory(ConnectionFactory cf) {_		if (cf instanceof TransactionAwareConnectionFactoryProxy) {_			_			_			_			this.connectionFactory = ((TransactionAwareConnectionFactoryProxy) cf).getTargetConnectionFactory()__		}_		else {_			this.connectionFactory = cf__		}_	};set,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,void,set,connection,factory,connection,factory,cf,if,cf,instanceof,transaction,aware,connection,factory,proxy,this,connection,factory,transaction,aware,connection,factory,proxy,cf,get,target,connection,factory,else,this,connection,factory,cf
JmsTransactionManager -> public void setConnectionFactory(ConnectionFactory cf);1496837955;Set the JMS ConnectionFactory that this instance should manage transactions for.;public void setConnectionFactory(ConnectionFactory cf) {_		if (cf instanceof TransactionAwareConnectionFactoryProxy) {_			_			_			_			this.connectionFactory = ((TransactionAwareConnectionFactoryProxy) cf).getTargetConnectionFactory()__		}_		else {_			this.connectionFactory = cf__		}_	};set,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,void,set,connection,factory,connection,factory,cf,if,cf,instanceof,transaction,aware,connection,factory,proxy,this,connection,factory,transaction,aware,connection,factory,proxy,cf,get,target,connection,factory,else,this,connection,factory,cf
JmsTransactionManager -> public void setConnectionFactory(ConnectionFactory cf);1498780456;Set the JMS ConnectionFactory that this instance should manage transactions for.;public void setConnectionFactory(ConnectionFactory cf) {_		if (cf instanceof TransactionAwareConnectionFactoryProxy) {_			_			_			_			this.connectionFactory = ((TransactionAwareConnectionFactoryProxy) cf).getTargetConnectionFactory()__		}_		else {_			this.connectionFactory = cf__		}_	};set,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,void,set,connection,factory,connection,factory,cf,if,cf,instanceof,transaction,aware,connection,factory,proxy,this,connection,factory,transaction,aware,connection,factory,proxy,cf,get,target,connection,factory,else,this,connection,factory,cf
JmsTransactionManager -> public JmsTransactionManager(ConnectionFactory connectionFactory);1328020251;Create a new JmsTransactionManager, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain connections from;public JmsTransactionManager(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,transaction,manager,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,transaction,manager,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTransactionManager -> public JmsTransactionManager(ConnectionFactory connectionFactory);1329393628;Create a new JmsTransactionManager, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain connections from;public JmsTransactionManager(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,transaction,manager,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,transaction,manager,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTransactionManager -> public JmsTransactionManager(ConnectionFactory connectionFactory);1356735495;Create a new JmsTransactionManager, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain connections from;public JmsTransactionManager(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,transaction,manager,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,transaction,manager,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTransactionManager -> public JmsTransactionManager(ConnectionFactory connectionFactory);1357119239;Create a new JmsTransactionManager, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain connections from;public JmsTransactionManager(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,transaction,manager,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,transaction,manager,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTransactionManager -> public JmsTransactionManager(ConnectionFactory connectionFactory);1368482696;Create a new JmsTransactionManager, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain connections from;public JmsTransactionManager(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,transaction,manager,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,transaction,manager,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTransactionManager -> public JmsTransactionManager(ConnectionFactory connectionFactory);1374672550;Create a new JmsTransactionManager, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain connections from;public JmsTransactionManager(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,transaction,manager,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,transaction,manager,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTransactionManager -> public JmsTransactionManager(ConnectionFactory connectionFactory);1405696891;Create a new JmsTransactionManager, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain connections from;public JmsTransactionManager(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,transaction,manager,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,transaction,manager,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTransactionManager -> public JmsTransactionManager(ConnectionFactory connectionFactory);1412620305;Create a new JmsTransactionManager, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain connections from;public JmsTransactionManager(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,transaction,manager,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,transaction,manager,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTransactionManager -> public JmsTransactionManager(ConnectionFactory connectionFactory);1476521730;Create a new JmsTransactionManager, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain connections from;public JmsTransactionManager(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,transaction,manager,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,transaction,manager,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTransactionManager -> public JmsTransactionManager(ConnectionFactory connectionFactory);1486062666;Create a new JmsTransactionManager, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain connections from;public JmsTransactionManager(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,transaction,manager,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,transaction,manager,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTransactionManager -> public JmsTransactionManager(ConnectionFactory connectionFactory);1496259743;Create a new JmsTransactionManager, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain connections from;public JmsTransactionManager(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,transaction,manager,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,transaction,manager,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTransactionManager -> public JmsTransactionManager(ConnectionFactory connectionFactory);1496837955;Create a new JmsTransactionManager, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain connections from;public JmsTransactionManager(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,transaction,manager,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,transaction,manager,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTransactionManager -> public JmsTransactionManager(ConnectionFactory connectionFactory);1498780456;Create a new JmsTransactionManager, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain connections from;public JmsTransactionManager(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,transaction,manager,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,transaction,manager,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTransactionManager -> public JmsTransactionManager(ConnectionFactory connectionFactory);1500448076;Create a new JmsTransactionManager, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain connections from;public JmsTransactionManager(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,transaction,manager,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,transaction,manager,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTransactionManager -> public JmsTransactionManager(ConnectionFactory connectionFactory);1551199835;Create a new JmsTransactionManager, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain connections from;public JmsTransactionManager(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,transaction,manager,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,transaction,manager,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTransactionManager -> public ConnectionFactory getConnectionFactory();1328020251;Return the JMS ConnectionFactory that this instance should manage transactions for.;public ConnectionFactory getConnectionFactory() {_		return this.connectionFactory__	};return,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,connection,factory,get,connection,factory,return,this,connection,factory
JmsTransactionManager -> public ConnectionFactory getConnectionFactory();1329393628;Return the JMS ConnectionFactory that this instance should manage transactions for.;public ConnectionFactory getConnectionFactory() {_		return this.connectionFactory__	};return,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,connection,factory,get,connection,factory,return,this,connection,factory
JmsTransactionManager -> public ConnectionFactory getConnectionFactory();1356735495;Return the JMS ConnectionFactory that this instance should manage transactions for.;public ConnectionFactory getConnectionFactory() {_		return this.connectionFactory__	};return,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,connection,factory,get,connection,factory,return,this,connection,factory
JmsTransactionManager -> public ConnectionFactory getConnectionFactory();1357119239;Return the JMS ConnectionFactory that this instance should manage transactions for.;public ConnectionFactory getConnectionFactory() {_		return this.connectionFactory__	};return,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,connection,factory,get,connection,factory,return,this,connection,factory
JmsTransactionManager -> public ConnectionFactory getConnectionFactory();1368482696;Return the JMS ConnectionFactory that this instance should manage transactions for.;public ConnectionFactory getConnectionFactory() {_		return this.connectionFactory__	};return,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,connection,factory,get,connection,factory,return,this,connection,factory
JmsTransactionManager -> public ConnectionFactory getConnectionFactory();1374672550;Return the JMS ConnectionFactory that this instance should manage transactions for.;public ConnectionFactory getConnectionFactory() {_		return this.connectionFactory__	};return,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,connection,factory,get,connection,factory,return,this,connection,factory
JmsTransactionManager -> public ConnectionFactory getConnectionFactory();1405696891;Return the JMS ConnectionFactory that this instance should manage transactions for.;public ConnectionFactory getConnectionFactory() {_		return this.connectionFactory__	};return,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,connection,factory,get,connection,factory,return,this,connection,factory
JmsTransactionManager -> public ConnectionFactory getConnectionFactory();1412620305;Return the JMS ConnectionFactory that this instance should manage transactions for.;public ConnectionFactory getConnectionFactory() {_		return this.connectionFactory__	};return,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,connection,factory,get,connection,factory,return,this,connection,factory
JmsTransactionManager -> public ConnectionFactory getConnectionFactory();1476521730;Return the JMS ConnectionFactory that this instance should manage transactions for.;public ConnectionFactory getConnectionFactory() {_		return this.connectionFactory__	};return,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,connection,factory,get,connection,factory,return,this,connection,factory
JmsTransactionManager -> public ConnectionFactory getConnectionFactory();1486062666;Return the JMS ConnectionFactory that this instance should manage transactions for.;public ConnectionFactory getConnectionFactory() {_		return this.connectionFactory__	};return,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,connection,factory,get,connection,factory,return,this,connection,factory
JmsTransactionManager -> public ConnectionFactory getConnectionFactory();1496259743;Return the JMS ConnectionFactory that this instance should manage transactions for.;public ConnectionFactory getConnectionFactory() {_		return this.connectionFactory__	};return,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,connection,factory,get,connection,factory,return,this,connection,factory
JmsTransactionManager -> @Override 	public void afterPropertiesSet();1356735495;Make sure the ConnectionFactory has been set.;@Override_	public void afterPropertiesSet() {_		if (getConnectionFactory() == null) {_			throw new IllegalArgumentException("Property 'connectionFactory' is required")__		}_	};make,sure,the,connection,factory,has,been,set;override,public,void,after,properties,set,if,get,connection,factory,null,throw,new,illegal,argument,exception,property,connection,factory,is,required
JmsTransactionManager -> @Override 	public void afterPropertiesSet();1368482696;Make sure the ConnectionFactory has been set.;@Override_	public void afterPropertiesSet() {_		if (getConnectionFactory() == null) {_			throw new IllegalArgumentException("Property 'connectionFactory' is required")__		}_	};make,sure,the,connection,factory,has,been,set;override,public,void,after,properties,set,if,get,connection,factory,null,throw,new,illegal,argument,exception,property,connection,factory,is,required
JmsTransactionManager -> @Override 	public void afterPropertiesSet();1374672550;Make sure the ConnectionFactory has been set.;@Override_	public void afterPropertiesSet() {_		if (getConnectionFactory() == null) {_			throw new IllegalArgumentException("Property 'connectionFactory' is required")__		}_	};make,sure,the,connection,factory,has,been,set;override,public,void,after,properties,set,if,get,connection,factory,null,throw,new,illegal,argument,exception,property,connection,factory,is,required
JmsTransactionManager -> @Override 	public void afterPropertiesSet();1405696891;Make sure the ConnectionFactory has been set.;@Override_	public void afterPropertiesSet() {_		if (getConnectionFactory() == null) {_			throw new IllegalArgumentException("Property 'connectionFactory' is required")__		}_	};make,sure,the,connection,factory,has,been,set;override,public,void,after,properties,set,if,get,connection,factory,null,throw,new,illegal,argument,exception,property,connection,factory,is,required
JmsTransactionManager -> @Override 	public void afterPropertiesSet();1412620305;Make sure the ConnectionFactory has been set.;@Override_	public void afterPropertiesSet() {_		if (getConnectionFactory() == null) {_			throw new IllegalArgumentException("Property 'connectionFactory' is required")__		}_	};make,sure,the,connection,factory,has,been,set;override,public,void,after,properties,set,if,get,connection,factory,null,throw,new,illegal,argument,exception,property,connection,factory,is,required
JmsTransactionManager -> @Override 	public void afterPropertiesSet();1476521730;Make sure the ConnectionFactory has been set.;@Override_	public void afterPropertiesSet() {_		if (getConnectionFactory() == null) {_			throw new IllegalArgumentException("Property 'connectionFactory' is required")__		}_	};make,sure,the,connection,factory,has,been,set;override,public,void,after,properties,set,if,get,connection,factory,null,throw,new,illegal,argument,exception,property,connection,factory,is,required
JmsTransactionManager -> @Override 	public void afterPropertiesSet();1486062666;Make sure the ConnectionFactory has been set.;@Override_	public void afterPropertiesSet() {_		if (getConnectionFactory() == null) {_			throw new IllegalArgumentException("Property 'connectionFactory' is required")__		}_	};make,sure,the,connection,factory,has,been,set;override,public,void,after,properties,set,if,get,connection,factory,null,throw,new,illegal,argument,exception,property,connection,factory,is,required
JmsTransactionManager -> @Override 	public void afterPropertiesSet();1496259743;Make sure the ConnectionFactory has been set.;@Override_	public void afterPropertiesSet() {_		if (getConnectionFactory() == null) {_			throw new IllegalArgumentException("Property 'connectionFactory' is required")__		}_	};make,sure,the,connection,factory,has,been,set;override,public,void,after,properties,set,if,get,connection,factory,null,throw,new,illegal,argument,exception,property,connection,factory,is,required
JmsTransactionManager -> @Override 	public void afterPropertiesSet();1496837955;Make sure the ConnectionFactory has been set.;@Override_	public void afterPropertiesSet() {_		if (getConnectionFactory() == null) {_			throw new IllegalArgumentException("Property 'connectionFactory' is required")__		}_	};make,sure,the,connection,factory,has,been,set;override,public,void,after,properties,set,if,get,connection,factory,null,throw,new,illegal,argument,exception,property,connection,factory,is,required
JmsTransactionManager -> @Override 	public void afterPropertiesSet();1498780456;Make sure the ConnectionFactory has been set.;@Override_	public void afterPropertiesSet() {_		if (getConnectionFactory() == null) {_			throw new IllegalArgumentException("Property 'connectionFactory' is required")__		}_	};make,sure,the,connection,factory,has,been,set;override,public,void,after,properties,set,if,get,connection,factory,null,throw,new,illegal,argument,exception,property,connection,factory,is,required
JmsTransactionManager -> @Override 	public void afterPropertiesSet();1500448076;Make sure the ConnectionFactory has been set.;@Override_	public void afterPropertiesSet() {_		if (getConnectionFactory() == null) {_			throw new IllegalArgumentException("Property 'connectionFactory' is required")__		}_	};make,sure,the,connection,factory,has,been,set;override,public,void,after,properties,set,if,get,connection,factory,null,throw,new,illegal,argument,exception,property,connection,factory,is,required
JmsTransactionManager -> @Override 	public void afterPropertiesSet();1551199835;Make sure the ConnectionFactory has been set.;@Override_	public void afterPropertiesSet() {_		if (getConnectionFactory() == null) {_			throw new IllegalArgumentException("Property 'connectionFactory' is required")__		}_	};make,sure,the,connection,factory,has,been,set;override,public,void,after,properties,set,if,get,connection,factory,null,throw,new,illegal,argument,exception,property,connection,factory,is,required
JmsTransactionManager -> public void afterPropertiesSet();1328020251;Make sure the ConnectionFactory has been set.;public void afterPropertiesSet() {_		if (getConnectionFactory() == null) {_			throw new IllegalArgumentException("Property 'connectionFactory' is required")__		}_	};make,sure,the,connection,factory,has,been,set;public,void,after,properties,set,if,get,connection,factory,null,throw,new,illegal,argument,exception,property,connection,factory,is,required
JmsTransactionManager -> public void afterPropertiesSet();1329393628;Make sure the ConnectionFactory has been set.;public void afterPropertiesSet() {_		if (getConnectionFactory() == null) {_			throw new IllegalArgumentException("Property 'connectionFactory' is required")__		}_	};make,sure,the,connection,factory,has,been,set;public,void,after,properties,set,if,get,connection,factory,null,throw,new,illegal,argument,exception,property,connection,factory,is,required
JmsTransactionManager -> public void afterPropertiesSet();1357119239;Make sure the ConnectionFactory has been set.;public void afterPropertiesSet() {_		if (getConnectionFactory() == null) {_			throw new IllegalArgumentException("Property 'connectionFactory' is required")__		}_	};make,sure,the,connection,factory,has,been,set;public,void,after,properties,set,if,get,connection,factory,null,throw,new,illegal,argument,exception,property,connection,factory,is,required
JmsTransactionManager -> protected Connection createConnection() throws JMSException;1328020251;Create a JMS Connection via this template's ConnectionFactory._<p>This implementation uses JMS 1.1 API._@return the new JMS Connection_@throws javax.jms.JMSException if thrown by JMS API methods;protected Connection createConnection() throws JMSException {_		return getConnectionFactory().createConnection()__	};create,a,jms,connection,via,this,template,s,connection,factory,p,this,implementation,uses,jms,1,1,api,return,the,new,jms,connection,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,connection,create,connection,throws,jmsexception,return,get,connection,factory,create,connection
JmsTransactionManager -> protected Connection createConnection() throws JMSException;1329393628;Create a JMS Connection via this template's ConnectionFactory._<p>This implementation uses JMS 1.1 API._@return the new JMS Connection_@throws javax.jms.JMSException if thrown by JMS API methods;protected Connection createConnection() throws JMSException {_		return getConnectionFactory().createConnection()__	};create,a,jms,connection,via,this,template,s,connection,factory,p,this,implementation,uses,jms,1,1,api,return,the,new,jms,connection,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,connection,create,connection,throws,jmsexception,return,get,connection,factory,create,connection
JmsTransactionManager -> protected Connection createConnection() throws JMSException;1356735495;Create a JMS Connection via this template's ConnectionFactory._<p>This implementation uses JMS 1.1 API._@return the new JMS Connection_@throws javax.jms.JMSException if thrown by JMS API methods;protected Connection createConnection() throws JMSException {_		return getConnectionFactory().createConnection()__	};create,a,jms,connection,via,this,template,s,connection,factory,p,this,implementation,uses,jms,1,1,api,return,the,new,jms,connection,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,connection,create,connection,throws,jmsexception,return,get,connection,factory,create,connection
JmsTransactionManager -> protected Connection createConnection() throws JMSException;1357119239;Create a JMS Connection via this template's ConnectionFactory._<p>This implementation uses JMS 1.1 API._@return the new JMS Connection_@throws javax.jms.JMSException if thrown by JMS API methods;protected Connection createConnection() throws JMSException {_		return getConnectionFactory().createConnection()__	};create,a,jms,connection,via,this,template,s,connection,factory,p,this,implementation,uses,jms,1,1,api,return,the,new,jms,connection,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,connection,create,connection,throws,jmsexception,return,get,connection,factory,create,connection
JmsTransactionManager -> protected Connection createConnection() throws JMSException;1368482696;Create a JMS Connection via this template's ConnectionFactory._<p>This implementation uses JMS 1.1 API._@return the new JMS Connection_@throws javax.jms.JMSException if thrown by JMS API methods;protected Connection createConnection() throws JMSException {_		return getConnectionFactory().createConnection()__	};create,a,jms,connection,via,this,template,s,connection,factory,p,this,implementation,uses,jms,1,1,api,return,the,new,jms,connection,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,connection,create,connection,throws,jmsexception,return,get,connection,factory,create,connection
JmsTransactionManager -> protected Connection createConnection() throws JMSException;1374672550;Create a JMS Connection via this template's ConnectionFactory._<p>This implementation uses JMS 1.1 API._@return the new JMS Connection_@throws javax.jms.JMSException if thrown by JMS API methods;protected Connection createConnection() throws JMSException {_		return getConnectionFactory().createConnection()__	};create,a,jms,connection,via,this,template,s,connection,factory,p,this,implementation,uses,jms,1,1,api,return,the,new,jms,connection,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,connection,create,connection,throws,jmsexception,return,get,connection,factory,create,connection
JmsTransactionManager -> protected Connection createConnection() throws JMSException;1405696891;Create a JMS Connection via this template's ConnectionFactory._<p>This implementation uses JMS 1.1 API._@return the new JMS Connection_@throws javax.jms.JMSException if thrown by JMS API methods;protected Connection createConnection() throws JMSException {_		return getConnectionFactory().createConnection()__	};create,a,jms,connection,via,this,template,s,connection,factory,p,this,implementation,uses,jms,1,1,api,return,the,new,jms,connection,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,connection,create,connection,throws,jmsexception,return,get,connection,factory,create,connection
JmsTransactionManager -> protected Connection createConnection() throws JMSException;1412620305;Create a JMS Connection via this template's ConnectionFactory._<p>This implementation uses JMS 1.1 API._@return the new JMS Connection_@throws javax.jms.JMSException if thrown by JMS API methods;protected Connection createConnection() throws JMSException {_		return getConnectionFactory().createConnection()__	};create,a,jms,connection,via,this,template,s,connection,factory,p,this,implementation,uses,jms,1,1,api,return,the,new,jms,connection,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,connection,create,connection,throws,jmsexception,return,get,connection,factory,create,connection
JmsTransactionManager -> protected Connection createConnection() throws JMSException;1476521730;Create a JMS Connection via this template's ConnectionFactory._<p>This implementation uses JMS 1.1 API._@return the new JMS Connection_@throws javax.jms.JMSException if thrown by JMS API methods;protected Connection createConnection() throws JMSException {_		return getConnectionFactory().createConnection()__	};create,a,jms,connection,via,this,template,s,connection,factory,p,this,implementation,uses,jms,1,1,api,return,the,new,jms,connection,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,connection,create,connection,throws,jmsexception,return,get,connection,factory,create,connection
JmsTransactionManager -> protected Connection createConnection() throws JMSException;1486062666;Create a JMS Connection via this template's ConnectionFactory._<p>This implementation uses JMS 1.1 API._@return the new JMS Connection_@throws javax.jms.JMSException if thrown by JMS API methods;protected Connection createConnection() throws JMSException {_		return getConnectionFactory().createConnection()__	};create,a,jms,connection,via,this,template,s,connection,factory,p,this,implementation,uses,jms,1,1,api,return,the,new,jms,connection,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,connection,create,connection,throws,jmsexception,return,get,connection,factory,create,connection
JmsTransactionManager -> protected Connection createConnection() throws JMSException;1496259743;Create a JMS Connection via this template's ConnectionFactory._<p>This implementation uses JMS 1.1 API._@return the new JMS Connection_@throws javax.jms.JMSException if thrown by JMS API methods;protected Connection createConnection() throws JMSException {_		return getConnectionFactory().createConnection()__	};create,a,jms,connection,via,this,template,s,connection,factory,p,this,implementation,uses,jms,1,1,api,return,the,new,jms,connection,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,connection,create,connection,throws,jmsexception,return,get,connection,factory,create,connection
JmsTransactionManager -> protected Connection createConnection() throws JMSException;1496837955;Create a JMS Connection via this template's ConnectionFactory._<p>This implementation uses JMS 1.1 API._@return the new JMS Connection_@throws javax.jms.JMSException if thrown by JMS API methods;protected Connection createConnection() throws JMSException {_		return obtainConnectionFactory().createConnection()__	};create,a,jms,connection,via,this,template,s,connection,factory,p,this,implementation,uses,jms,1,1,api,return,the,new,jms,connection,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,connection,create,connection,throws,jmsexception,return,obtain,connection,factory,create,connection
JmsTransactionManager -> protected Connection createConnection() throws JMSException;1498780456;Create a JMS Connection via this template's ConnectionFactory._<p>This implementation uses JMS 1.1 API._@return the new JMS Connection_@throws javax.jms.JMSException if thrown by JMS API methods;protected Connection createConnection() throws JMSException {_		return obtainConnectionFactory().createConnection()__	};create,a,jms,connection,via,this,template,s,connection,factory,p,this,implementation,uses,jms,1,1,api,return,the,new,jms,connection,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,connection,create,connection,throws,jmsexception,return,obtain,connection,factory,create,connection
JmsTransactionManager -> protected Connection createConnection() throws JMSException;1500448076;Create a JMS Connection via this template's ConnectionFactory._<p>This implementation uses JMS 1.1 API._@return the new JMS Connection_@throws javax.jms.JMSException if thrown by JMS API methods;protected Connection createConnection() throws JMSException {_		return obtainConnectionFactory().createConnection()__	};create,a,jms,connection,via,this,template,s,connection,factory,p,this,implementation,uses,jms,1,1,api,return,the,new,jms,connection,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,connection,create,connection,throws,jmsexception,return,obtain,connection,factory,create,connection
JmsTransactionManager -> protected Connection createConnection() throws JMSException;1551199835;Create a JMS Connection via this template's ConnectionFactory._<p>This implementation uses JMS 1.1 API._@return the new JMS Connection_@throws javax.jms.JMSException if thrown by JMS API methods;protected Connection createConnection() throws JMSException {_		return obtainConnectionFactory().createConnection()__	};create,a,jms,connection,via,this,template,s,connection,factory,p,this,implementation,uses,jms,1,1,api,return,the,new,jms,connection,throws,javax,jms,jmsexception,if,thrown,by,jms,api,methods;protected,connection,create,connection,throws,jmsexception,return,obtain,connection,factory,create,connection
JmsTransactionManager -> protected final ConnectionFactory obtainConnectionFactory();1496837955;Obtain the ConnectionFactory for actual use._@return the ConnectionFactory (never {@code null})_@throws IllegalStateException in case of no ConnectionFactory set_@since 5.0;protected final ConnectionFactory obtainConnectionFactory() {_		ConnectionFactory connectionFactory = getConnectionFactory()__		Assert.state(connectionFactory != null, "No ConnectionFactory set")__		return connectionFactory__	};obtain,the,connection,factory,for,actual,use,return,the,connection,factory,never,code,null,throws,illegal,state,exception,in,case,of,no,connection,factory,set,since,5,0;protected,final,connection,factory,obtain,connection,factory,connection,factory,connection,factory,get,connection,factory,assert,state,connection,factory,null,no,connection,factory,set,return,connection,factory
JmsTransactionManager -> protected final ConnectionFactory obtainConnectionFactory();1498780456;Obtain the ConnectionFactory for actual use._@return the ConnectionFactory (never {@code null})_@throws IllegalStateException in case of no ConnectionFactory set_@since 5.0;protected final ConnectionFactory obtainConnectionFactory() {_		ConnectionFactory connectionFactory = getConnectionFactory()__		Assert.state(connectionFactory != null, "No ConnectionFactory set")__		return connectionFactory__	};obtain,the,connection,factory,for,actual,use,return,the,connection,factory,never,code,null,throws,illegal,state,exception,in,case,of,no,connection,factory,set,since,5,0;protected,final,connection,factory,obtain,connection,factory,connection,factory,connection,factory,get,connection,factory,assert,state,connection,factory,null,no,connection,factory,set,return,connection,factory
JmsTransactionManager -> protected final ConnectionFactory obtainConnectionFactory();1500448076;Obtain the ConnectionFactory for actual use._@return the ConnectionFactory (never {@code null})_@throws IllegalStateException in case of no ConnectionFactory set_@since 5.0;protected final ConnectionFactory obtainConnectionFactory() {_		ConnectionFactory connectionFactory = getConnectionFactory()__		Assert.state(connectionFactory != null, "No ConnectionFactory set")__		return connectionFactory__	};obtain,the,connection,factory,for,actual,use,return,the,connection,factory,never,code,null,throws,illegal,state,exception,in,case,of,no,connection,factory,set,since,5,0;protected,final,connection,factory,obtain,connection,factory,connection,factory,connection,factory,get,connection,factory,assert,state,connection,factory,null,no,connection,factory,set,return,connection,factory
JmsTransactionManager -> protected final ConnectionFactory obtainConnectionFactory();1551199835;Obtain the ConnectionFactory for actual use._@return the ConnectionFactory (never {@code null})_@throws IllegalStateException in case of no ConnectionFactory set_@since 5.0;protected final ConnectionFactory obtainConnectionFactory() {_		ConnectionFactory connectionFactory = getConnectionFactory()__		Assert.state(connectionFactory != null, "No ConnectionFactory set")__		return connectionFactory__	};obtain,the,connection,factory,for,actual,use,return,the,connection,factory,never,code,null,throws,illegal,state,exception,in,case,of,no,connection,factory,set,since,5,0;protected,final,connection,factory,obtain,connection,factory,connection,factory,connection,factory,get,connection,factory,assert,state,connection,factory,null,no,connection,factory,set,return,connection,factory
JmsTransactionManager -> public JmsTransactionManager();1328020251;Create a new JmsTransactionManager for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._<p>Turns off transaction synchronization by default, as this manager might_be used alongside a datastore-based Spring transaction manager like_DataSourceTransactionManager, which has stronger needs for synchronization._Only one manager is allowed to drive synchronization at any point of time._@see #setConnectionFactory_@see #setTransactionSynchronization;public JmsTransactionManager() {_		setTransactionSynchronization(SYNCHRONIZATION_NEVER)__	};create,a,new,jms,transaction,manager,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,p,turns,off,transaction,synchronization,by,default,as,this,manager,might,be,used,alongside,a,datastore,based,spring,transaction,manager,like,data,source,transaction,manager,which,has,stronger,needs,for,synchronization,only,one,manager,is,allowed,to,drive,synchronization,at,any,point,of,time,see,set,connection,factory,see,set,transaction,synchronization;public,jms,transaction,manager,set,transaction,synchronization
JmsTransactionManager -> public JmsTransactionManager();1329393628;Create a new JmsTransactionManager for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._<p>Turns off transaction synchronization by default, as this manager might_be used alongside a datastore-based Spring transaction manager like_DataSourceTransactionManager, which has stronger needs for synchronization._Only one manager is allowed to drive synchronization at any point of time._@see #setConnectionFactory_@see #setTransactionSynchronization;public JmsTransactionManager() {_		setTransactionSynchronization(SYNCHRONIZATION_NEVER)__	};create,a,new,jms,transaction,manager,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,p,turns,off,transaction,synchronization,by,default,as,this,manager,might,be,used,alongside,a,datastore,based,spring,transaction,manager,like,data,source,transaction,manager,which,has,stronger,needs,for,synchronization,only,one,manager,is,allowed,to,drive,synchronization,at,any,point,of,time,see,set,connection,factory,see,set,transaction,synchronization;public,jms,transaction,manager,set,transaction,synchronization
JmsTransactionManager -> public JmsTransactionManager();1356735495;Create a new JmsTransactionManager for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._<p>Turns off transaction synchronization by default, as this manager might_be used alongside a datastore-based Spring transaction manager like_DataSourceTransactionManager, which has stronger needs for synchronization._Only one manager is allowed to drive synchronization at any point of time._@see #setConnectionFactory_@see #setTransactionSynchronization;public JmsTransactionManager() {_		setTransactionSynchronization(SYNCHRONIZATION_NEVER)__	};create,a,new,jms,transaction,manager,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,p,turns,off,transaction,synchronization,by,default,as,this,manager,might,be,used,alongside,a,datastore,based,spring,transaction,manager,like,data,source,transaction,manager,which,has,stronger,needs,for,synchronization,only,one,manager,is,allowed,to,drive,synchronization,at,any,point,of,time,see,set,connection,factory,see,set,transaction,synchronization;public,jms,transaction,manager,set,transaction,synchronization
JmsTransactionManager -> public JmsTransactionManager();1357119239;Create a new JmsTransactionManager for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._<p>Turns off transaction synchronization by default, as this manager might_be used alongside a datastore-based Spring transaction manager like_DataSourceTransactionManager, which has stronger needs for synchronization._Only one manager is allowed to drive synchronization at any point of time._@see #setConnectionFactory_@see #setTransactionSynchronization;public JmsTransactionManager() {_		setTransactionSynchronization(SYNCHRONIZATION_NEVER)__	};create,a,new,jms,transaction,manager,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,p,turns,off,transaction,synchronization,by,default,as,this,manager,might,be,used,alongside,a,datastore,based,spring,transaction,manager,like,data,source,transaction,manager,which,has,stronger,needs,for,synchronization,only,one,manager,is,allowed,to,drive,synchronization,at,any,point,of,time,see,set,connection,factory,see,set,transaction,synchronization;public,jms,transaction,manager,set,transaction,synchronization
JmsTransactionManager -> public JmsTransactionManager();1368482696;Create a new JmsTransactionManager for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._<p>Turns off transaction synchronization by default, as this manager might_be used alongside a datastore-based Spring transaction manager like_DataSourceTransactionManager, which has stronger needs for synchronization._Only one manager is allowed to drive synchronization at any point of time._@see #setConnectionFactory_@see #setTransactionSynchronization;public JmsTransactionManager() {_		setTransactionSynchronization(SYNCHRONIZATION_NEVER)__	};create,a,new,jms,transaction,manager,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,p,turns,off,transaction,synchronization,by,default,as,this,manager,might,be,used,alongside,a,datastore,based,spring,transaction,manager,like,data,source,transaction,manager,which,has,stronger,needs,for,synchronization,only,one,manager,is,allowed,to,drive,synchronization,at,any,point,of,time,see,set,connection,factory,see,set,transaction,synchronization;public,jms,transaction,manager,set,transaction,synchronization
JmsTransactionManager -> public JmsTransactionManager();1374672550;Create a new JmsTransactionManager for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._<p>Turns off transaction synchronization by default, as this manager might_be used alongside a datastore-based Spring transaction manager like_DataSourceTransactionManager, which has stronger needs for synchronization._Only one manager is allowed to drive synchronization at any point of time._@see #setConnectionFactory_@see #setTransactionSynchronization;public JmsTransactionManager() {_		setTransactionSynchronization(SYNCHRONIZATION_NEVER)__	};create,a,new,jms,transaction,manager,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,p,turns,off,transaction,synchronization,by,default,as,this,manager,might,be,used,alongside,a,datastore,based,spring,transaction,manager,like,data,source,transaction,manager,which,has,stronger,needs,for,synchronization,only,one,manager,is,allowed,to,drive,synchronization,at,any,point,of,time,see,set,connection,factory,see,set,transaction,synchronization;public,jms,transaction,manager,set,transaction,synchronization
JmsTransactionManager -> public JmsTransactionManager();1405696891;Create a new JmsTransactionManager for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._<p>Turns off transaction synchronization by default, as this manager might_be used alongside a datastore-based Spring transaction manager like_DataSourceTransactionManager, which has stronger needs for synchronization._Only one manager is allowed to drive synchronization at any point of time._@see #setConnectionFactory_@see #setTransactionSynchronization;public JmsTransactionManager() {_		setTransactionSynchronization(SYNCHRONIZATION_NEVER)__	};create,a,new,jms,transaction,manager,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,p,turns,off,transaction,synchronization,by,default,as,this,manager,might,be,used,alongside,a,datastore,based,spring,transaction,manager,like,data,source,transaction,manager,which,has,stronger,needs,for,synchronization,only,one,manager,is,allowed,to,drive,synchronization,at,any,point,of,time,see,set,connection,factory,see,set,transaction,synchronization;public,jms,transaction,manager,set,transaction,synchronization
JmsTransactionManager -> public JmsTransactionManager();1412620305;Create a new JmsTransactionManager for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._<p>Turns off transaction synchronization by default, as this manager might_be used alongside a datastore-based Spring transaction manager like_DataSourceTransactionManager, which has stronger needs for synchronization._Only one manager is allowed to drive synchronization at any point of time._@see #setConnectionFactory_@see #setTransactionSynchronization;public JmsTransactionManager() {_		setTransactionSynchronization(SYNCHRONIZATION_NEVER)__	};create,a,new,jms,transaction,manager,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,p,turns,off,transaction,synchronization,by,default,as,this,manager,might,be,used,alongside,a,datastore,based,spring,transaction,manager,like,data,source,transaction,manager,which,has,stronger,needs,for,synchronization,only,one,manager,is,allowed,to,drive,synchronization,at,any,point,of,time,see,set,connection,factory,see,set,transaction,synchronization;public,jms,transaction,manager,set,transaction,synchronization
JmsTransactionManager -> public JmsTransactionManager();1476521730;Create a new JmsTransactionManager for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._<p>Turns off transaction synchronization by default, as this manager might_be used alongside a datastore-based Spring transaction manager like_DataSourceTransactionManager, which has stronger needs for synchronization._Only one manager is allowed to drive synchronization at any point of time._@see #setConnectionFactory_@see #setTransactionSynchronization;public JmsTransactionManager() {_		setTransactionSynchronization(SYNCHRONIZATION_NEVER)__	};create,a,new,jms,transaction,manager,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,p,turns,off,transaction,synchronization,by,default,as,this,manager,might,be,used,alongside,a,datastore,based,spring,transaction,manager,like,data,source,transaction,manager,which,has,stronger,needs,for,synchronization,only,one,manager,is,allowed,to,drive,synchronization,at,any,point,of,time,see,set,connection,factory,see,set,transaction,synchronization;public,jms,transaction,manager,set,transaction,synchronization
JmsTransactionManager -> public JmsTransactionManager();1486062666;Create a new JmsTransactionManager for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._<p>Turns off transaction synchronization by default, as this manager might_be used alongside a datastore-based Spring transaction manager like_DataSourceTransactionManager, which has stronger needs for synchronization._Only one manager is allowed to drive synchronization at any point of time._@see #setConnectionFactory_@see #setTransactionSynchronization;public JmsTransactionManager() {_		setTransactionSynchronization(SYNCHRONIZATION_NEVER)__	};create,a,new,jms,transaction,manager,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,p,turns,off,transaction,synchronization,by,default,as,this,manager,might,be,used,alongside,a,datastore,based,spring,transaction,manager,like,data,source,transaction,manager,which,has,stronger,needs,for,synchronization,only,one,manager,is,allowed,to,drive,synchronization,at,any,point,of,time,see,set,connection,factory,see,set,transaction,synchronization;public,jms,transaction,manager,set,transaction,synchronization
JmsTransactionManager -> public JmsTransactionManager();1496259743;Create a new JmsTransactionManager for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._<p>Turns off transaction synchronization by default, as this manager might_be used alongside a datastore-based Spring transaction manager like_DataSourceTransactionManager, which has stronger needs for synchronization._Only one manager is allowed to drive synchronization at any point of time._@see #setConnectionFactory_@see #setTransactionSynchronization;public JmsTransactionManager() {_		setTransactionSynchronization(SYNCHRONIZATION_NEVER)__	};create,a,new,jms,transaction,manager,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,p,turns,off,transaction,synchronization,by,default,as,this,manager,might,be,used,alongside,a,datastore,based,spring,transaction,manager,like,data,source,transaction,manager,which,has,stronger,needs,for,synchronization,only,one,manager,is,allowed,to,drive,synchronization,at,any,point,of,time,see,set,connection,factory,see,set,transaction,synchronization;public,jms,transaction,manager,set,transaction,synchronization
JmsTransactionManager -> public JmsTransactionManager();1496837955;Create a new JmsTransactionManager for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._<p>Turns off transaction synchronization by default, as this manager might_be used alongside a datastore-based Spring transaction manager like_DataSourceTransactionManager, which has stronger needs for synchronization._Only one manager is allowed to drive synchronization at any point of time._@see #setConnectionFactory_@see #setTransactionSynchronization;public JmsTransactionManager() {_		setTransactionSynchronization(SYNCHRONIZATION_NEVER)__	};create,a,new,jms,transaction,manager,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,p,turns,off,transaction,synchronization,by,default,as,this,manager,might,be,used,alongside,a,datastore,based,spring,transaction,manager,like,data,source,transaction,manager,which,has,stronger,needs,for,synchronization,only,one,manager,is,allowed,to,drive,synchronization,at,any,point,of,time,see,set,connection,factory,see,set,transaction,synchronization;public,jms,transaction,manager,set,transaction,synchronization
JmsTransactionManager -> public JmsTransactionManager();1498780456;Create a new JmsTransactionManager for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._<p>Turns off transaction synchronization by default, as this manager might_be used alongside a datastore-based Spring transaction manager like_DataSourceTransactionManager, which has stronger needs for synchronization._Only one manager is allowed to drive synchronization at any point of time._@see #setConnectionFactory_@see #setTransactionSynchronization;public JmsTransactionManager() {_		setTransactionSynchronization(SYNCHRONIZATION_NEVER)__	};create,a,new,jms,transaction,manager,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,p,turns,off,transaction,synchronization,by,default,as,this,manager,might,be,used,alongside,a,datastore,based,spring,transaction,manager,like,data,source,transaction,manager,which,has,stronger,needs,for,synchronization,only,one,manager,is,allowed,to,drive,synchronization,at,any,point,of,time,see,set,connection,factory,see,set,transaction,synchronization;public,jms,transaction,manager,set,transaction,synchronization
JmsTransactionManager -> public JmsTransactionManager();1500448076;Create a new JmsTransactionManager for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._<p>Turns off transaction synchronization by default, as this manager might_be used alongside a datastore-based Spring transaction manager like_DataSourceTransactionManager, which has stronger needs for synchronization._Only one manager is allowed to drive synchronization at any point of time._@see #setConnectionFactory_@see #setTransactionSynchronization;public JmsTransactionManager() {_		setTransactionSynchronization(SYNCHRONIZATION_NEVER)__	};create,a,new,jms,transaction,manager,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,p,turns,off,transaction,synchronization,by,default,as,this,manager,might,be,used,alongside,a,datastore,based,spring,transaction,manager,like,data,source,transaction,manager,which,has,stronger,needs,for,synchronization,only,one,manager,is,allowed,to,drive,synchronization,at,any,point,of,time,see,set,connection,factory,see,set,transaction,synchronization;public,jms,transaction,manager,set,transaction,synchronization
JmsTransactionManager -> public JmsTransactionManager();1551199835;Create a new JmsTransactionManager for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._<p>Turns off transaction synchronization by default, as this manager might_be used alongside a datastore-based Spring transaction manager like_DataSourceTransactionManager, which has stronger needs for synchronization._Only one manager is allowed to drive synchronization at any point of time._@see #setConnectionFactory_@see #setTransactionSynchronization;public JmsTransactionManager() {_		setTransactionSynchronization(SYNCHRONIZATION_NEVER)__	};create,a,new,jms,transaction,manager,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,p,turns,off,transaction,synchronization,by,default,as,this,manager,might,be,used,alongside,a,datastore,based,spring,transaction,manager,like,data,source,transaction,manager,which,has,stronger,needs,for,synchronization,only,one,manager,is,allowed,to,drive,synchronization,at,any,point,of,time,see,set,connection,factory,see,set,transaction,synchronization;public,jms,transaction,manager,set,transaction,synchronization
JmsTransactionManager -> @Nullable 	public ConnectionFactory getConnectionFactory();1496837955;Return the JMS ConnectionFactory that this instance should manage transactions for.;@Nullable_	public ConnectionFactory getConnectionFactory() {_		return this.connectionFactory__	};return,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;nullable,public,connection,factory,get,connection,factory,return,this,connection,factory
JmsTransactionManager -> @Nullable 	public ConnectionFactory getConnectionFactory();1498780456;Return the JMS ConnectionFactory that this instance should manage transactions for.;@Nullable_	public ConnectionFactory getConnectionFactory() {_		return this.connectionFactory__	};return,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;nullable,public,connection,factory,get,connection,factory,return,this,connection,factory
JmsTransactionManager -> @Nullable 	public ConnectionFactory getConnectionFactory();1500448076;Return the JMS ConnectionFactory that this instance should manage transactions for.;@Nullable_	public ConnectionFactory getConnectionFactory() {_		return this.connectionFactory__	};return,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;nullable,public,connection,factory,get,connection,factory,return,this,connection,factory
JmsTransactionManager -> @Nullable 	public ConnectionFactory getConnectionFactory();1551199835;Return the JMS ConnectionFactory that this instance should manage transactions for.;@Nullable_	public ConnectionFactory getConnectionFactory() {_		return this.connectionFactory__	};return,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;nullable,public,connection,factory,get,connection,factory,return,this,connection,factory
JmsTransactionManager -> public void setConnectionFactory(@Nullable ConnectionFactory cf);1500448076;Set the JMS ConnectionFactory that this instance should manage transactions for.;public void setConnectionFactory(@Nullable ConnectionFactory cf) {_		if (cf != null && cf instanceof TransactionAwareConnectionFactoryProxy) {_			_			_			_			this.connectionFactory = ((TransactionAwareConnectionFactoryProxy) cf).getTargetConnectionFactory()__		}_		else {_			this.connectionFactory = cf__		}_	};set,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,void,set,connection,factory,nullable,connection,factory,cf,if,cf,null,cf,instanceof,transaction,aware,connection,factory,proxy,this,connection,factory,transaction,aware,connection,factory,proxy,cf,get,target,connection,factory,else,this,connection,factory,cf
JmsTransactionManager -> public void setConnectionFactory(@Nullable ConnectionFactory cf);1551199835;Set the JMS ConnectionFactory that this instance should manage transactions for.;public void setConnectionFactory(@Nullable ConnectionFactory cf) {_		if (cf instanceof TransactionAwareConnectionFactoryProxy) {_			_			_			_			this.connectionFactory = ((TransactionAwareConnectionFactoryProxy) cf).getTargetConnectionFactory()__		}_		else {_			this.connectionFactory = cf__		}_	};set,the,jms,connection,factory,that,this,instance,should,manage,transactions,for;public,void,set,connection,factory,nullable,connection,factory,cf,if,cf,instanceof,transaction,aware,connection,factory,proxy,this,connection,factory,transaction,aware,connection,factory,proxy,cf,get,target,connection,factory,else,this,connection,factory,cf
