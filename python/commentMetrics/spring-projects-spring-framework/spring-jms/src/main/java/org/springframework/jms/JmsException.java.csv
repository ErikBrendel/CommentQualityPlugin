commented;modifiers;parameterAmount;loc;comment;code
true;public;0;8;/**  * Convenience method to get the vendor specific error code if  * the root cause was an instance of JMSException.  * @return a string specifying the vendor-specific error code if the  * root cause is an instance of JMSException, or {@code null}  */ ;/**  * Convenience method to get the vendor specific error code if  * the root cause was an instance of JMSException.  * @return a string specifying the vendor-specific error code if the  * root cause is an instance of JMSException, or {@code null}  */ @Nullable public String getErrorCode() {     Throwable cause = getCause().     if (cause instanceof JMSException) {         return ((JMSException) cause).getErrorCode().     }     return null. }
true;public;0;17;/**  * Return the detail message, including the message from the linked exception  * if there is one.  * @see javax.jms.JMSException#getLinkedException()  */ ;/**  * Return the detail message, including the message from the linked exception  * if there is one.  * @see javax.jms.JMSException#getLinkedException()  */ @Override @Nullable public String getMessage() {     String message = super.getMessage().     Throwable cause = getCause().     if (cause instanceof JMSException) {         Exception linkedEx = ((JMSException) cause).getLinkedException().         if (linkedEx != null) {             String linkedMessage = linkedEx.getMessage().             String causeMessage = cause.getMessage().             if (linkedMessage != null && (causeMessage == null || !causeMessage.contains(linkedMessage))) {                 message = message + ". nested exception is " + linkedEx.             }         }     }     return message. }
