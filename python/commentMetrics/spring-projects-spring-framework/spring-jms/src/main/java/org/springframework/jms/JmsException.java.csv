# id;timestamp;commentText;codeText;commentWords;codeWords
JmsException -> public JmsException(Throwable cause);1328020251;Constructor that takes a plain root cause, intended for_subclasses mirroring corresponding <code>javax.jms</code> exceptions._@param cause the cause of the exception. This argument is generally_expected to be a proper subclass of {@link javax.jms.JMSException}.;public JmsException(Throwable cause) {_		super(cause != null ? cause.getMessage() : null, cause)__	};constructor,that,takes,a,plain,root,cause,intended,for,subclasses,mirroring,corresponding,code,javax,jms,code,exceptions,param,cause,the,cause,of,the,exception,this,argument,is,generally,expected,to,be,a,proper,subclass,of,link,javax,jms,jmsexception;public,jms,exception,throwable,cause,super,cause,null,cause,get,message,null,cause
JmsException -> public JmsException(Throwable cause);1356735495;Constructor that takes a plain root cause, intended for_subclasses mirroring corresponding {@code javax.jms} exceptions._@param cause the cause of the exception. This argument is generally_expected to be a proper subclass of {@link javax.jms.JMSException}.;public JmsException(Throwable cause) {_		super(cause != null ? cause.getMessage() : null, cause)__	};constructor,that,takes,a,plain,root,cause,intended,for,subclasses,mirroring,corresponding,code,javax,jms,exceptions,param,cause,the,cause,of,the,exception,this,argument,is,generally,expected,to,be,a,proper,subclass,of,link,javax,jms,jmsexception;public,jms,exception,throwable,cause,super,cause,null,cause,get,message,null,cause
JmsException -> public JmsException(Throwable cause);1357119239;Constructor that takes a plain root cause, intended for_subclasses mirroring corresponding {@code javax.jms} exceptions._@param cause the cause of the exception. This argument is generally_expected to be a proper subclass of {@link javax.jms.JMSException}.;public JmsException(Throwable cause) {_		super(cause != null ? cause.getMessage() : null, cause)__	};constructor,that,takes,a,plain,root,cause,intended,for,subclasses,mirroring,corresponding,code,javax,jms,exceptions,param,cause,the,cause,of,the,exception,this,argument,is,generally,expected,to,be,a,proper,subclass,of,link,javax,jms,jmsexception;public,jms,exception,throwable,cause,super,cause,null,cause,get,message,null,cause
JmsException -> public JmsException(Throwable cause);1368482696;Constructor that takes a plain root cause, intended for_subclasses mirroring corresponding {@code javax.jms} exceptions._@param cause the cause of the exception. This argument is generally_expected to be a proper subclass of {@link javax.jms.JMSException}.;public JmsException(Throwable cause) {_		super(cause != null ? cause.getMessage() : null, cause)__	};constructor,that,takes,a,plain,root,cause,intended,for,subclasses,mirroring,corresponding,code,javax,jms,exceptions,param,cause,the,cause,of,the,exception,this,argument,is,generally,expected,to,be,a,proper,subclass,of,link,javax,jms,jmsexception;public,jms,exception,throwable,cause,super,cause,null,cause,get,message,null,cause
JmsException -> public JmsException(Throwable cause);1495868221;Constructor that takes a plain root cause, intended for_subclasses mirroring corresponding {@code javax.jms} exceptions._@param cause the cause of the exception. This argument is generally_expected to be a proper subclass of {@link javax.jms.JMSException}.;public JmsException(Throwable cause) {_		super(cause != null ? cause.getMessage() : null, cause)__	};constructor,that,takes,a,plain,root,cause,intended,for,subclasses,mirroring,corresponding,code,javax,jms,exceptions,param,cause,the,cause,of,the,exception,this,argument,is,generally,expected,to,be,a,proper,subclass,of,link,javax,jms,jmsexception;public,jms,exception,throwable,cause,super,cause,null,cause,get,message,null,cause
JmsException -> @Override 	public String getMessage();1356735495;Return the detail message, including the message from the linked exception_if there is one._@see javax.jms.JMSException#getLinkedException();@Override_	public String getMessage() {_		String message = super.getMessage()__		Throwable cause = getCause()__		if (cause instanceof JMSException) {_			Exception linkedEx = ((JMSException) cause).getLinkedException()__			if (linkedEx != null) {_				String linkedMessage = linkedEx.getMessage()__				String causeMessage = cause.getMessage()__				if (linkedMessage != null && (causeMessage == null || !causeMessage.contains(linkedMessage))) {_					message = message + "_ nested exception is " + linkedEx__				}_			}_		}_		return message__	};return,the,detail,message,including,the,message,from,the,linked,exception,if,there,is,one,see,javax,jms,jmsexception,get,linked,exception;override,public,string,get,message,string,message,super,get,message,throwable,cause,get,cause,if,cause,instanceof,jmsexception,exception,linked,ex,jmsexception,cause,get,linked,exception,if,linked,ex,null,string,linked,message,linked,ex,get,message,string,cause,message,cause,get,message,if,linked,message,null,cause,message,null,cause,message,contains,linked,message,message,message,nested,exception,is,linked,ex,return,message
JmsException -> @Override 	public String getMessage();1368482696;Return the detail message, including the message from the linked exception_if there is one._@see javax.jms.JMSException#getLinkedException();@Override_	public String getMessage() {_		String message = super.getMessage()__		Throwable cause = getCause()__		if (cause instanceof JMSException) {_			Exception linkedEx = ((JMSException) cause).getLinkedException()__			if (linkedEx != null) {_				String linkedMessage = linkedEx.getMessage()__				String causeMessage = cause.getMessage()__				if (linkedMessage != null && (causeMessage == null || !causeMessage.contains(linkedMessage))) {_					message = message + "_ nested exception is " + linkedEx__				}_			}_		}_		return message__	};return,the,detail,message,including,the,message,from,the,linked,exception,if,there,is,one,see,javax,jms,jmsexception,get,linked,exception;override,public,string,get,message,string,message,super,get,message,throwable,cause,get,cause,if,cause,instanceof,jmsexception,exception,linked,ex,jmsexception,cause,get,linked,exception,if,linked,ex,null,string,linked,message,linked,ex,get,message,string,cause,message,cause,get,message,if,linked,message,null,cause,message,null,cause,message,contains,linked,message,message,message,nested,exception,is,linked,ex,return,message
JmsException -> @Override 	public String getMessage();1495868221;Return the detail message, including the message from the linked exception_if there is one._@see javax.jms.JMSException#getLinkedException();@Override_	public String getMessage() {_		String message = super.getMessage()__		Throwable cause = getCause()__		if (cause instanceof JMSException) {_			Exception linkedEx = ((JMSException) cause).getLinkedException()__			if (linkedEx != null) {_				String linkedMessage = linkedEx.getMessage()__				String causeMessage = cause.getMessage()__				if (linkedMessage != null && (causeMessage == null || !causeMessage.contains(linkedMessage))) {_					message = message + "_ nested exception is " + linkedEx__				}_			}_		}_		return message__	};return,the,detail,message,including,the,message,from,the,linked,exception,if,there,is,one,see,javax,jms,jmsexception,get,linked,exception;override,public,string,get,message,string,message,super,get,message,throwable,cause,get,cause,if,cause,instanceof,jmsexception,exception,linked,ex,jmsexception,cause,get,linked,exception,if,linked,ex,null,string,linked,message,linked,ex,get,message,string,cause,message,cause,get,message,if,linked,message,null,cause,message,null,cause,message,contains,linked,message,message,message,nested,exception,is,linked,ex,return,message
JmsException -> @Override 	public String getMessage();1496837955;Return the detail message, including the message from the linked exception_if there is one._@see javax.jms.JMSException#getLinkedException();@Override_	public String getMessage() {_		String message = super.getMessage()__		Throwable cause = getCause()__		if (cause instanceof JMSException) {_			Exception linkedEx = ((JMSException) cause).getLinkedException()__			if (linkedEx != null) {_				String linkedMessage = linkedEx.getMessage()__				String causeMessage = cause.getMessage()__				if (linkedMessage != null && (causeMessage == null || !causeMessage.contains(linkedMessage))) {_					message = message + "_ nested exception is " + linkedEx__				}_			}_		}_		return message__	};return,the,detail,message,including,the,message,from,the,linked,exception,if,there,is,one,see,javax,jms,jmsexception,get,linked,exception;override,public,string,get,message,string,message,super,get,message,throwable,cause,get,cause,if,cause,instanceof,jmsexception,exception,linked,ex,jmsexception,cause,get,linked,exception,if,linked,ex,null,string,linked,message,linked,ex,get,message,string,cause,message,cause,get,message,if,linked,message,null,cause,message,null,cause,message,contains,linked,message,message,message,nested,exception,is,linked,ex,return,message
JmsException -> public String getErrorCode();1328020251;Convenience method to get the vendor specific error code if_the root cause was an instance of JMSException._@return a string specifying the vendor-specific error code if the_root cause is an instance of JMSException, or <code>null</code>;public String getErrorCode() {_		Throwable cause = getCause()__		if (cause instanceof JMSException) {_			return ((JMSException) cause).getErrorCode()__		}_		return null__	};convenience,method,to,get,the,vendor,specific,error,code,if,the,root,cause,was,an,instance,of,jmsexception,return,a,string,specifying,the,vendor,specific,error,code,if,the,root,cause,is,an,instance,of,jmsexception,or,code,null,code;public,string,get,error,code,throwable,cause,get,cause,if,cause,instanceof,jmsexception,return,jmsexception,cause,get,error,code,return,null
JmsException -> public String getErrorCode();1356735495;Convenience method to get the vendor specific error code if_the root cause was an instance of JMSException._@return a string specifying the vendor-specific error code if the_root cause is an instance of JMSException, or {@code null};public String getErrorCode() {_		Throwable cause = getCause()__		if (cause instanceof JMSException) {_			return ((JMSException) cause).getErrorCode()__		}_		return null__	};convenience,method,to,get,the,vendor,specific,error,code,if,the,root,cause,was,an,instance,of,jmsexception,return,a,string,specifying,the,vendor,specific,error,code,if,the,root,cause,is,an,instance,of,jmsexception,or,code,null;public,string,get,error,code,throwable,cause,get,cause,if,cause,instanceof,jmsexception,return,jmsexception,cause,get,error,code,return,null
JmsException -> public String getErrorCode();1357119239;Convenience method to get the vendor specific error code if_the root cause was an instance of JMSException._@return a string specifying the vendor-specific error code if the_root cause is an instance of JMSException, or {@code null};public String getErrorCode() {_		Throwable cause = getCause()__		if (cause instanceof JMSException) {_			return ((JMSException) cause).getErrorCode()__		}_		return null__	};convenience,method,to,get,the,vendor,specific,error,code,if,the,root,cause,was,an,instance,of,jmsexception,return,a,string,specifying,the,vendor,specific,error,code,if,the,root,cause,is,an,instance,of,jmsexception,or,code,null;public,string,get,error,code,throwable,cause,get,cause,if,cause,instanceof,jmsexception,return,jmsexception,cause,get,error,code,return,null
JmsException -> public String getErrorCode();1368482696;Convenience method to get the vendor specific error code if_the root cause was an instance of JMSException._@return a string specifying the vendor-specific error code if the_root cause is an instance of JMSException, or {@code null};public String getErrorCode() {_		Throwable cause = getCause()__		if (cause instanceof JMSException) {_			return ((JMSException) cause).getErrorCode()__		}_		return null__	};convenience,method,to,get,the,vendor,specific,error,code,if,the,root,cause,was,an,instance,of,jmsexception,return,a,string,specifying,the,vendor,specific,error,code,if,the,root,cause,is,an,instance,of,jmsexception,or,code,null;public,string,get,error,code,throwable,cause,get,cause,if,cause,instanceof,jmsexception,return,jmsexception,cause,get,error,code,return,null
JmsException -> public JmsException(String msg, Throwable cause);1328020251;Constructor that takes a message and a root cause._@param msg the detail message_@param cause the cause of the exception. This argument is generally_expected to be a proper subclass of {@link javax.jms.JMSException},_but can also be a JNDI NamingException or the like.;public JmsException(String msg, Throwable cause) {_		super(msg, cause)__	};constructor,that,takes,a,message,and,a,root,cause,param,msg,the,detail,message,param,cause,the,cause,of,the,exception,this,argument,is,generally,expected,to,be,a,proper,subclass,of,link,javax,jms,jmsexception,but,can,also,be,a,jndi,naming,exception,or,the,like;public,jms,exception,string,msg,throwable,cause,super,msg,cause
JmsException -> public JmsException(String msg, Throwable cause);1356735495;Constructor that takes a message and a root cause._@param msg the detail message_@param cause the cause of the exception. This argument is generally_expected to be a proper subclass of {@link javax.jms.JMSException},_but can also be a JNDI NamingException or the like.;public JmsException(String msg, Throwable cause) {_		super(msg, cause)__	};constructor,that,takes,a,message,and,a,root,cause,param,msg,the,detail,message,param,cause,the,cause,of,the,exception,this,argument,is,generally,expected,to,be,a,proper,subclass,of,link,javax,jms,jmsexception,but,can,also,be,a,jndi,naming,exception,or,the,like;public,jms,exception,string,msg,throwable,cause,super,msg,cause
JmsException -> public JmsException(String msg, Throwable cause);1357119239;Constructor that takes a message and a root cause._@param msg the detail message_@param cause the cause of the exception. This argument is generally_expected to be a proper subclass of {@link javax.jms.JMSException},_but can also be a JNDI NamingException or the like.;public JmsException(String msg, Throwable cause) {_		super(msg, cause)__	};constructor,that,takes,a,message,and,a,root,cause,param,msg,the,detail,message,param,cause,the,cause,of,the,exception,this,argument,is,generally,expected,to,be,a,proper,subclass,of,link,javax,jms,jmsexception,but,can,also,be,a,jndi,naming,exception,or,the,like;public,jms,exception,string,msg,throwable,cause,super,msg,cause
JmsException -> public JmsException(String msg, Throwable cause);1368482696;Constructor that takes a message and a root cause._@param msg the detail message_@param cause the cause of the exception. This argument is generally_expected to be a proper subclass of {@link javax.jms.JMSException},_but can also be a JNDI NamingException or the like.;public JmsException(String msg, Throwable cause) {_		super(msg, cause)__	};constructor,that,takes,a,message,and,a,root,cause,param,msg,the,detail,message,param,cause,the,cause,of,the,exception,this,argument,is,generally,expected,to,be,a,proper,subclass,of,link,javax,jms,jmsexception,but,can,also,be,a,jndi,naming,exception,or,the,like;public,jms,exception,string,msg,throwable,cause,super,msg,cause
JmsException -> public JmsException(String msg, Throwable cause);1495868221;Constructor that takes a message and a root cause._@param msg the detail message_@param cause the cause of the exception. This argument is generally_expected to be a proper subclass of {@link javax.jms.JMSException},_but can also be a JNDI NamingException or the like.;public JmsException(String msg, Throwable cause) {_		super(msg, cause)__	};constructor,that,takes,a,message,and,a,root,cause,param,msg,the,detail,message,param,cause,the,cause,of,the,exception,this,argument,is,generally,expected,to,be,a,proper,subclass,of,link,javax,jms,jmsexception,but,can,also,be,a,jndi,naming,exception,or,the,like;public,jms,exception,string,msg,throwable,cause,super,msg,cause
JmsException -> public String getMessage();1328020251;Return the detail message, including the message from the linked exception_if there is one._@see javax.jms.JMSException#getLinkedException();public String getMessage() {_		String message = super.getMessage()__		Throwable cause = getCause()__		if (cause instanceof JMSException) {_			Exception linkedEx = ((JMSException) cause).getLinkedException()__			if (linkedEx != null) {_				String linkedMessage = linkedEx.getMessage()__				String causeMessage = cause.getMessage()__				if (linkedMessage != null && (causeMessage == null || !causeMessage.contains(linkedMessage))) {_					message = message + "_ nested exception is " + linkedEx__				}_			}_		}_		return message__	};return,the,detail,message,including,the,message,from,the,linked,exception,if,there,is,one,see,javax,jms,jmsexception,get,linked,exception;public,string,get,message,string,message,super,get,message,throwable,cause,get,cause,if,cause,instanceof,jmsexception,exception,linked,ex,jmsexception,cause,get,linked,exception,if,linked,ex,null,string,linked,message,linked,ex,get,message,string,cause,message,cause,get,message,if,linked,message,null,cause,message,null,cause,message,contains,linked,message,message,message,nested,exception,is,linked,ex,return,message
JmsException -> public String getMessage();1357119239;Return the detail message, including the message from the linked exception_if there is one._@see javax.jms.JMSException#getLinkedException();public String getMessage() {_		String message = super.getMessage()__		Throwable cause = getCause()__		if (cause instanceof JMSException) {_			Exception linkedEx = ((JMSException) cause).getLinkedException()__			if (linkedEx != null) {_				String linkedMessage = linkedEx.getMessage()__				String causeMessage = cause.getMessage()__				if (linkedMessage != null && (causeMessage == null || !causeMessage.contains(linkedMessage))) {_					message = message + "_ nested exception is " + linkedEx__				}_			}_		}_		return message__	};return,the,detail,message,including,the,message,from,the,linked,exception,if,there,is,one,see,javax,jms,jmsexception,get,linked,exception;public,string,get,message,string,message,super,get,message,throwable,cause,get,cause,if,cause,instanceof,jmsexception,exception,linked,ex,jmsexception,cause,get,linked,exception,if,linked,ex,null,string,linked,message,linked,ex,get,message,string,cause,message,cause,get,message,if,linked,message,null,cause,message,null,cause,message,contains,linked,message,message,message,nested,exception,is,linked,ex,return,message
JmsException -> @Nullable 	public String getErrorCode();1495868221;Convenience method to get the vendor specific error code if_the root cause was an instance of JMSException._@return a string specifying the vendor-specific error code if the_root cause is an instance of JMSException, or {@code null};@Nullable_	public String getErrorCode() {_		Throwable cause = getCause()__		if (cause instanceof JMSException) {_			return ((JMSException) cause).getErrorCode()__		}_		return null__	};convenience,method,to,get,the,vendor,specific,error,code,if,the,root,cause,was,an,instance,of,jmsexception,return,a,string,specifying,the,vendor,specific,error,code,if,the,root,cause,is,an,instance,of,jmsexception,or,code,null;nullable,public,string,get,error,code,throwable,cause,get,cause,if,cause,instanceof,jmsexception,return,jmsexception,cause,get,error,code,return,null
JmsException -> @Nullable 	public String getErrorCode();1496837955;Convenience method to get the vendor specific error code if_the root cause was an instance of JMSException._@return a string specifying the vendor-specific error code if the_root cause is an instance of JMSException, or {@code null};@Nullable_	public String getErrorCode() {_		Throwable cause = getCause()__		if (cause instanceof JMSException) {_			return ((JMSException) cause).getErrorCode()__		}_		return null__	};convenience,method,to,get,the,vendor,specific,error,code,if,the,root,cause,was,an,instance,of,jmsexception,return,a,string,specifying,the,vendor,specific,error,code,if,the,root,cause,is,an,instance,of,jmsexception,or,code,null;nullable,public,string,get,error,code,throwable,cause,get,cause,if,cause,instanceof,jmsexception,return,jmsexception,cause,get,error,code,return,null
JmsException -> @Nullable 	public String getErrorCode();1502974979;Convenience method to get the vendor specific error code if_the root cause was an instance of JMSException._@return a string specifying the vendor-specific error code if the_root cause is an instance of JMSException, or {@code null};@Nullable_	public String getErrorCode() {_		Throwable cause = getCause()__		if (cause instanceof JMSException) {_			return ((JMSException) cause).getErrorCode()__		}_		return null__	};convenience,method,to,get,the,vendor,specific,error,code,if,the,root,cause,was,an,instance,of,jmsexception,return,a,string,specifying,the,vendor,specific,error,code,if,the,root,cause,is,an,instance,of,jmsexception,or,code,null;nullable,public,string,get,error,code,throwable,cause,get,cause,if,cause,instanceof,jmsexception,return,jmsexception,cause,get,error,code,return,null
JmsException -> public JmsException(@Nullable Throwable cause);1496837955;Constructor that takes a plain root cause, intended for_subclasses mirroring corresponding {@code javax.jms} exceptions._@param cause the cause of the exception. This argument is generally_expected to be a proper subclass of {@link javax.jms.JMSException}.;public JmsException(@Nullable Throwable cause) {_		super(cause != null ? cause.getMessage() : null, cause)__	};constructor,that,takes,a,plain,root,cause,intended,for,subclasses,mirroring,corresponding,code,javax,jms,exceptions,param,cause,the,cause,of,the,exception,this,argument,is,generally,expected,to,be,a,proper,subclass,of,link,javax,jms,jmsexception;public,jms,exception,nullable,throwable,cause,super,cause,null,cause,get,message,null,cause
JmsException -> public JmsException(@Nullable Throwable cause);1502974979;Constructor that takes a plain root cause, intended for_subclasses mirroring corresponding {@code javax.jms} exceptions._@param cause the cause of the exception. This argument is generally_expected to be a proper subclass of {@link javax.jms.JMSException}.;public JmsException(@Nullable Throwable cause) {_		super(cause != null ? cause.getMessage() : null, cause)__	};constructor,that,takes,a,plain,root,cause,intended,for,subclasses,mirroring,corresponding,code,javax,jms,exceptions,param,cause,the,cause,of,the,exception,this,argument,is,generally,expected,to,be,a,proper,subclass,of,link,javax,jms,jmsexception;public,jms,exception,nullable,throwable,cause,super,cause,null,cause,get,message,null,cause
JmsException -> public JmsException(String msg, @Nullable Throwable cause);1496837955;Constructor that takes a message and a root cause._@param msg the detail message_@param cause the cause of the exception. This argument is generally_expected to be a proper subclass of {@link javax.jms.JMSException},_but can also be a JNDI NamingException or the like.;public JmsException(String msg, @Nullable Throwable cause) {_		super(msg, cause)__	};constructor,that,takes,a,message,and,a,root,cause,param,msg,the,detail,message,param,cause,the,cause,of,the,exception,this,argument,is,generally,expected,to,be,a,proper,subclass,of,link,javax,jms,jmsexception,but,can,also,be,a,jndi,naming,exception,or,the,like;public,jms,exception,string,msg,nullable,throwable,cause,super,msg,cause
JmsException -> public JmsException(String msg, @Nullable Throwable cause);1502974979;Constructor that takes a message and a root cause._@param msg the detail message_@param cause the cause of the exception. This argument is generally_expected to be a proper subclass of {@link javax.jms.JMSException},_but can also be a JNDI NamingException or the like.;public JmsException(String msg, @Nullable Throwable cause) {_		super(msg, cause)__	};constructor,that,takes,a,message,and,a,root,cause,param,msg,the,detail,message,param,cause,the,cause,of,the,exception,this,argument,is,generally,expected,to,be,a,proper,subclass,of,link,javax,jms,jmsexception,but,can,also,be,a,jndi,naming,exception,or,the,like;public,jms,exception,string,msg,nullable,throwable,cause,super,msg,cause
JmsException -> public JmsException(String msg);1328020251;Constructor that takes a message._@param msg the detail message;public JmsException(String msg) {_		super(msg)__	};constructor,that,takes,a,message,param,msg,the,detail,message;public,jms,exception,string,msg,super,msg
JmsException -> public JmsException(String msg);1356735495;Constructor that takes a message._@param msg the detail message;public JmsException(String msg) {_		super(msg)__	};constructor,that,takes,a,message,param,msg,the,detail,message;public,jms,exception,string,msg,super,msg
JmsException -> public JmsException(String msg);1357119239;Constructor that takes a message._@param msg the detail message;public JmsException(String msg) {_		super(msg)__	};constructor,that,takes,a,message,param,msg,the,detail,message;public,jms,exception,string,msg,super,msg
JmsException -> public JmsException(String msg);1368482696;Constructor that takes a message._@param msg the detail message;public JmsException(String msg) {_		super(msg)__	};constructor,that,takes,a,message,param,msg,the,detail,message;public,jms,exception,string,msg,super,msg
JmsException -> public JmsException(String msg);1495868221;Constructor that takes a message._@param msg the detail message;public JmsException(String msg) {_		super(msg)__	};constructor,that,takes,a,message,param,msg,the,detail,message;public,jms,exception,string,msg,super,msg
JmsException -> public JmsException(String msg);1496837955;Constructor that takes a message._@param msg the detail message;public JmsException(String msg) {_		super(msg)__	};constructor,that,takes,a,message,param,msg,the,detail,message;public,jms,exception,string,msg,super,msg
JmsException -> public JmsException(String msg);1502974979;Constructor that takes a message._@param msg the detail message;public JmsException(String msg) {_		super(msg)__	};constructor,that,takes,a,message,param,msg,the,detail,message;public,jms,exception,string,msg,super,msg
