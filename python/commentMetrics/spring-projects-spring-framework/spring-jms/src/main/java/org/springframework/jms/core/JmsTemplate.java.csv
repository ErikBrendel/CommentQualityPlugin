# id;timestamp;commentText;codeText;commentWords;codeWords
JmsTemplate -> public void setQosSettings(QosSettings settings);1492515173;Set the {@link QosSettings} to use when sending a message._@param settings the deliveryMode, priority, and timeToLive settings to use_@see #setExplicitQosEnabled(boolean)_@see #setDeliveryMode(int)_@see #setPriority(int)_@see #setTimeToLive(long)_@since 5.0;public void setQosSettings(QosSettings settings) {_		Assert.notNull(settings, "Settings must not be null")__		setExplicitQosEnabled(true)__		setDeliveryMode(settings.getDeliveryMode())__		setPriority(settings.getPriority())__		setTimeToLive(settings.getTimeToLive())__	};set,the,link,qos,settings,to,use,when,sending,a,message,param,settings,the,delivery,mode,priority,and,time,to,live,settings,to,use,see,set,explicit,qos,enabled,boolean,see,set,delivery,mode,int,see,set,priority,int,see,set,time,to,live,long,since,5,0;public,void,set,qos,settings,qos,settings,settings,assert,not,null,settings,settings,must,not,be,null,set,explicit,qos,enabled,true,set,delivery,mode,settings,get,delivery,mode,set,priority,settings,get,priority,set,time,to,live,settings,get,time,to,live
JmsTemplate -> public void setQosSettings(QosSettings settings);1495868221;Set the {@link QosSettings} to use when sending a message._@param settings the deliveryMode, priority, and timeToLive settings to use_@see #setExplicitQosEnabled(boolean)_@see #setDeliveryMode(int)_@see #setPriority(int)_@see #setTimeToLive(long)_@since 5.0;public void setQosSettings(QosSettings settings) {_		Assert.notNull(settings, "Settings must not be null")__		setExplicitQosEnabled(true)__		setDeliveryMode(settings.getDeliveryMode())__		setPriority(settings.getPriority())__		setTimeToLive(settings.getTimeToLive())__	};set,the,link,qos,settings,to,use,when,sending,a,message,param,settings,the,delivery,mode,priority,and,time,to,live,settings,to,use,see,set,explicit,qos,enabled,boolean,see,set,delivery,mode,int,see,set,priority,int,see,set,time,to,live,long,since,5,0;public,void,set,qos,settings,qos,settings,settings,assert,not,null,settings,settings,must,not,be,null,set,explicit,qos,enabled,true,set,delivery,mode,settings,get,delivery,mode,set,priority,settings,get,priority,set,time,to,live,settings,get,time,to,live
JmsTemplate -> public void setQosSettings(QosSettings settings);1496259743;Set the {@link QosSettings} to use when sending a message._@param settings the deliveryMode, priority, and timeToLive settings to use_@see #setExplicitQosEnabled(boolean)_@see #setDeliveryMode(int)_@see #setPriority(int)_@see #setTimeToLive(long)_@since 5.0;public void setQosSettings(QosSettings settings) {_		Assert.notNull(settings, "Settings must not be null")__		setExplicitQosEnabled(true)__		setDeliveryMode(settings.getDeliveryMode())__		setPriority(settings.getPriority())__		setTimeToLive(settings.getTimeToLive())__	};set,the,link,qos,settings,to,use,when,sending,a,message,param,settings,the,delivery,mode,priority,and,time,to,live,settings,to,use,see,set,explicit,qos,enabled,boolean,see,set,delivery,mode,int,see,set,priority,int,see,set,time,to,live,long,since,5,0;public,void,set,qos,settings,qos,settings,settings,assert,not,null,settings,settings,must,not,be,null,set,explicit,qos,enabled,true,set,delivery,mode,settings,get,delivery,mode,set,priority,settings,get,priority,set,time,to,live,settings,get,time,to,live
JmsTemplate -> public void setQosSettings(QosSettings settings);1496837955;Set the {@link QosSettings} to use when sending a message._@param settings the deliveryMode, priority, and timeToLive settings to use_@see #setExplicitQosEnabled(boolean)_@see #setDeliveryMode(int)_@see #setPriority(int)_@see #setTimeToLive(long)_@since 5.0;public void setQosSettings(QosSettings settings) {_		Assert.notNull(settings, "Settings must not be null")__		setExplicitQosEnabled(true)__		setDeliveryMode(settings.getDeliveryMode())__		setPriority(settings.getPriority())__		setTimeToLive(settings.getTimeToLive())__	};set,the,link,qos,settings,to,use,when,sending,a,message,param,settings,the,delivery,mode,priority,and,time,to,live,settings,to,use,see,set,explicit,qos,enabled,boolean,see,set,delivery,mode,int,see,set,priority,int,see,set,time,to,live,long,since,5,0;public,void,set,qos,settings,qos,settings,settings,assert,not,null,settings,settings,must,not,be,null,set,explicit,qos,enabled,true,set,delivery,mode,settings,get,delivery,mode,set,priority,settings,get,priority,set,time,to,live,settings,get,time,to,live
JmsTemplate -> public void setQosSettings(QosSettings settings);1500448076;Set the {@link QosSettings} to use when sending a message._@param settings the deliveryMode, priority, and timeToLive settings to use_@see #setExplicitQosEnabled(boolean)_@see #setDeliveryMode(int)_@see #setPriority(int)_@see #setTimeToLive(long)_@since 5.0;public void setQosSettings(QosSettings settings) {_		Assert.notNull(settings, "Settings must not be null")__		setExplicitQosEnabled(true)__		setDeliveryMode(settings.getDeliveryMode())__		setPriority(settings.getPriority())__		setTimeToLive(settings.getTimeToLive())__	};set,the,link,qos,settings,to,use,when,sending,a,message,param,settings,the,delivery,mode,priority,and,time,to,live,settings,to,use,see,set,explicit,qos,enabled,boolean,see,set,delivery,mode,int,see,set,priority,int,see,set,time,to,live,long,since,5,0;public,void,set,qos,settings,qos,settings,settings,assert,not,null,settings,settings,must,not,be,null,set,explicit,qos,enabled,true,set,delivery,mode,settings,get,delivery,mode,set,priority,settings,get,priority,set,time,to,live,settings,get,time,to,live
JmsTemplate -> public void setQosSettings(QosSettings settings);1500457438;Set the {@link QosSettings} to use when sending a message._@param settings the deliveryMode, priority, and timeToLive settings to use_@see #setExplicitQosEnabled(boolean)_@see #setDeliveryMode(int)_@see #setPriority(int)_@see #setTimeToLive(long)_@since 5.0;public void setQosSettings(QosSettings settings) {_		Assert.notNull(settings, "Settings must not be null")__		setExplicitQosEnabled(true)__		setDeliveryMode(settings.getDeliveryMode())__		setPriority(settings.getPriority())__		setTimeToLive(settings.getTimeToLive())__	};set,the,link,qos,settings,to,use,when,sending,a,message,param,settings,the,delivery,mode,priority,and,time,to,live,settings,to,use,see,set,explicit,qos,enabled,boolean,see,set,delivery,mode,int,see,set,priority,int,see,set,time,to,live,long,since,5,0;public,void,set,qos,settings,qos,settings,settings,assert,not,null,settings,settings,must,not,be,null,set,explicit,qos,enabled,true,set,delivery,mode,settings,get,delivery,mode,set,priority,settings,get,priority,set,time,to,live,settings,get,time,to,live
JmsTemplate -> public void setQosSettings(QosSettings settings);1502974979;Set the {@link QosSettings} to use when sending a message._@param settings the deliveryMode, priority, and timeToLive settings to use_@see #setExplicitQosEnabled(boolean)_@see #setDeliveryMode(int)_@see #setPriority(int)_@see #setTimeToLive(long)_@since 5.0;public void setQosSettings(QosSettings settings) {_		Assert.notNull(settings, "Settings must not be null")__		setExplicitQosEnabled(true)__		setDeliveryMode(settings.getDeliveryMode())__		setPriority(settings.getPriority())__		setTimeToLive(settings.getTimeToLive())__	};set,the,link,qos,settings,to,use,when,sending,a,message,param,settings,the,delivery,mode,priority,and,time,to,live,settings,to,use,see,set,explicit,qos,enabled,boolean,see,set,delivery,mode,int,see,set,priority,int,see,set,time,to,live,long,since,5,0;public,void,set,qos,settings,qos,settings,settings,assert,not,null,settings,settings,must,not,be,null,set,explicit,qos,enabled,true,set,delivery,mode,settings,get,delivery,mode,set,priority,settings,get,priority,set,time,to,live,settings,get,time,to,live
JmsTemplate -> public void setQosSettings(QosSettings settings);1518567721;Set the {@link QosSettings} to use when sending a message._@param settings the deliveryMode, priority, and timeToLive settings to use_@see #setExplicitQosEnabled(boolean)_@see #setDeliveryMode(int)_@see #setPriority(int)_@see #setTimeToLive(long)_@since 5.0;public void setQosSettings(QosSettings settings) {_		Assert.notNull(settings, "Settings must not be null")__		setExplicitQosEnabled(true)__		setDeliveryMode(settings.getDeliveryMode())__		setPriority(settings.getPriority())__		setTimeToLive(settings.getTimeToLive())__	};set,the,link,qos,settings,to,use,when,sending,a,message,param,settings,the,delivery,mode,priority,and,time,to,live,settings,to,use,see,set,explicit,qos,enabled,boolean,see,set,delivery,mode,int,see,set,priority,int,see,set,time,to,live,long,since,5,0;public,void,set,qos,settings,qos,settings,settings,assert,not,null,settings,settings,must,not,be,null,set,explicit,qos,enabled,true,set,delivery,mode,settings,get,delivery,mode,set,priority,settings,get,priority,set,time,to,live,settings,get,time,to,live
JmsTemplate -> public void setQosSettings(QosSettings settings);1530174524;Set the {@link QosSettings} to use when sending a message._@param settings the deliveryMode, priority, and timeToLive settings to use_@since 5.0_@see #setExplicitQosEnabled(boolean)_@see #setDeliveryMode(int)_@see #setPriority(int)_@see #setTimeToLive(long);public void setQosSettings(QosSettings settings) {_		Assert.notNull(settings, "Settings must not be null")__		setExplicitQosEnabled(true)__		setDeliveryMode(settings.getDeliveryMode())__		setPriority(settings.getPriority())__		setTimeToLive(settings.getTimeToLive())__	};set,the,link,qos,settings,to,use,when,sending,a,message,param,settings,the,delivery,mode,priority,and,time,to,live,settings,to,use,since,5,0,see,set,explicit,qos,enabled,boolean,see,set,delivery,mode,int,see,set,priority,int,see,set,time,to,live,long;public,void,set,qos,settings,qos,settings,settings,assert,not,null,settings,settings,must,not,be,null,set,explicit,qos,enabled,true,set,delivery,mode,settings,get,delivery,mode,set,priority,settings,get,priority,set,time,to,live,settings,get,time,to,live
JmsTemplate -> public void setQosSettings(QosSettings settings);1530174524;Set the {@link QosSettings} to use when sending a message._@param settings the deliveryMode, priority, and timeToLive settings to use_@since 5.0_@see #setExplicitQosEnabled(boolean)_@see #setDeliveryMode(int)_@see #setPriority(int)_@see #setTimeToLive(long);public void setQosSettings(QosSettings settings) {_		Assert.notNull(settings, "Settings must not be null")__		setExplicitQosEnabled(true)__		setDeliveryMode(settings.getDeliveryMode())__		setPriority(settings.getPriority())__		setTimeToLive(settings.getTimeToLive())__	};set,the,link,qos,settings,to,use,when,sending,a,message,param,settings,the,delivery,mode,priority,and,time,to,live,settings,to,use,since,5,0,see,set,explicit,qos,enabled,boolean,see,set,delivery,mode,int,see,set,priority,int,see,set,time,to,live,long;public,void,set,qos,settings,qos,settings,settings,assert,not,null,settings,settings,must,not,be,null,set,explicit,qos,enabled,true,set,delivery,mode,settings,get,delivery,mode,set,priority,settings,get,priority,set,time,to,live,settings,get,time,to,live
JmsTemplate -> public void setDefaultDestination(Destination destination);1328020251;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,destination,destination,this,default,destination,destination
JmsTemplate -> public void setDefaultDestination(Destination destination);1356735495;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,destination,destination,this,default,destination,destination
JmsTemplate -> public void setDefaultDestination(Destination destination);1357119239;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,destination,destination,this,default,destination,destination
JmsTemplate -> public void setDefaultDestination(Destination destination);1364391982;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,destination,destination,this,default,destination,destination
JmsTemplate -> public void setDefaultDestination(Destination destination);1368482696;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,destination,destination,this,default,destination,destination
JmsTemplate -> public void setDefaultDestination(Destination destination);1385501137;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,destination,destination,this,default,destination,destination
JmsTemplate -> public void setDefaultDestination(Destination destination);1390318124;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,destination,destination,this,default,destination,destination
JmsTemplate -> public void setDefaultDestination(Destination destination);1405696891;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,destination,destination,this,default,destination,destination
JmsTemplate -> public void setDefaultDestination(Destination destination);1406555570;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,destination,destination,this,default,destination,destination
JmsTemplate -> public void setDefaultDestination(Destination destination);1406643767;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,destination,destination,this,default,destination,destination
JmsTemplate -> public void setDefaultDestination(Destination destination);1413568470;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,destination,destination,this,default,destination,destination
JmsTemplate -> public void setDefaultDestination(Destination destination);1434018810;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,destination,destination,this,default,destination,destination
JmsTemplate -> public void setDefaultDestination(Destination destination);1438003976;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,destination,destination,this,default,destination,destination
JmsTemplate -> public void setDefaultDestination(Destination destination);1461683397;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,destination,destination,this,default,destination,destination
JmsTemplate -> public void setDefaultDestination(Destination destination);1492515173;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,destination,destination,this,default,destination,destination
JmsTemplate -> public void setDefaultDestination(Destination destination);1495868221;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,destination,destination,this,default,destination,destination
JmsTemplate -> public void setDefaultDestination(Destination destination);1496259743;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,destination,destination,this,default,destination,destination
JmsTemplate -> public void setDefaultDestination(Destination destination);1496837955;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,destination,destination,this,default,destination,destination
JmsTemplate -> @Nullable 	public Destination getDefaultDestination();1496837955;Return the destination to be used on send/receive operations that do not_have a destination parameter.;@Nullable_	public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;nullable,public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> @Nullable 	public Destination getDefaultDestination();1500448076;Return the destination to be used on send/receive operations that do not_have a destination parameter.;@Nullable_	public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;nullable,public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> @Nullable 	public Destination getDefaultDestination();1500457438;Return the destination to be used on send/receive operations that do not_have a destination parameter.;@Nullable_	public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;nullable,public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> @Nullable 	public Destination getDefaultDestination();1502974979;Return the destination to be used on send/receive operations that do not_have a destination parameter.;@Nullable_	public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;nullable,public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> @Nullable 	public Destination getDefaultDestination();1518567721;Return the destination to be used on send/receive operations that do not_have a destination parameter.;@Nullable_	public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;nullable,public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> @Nullable 	public Destination getDefaultDestination();1530174524;Return the destination to be used on send/receive operations that do not_have a destination parameter.;@Nullable_	public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;nullable,public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> @Nullable 	public Destination getDefaultDestination();1530174524;Return the destination to be used on send/receive operations that do not_have a destination parameter.;@Nullable_	public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;nullable,public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> public int getDeliveryMode();1328020251;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1356735495;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1357119239;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1364391982;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1368482696;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1385501137;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1390318124;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1405696891;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1406555570;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1406643767;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1413568470;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1434018810;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1438003976;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1461683397;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1492515173;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1495868221;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1496259743;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1496837955;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1500448076;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1500457438;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1502974979;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1518567721;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1530174524;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public int getDeliveryMode();1530174524;Return the delivery mode to use when sending a message.;public int getDeliveryMode() {_		return this.deliveryMode__	};return,the,delivery,mode,to,use,when,sending,a,message;public,int,get,delivery,mode,return,this,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1328020251;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (1) or "NON_PERSISTENT" (2)._<p>Default it "true" aka delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,1,or,2,p,default,it,true,aka,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1356735495;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (1) or "NON_PERSISTENT" (2)._<p>Default it "true" aka delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,1,or,2,p,default,it,true,aka,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1357119239;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (1) or "NON_PERSISTENT" (2)._<p>Default it "true" aka delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,1,or,2,p,default,it,true,aka,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1364391982;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (1) or "NON_PERSISTENT" (2)._<p>Default it "true" aka delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,1,or,2,p,default,it,true,aka,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1368482696;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (1) or "NON_PERSISTENT" (2)._<p>Default it "true" aka delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,1,or,2,p,default,it,true,aka,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1385501137;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (1) or "NON_PERSISTENT" (2)._<p>Default it "true" aka delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,1,or,2,p,default,it,true,aka,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1390318124;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (2) or "NON_PERSISTENT" (1)._<p>Default is "true" a.k.a. delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,2,or,1,p,default,is,true,a,k,a,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1405696891;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (2) or "NON_PERSISTENT" (1)._<p>Default is "true" a.k.a. delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,2,or,1,p,default,is,true,a,k,a,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1406555570;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (2) or "NON_PERSISTENT" (1)._<p>Default is "true" a.k.a. delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,2,or,1,p,default,is,true,a,k,a,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1406643767;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (2) or "NON_PERSISTENT" (1)._<p>Default is "true" a.k.a. delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,2,or,1,p,default,is,true,a,k,a,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1413568470;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (2) or "NON_PERSISTENT" (1)._<p>Default is "true" a.k.a. delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,2,or,1,p,default,is,true,a,k,a,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1434018810;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (2) or "NON_PERSISTENT" (1)._<p>Default is "true" a.k.a. delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,2,or,1,p,default,is,true,a,k,a,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1438003976;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (2) or "NON_PERSISTENT" (1)._<p>Default is "true" a.k.a. delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,2,or,1,p,default,is,true,a,k,a,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1461683397;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (2) or "NON_PERSISTENT" (1)._<p>Default is "true" a.k.a. delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,2,or,1,p,default,is,true,a,k,a,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1492515173;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (2) or "NON_PERSISTENT" (1)._<p>Default is "true" a.k.a. delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,2,or,1,p,default,is,true,a,k,a,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1495868221;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (2) or "NON_PERSISTENT" (1)._<p>Default is "true" a.k.a. delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,2,or,1,p,default,is,true,a,k,a,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1496259743;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (2) or "NON_PERSISTENT" (1)._<p>Default is "true" a.k.a. delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,2,or,1,p,default,is,true,a,k,a,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1496837955;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (2) or "NON_PERSISTENT" (1)._<p>Default is "true" a.k.a. delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,2,or,1,p,default,is,true,a,k,a,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1500448076;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (2) or "NON_PERSISTENT" (1)._<p>Default is "true" a.k.a. delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,2,or,1,p,default,is,true,a,k,a,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1500457438;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (2) or "NON_PERSISTENT" (1)._<p>Default is "true" a.k.a. delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,2,or,1,p,default,is,true,a,k,a,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1502974979;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (2) or "NON_PERSISTENT" (1)._<p>Default is "true" a.k.a. delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,2,or,1,p,default,is,true,a,k,a,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1518567721;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (2) or "NON_PERSISTENT" (1)._<p>Default is "true" a.k.a. delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,2,or,1,p,default,is,true,a,k,a,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1530174524;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (2) or "NON_PERSISTENT" (1)._<p>Default is "true" a.k.a. delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,2,or,1,p,default,is,true,a,k,a,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public void setDeliveryPersistent(boolean deliveryPersistent);1530174524;Set whether message delivery should be persistent or non-persistent,_specified as boolean value ("true" or "false"). This will set the delivery_mode accordingly, to either "PERSISTENT" (2) or "NON_PERSISTENT" (1)._<p>Default is "true" a.k.a. delivery mode "PERSISTENT"._@see #setDeliveryMode(int)_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT;public void setDeliveryPersistent(boolean deliveryPersistent) {_		this.deliveryMode = (deliveryPersistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT)__	};set,whether,message,delivery,should,be,persistent,or,non,persistent,specified,as,boolean,value,true,or,false,this,will,set,the,delivery,mode,accordingly,to,either,persistent,2,or,1,p,default,is,true,a,k,a,delivery,mode,persistent,see,set,delivery,mode,int,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode;public,void,set,delivery,persistent,boolean,delivery,persistent,this,delivery,mode,delivery,persistent,delivery,mode,persistent,delivery,mode
JmsTemplate -> public boolean isPubSubNoLocal();1328020251;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1356735495;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1357119239;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1364391982;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1368482696;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1385501137;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1390318124;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1405696891;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1406555570;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1406643767;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1413568470;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1434018810;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1438003976;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1461683397;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1492515173;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1495868221;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1496259743;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1496837955;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1500448076;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1500457438;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1502974979;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1518567721;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1530174524;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public boolean isPubSubNoLocal();1530174524;Return whether to inhibit the delivery of messages published by its own connection.;public boolean isPubSubNoLocal() {_		return this.pubSubNoLocal__	};return,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection;public,boolean,is,pub,sub,no,local,return,this,pub,sub,no,local
JmsTemplate -> public String getDefaultDestinationName();1328020251;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> public String getDefaultDestinationName();1356735495;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> public String getDefaultDestinationName();1357119239;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> public String getDefaultDestinationName();1364391982;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> public String getDefaultDestinationName();1368482696;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> public String getDefaultDestinationName();1385501137;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> public String getDefaultDestinationName();1390318124;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> public String getDefaultDestinationName();1405696891;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> public String getDefaultDestinationName();1406555570;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> public String getDefaultDestinationName();1406643767;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> public String getDefaultDestinationName();1413568470;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> public String getDefaultDestinationName();1434018810;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> public String getDefaultDestinationName();1438003976;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> public String getDefaultDestinationName();1461683397;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> public String getDefaultDestinationName();1492515173;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> public String getDefaultDestinationName();1495868221;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> public String getDefaultDestinationName();1496259743;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> public void setDeliveryDelay(long deliveryDelay);1364391982;Set the delivery delay to use for send calls (in milliseconds)._<p>The default is 0 (no delivery delay)._Note that this feature requires JMS 2.0.;public void setDeliveryDelay(long deliveryDelay) {_		this.deliveryDelay = deliveryDelay__	};set,the,delivery,delay,to,use,for,send,calls,in,milliseconds,p,the,default,is,0,no,delivery,delay,note,that,this,feature,requires,jms,2,0;public,void,set,delivery,delay,long,delivery,delay,this,delivery,delay,delivery,delay
JmsTemplate -> public void setDeliveryDelay(long deliveryDelay);1368482696;Set the delivery delay to use for send calls (in milliseconds)._<p>The default is 0 (no delivery delay)._Note that this feature requires JMS 2.0.;public void setDeliveryDelay(long deliveryDelay) {_		this.deliveryDelay = deliveryDelay__	};set,the,delivery,delay,to,use,for,send,calls,in,milliseconds,p,the,default,is,0,no,delivery,delay,note,that,this,feature,requires,jms,2,0;public,void,set,delivery,delay,long,delivery,delay,this,delivery,delay,delivery,delay
JmsTemplate -> public void setDeliveryDelay(long deliveryDelay);1385501137;Set the delivery delay to use for send calls (in milliseconds)._<p>The default is 0 (no delivery delay)._Note that this feature requires JMS 2.0.;public void setDeliveryDelay(long deliveryDelay) {_		this.deliveryDelay = deliveryDelay__	};set,the,delivery,delay,to,use,for,send,calls,in,milliseconds,p,the,default,is,0,no,delivery,delay,note,that,this,feature,requires,jms,2,0;public,void,set,delivery,delay,long,delivery,delay,this,delivery,delay,delivery,delay
JmsTemplate -> public void setDeliveryDelay(long deliveryDelay);1390318124;Set the delivery delay to use for send calls (in milliseconds)._<p>The default is 0 (no delivery delay)._Note that this feature requires JMS 2.0.;public void setDeliveryDelay(long deliveryDelay) {_		this.deliveryDelay = deliveryDelay__	};set,the,delivery,delay,to,use,for,send,calls,in,milliseconds,p,the,default,is,0,no,delivery,delay,note,that,this,feature,requires,jms,2,0;public,void,set,delivery,delay,long,delivery,delay,this,delivery,delay,delivery,delay
JmsTemplate -> public void setDeliveryDelay(long deliveryDelay);1405696891;Set the delivery delay to use for send calls (in milliseconds)._<p>The default is 0 (no delivery delay)._Note that this feature requires JMS 2.0.;public void setDeliveryDelay(long deliveryDelay) {_		this.deliveryDelay = deliveryDelay__	};set,the,delivery,delay,to,use,for,send,calls,in,milliseconds,p,the,default,is,0,no,delivery,delay,note,that,this,feature,requires,jms,2,0;public,void,set,delivery,delay,long,delivery,delay,this,delivery,delay,delivery,delay
JmsTemplate -> public void setDeliveryDelay(long deliveryDelay);1406555570;Set the delivery delay to use for send calls (in milliseconds)._<p>The default is 0 (no delivery delay)._Note that this feature requires JMS 2.0.;public void setDeliveryDelay(long deliveryDelay) {_		this.deliveryDelay = deliveryDelay__	};set,the,delivery,delay,to,use,for,send,calls,in,milliseconds,p,the,default,is,0,no,delivery,delay,note,that,this,feature,requires,jms,2,0;public,void,set,delivery,delay,long,delivery,delay,this,delivery,delay,delivery,delay
JmsTemplate -> public void setDeliveryDelay(long deliveryDelay);1406643767;Set the delivery delay to use for send calls (in milliseconds)._<p>The default is 0 (no delivery delay)._Note that this feature requires JMS 2.0.;public void setDeliveryDelay(long deliveryDelay) {_		this.deliveryDelay = deliveryDelay__	};set,the,delivery,delay,to,use,for,send,calls,in,milliseconds,p,the,default,is,0,no,delivery,delay,note,that,this,feature,requires,jms,2,0;public,void,set,delivery,delay,long,delivery,delay,this,delivery,delay,delivery,delay
JmsTemplate -> public void setDeliveryDelay(long deliveryDelay);1413568470;Set the delivery delay to use for send calls (in milliseconds)._<p>The default is -1 (no delivery delay passed on to the broker)._Note that this feature requires JMS 2.0.;public void setDeliveryDelay(long deliveryDelay) {_		this.deliveryDelay = deliveryDelay__	};set,the,delivery,delay,to,use,for,send,calls,in,milliseconds,p,the,default,is,1,no,delivery,delay,passed,on,to,the,broker,note,that,this,feature,requires,jms,2,0;public,void,set,delivery,delay,long,delivery,delay,this,delivery,delay,delivery,delay
JmsTemplate -> public void setDeliveryDelay(long deliveryDelay);1434018810;Set the delivery delay to use for send calls (in milliseconds)._<p>The default is -1 (no delivery delay passed on to the broker)._Note that this feature requires JMS 2.0.;public void setDeliveryDelay(long deliveryDelay) {_		this.deliveryDelay = deliveryDelay__	};set,the,delivery,delay,to,use,for,send,calls,in,milliseconds,p,the,default,is,1,no,delivery,delay,passed,on,to,the,broker,note,that,this,feature,requires,jms,2,0;public,void,set,delivery,delay,long,delivery,delay,this,delivery,delay,delivery,delay
JmsTemplate -> public void setDeliveryDelay(long deliveryDelay);1438003976;Set the delivery delay to use for send calls (in milliseconds)._<p>The default is -1 (no delivery delay passed on to the broker)._Note that this feature requires JMS 2.0.;public void setDeliveryDelay(long deliveryDelay) {_		this.deliveryDelay = deliveryDelay__	};set,the,delivery,delay,to,use,for,send,calls,in,milliseconds,p,the,default,is,1,no,delivery,delay,passed,on,to,the,broker,note,that,this,feature,requires,jms,2,0;public,void,set,delivery,delay,long,delivery,delay,this,delivery,delay,delivery,delay
JmsTemplate -> public void setDeliveryDelay(long deliveryDelay);1461683397;Set the delivery delay to use for send calls (in milliseconds)._<p>The default is -1 (no delivery delay passed on to the broker)._Note that this feature requires JMS 2.0.;public void setDeliveryDelay(long deliveryDelay) {_		this.deliveryDelay = deliveryDelay__	};set,the,delivery,delay,to,use,for,send,calls,in,milliseconds,p,the,default,is,1,no,delivery,delay,passed,on,to,the,broker,note,that,this,feature,requires,jms,2,0;public,void,set,delivery,delay,long,delivery,delay,this,delivery,delay,delivery,delay
JmsTemplate -> public void setDeliveryDelay(long deliveryDelay);1492515173;Set the delivery delay to use for send calls (in milliseconds)._<p>The default is -1 (no delivery delay passed on to the broker)._Note that this feature requires JMS 2.0.;public void setDeliveryDelay(long deliveryDelay) {_		this.deliveryDelay = deliveryDelay__	};set,the,delivery,delay,to,use,for,send,calls,in,milliseconds,p,the,default,is,1,no,delivery,delay,passed,on,to,the,broker,note,that,this,feature,requires,jms,2,0;public,void,set,delivery,delay,long,delivery,delay,this,delivery,delay,delivery,delay
JmsTemplate -> public void setDeliveryDelay(long deliveryDelay);1495868221;Set the delivery delay to use for send calls (in milliseconds)._<p>The default is -1 (no delivery delay passed on to the broker)._Note that this feature requires JMS 2.0.;public void setDeliveryDelay(long deliveryDelay) {_		this.deliveryDelay = deliveryDelay__	};set,the,delivery,delay,to,use,for,send,calls,in,milliseconds,p,the,default,is,1,no,delivery,delay,passed,on,to,the,broker,note,that,this,feature,requires,jms,2,0;public,void,set,delivery,delay,long,delivery,delay,this,delivery,delay,delivery,delay
JmsTemplate -> public void setDeliveryDelay(long deliveryDelay);1496259743;Set the delivery delay to use for send calls (in milliseconds)._<p>The default is -1 (no delivery delay passed on to the broker)._Note that this feature requires JMS 2.0.;public void setDeliveryDelay(long deliveryDelay) {_		this.deliveryDelay = deliveryDelay__	};set,the,delivery,delay,to,use,for,send,calls,in,milliseconds,p,the,default,is,1,no,delivery,delay,passed,on,to,the,broker,note,that,this,feature,requires,jms,2,0;public,void,set,delivery,delay,long,delivery,delay,this,delivery,delay,delivery,delay
JmsTemplate -> public void setDeliveryDelay(long deliveryDelay);1496837955;Set the delivery delay to use for send calls (in milliseconds)._<p>The default is -1 (no delivery delay passed on to the broker)._Note that this feature requires JMS 2.0.;public void setDeliveryDelay(long deliveryDelay) {_		this.deliveryDelay = deliveryDelay__	};set,the,delivery,delay,to,use,for,send,calls,in,milliseconds,p,the,default,is,1,no,delivery,delay,passed,on,to,the,broker,note,that,this,feature,requires,jms,2,0;public,void,set,delivery,delay,long,delivery,delay,this,delivery,delay,delivery,delay
JmsTemplate -> public void setDeliveryDelay(long deliveryDelay);1500448076;Set the delivery delay to use for send calls (in milliseconds)._<p>The default is -1 (no delivery delay passed on to the broker)._Note that this feature requires JMS 2.0.;public void setDeliveryDelay(long deliveryDelay) {_		this.deliveryDelay = deliveryDelay__	};set,the,delivery,delay,to,use,for,send,calls,in,milliseconds,p,the,default,is,1,no,delivery,delay,passed,on,to,the,broker,note,that,this,feature,requires,jms,2,0;public,void,set,delivery,delay,long,delivery,delay,this,delivery,delay,delivery,delay
JmsTemplate -> public void setDeliveryDelay(long deliveryDelay);1500457438;Set the delivery delay to use for send calls (in milliseconds)._<p>The default is -1 (no delivery delay passed on to the broker)._Note that this feature requires JMS 2.0.;public void setDeliveryDelay(long deliveryDelay) {_		this.deliveryDelay = deliveryDelay__	};set,the,delivery,delay,to,use,for,send,calls,in,milliseconds,p,the,default,is,1,no,delivery,delay,passed,on,to,the,broker,note,that,this,feature,requires,jms,2,0;public,void,set,delivery,delay,long,delivery,delay,this,delivery,delay,delivery,delay
JmsTemplate -> public void setDeliveryDelay(long deliveryDelay);1502974979;Set the delivery delay to use for send calls (in milliseconds)._<p>The default is -1 (no delivery delay passed on to the broker)._Note that this feature requires JMS 2.0.;public void setDeliveryDelay(long deliveryDelay) {_		this.deliveryDelay = deliveryDelay__	};set,the,delivery,delay,to,use,for,send,calls,in,milliseconds,p,the,default,is,1,no,delivery,delay,passed,on,to,the,broker,note,that,this,feature,requires,jms,2,0;public,void,set,delivery,delay,long,delivery,delay,this,delivery,delay,delivery,delay
JmsTemplate -> public void setDeliveryDelay(long deliveryDelay);1518567721;Set the delivery delay to use for send calls (in milliseconds)._<p>The default is -1 (no delivery delay passed on to the broker)._Note that this feature requires JMS 2.0.;public void setDeliveryDelay(long deliveryDelay) {_		this.deliveryDelay = deliveryDelay__	};set,the,delivery,delay,to,use,for,send,calls,in,milliseconds,p,the,default,is,1,no,delivery,delay,passed,on,to,the,broker,note,that,this,feature,requires,jms,2,0;public,void,set,delivery,delay,long,delivery,delay,this,delivery,delay,delivery,delay
JmsTemplate -> public void setDeliveryDelay(long deliveryDelay);1530174524;Set the delivery delay to use for send calls (in milliseconds)._<p>The default is -1 (no delivery delay passed on to the broker)._Note that this feature requires JMS 2.0.;public void setDeliveryDelay(long deliveryDelay) {_		this.deliveryDelay = deliveryDelay__	};set,the,delivery,delay,to,use,for,send,calls,in,milliseconds,p,the,default,is,1,no,delivery,delay,passed,on,to,the,broker,note,that,this,feature,requires,jms,2,0;public,void,set,delivery,delay,long,delivery,delay,this,delivery,delay,delivery,delay
JmsTemplate -> public void setDeliveryDelay(long deliveryDelay);1530174524;Set the delivery delay to use for send calls (in milliseconds)._<p>The default is -1 (no delivery delay passed on to the broker)._Note that this feature requires JMS 2.0.;public void setDeliveryDelay(long deliveryDelay) {_		this.deliveryDelay = deliveryDelay__	};set,the,delivery,delay,to,use,for,send,calls,in,milliseconds,p,the,default,is,1,no,delivery,delay,passed,on,to,the,broker,note,that,this,feature,requires,jms,2,0;public,void,set,delivery,delay,long,delivery,delay,this,delivery,delay,delivery,delay
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, @Nullable String messageSelector) 			throws JMSException;1495868221;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, @Nullable String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,nullable,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, @Nullable String messageSelector) 			throws JMSException;1496259743;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, @Nullable String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,nullable,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, @Nullable String messageSelector) 			throws JMSException;1496837955;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, @Nullable String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,nullable,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, @Nullable String messageSelector) 			throws JMSException;1500448076;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, @Nullable String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,nullable,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, @Nullable String messageSelector) 			throws JMSException;1500457438;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, @Nullable String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,nullable,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, @Nullable String messageSelector) 			throws JMSException;1502974979;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, @Nullable String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,nullable,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, @Nullable String messageSelector) 			throws JMSException;1518567721;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, @Nullable String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,nullable,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, @Nullable String messageSelector) 			throws JMSException;1530174524;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, @Nullable String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,nullable,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, @Nullable String messageSelector) 			throws JMSException;1530174524;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, @Nullable String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,nullable,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> public boolean isMessageTimestampEnabled();1328020251;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1356735495;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1357119239;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1364391982;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1368482696;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1385501137;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1390318124;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1405696891;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1406555570;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1406643767;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1413568470;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1434018810;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1438003976;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1461683397;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1492515173;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1495868221;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1496259743;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1496837955;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1500448076;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1500457438;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1502974979;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1518567721;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1530174524;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> public boolean isMessageTimestampEnabled();1530174524;Return whether message timestamps are enabled.;public boolean isMessageTimestampEnabled() {_		return this.messageTimestampEnabled__	};return,whether,message,timestamps,are,enabled;public,boolean,is,message,timestamp,enabled,return,this,message,timestamp,enabled
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, @Nullable String messageSelector) 			throws JMSException;1495868221;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, @Nullable String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,nullable,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, @Nullable String messageSelector) 			throws JMSException;1496259743;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, @Nullable String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,nullable,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, @Nullable String messageSelector) 			throws JMSException;1496837955;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, @Nullable String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,nullable,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, @Nullable String messageSelector) 			throws JMSException;1500448076;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, @Nullable String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,nullable,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, @Nullable String messageSelector) 			throws JMSException;1500457438;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, @Nullable String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,nullable,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, @Nullable String messageSelector) 			throws JMSException;1502974979;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, @Nullable String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,nullable,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, @Nullable String messageSelector) 			throws JMSException;1518567721;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, @Nullable String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,nullable,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, @Nullable String messageSelector) 			throws JMSException;1530174524;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, @Nullable String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,nullable,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, @Nullable String messageSelector) 			throws JMSException;1530174524;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, @Nullable String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,nullable,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> @Nullable 	public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1496837955;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;@Nullable_	public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					obtainConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;nullable,public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,obtain,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> @Nullable 	public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1500448076;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;@Nullable_	public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					obtainConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;nullable,public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,obtain,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> @Nullable 	public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1500457438;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;@Nullable_	public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					obtainConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;nullable,public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,obtain,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> @Nullable 	public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1502974979;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;@Nullable_	public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					obtainConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;nullable,public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,obtain,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> @Nullable 	public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1518567721;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;@Nullable_	public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					obtainConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;nullable,public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,obtain,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> @Nullable 	public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1530174524;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;@Nullable_	public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					obtainConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;nullable,public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,obtain,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> @Nullable 	public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1530174524;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;@Nullable_	public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					obtainConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;nullable,public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,obtain,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> protected Message doReceive(Session session, Destination destination, String messageSelector) 			throws JMSException;1328020251;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be <code>null</code>)_@return the JMS Message received, or <code>null</code> if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, Destination destination, String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,code,return,the,jms,message,received,or,code,null,code,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,destination,destination,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> protected Message doReceive(Session session, Destination destination, String messageSelector) 			throws JMSException;1356735495;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, Destination destination, String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,destination,destination,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> protected Message doReceive(Session session, Destination destination, String messageSelector) 			throws JMSException;1357119239;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, Destination destination, String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,destination,destination,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> protected Message doReceive(Session session, Destination destination, String messageSelector) 			throws JMSException;1364391982;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, Destination destination, String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,destination,destination,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> protected Message doReceive(Session session, Destination destination, String messageSelector) 			throws JMSException;1368482696;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, Destination destination, String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,destination,destination,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> protected Message doReceive(Session session, Destination destination, String messageSelector) 			throws JMSException;1385501137;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, Destination destination, String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,destination,destination,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> protected Message doReceive(Session session, Destination destination, String messageSelector) 			throws JMSException;1390318124;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, Destination destination, String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,destination,destination,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> protected Message doReceive(Session session, Destination destination, String messageSelector) 			throws JMSException;1405696891;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, Destination destination, String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,destination,destination,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> protected Message doReceive(Session session, Destination destination, String messageSelector) 			throws JMSException;1406555570;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, Destination destination, String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,destination,destination,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> protected Message doReceive(Session session, Destination destination, String messageSelector) 			throws JMSException;1406643767;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, Destination destination, String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,destination,destination,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> protected Message doReceive(Session session, Destination destination, String messageSelector) 			throws JMSException;1413568470;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, Destination destination, String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,destination,destination,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> protected Message doReceive(Session session, Destination destination, String messageSelector) 			throws JMSException;1434018810;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, Destination destination, String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,destination,destination,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> protected Message doReceive(Session session, Destination destination, String messageSelector) 			throws JMSException;1438003976;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, Destination destination, String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,destination,destination,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> protected Message doReceive(Session session, Destination destination, String messageSelector) 			throws JMSException;1461683397;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, Destination destination, String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,destination,destination,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> protected Message doReceive(Session session, Destination destination, String messageSelector) 			throws JMSException;1492515173;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, Destination destination, String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,destination,destination,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> @Nullable 	private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException;1496837955;A variant of {@link #execute(SessionCallback, boolean)} that explicitly_creates a non-transactional {@link Session}. The given {@link SessionCallback}_does not participate in an existing transaction.;@Nullable_	private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection con = null__		Session session = null__		try {_			con = createConnection()__			session = con.createSession(false, Session.AUTO_ACKNOWLEDGE)__			if (startConnection) {_				con.start()__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + session)__			}_			return action.doInJms(session)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(session)__			ConnectionFactoryUtils.releaseConnection(con, getConnectionFactory(), startConnection)__		}_	};a,variant,of,link,execute,session,callback,boolean,that,explicitly,creates,a,non,transactional,link,session,the,given,link,session,callback,does,not,participate,in,an,existing,transaction;nullable,private,t,t,execute,local,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,null,session,session,null,try,con,create,connection,session,con,create,session,false,session,if,start,connection,con,start,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,return,action,do,in,jms,session,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,connection,factory,utils,release,connection,con,get,connection,factory,start,connection
JmsTemplate -> @Nullable 	private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException;1500448076;A variant of {@link #execute(SessionCallback, boolean)} that explicitly_creates a non-transactional {@link Session}. The given {@link SessionCallback}_does not participate in an existing transaction.;@Nullable_	private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection con = null__		Session session = null__		try {_			con = createConnection()__			session = con.createSession(false, Session.AUTO_ACKNOWLEDGE)__			if (startConnection) {_				con.start()__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + session)__			}_			return action.doInJms(session)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(session)__			ConnectionFactoryUtils.releaseConnection(con, getConnectionFactory(), startConnection)__		}_	};a,variant,of,link,execute,session,callback,boolean,that,explicitly,creates,a,non,transactional,link,session,the,given,link,session,callback,does,not,participate,in,an,existing,transaction;nullable,private,t,t,execute,local,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,null,session,session,null,try,con,create,connection,session,con,create,session,false,session,if,start,connection,con,start,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,return,action,do,in,jms,session,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,connection,factory,utils,release,connection,con,get,connection,factory,start,connection
JmsTemplate -> @Nullable 	private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException;1500457438;A variant of {@link #execute(SessionCallback, boolean)} that explicitly_creates a non-transactional {@link Session}. The given {@link SessionCallback}_does not participate in an existing transaction.;@Nullable_	private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection con = null__		Session session = null__		try {_			con = createConnection()__			session = con.createSession(false, Session.AUTO_ACKNOWLEDGE)__			if (startConnection) {_				con.start()__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + session)__			}_			return action.doInJms(session)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(session)__			ConnectionFactoryUtils.releaseConnection(con, getConnectionFactory(), startConnection)__		}_	};a,variant,of,link,execute,session,callback,boolean,that,explicitly,creates,a,non,transactional,link,session,the,given,link,session,callback,does,not,participate,in,an,existing,transaction;nullable,private,t,t,execute,local,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,null,session,session,null,try,con,create,connection,session,con,create,session,false,session,if,start,connection,con,start,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,return,action,do,in,jms,session,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,connection,factory,utils,release,connection,con,get,connection,factory,start,connection
JmsTemplate -> @Nullable 	private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException;1502974979;A variant of {@link #execute(SessionCallback, boolean)} that explicitly_creates a non-transactional {@link Session}. The given {@link SessionCallback}_does not participate in an existing transaction.;@Nullable_	private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection con = null__		Session session = null__		try {_			con = createConnection()__			session = con.createSession(false, Session.AUTO_ACKNOWLEDGE)__			if (startConnection) {_				con.start()__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + session)__			}_			return action.doInJms(session)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(session)__			ConnectionFactoryUtils.releaseConnection(con, getConnectionFactory(), startConnection)__		}_	};a,variant,of,link,execute,session,callback,boolean,that,explicitly,creates,a,non,transactional,link,session,the,given,link,session,callback,does,not,participate,in,an,existing,transaction;nullable,private,t,t,execute,local,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,null,session,session,null,try,con,create,connection,session,con,create,session,false,session,if,start,connection,con,start,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,return,action,do,in,jms,session,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,connection,factory,utils,release,connection,con,get,connection,factory,start,connection
JmsTemplate -> @Nullable 	private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException;1518567721;A variant of {@link #execute(SessionCallback, boolean)} that explicitly_creates a non-transactional {@link Session}. The given {@link SessionCallback}_does not participate in an existing transaction.;@Nullable_	private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection con = null__		Session session = null__		try {_			con = createConnection()__			session = con.createSession(false, Session.AUTO_ACKNOWLEDGE)__			if (startConnection) {_				con.start()__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + session)__			}_			return action.doInJms(session)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(session)__			ConnectionFactoryUtils.releaseConnection(con, getConnectionFactory(), startConnection)__		}_	};a,variant,of,link,execute,session,callback,boolean,that,explicitly,creates,a,non,transactional,link,session,the,given,link,session,callback,does,not,participate,in,an,existing,transaction;nullable,private,t,t,execute,local,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,null,session,session,null,try,con,create,connection,session,con,create,session,false,session,if,start,connection,con,start,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,return,action,do,in,jms,session,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,connection,factory,utils,release,connection,con,get,connection,factory,start,connection
JmsTemplate -> @Nullable 	private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException;1530174524;A variant of {@link #execute(SessionCallback, boolean)} that explicitly_creates a non-transactional {@link Session}. The given {@link SessionCallback}_does not participate in an existing transaction.;@Nullable_	private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection con = null__		Session session = null__		try {_			con = createConnection()__			session = con.createSession(false, Session.AUTO_ACKNOWLEDGE)__			if (startConnection) {_				con.start()__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + session)__			}_			return action.doInJms(session)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(session)__			ConnectionFactoryUtils.releaseConnection(con, getConnectionFactory(), startConnection)__		}_	};a,variant,of,link,execute,session,callback,boolean,that,explicitly,creates,a,non,transactional,link,session,the,given,link,session,callback,does,not,participate,in,an,existing,transaction;nullable,private,t,t,execute,local,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,null,session,session,null,try,con,create,connection,session,con,create,session,false,session,if,start,connection,con,start,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,return,action,do,in,jms,session,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,connection,factory,utils,release,connection,con,get,connection,factory,start,connection
JmsTemplate -> @Nullable 	private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException;1530174524;A variant of {@link #execute(SessionCallback, boolean)} that explicitly_creates a non-transactional {@link Session}. The given {@link SessionCallback}_does not participate in an existing transaction.;@Nullable_	private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection con = null__		Session session = null__		try {_			con = createConnection()__			session = con.createSession(false, Session.AUTO_ACKNOWLEDGE)__			if (startConnection) {_				con.start()__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + session)__			}_			return action.doInJms(session)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(session)__			ConnectionFactoryUtils.releaseConnection(con, getConnectionFactory(), startConnection)__		}_	};a,variant,of,link,execute,session,callback,boolean,that,explicitly,creates,a,non,transactional,link,session,the,given,link,session,callback,does,not,participate,in,an,existing,transaction;nullable,private,t,t,execute,local,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,null,session,session,null,try,con,create,connection,session,con,create,session,false,session,if,start,connection,con,start,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,return,action,do,in,jms,session,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,connection,factory,utils,release,connection,con,get,connection,factory,start,connection
JmsTemplate -> public int getPriority();1328020251;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1356735495;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1357119239;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1364391982;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1368482696;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1385501137;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1390318124;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1405696891;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1406555570;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1406643767;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1413568470;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1434018810;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1438003976;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1461683397;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1492515173;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1495868221;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1496259743;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1496837955;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1500448076;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1500457438;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1502974979;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1518567721;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1530174524;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> public int getPriority();1530174524;Return the priority of a message when sending.;public int getPriority() {_		return this.priority__	};return,the,priority,of,a,message,when,sending;public,int,get,priority,return,this,priority
JmsTemplate -> @Nullable 	protected Connection getConnection(JmsResourceHolder holder);1495868221;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;@Nullable_	protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;nullable,protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> @Nullable 	protected Connection getConnection(JmsResourceHolder holder);1496259743;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;@Nullable_	protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;nullable,protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> @Nullable 	protected Connection getConnection(JmsResourceHolder holder);1496837955;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;@Nullable_	protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;nullable,protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> @Nullable 	protected Connection getConnection(JmsResourceHolder holder);1500448076;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;@Nullable_	protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;nullable,protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> @Nullable 	protected Connection getConnection(JmsResourceHolder holder);1500457438;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;@Nullable_	protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;nullable,protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> @Nullable 	protected Connection getConnection(JmsResourceHolder holder);1502974979;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;@Nullable_	protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;nullable,protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> @Nullable 	protected Connection getConnection(JmsResourceHolder holder);1518567721;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;@Nullable_	protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;nullable,protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> @Nullable 	protected Connection getConnection(JmsResourceHolder holder);1530174524;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;@Nullable_	protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;nullable,protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> @Nullable 	protected Connection getConnection(JmsResourceHolder holder);1530174524;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;@Nullable_	protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;nullable,protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> public boolean isExplicitQosEnabled();1328020251;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1356735495;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1357119239;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1364391982;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1368482696;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1385501137;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1390318124;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1405696891;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1406555570;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1406643767;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1413568470;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1434018810;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1438003976;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1461683397;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1492515173;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1495868221;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1496259743;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1496837955;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1500448076;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1500457438;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1502974979;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1518567721;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1530174524;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> public boolean isExplicitQosEnabled();1530174524;If "true", then the values of deliveryMode, priority, and timeToLive_will be used when sending a message. Otherwise, the default values,_that may be set administratively, will be used._@return true if overriding default values of QOS parameters_(deliveryMode, priority, and timeToLive)_@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public boolean isExplicitQosEnabled() {_		return this.explicitQosEnabled__	};if,true,then,the,values,of,delivery,mode,priority,and,time,to,live,will,be,used,when,sending,a,message,otherwise,the,default,values,that,may,be,set,administratively,will,be,used,return,true,if,overriding,default,values,of,qos,parameters,delivery,mode,priority,and,time,to,live,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,boolean,is,explicit,qos,enabled,return,this,explicit,qos,enabled
JmsTemplate -> protected MessageProducer createProducer(Session session, @Nullable Destination destination) throws JMSException;1496837955;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, @Nullable Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,nullable,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> protected MessageProducer createProducer(Session session, @Nullable Destination destination) throws JMSException;1500448076;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, @Nullable Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,nullable,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> protected MessageProducer createProducer(Session session, @Nullable Destination destination) throws JMSException;1500457438;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, @Nullable Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,nullable,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> protected MessageProducer createProducer(Session session, @Nullable Destination destination) throws JMSException;1502974979;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, @Nullable Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,nullable,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> protected MessageProducer createProducer(Session session, @Nullable Destination destination) throws JMSException;1518567721;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, @Nullable Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,nullable,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> protected MessageProducer createProducer(Session session, @Nullable Destination destination) throws JMSException;1530174524;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, @Nullable Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,nullable,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> protected MessageProducer createProducer(Session session, @Nullable Destination destination) throws JMSException;1530174524;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, @Nullable Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,nullable,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> public boolean isMessageIdEnabled();1328020251;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1356735495;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1357119239;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1364391982;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1368482696;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1385501137;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1390318124;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1405696891;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1406555570;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1406643767;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1413568470;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1434018810;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1438003976;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1461683397;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1492515173;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1495868221;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1496259743;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1496837955;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1500448076;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1500457438;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1502974979;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1518567721;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1530174524;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public boolean isMessageIdEnabled();1530174524;Return whether message IDs are enabled.;public boolean isMessageIdEnabled() {_		return this.messageIdEnabled__	};return,whether,message,ids,are,enabled;public,boolean,is,message,id,enabled,return,this,message,id,enabled
JmsTemplate -> public void setDefaultDestinationName(@Nullable String destinationName);1500448076;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(@Nullable String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,nullable,string,destination,name,this,default,destination,destination,name
JmsTemplate -> public void setDefaultDestinationName(@Nullable String destinationName);1500457438;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(@Nullable String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,nullable,string,destination,name,this,default,destination,destination,name
JmsTemplate -> public void setDefaultDestinationName(@Nullable String destinationName);1502974979;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(@Nullable String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,nullable,string,destination,name,this,default,destination,destination,name
JmsTemplate -> public void setDefaultDestinationName(@Nullable String destinationName);1518567721;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(@Nullable String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,nullable,string,destination,name,this,default,destination,destination,name
JmsTemplate -> public void setDefaultDestinationName(@Nullable String destinationName);1530174524;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(@Nullable String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,nullable,string,destination,name,this,default,destination,destination,name
JmsTemplate -> public void setDefaultDestinationName(@Nullable String destinationName);1530174524;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(@Nullable String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,nullable,string,destination,name,this,default,destination,destination,name
JmsTemplate -> protected Object doConvertFromMessage(Message message);1328020251;Extract the content from the given JMS message._@param message the JMS Message to convert (can be <code>null</code>)_@return the content of the message, or <code>null</code> if none;protected Object doConvertFromMessage(Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,code,return,the,content,of,the,message,or,code,null,code,if,none;protected,object,do,convert,from,message,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> protected Object doConvertFromMessage(Message message);1356735495;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;protected Object doConvertFromMessage(Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;protected,object,do,convert,from,message,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> protected Object doConvertFromMessage(Message message);1357119239;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;protected Object doConvertFromMessage(Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;protected,object,do,convert,from,message,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> protected Object doConvertFromMessage(Message message);1364391982;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;protected Object doConvertFromMessage(Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;protected,object,do,convert,from,message,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> protected Object doConvertFromMessage(Message message);1368482696;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;protected Object doConvertFromMessage(Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;protected,object,do,convert,from,message,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> protected Object doConvertFromMessage(Message message);1385501137;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;protected Object doConvertFromMessage(Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;protected,object,do,convert,from,message,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> protected Object doConvertFromMessage(Message message);1390318124;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;protected Object doConvertFromMessage(Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;protected,object,do,convert,from,message,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> protected Object doConvertFromMessage(Message message);1405696891;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;protected Object doConvertFromMessage(Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;protected,object,do,convert,from,message,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> protected Object doConvertFromMessage(Message message);1406555570;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;protected Object doConvertFromMessage(Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;protected,object,do,convert,from,message,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> protected Object doConvertFromMessage(Message message);1406643767;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;protected Object doConvertFromMessage(Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;protected,object,do,convert,from,message,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> protected Object doConvertFromMessage(Message message);1413568470;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;protected Object doConvertFromMessage(Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;protected,object,do,convert,from,message,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> protected Object doConvertFromMessage(Message message);1434018810;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;protected Object doConvertFromMessage(Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;protected,object,do,convert,from,message,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> protected Object doConvertFromMessage(Message message);1438003976;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;protected Object doConvertFromMessage(Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;protected,object,do,convert,from,message,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> protected Object doConvertFromMessage(Message message);1461683397;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;protected Object doConvertFromMessage(Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;protected,object,do,convert,from,message,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> protected Object doConvertFromMessage(Message message);1492515173;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;protected Object doConvertFromMessage(Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;protected,object,do,convert,from,message,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException;1406555570;A variant of {@link #execute(SessionCallback, boolean)} that explicitly_creates a non transactional session. The given {@link SessionCallback}_does not participate in an existing transaction.;private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection con = null__		Session session = null__		try {_			con = getConnectionFactory().createConnection()__			session = con.createSession(false, Session.AUTO_ACKNOWLEDGE)__			if (startConnection) {_				con.start()__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + session)__			}_			return action.doInJms(session)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(session)__			ConnectionFactoryUtils.releaseConnection(con, getConnectionFactory(), startConnection)__		}_	};a,variant,of,link,execute,session,callback,boolean,that,explicitly,creates,a,non,transactional,session,the,given,link,session,callback,does,not,participate,in,an,existing,transaction;private,t,t,execute,local,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,null,session,session,null,try,con,get,connection,factory,create,connection,session,con,create,session,false,session,if,start,connection,con,start,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,return,action,do,in,jms,session,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,connection,factory,utils,release,connection,con,get,connection,factory,start,connection
JmsTemplate -> private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException;1406643767;A variant of {@link #execute(SessionCallback, boolean)} that explicitly_creates a non-transactional {@link Session}. The given {@link SessionCallback}_does not participate in an existing transaction.;private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection con = null__		Session session = null__		try {_			con = getConnectionFactory().createConnection()__			session = con.createSession(false, Session.AUTO_ACKNOWLEDGE)__			if (startConnection) {_				con.start()__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + session)__			}_			return action.doInJms(session)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(session)__			ConnectionFactoryUtils.releaseConnection(con, getConnectionFactory(), startConnection)__		}_	};a,variant,of,link,execute,session,callback,boolean,that,explicitly,creates,a,non,transactional,link,session,the,given,link,session,callback,does,not,participate,in,an,existing,transaction;private,t,t,execute,local,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,null,session,session,null,try,con,get,connection,factory,create,connection,session,con,create,session,false,session,if,start,connection,con,start,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,return,action,do,in,jms,session,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,connection,factory,utils,release,connection,con,get,connection,factory,start,connection
JmsTemplate -> private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException;1413568470;A variant of {@link #execute(SessionCallback, boolean)} that explicitly_creates a non-transactional {@link Session}. The given {@link SessionCallback}_does not participate in an existing transaction.;private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection con = null__		Session session = null__		try {_			con = getConnectionFactory().createConnection()__			session = con.createSession(false, Session.AUTO_ACKNOWLEDGE)__			if (startConnection) {_				con.start()__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + session)__			}_			return action.doInJms(session)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(session)__			ConnectionFactoryUtils.releaseConnection(con, getConnectionFactory(), startConnection)__		}_	};a,variant,of,link,execute,session,callback,boolean,that,explicitly,creates,a,non,transactional,link,session,the,given,link,session,callback,does,not,participate,in,an,existing,transaction;private,t,t,execute,local,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,null,session,session,null,try,con,get,connection,factory,create,connection,session,con,create,session,false,session,if,start,connection,con,start,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,return,action,do,in,jms,session,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,connection,factory,utils,release,connection,con,get,connection,factory,start,connection
JmsTemplate -> private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException;1434018810;A variant of {@link #execute(SessionCallback, boolean)} that explicitly_creates a non-transactional {@link Session}. The given {@link SessionCallback}_does not participate in an existing transaction.;private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection con = null__		Session session = null__		try {_			con = getConnectionFactory().createConnection()__			session = con.createSession(false, Session.AUTO_ACKNOWLEDGE)__			if (startConnection) {_				con.start()__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + session)__			}_			return action.doInJms(session)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(session)__			ConnectionFactoryUtils.releaseConnection(con, getConnectionFactory(), startConnection)__		}_	};a,variant,of,link,execute,session,callback,boolean,that,explicitly,creates,a,non,transactional,link,session,the,given,link,session,callback,does,not,participate,in,an,existing,transaction;private,t,t,execute,local,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,null,session,session,null,try,con,get,connection,factory,create,connection,session,con,create,session,false,session,if,start,connection,con,start,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,return,action,do,in,jms,session,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,connection,factory,utils,release,connection,con,get,connection,factory,start,connection
JmsTemplate -> private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException;1438003976;A variant of {@link #execute(SessionCallback, boolean)} that explicitly_creates a non-transactional {@link Session}. The given {@link SessionCallback}_does not participate in an existing transaction.;private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection con = null__		Session session = null__		try {_			con = getConnectionFactory().createConnection()__			session = con.createSession(false, Session.AUTO_ACKNOWLEDGE)__			if (startConnection) {_				con.start()__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + session)__			}_			return action.doInJms(session)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(session)__			ConnectionFactoryUtils.releaseConnection(con, getConnectionFactory(), startConnection)__		}_	};a,variant,of,link,execute,session,callback,boolean,that,explicitly,creates,a,non,transactional,link,session,the,given,link,session,callback,does,not,participate,in,an,existing,transaction;private,t,t,execute,local,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,null,session,session,null,try,con,get,connection,factory,create,connection,session,con,create,session,false,session,if,start,connection,con,start,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,return,action,do,in,jms,session,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,connection,factory,utils,release,connection,con,get,connection,factory,start,connection
JmsTemplate -> private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException;1461683397;A variant of {@link #execute(SessionCallback, boolean)} that explicitly_creates a non-transactional {@link Session}. The given {@link SessionCallback}_does not participate in an existing transaction.;private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection con = null__		Session session = null__		try {_			con = getConnectionFactory().createConnection()__			session = con.createSession(false, Session.AUTO_ACKNOWLEDGE)__			if (startConnection) {_				con.start()__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + session)__			}_			return action.doInJms(session)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(session)__			ConnectionFactoryUtils.releaseConnection(con, getConnectionFactory(), startConnection)__		}_	};a,variant,of,link,execute,session,callback,boolean,that,explicitly,creates,a,non,transactional,link,session,the,given,link,session,callback,does,not,participate,in,an,existing,transaction;private,t,t,execute,local,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,null,session,session,null,try,con,get,connection,factory,create,connection,session,con,create,session,false,session,if,start,connection,con,start,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,return,action,do,in,jms,session,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,connection,factory,utils,release,connection,con,get,connection,factory,start,connection
JmsTemplate -> private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException;1492515173;A variant of {@link #execute(SessionCallback, boolean)} that explicitly_creates a non-transactional {@link Session}. The given {@link SessionCallback}_does not participate in an existing transaction.;private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection con = null__		Session session = null__		try {_			con = getConnectionFactory().createConnection()__			session = con.createSession(false, Session.AUTO_ACKNOWLEDGE)__			if (startConnection) {_				con.start()__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + session)__			}_			return action.doInJms(session)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(session)__			ConnectionFactoryUtils.releaseConnection(con, getConnectionFactory(), startConnection)__		}_	};a,variant,of,link,execute,session,callback,boolean,that,explicitly,creates,a,non,transactional,link,session,the,given,link,session,callback,does,not,participate,in,an,existing,transaction;private,t,t,execute,local,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,null,session,session,null,try,con,get,connection,factory,create,connection,session,con,create,session,false,session,if,start,connection,con,start,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,return,action,do,in,jms,session,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,connection,factory,utils,release,connection,con,get,connection,factory,start,connection
JmsTemplate -> private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException;1495868221;A variant of {@link #execute(SessionCallback, boolean)} that explicitly_creates a non-transactional {@link Session}. The given {@link SessionCallback}_does not participate in an existing transaction.;private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection con = null__		Session session = null__		try {_			con = getConnectionFactory().createConnection()__			session = con.createSession(false, Session.AUTO_ACKNOWLEDGE)__			if (startConnection) {_				con.start()__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + session)__			}_			return action.doInJms(session)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(session)__			ConnectionFactoryUtils.releaseConnection(con, getConnectionFactory(), startConnection)__		}_	};a,variant,of,link,execute,session,callback,boolean,that,explicitly,creates,a,non,transactional,link,session,the,given,link,session,callback,does,not,participate,in,an,existing,transaction;private,t,t,execute,local,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,null,session,session,null,try,con,get,connection,factory,create,connection,session,con,create,session,false,session,if,start,connection,con,start,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,return,action,do,in,jms,session,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,connection,factory,utils,release,connection,con,get,connection,factory,start,connection
JmsTemplate -> private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException;1496259743;A variant of {@link #execute(SessionCallback, boolean)} that explicitly_creates a non-transactional {@link Session}. The given {@link SessionCallback}_does not participate in an existing transaction.;private <T> T executeLocal(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection con = null__		Session session = null__		try {_			con = getConnectionFactory().createConnection()__			session = con.createSession(false, Session.AUTO_ACKNOWLEDGE)__			if (startConnection) {_				con.start()__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + session)__			}_			return action.doInJms(session)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(session)__			ConnectionFactoryUtils.releaseConnection(con, getConnectionFactory(), startConnection)__		}_	};a,variant,of,link,execute,session,callback,boolean,that,explicitly,creates,a,non,transactional,link,session,the,given,link,session,callback,does,not,participate,in,an,existing,transaction;private,t,t,execute,local,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,null,session,session,null,try,con,get,connection,factory,create,connection,session,con,create,session,false,session,if,start,connection,con,start,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,return,action,do,in,jms,session,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,connection,factory,utils,release,connection,con,get,connection,factory,start,connection
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1328020251;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1356735495;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1357119239;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1364391982;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1368482696;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1385501137;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1390318124;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1405696891;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1406555570;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1406643767;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1413568470;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1434018810;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1438003976;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1461683397;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1492515173;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1495868221;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1496259743;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1496837955;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1500448076;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1500457438;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1502974979;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1518567721;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1530174524;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setMessageTimestampEnabled(boolean messageTimestampEnabled);1530174524;Set whether message timestamps are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageTimestamp;public void setMessageTimestampEnabled(boolean messageTimestampEnabled) {_		this.messageTimestampEnabled = messageTimestampEnabled__	};set,whether,message,timestamps,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,timestamp;public,void,set,message,timestamp,enabled,boolean,message,timestamp,enabled,this,message,timestamp,enabled,message,timestamp,enabled
JmsTemplate -> public void setPriority(int priority);1328020251;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1356735495;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1357119239;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1364391982;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1368482696;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1385501137;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1390318124;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1405696891;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1406555570;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1406643767;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1413568470;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1434018810;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1438003976;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1461683397;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1492515173;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1495868221;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1496259743;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1496837955;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1500448076;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1500457438;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1502974979;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1518567721;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1530174524;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> public void setPriority(int priority);1530174524;Set the priority of a message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_PRIORITY_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setPriority(int priority) {_		this.priority = priority__	};set,the,priority,of,a,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,priority,int,priority,this,priority,priority
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector) 			throws JMSException;1328020251;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer, which needs to be specific to JMS 1.1 or 1.0.2._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be <code>null</code>)_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,which,needs,to,be,specific,to,jms,1,1,or,1,0,2,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,code,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector) 			throws JMSException;1356735495;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer, which needs to be specific to JMS 1.1 or 1.0.2._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,which,needs,to,be,specific,to,jms,1,1,or,1,0,2,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector) 			throws JMSException;1357119239;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer, which needs to be specific to JMS 1.1 or 1.0.2._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,which,needs,to,be,specific,to,jms,1,1,or,1,0,2,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector) 			throws JMSException;1364391982;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer, which needs to be specific to JMS 1.1 or 1.0.2._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,which,needs,to,be,specific,to,jms,1,1,or,1,0,2,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector) 			throws JMSException;1368482696;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer, which needs to be specific to JMS 1.1 or 1.0.2._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,which,needs,to,be,specific,to,jms,1,1,or,1,0,2,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector) 			throws JMSException;1385501137;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer, which needs to be specific to JMS 1.1 or 1.0.2._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,which,needs,to,be,specific,to,jms,1,1,or,1,0,2,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector) 			throws JMSException;1390318124;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer, which needs to be specific to JMS 1.1 or 1.0.2._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,which,needs,to,be,specific,to,jms,1,1,or,1,0,2,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector) 			throws JMSException;1405696891;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector) 			throws JMSException;1406555570;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector) 			throws JMSException;1406643767;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector) 			throws JMSException;1413568470;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector) 			throws JMSException;1434018810;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector) 			throws JMSException;1438003976;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector) 			throws JMSException;1461683397;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector) 			throws JMSException;1492515173;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a QueueBrowser for_@param queue the JMS Queue to create a QueueBrowser for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS QueueBrowser_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected QueueBrowser createBrowser(Session session, Queue queue, String messageSelector)_			throws JMSException {__		return session.createBrowser(queue, messageSelector)__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,queue,browser,for,param,queue,the,jms,queue,to,create,a,queue,browser,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,queue,browser,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,queue,browser,create,browser,session,session,queue,queue,string,message,selector,throws,jmsexception,return,session,create,browser,queue,message,selector
JmsTemplate -> @Nullable 	protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1495868221;Send a request message to the given {@link Destination} and block until_a reply has been received on a temporary queue created on-the-fly._<p>Return the response message or {@code null} if no message has_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		TemporaryQueue responseQueue = null__		MessageProducer producer = null__		MessageConsumer consumer = null__		try {_			Message requestMessage = messageCreator.createMessage(session)__			responseQueue = session.createTemporaryQueue()__			producer = session.createProducer(destination)__			consumer = session.createConsumer(responseQueue)__			requestMessage.setJMSReplyTo(responseQueue)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + requestMessage)__			}_			doSend(producer, requestMessage)__			return receiveFromConsumer(consumer, getReceiveTimeout())__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__			JmsUtils.closeMessageProducer(producer)__			if (responseQueue != null) {_				responseQueue.delete()__			}_		}_	};send,a,request,message,to,the,given,link,destination,and,block,until,a,reply,has,been,received,on,a,temporary,queue,created,on,the,fly,p,return,the,response,message,or,code,null,if,no,message,has,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,send,and,receive,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,temporary,queue,response,queue,null,message,producer,producer,null,message,consumer,consumer,null,try,message,request,message,message,creator,create,message,session,response,queue,session,create,temporary,queue,producer,session,create,producer,destination,consumer,session,create,consumer,response,queue,request,message,set,jmsreply,to,response,queue,if,logger,is,debug,enabled,logger,debug,sending,created,message,request,message,do,send,producer,request,message,return,receive,from,consumer,consumer,get,receive,timeout,finally,jms,utils,close,message,consumer,consumer,jms,utils,close,message,producer,producer,if,response,queue,null,response,queue,delete
JmsTemplate -> @Nullable 	protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1496259743;Send a request message to the given {@link Destination} and block until_a reply has been received on a temporary queue created on-the-fly._<p>Return the response message or {@code null} if no message has_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		TemporaryQueue responseQueue = null__		MessageProducer producer = null__		MessageConsumer consumer = null__		try {_			Message requestMessage = messageCreator.createMessage(session)__			responseQueue = session.createTemporaryQueue()__			producer = session.createProducer(destination)__			consumer = session.createConsumer(responseQueue)__			requestMessage.setJMSReplyTo(responseQueue)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + requestMessage)__			}_			doSend(producer, requestMessage)__			return receiveFromConsumer(consumer, getReceiveTimeout())__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__			JmsUtils.closeMessageProducer(producer)__			if (responseQueue != null) {_				responseQueue.delete()__			}_		}_	};send,a,request,message,to,the,given,link,destination,and,block,until,a,reply,has,been,received,on,a,temporary,queue,created,on,the,fly,p,return,the,response,message,or,code,null,if,no,message,has,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,send,and,receive,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,temporary,queue,response,queue,null,message,producer,producer,null,message,consumer,consumer,null,try,message,request,message,message,creator,create,message,session,response,queue,session,create,temporary,queue,producer,session,create,producer,destination,consumer,session,create,consumer,response,queue,request,message,set,jmsreply,to,response,queue,if,logger,is,debug,enabled,logger,debug,sending,created,message,request,message,do,send,producer,request,message,return,receive,from,consumer,consumer,get,receive,timeout,finally,jms,utils,close,message,consumer,consumer,jms,utils,close,message,producer,producer,if,response,queue,null,response,queue,delete
JmsTemplate -> @Nullable 	protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1496837955;Send a request message to the given {@link Destination} and block until_a reply has been received on a temporary queue created on-the-fly._<p>Return the response message or {@code null} if no message has_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		TemporaryQueue responseQueue = null__		MessageProducer producer = null__		MessageConsumer consumer = null__		try {_			Message requestMessage = messageCreator.createMessage(session)__			responseQueue = session.createTemporaryQueue()__			producer = session.createProducer(destination)__			consumer = session.createConsumer(responseQueue)__			requestMessage.setJMSReplyTo(responseQueue)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + requestMessage)__			}_			doSend(producer, requestMessage)__			return receiveFromConsumer(consumer, getReceiveTimeout())__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__			JmsUtils.closeMessageProducer(producer)__			if (responseQueue != null) {_				responseQueue.delete()__			}_		}_	};send,a,request,message,to,the,given,link,destination,and,block,until,a,reply,has,been,received,on,a,temporary,queue,created,on,the,fly,p,return,the,response,message,or,code,null,if,no,message,has,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,send,and,receive,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,temporary,queue,response,queue,null,message,producer,producer,null,message,consumer,consumer,null,try,message,request,message,message,creator,create,message,session,response,queue,session,create,temporary,queue,producer,session,create,producer,destination,consumer,session,create,consumer,response,queue,request,message,set,jmsreply,to,response,queue,if,logger,is,debug,enabled,logger,debug,sending,created,message,request,message,do,send,producer,request,message,return,receive,from,consumer,consumer,get,receive,timeout,finally,jms,utils,close,message,consumer,consumer,jms,utils,close,message,producer,producer,if,response,queue,null,response,queue,delete
JmsTemplate -> @Nullable 	protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1500448076;Send a request message to the given {@link Destination} and block until_a reply has been received on a temporary queue created on-the-fly._<p>Return the response message or {@code null} if no message has_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		TemporaryQueue responseQueue = null__		MessageProducer producer = null__		MessageConsumer consumer = null__		try {_			Message requestMessage = messageCreator.createMessage(session)__			responseQueue = session.createTemporaryQueue()__			producer = session.createProducer(destination)__			consumer = session.createConsumer(responseQueue)__			requestMessage.setJMSReplyTo(responseQueue)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + requestMessage)__			}_			doSend(producer, requestMessage)__			return receiveFromConsumer(consumer, getReceiveTimeout())__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__			JmsUtils.closeMessageProducer(producer)__			if (responseQueue != null) {_				responseQueue.delete()__			}_		}_	};send,a,request,message,to,the,given,link,destination,and,block,until,a,reply,has,been,received,on,a,temporary,queue,created,on,the,fly,p,return,the,response,message,or,code,null,if,no,message,has,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,send,and,receive,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,temporary,queue,response,queue,null,message,producer,producer,null,message,consumer,consumer,null,try,message,request,message,message,creator,create,message,session,response,queue,session,create,temporary,queue,producer,session,create,producer,destination,consumer,session,create,consumer,response,queue,request,message,set,jmsreply,to,response,queue,if,logger,is,debug,enabled,logger,debug,sending,created,message,request,message,do,send,producer,request,message,return,receive,from,consumer,consumer,get,receive,timeout,finally,jms,utils,close,message,consumer,consumer,jms,utils,close,message,producer,producer,if,response,queue,null,response,queue,delete
JmsTemplate -> @Nullable 	protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1500457438;Send a request message to the given {@link Destination} and block until_a reply has been received on a temporary queue created on-the-fly._<p>Return the response message or {@code null} if no message has_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		TemporaryQueue responseQueue = null__		MessageProducer producer = null__		MessageConsumer consumer = null__		try {_			Message requestMessage = messageCreator.createMessage(session)__			responseQueue = session.createTemporaryQueue()__			producer = session.createProducer(destination)__			consumer = session.createConsumer(responseQueue)__			requestMessage.setJMSReplyTo(responseQueue)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + requestMessage)__			}_			doSend(producer, requestMessage)__			return receiveFromConsumer(consumer, getReceiveTimeout())__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__			JmsUtils.closeMessageProducer(producer)__			if (responseQueue != null) {_				responseQueue.delete()__			}_		}_	};send,a,request,message,to,the,given,link,destination,and,block,until,a,reply,has,been,received,on,a,temporary,queue,created,on,the,fly,p,return,the,response,message,or,code,null,if,no,message,has,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,send,and,receive,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,temporary,queue,response,queue,null,message,producer,producer,null,message,consumer,consumer,null,try,message,request,message,message,creator,create,message,session,response,queue,session,create,temporary,queue,producer,session,create,producer,destination,consumer,session,create,consumer,response,queue,request,message,set,jmsreply,to,response,queue,if,logger,is,debug,enabled,logger,debug,sending,created,message,request,message,do,send,producer,request,message,return,receive,from,consumer,consumer,get,receive,timeout,finally,jms,utils,close,message,consumer,consumer,jms,utils,close,message,producer,producer,if,response,queue,null,response,queue,delete
JmsTemplate -> @Nullable 	protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1502974979;Send a request message to the given {@link Destination} and block until_a reply has been received on a temporary queue created on-the-fly._<p>Return the response message or {@code null} if no message has_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		TemporaryQueue responseQueue = null__		MessageProducer producer = null__		MessageConsumer consumer = null__		try {_			Message requestMessage = messageCreator.createMessage(session)__			responseQueue = session.createTemporaryQueue()__			producer = session.createProducer(destination)__			consumer = session.createConsumer(responseQueue)__			requestMessage.setJMSReplyTo(responseQueue)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + requestMessage)__			}_			doSend(producer, requestMessage)__			return receiveFromConsumer(consumer, getReceiveTimeout())__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__			JmsUtils.closeMessageProducer(producer)__			if (responseQueue != null) {_				responseQueue.delete()__			}_		}_	};send,a,request,message,to,the,given,link,destination,and,block,until,a,reply,has,been,received,on,a,temporary,queue,created,on,the,fly,p,return,the,response,message,or,code,null,if,no,message,has,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,send,and,receive,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,temporary,queue,response,queue,null,message,producer,producer,null,message,consumer,consumer,null,try,message,request,message,message,creator,create,message,session,response,queue,session,create,temporary,queue,producer,session,create,producer,destination,consumer,session,create,consumer,response,queue,request,message,set,jmsreply,to,response,queue,if,logger,is,debug,enabled,logger,debug,sending,created,message,request,message,do,send,producer,request,message,return,receive,from,consumer,consumer,get,receive,timeout,finally,jms,utils,close,message,consumer,consumer,jms,utils,close,message,producer,producer,if,response,queue,null,response,queue,delete
JmsTemplate -> @Nullable 	protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1518567721;Send a request message to the given {@link Destination} and block until_a reply has been received on a temporary queue created on-the-fly._<p>Return the response message or {@code null} if no message has_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		TemporaryQueue responseQueue = null__		MessageProducer producer = null__		MessageConsumer consumer = null__		try {_			Message requestMessage = messageCreator.createMessage(session)__			responseQueue = session.createTemporaryQueue()__			producer = session.createProducer(destination)__			consumer = session.createConsumer(responseQueue)__			requestMessage.setJMSReplyTo(responseQueue)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + requestMessage)__			}_			doSend(producer, requestMessage)__			return receiveFromConsumer(consumer, getReceiveTimeout())__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__			JmsUtils.closeMessageProducer(producer)__			if (responseQueue != null) {_				responseQueue.delete()__			}_		}_	};send,a,request,message,to,the,given,link,destination,and,block,until,a,reply,has,been,received,on,a,temporary,queue,created,on,the,fly,p,return,the,response,message,or,code,null,if,no,message,has,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,send,and,receive,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,temporary,queue,response,queue,null,message,producer,producer,null,message,consumer,consumer,null,try,message,request,message,message,creator,create,message,session,response,queue,session,create,temporary,queue,producer,session,create,producer,destination,consumer,session,create,consumer,response,queue,request,message,set,jmsreply,to,response,queue,if,logger,is,debug,enabled,logger,debug,sending,created,message,request,message,do,send,producer,request,message,return,receive,from,consumer,consumer,get,receive,timeout,finally,jms,utils,close,message,consumer,consumer,jms,utils,close,message,producer,producer,if,response,queue,null,response,queue,delete
JmsTemplate -> @Nullable 	protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1530174524;Send a request message to the given {@link Destination} and block until_a reply has been received on a temporary queue created on-the-fly._<p>Return the response message or {@code null} if no message has_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		TemporaryQueue responseQueue = null__		MessageProducer producer = null__		MessageConsumer consumer = null__		try {_			Message requestMessage = messageCreator.createMessage(session)__			responseQueue = session.createTemporaryQueue()__			producer = session.createProducer(destination)__			consumer = session.createConsumer(responseQueue)__			requestMessage.setJMSReplyTo(responseQueue)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + requestMessage)__			}_			doSend(producer, requestMessage)__			return receiveFromConsumer(consumer, getReceiveTimeout())__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__			JmsUtils.closeMessageProducer(producer)__			if (responseQueue != null) {_				responseQueue.delete()__			}_		}_	};send,a,request,message,to,the,given,link,destination,and,block,until,a,reply,has,been,received,on,a,temporary,queue,created,on,the,fly,p,return,the,response,message,or,code,null,if,no,message,has,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,send,and,receive,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,temporary,queue,response,queue,null,message,producer,producer,null,message,consumer,consumer,null,try,message,request,message,message,creator,create,message,session,response,queue,session,create,temporary,queue,producer,session,create,producer,destination,consumer,session,create,consumer,response,queue,request,message,set,jmsreply,to,response,queue,if,logger,is,debug,enabled,logger,debug,sending,created,message,request,message,do,send,producer,request,message,return,receive,from,consumer,consumer,get,receive,timeout,finally,jms,utils,close,message,consumer,consumer,jms,utils,close,message,producer,producer,if,response,queue,null,response,queue,delete
JmsTemplate -> @Nullable 	protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1530174524;Send a request message to the given {@link Destination} and block until_a reply has been received on a temporary queue created on-the-fly._<p>Return the response message or {@code null} if no message has_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		TemporaryQueue responseQueue = null__		MessageProducer producer = null__		MessageConsumer consumer = null__		try {_			Message requestMessage = messageCreator.createMessage(session)__			responseQueue = session.createTemporaryQueue()__			producer = session.createProducer(destination)__			consumer = session.createConsumer(responseQueue)__			requestMessage.setJMSReplyTo(responseQueue)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + requestMessage)__			}_			doSend(producer, requestMessage)__			return receiveFromConsumer(consumer, getReceiveTimeout())__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__			JmsUtils.closeMessageProducer(producer)__			if (responseQueue != null) {_				responseQueue.delete()__			}_		}_	};send,a,request,message,to,the,given,link,destination,and,block,until,a,reply,has,been,received,on,a,temporary,queue,created,on,the,fly,p,return,the,response,message,or,code,null,if,no,message,has,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,send,and,receive,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,temporary,queue,response,queue,null,message,producer,producer,null,message,consumer,consumer,null,try,message,request,message,message,creator,create,message,session,response,queue,session,create,temporary,queue,producer,session,create,producer,destination,consumer,session,create,consumer,response,queue,request,message,set,jmsreply,to,response,queue,if,logger,is,debug,enabled,logger,debug,sending,created,message,request,message,do,send,producer,request,message,return,receive,from,consumer,consumer,get,receive,timeout,finally,jms,utils,close,message,consumer,consumer,jms,utils,close,message,producer,producer,if,response,queue,null,response,queue,delete
JmsTemplate -> @Nullable 	public MessageConverter getMessageConverter();1496837955;Return the message converter for this template.;@Nullable_	public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;nullable,public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> @Nullable 	public MessageConverter getMessageConverter();1500457438;Return the message converter for this template.;@Nullable_	public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;nullable,public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> @Nullable 	public MessageConverter getMessageConverter();1502974979;Return the message converter for this template.;@Nullable_	public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;nullable,public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> @Nullable 	public MessageConverter getMessageConverter();1518567721;Return the message converter for this template.;@Nullable_	public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;nullable,public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> @Nullable 	public MessageConverter getMessageConverter();1530174524;Return the message converter for this template.;@Nullable_	public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;nullable,public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> @Nullable 	public MessageConverter getMessageConverter();1530174524;Return the message converter for this template.;@Nullable_	public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;nullable,public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1328020251;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or <code>null</code> if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			JmsResourceHolder resourceHolder =_					(JmsResourceHolder) TransactionSynchronizationManager.getResource(getConnectionFactory())__			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = resourceHolder.getTimeToLiveInMillis()__			}_			Message message = doReceive(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,code,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,jms,resource,holder,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,get,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,resource,holder,get,time,to,live,in,millis,message,message,do,receive,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1356735495;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			JmsResourceHolder resourceHolder =_					(JmsResourceHolder) TransactionSynchronizationManager.getResource(getConnectionFactory())__			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = doReceive(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,jms,resource,holder,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,get,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,do,receive,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1357119239;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			JmsResourceHolder resourceHolder =_					(JmsResourceHolder) TransactionSynchronizationManager.getResource(getConnectionFactory())__			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = doReceive(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,jms,resource,holder,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,get,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,do,receive,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1364391982;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			JmsResourceHolder resourceHolder =_					(JmsResourceHolder) TransactionSynchronizationManager.getResource(getConnectionFactory())__			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = doReceive(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,jms,resource,holder,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,get,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,do,receive,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1368482696;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			JmsResourceHolder resourceHolder =_					(JmsResourceHolder) TransactionSynchronizationManager.getResource(getConnectionFactory())__			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = doReceive(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,jms,resource,holder,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,get,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,do,receive,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1385501137;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			JmsResourceHolder resourceHolder =_					(JmsResourceHolder) TransactionSynchronizationManager.getResource(getConnectionFactory())__			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = doReceive(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,jms,resource,holder,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,get,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,do,receive,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1390318124;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			JmsResourceHolder resourceHolder =_					(JmsResourceHolder) TransactionSynchronizationManager.getResource(getConnectionFactory())__			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = doReceive(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,jms,resource,holder,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,get,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,do,receive,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1405696891;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			JmsResourceHolder resourceHolder =_					(JmsResourceHolder) TransactionSynchronizationManager.getResource(getConnectionFactory())__			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = doReceive(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,jms,resource,holder,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,get,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,do,receive,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1406555570;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			JmsResourceHolder resourceHolder =_					(JmsResourceHolder) TransactionSynchronizationManager.getResource(getConnectionFactory())__			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = doReceive(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,jms,resource,holder,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,get,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,do,receive,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1406643767;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			JmsResourceHolder resourceHolder =_					(JmsResourceHolder) TransactionSynchronizationManager.getResource(getConnectionFactory())__			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = doReceive(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,jms,resource,holder,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,get,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,do,receive,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1413568470;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			JmsResourceHolder resourceHolder =_					(JmsResourceHolder) TransactionSynchronizationManager.getResource(getConnectionFactory())__			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = doReceive(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,jms,resource,holder,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,get,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,do,receive,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1434018810;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			JmsResourceHolder resourceHolder =_					(JmsResourceHolder) TransactionSynchronizationManager.getResource(getConnectionFactory())__			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = doReceive(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,jms,resource,holder,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,get,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,do,receive,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1438003976;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			JmsResourceHolder resourceHolder =_					(JmsResourceHolder) TransactionSynchronizationManager.getResource(getConnectionFactory())__			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = doReceive(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,jms,resource,holder,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,get,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,do,receive,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1461683397;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			JmsResourceHolder resourceHolder =_					(JmsResourceHolder) TransactionSynchronizationManager.getResource(getConnectionFactory())__			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = receiveFromConsumer(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,jms,resource,holder,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,get,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,receive,from,consumer,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1492515173;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			JmsResourceHolder resourceHolder =_					(JmsResourceHolder) TransactionSynchronizationManager.getResource(getConnectionFactory())__			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = receiveFromConsumer(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,jms,resource,holder,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,get,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,receive,from,consumer,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1328020251;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1356735495;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1357119239;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1364391982;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1368482696;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1385501137;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1390318124;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1405696891;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1406555570;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1406643767;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1413568470;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1434018810;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1438003976;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1461683397;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1492515173;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1495868221;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1496259743;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1496837955;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1500448076;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1500457438;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1502974979;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1518567721;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1530174524;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected boolean isSessionLocallyTransacted(Session session);1530174524;Check whether the given Session is locally transacted, that is, whether_its transaction is managed by this listener container's Session handling_and not by an external transaction coordinator._<p>Note: The Session's own transacted flag will already have been checked_before. This method is about finding out whether the Session's transaction_is local or externally coordinated._@param session the Session to check_@return whether the given Session is locally transacted_@see #isSessionTransacted()_@see org.springframework.jms.connection.ConnectionFactoryUtils#isSessionTransactional;protected boolean isSessionLocallyTransacted(Session session) {_		return isSessionTransacted() &&_				!ConnectionFactoryUtils.isSessionTransactional(session, getConnectionFactory())__	};check,whether,the,given,session,is,locally,transacted,that,is,whether,its,transaction,is,managed,by,this,listener,container,s,session,handling,and,not,by,an,external,transaction,coordinator,p,note,the,session,s,own,transacted,flag,will,already,have,been,checked,before,this,method,is,about,finding,out,whether,the,session,s,transaction,is,local,or,externally,coordinated,param,session,the,session,to,check,return,whether,the,given,session,is,locally,transacted,see,is,session,transacted,see,org,springframework,jms,connection,connection,factory,utils,is,session,transactional;protected,boolean,is,session,locally,transacted,session,session,return,is,session,transacted,connection,factory,utils,is,session,transactional,session,get,connection,factory
JmsTemplate -> protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1406555570;Send a request message to the given {@link Destination} and block until_a reply has been received on a temporary queue created on-the-fly._<p>Return the response message or {@code null} if no message has_@throws JMSException if thrown by JMS API methods;protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {_		Assert.notNull(messageCreator, "MessageCreator must not be null")__		TemporaryQueue responseQueue = null__		MessageProducer producer = null__		MessageConsumer consumer = null__		try {_			Message requestMessage = messageCreator.createMessage(session)__			responseQueue = session.createTemporaryQueue()__			producer = session.createProducer(destination)__			consumer = session.createConsumer(responseQueue)__			requestMessage.setJMSReplyTo(responseQueue)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + requestMessage)__			}_			doSend(producer, requestMessage)__			return doReceive(consumer, getReceiveTimeout())__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__			JmsUtils.closeMessageProducer(producer)__			if (responseQueue != null) {_				responseQueue.delete()__			}_		}_	};send,a,request,message,to,the,given,link,destination,and,block,until,a,reply,has,been,received,on,a,temporary,queue,created,on,the,fly,p,return,the,response,message,or,code,null,if,no,message,has,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,send,and,receive,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,temporary,queue,response,queue,null,message,producer,producer,null,message,consumer,consumer,null,try,message,request,message,message,creator,create,message,session,response,queue,session,create,temporary,queue,producer,session,create,producer,destination,consumer,session,create,consumer,response,queue,request,message,set,jmsreply,to,response,queue,if,logger,is,debug,enabled,logger,debug,sending,created,message,request,message,do,send,producer,request,message,return,do,receive,consumer,get,receive,timeout,finally,jms,utils,close,message,consumer,consumer,jms,utils,close,message,producer,producer,if,response,queue,null,response,queue,delete
JmsTemplate -> protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1406643767;Send a request message to the given {@link Destination} and block until_a reply has been received on a temporary queue created on-the-fly._<p>Return the response message or {@code null} if no message has_@throws JMSException if thrown by JMS API methods;protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		TemporaryQueue responseQueue = null__		MessageProducer producer = null__		MessageConsumer consumer = null__		try {_			Message requestMessage = messageCreator.createMessage(session)__			responseQueue = session.createTemporaryQueue()__			producer = session.createProducer(destination)__			consumer = session.createConsumer(responseQueue)__			requestMessage.setJMSReplyTo(responseQueue)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + requestMessage)__			}_			doSend(producer, requestMessage)__			return doReceive(consumer, getReceiveTimeout())__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__			JmsUtils.closeMessageProducer(producer)__			if (responseQueue != null) {_				responseQueue.delete()__			}_		}_	};send,a,request,message,to,the,given,link,destination,and,block,until,a,reply,has,been,received,on,a,temporary,queue,created,on,the,fly,p,return,the,response,message,or,code,null,if,no,message,has,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,send,and,receive,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,temporary,queue,response,queue,null,message,producer,producer,null,message,consumer,consumer,null,try,message,request,message,message,creator,create,message,session,response,queue,session,create,temporary,queue,producer,session,create,producer,destination,consumer,session,create,consumer,response,queue,request,message,set,jmsreply,to,response,queue,if,logger,is,debug,enabled,logger,debug,sending,created,message,request,message,do,send,producer,request,message,return,do,receive,consumer,get,receive,timeout,finally,jms,utils,close,message,consumer,consumer,jms,utils,close,message,producer,producer,if,response,queue,null,response,queue,delete
JmsTemplate -> protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1413568470;Send a request message to the given {@link Destination} and block until_a reply has been received on a temporary queue created on-the-fly._<p>Return the response message or {@code null} if no message has_@throws JMSException if thrown by JMS API methods;protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		TemporaryQueue responseQueue = null__		MessageProducer producer = null__		MessageConsumer consumer = null__		try {_			Message requestMessage = messageCreator.createMessage(session)__			responseQueue = session.createTemporaryQueue()__			producer = session.createProducer(destination)__			consumer = session.createConsumer(responseQueue)__			requestMessage.setJMSReplyTo(responseQueue)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + requestMessage)__			}_			doSend(producer, requestMessage)__			return doReceive(consumer, getReceiveTimeout())__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__			JmsUtils.closeMessageProducer(producer)__			if (responseQueue != null) {_				responseQueue.delete()__			}_		}_	};send,a,request,message,to,the,given,link,destination,and,block,until,a,reply,has,been,received,on,a,temporary,queue,created,on,the,fly,p,return,the,response,message,or,code,null,if,no,message,has,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,send,and,receive,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,temporary,queue,response,queue,null,message,producer,producer,null,message,consumer,consumer,null,try,message,request,message,message,creator,create,message,session,response,queue,session,create,temporary,queue,producer,session,create,producer,destination,consumer,session,create,consumer,response,queue,request,message,set,jmsreply,to,response,queue,if,logger,is,debug,enabled,logger,debug,sending,created,message,request,message,do,send,producer,request,message,return,do,receive,consumer,get,receive,timeout,finally,jms,utils,close,message,consumer,consumer,jms,utils,close,message,producer,producer,if,response,queue,null,response,queue,delete
JmsTemplate -> protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1434018810;Send a request message to the given {@link Destination} and block until_a reply has been received on a temporary queue created on-the-fly._<p>Return the response message or {@code null} if no message has_@throws JMSException if thrown by JMS API methods;protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		TemporaryQueue responseQueue = null__		MessageProducer producer = null__		MessageConsumer consumer = null__		try {_			Message requestMessage = messageCreator.createMessage(session)__			responseQueue = session.createTemporaryQueue()__			producer = session.createProducer(destination)__			consumer = session.createConsumer(responseQueue)__			requestMessage.setJMSReplyTo(responseQueue)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + requestMessage)__			}_			doSend(producer, requestMessage)__			return doReceive(consumer, getReceiveTimeout())__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__			JmsUtils.closeMessageProducer(producer)__			if (responseQueue != null) {_				responseQueue.delete()__			}_		}_	};send,a,request,message,to,the,given,link,destination,and,block,until,a,reply,has,been,received,on,a,temporary,queue,created,on,the,fly,p,return,the,response,message,or,code,null,if,no,message,has,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,send,and,receive,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,temporary,queue,response,queue,null,message,producer,producer,null,message,consumer,consumer,null,try,message,request,message,message,creator,create,message,session,response,queue,session,create,temporary,queue,producer,session,create,producer,destination,consumer,session,create,consumer,response,queue,request,message,set,jmsreply,to,response,queue,if,logger,is,debug,enabled,logger,debug,sending,created,message,request,message,do,send,producer,request,message,return,do,receive,consumer,get,receive,timeout,finally,jms,utils,close,message,consumer,consumer,jms,utils,close,message,producer,producer,if,response,queue,null,response,queue,delete
JmsTemplate -> protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1438003976;Send a request message to the given {@link Destination} and block until_a reply has been received on a temporary queue created on-the-fly._<p>Return the response message or {@code null} if no message has_@throws JMSException if thrown by JMS API methods;protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		TemporaryQueue responseQueue = null__		MessageProducer producer = null__		MessageConsumer consumer = null__		try {_			Message requestMessage = messageCreator.createMessage(session)__			responseQueue = session.createTemporaryQueue()__			producer = session.createProducer(destination)__			consumer = session.createConsumer(responseQueue)__			requestMessage.setJMSReplyTo(responseQueue)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + requestMessage)__			}_			doSend(producer, requestMessage)__			return doReceive(consumer, getReceiveTimeout())__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__			JmsUtils.closeMessageProducer(producer)__			if (responseQueue != null) {_				responseQueue.delete()__			}_		}_	};send,a,request,message,to,the,given,link,destination,and,block,until,a,reply,has,been,received,on,a,temporary,queue,created,on,the,fly,p,return,the,response,message,or,code,null,if,no,message,has,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,send,and,receive,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,temporary,queue,response,queue,null,message,producer,producer,null,message,consumer,consumer,null,try,message,request,message,message,creator,create,message,session,response,queue,session,create,temporary,queue,producer,session,create,producer,destination,consumer,session,create,consumer,response,queue,request,message,set,jmsreply,to,response,queue,if,logger,is,debug,enabled,logger,debug,sending,created,message,request,message,do,send,producer,request,message,return,do,receive,consumer,get,receive,timeout,finally,jms,utils,close,message,consumer,consumer,jms,utils,close,message,producer,producer,if,response,queue,null,response,queue,delete
JmsTemplate -> protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1461683397;Send a request message to the given {@link Destination} and block until_a reply has been received on a temporary queue created on-the-fly._<p>Return the response message or {@code null} if no message has_@throws JMSException if thrown by JMS API methods;protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		TemporaryQueue responseQueue = null__		MessageProducer producer = null__		MessageConsumer consumer = null__		try {_			Message requestMessage = messageCreator.createMessage(session)__			responseQueue = session.createTemporaryQueue()__			producer = session.createProducer(destination)__			consumer = session.createConsumer(responseQueue)__			requestMessage.setJMSReplyTo(responseQueue)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + requestMessage)__			}_			doSend(producer, requestMessage)__			return receiveFromConsumer(consumer, getReceiveTimeout())__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__			JmsUtils.closeMessageProducer(producer)__			if (responseQueue != null) {_				responseQueue.delete()__			}_		}_	};send,a,request,message,to,the,given,link,destination,and,block,until,a,reply,has,been,received,on,a,temporary,queue,created,on,the,fly,p,return,the,response,message,or,code,null,if,no,message,has,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,send,and,receive,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,temporary,queue,response,queue,null,message,producer,producer,null,message,consumer,consumer,null,try,message,request,message,message,creator,create,message,session,response,queue,session,create,temporary,queue,producer,session,create,producer,destination,consumer,session,create,consumer,response,queue,request,message,set,jmsreply,to,response,queue,if,logger,is,debug,enabled,logger,debug,sending,created,message,request,message,do,send,producer,request,message,return,receive,from,consumer,consumer,get,receive,timeout,finally,jms,utils,close,message,consumer,consumer,jms,utils,close,message,producer,producer,if,response,queue,null,response,queue,delete
JmsTemplate -> protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1492515173;Send a request message to the given {@link Destination} and block until_a reply has been received on a temporary queue created on-the-fly._<p>Return the response message or {@code null} if no message has_@throws JMSException if thrown by JMS API methods;protected Message doSendAndReceive(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		TemporaryQueue responseQueue = null__		MessageProducer producer = null__		MessageConsumer consumer = null__		try {_			Message requestMessage = messageCreator.createMessage(session)__			responseQueue = session.createTemporaryQueue()__			producer = session.createProducer(destination)__			consumer = session.createConsumer(responseQueue)__			requestMessage.setJMSReplyTo(responseQueue)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + requestMessage)__			}_			doSend(producer, requestMessage)__			return receiveFromConsumer(consumer, getReceiveTimeout())__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__			JmsUtils.closeMessageProducer(producer)__			if (responseQueue != null) {_				responseQueue.delete()__			}_		}_	};send,a,request,message,to,the,given,link,destination,and,block,until,a,reply,has,been,received,on,a,temporary,queue,created,on,the,fly,p,return,the,response,message,or,code,null,if,no,message,has,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,do,send,and,receive,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,temporary,queue,response,queue,null,message,producer,producer,null,message,consumer,consumer,null,try,message,request,message,message,creator,create,message,session,response,queue,session,create,temporary,queue,producer,session,create,producer,destination,consumer,session,create,consumer,response,queue,request,message,set,jmsreply,to,response,queue,if,logger,is,debug,enabled,logger,debug,sending,created,message,request,message,do,send,producer,request,message,return,receive,from,consumer,consumer,get,receive,timeout,finally,jms,utils,close,message,consumer,consumer,jms,utils,close,message,producer,producer,if,response,queue,null,response,queue,delete
JmsTemplate -> protected Connection getConnection(JmsResourceHolder holder);1328020251;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or <code>null</code> if none found;protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,code,if,none,found;protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> protected Connection getConnection(JmsResourceHolder holder);1356735495;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> protected Connection getConnection(JmsResourceHolder holder);1357119239;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> protected Connection getConnection(JmsResourceHolder holder);1364391982;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> protected Connection getConnection(JmsResourceHolder holder);1368482696;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> protected Connection getConnection(JmsResourceHolder holder);1385501137;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> protected Connection getConnection(JmsResourceHolder holder);1390318124;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> protected Connection getConnection(JmsResourceHolder holder);1405696891;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> protected Connection getConnection(JmsResourceHolder holder);1406555570;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> protected Connection getConnection(JmsResourceHolder holder);1406643767;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> protected Connection getConnection(JmsResourceHolder holder);1413568470;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> protected Connection getConnection(JmsResourceHolder holder);1434018810;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> protected Connection getConnection(JmsResourceHolder holder);1438003976;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> protected Connection getConnection(JmsResourceHolder holder);1461683397;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> protected Connection getConnection(JmsResourceHolder holder);1492515173;Fetch an appropriate Connection from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Connection._@param holder the JmsResourceHolder_@return an appropriate Connection fetched from the holder,_or {@code null} if none found;protected Connection getConnection(JmsResourceHolder holder) {_		return holder.getConnection()__	};fetch,an,appropriate,connection,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,connection,param,holder,the,jms,resource,holder,return,an,appropriate,connection,fetched,from,the,holder,or,code,null,if,none,found;protected,connection,get,connection,jms,resource,holder,holder,return,holder,get,connection
JmsTemplate -> @Nullable 	protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1495868221;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			JmsResourceHolder resourceHolder =_					(JmsResourceHolder) TransactionSynchronizationManager.getResource(getConnectionFactory())__			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = receiveFromConsumer(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,jms,resource,holder,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,get,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,receive,from,consumer,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> @Nullable 	protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1496259743;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			JmsResourceHolder resourceHolder =_					(JmsResourceHolder) TransactionSynchronizationManager.getResource(getConnectionFactory())__			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = receiveFromConsumer(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,jms,resource,holder,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,get,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,receive,from,consumer,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> @Nullable 	protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1496837955;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			ConnectionFactory connectionFactory = getConnectionFactory()__			JmsResourceHolder resourceHolder = null__			if (connectionFactory != null) {_				resourceHolder = (JmsResourceHolder) TransactionSynchronizationManager.getResource(connectionFactory)__			}_			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = receiveFromConsumer(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,connection,factory,connection,factory,get,connection,factory,jms,resource,holder,resource,holder,null,if,connection,factory,null,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,receive,from,consumer,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> @Nullable 	protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1500448076;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			ConnectionFactory connectionFactory = getConnectionFactory()__			JmsResourceHolder resourceHolder = null__			if (connectionFactory != null) {_				resourceHolder = (JmsResourceHolder) TransactionSynchronizationManager.getResource(connectionFactory)__			}_			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = receiveFromConsumer(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,connection,factory,connection,factory,get,connection,factory,jms,resource,holder,resource,holder,null,if,connection,factory,null,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,receive,from,consumer,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> @Nullable 	protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1500457438;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			ConnectionFactory connectionFactory = getConnectionFactory()__			JmsResourceHolder resourceHolder = null__			if (connectionFactory != null) {_				resourceHolder = (JmsResourceHolder) TransactionSynchronizationManager.getResource(connectionFactory)__			}_			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = receiveFromConsumer(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,connection,factory,connection,factory,get,connection,factory,jms,resource,holder,resource,holder,null,if,connection,factory,null,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,receive,from,consumer,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> @Nullable 	protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1502974979;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			ConnectionFactory connectionFactory = getConnectionFactory()__			JmsResourceHolder resourceHolder = null__			if (connectionFactory != null) {_				resourceHolder = (JmsResourceHolder) TransactionSynchronizationManager.getResource(connectionFactory)__			}_			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = receiveFromConsumer(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,connection,factory,connection,factory,get,connection,factory,jms,resource,holder,resource,holder,null,if,connection,factory,null,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,receive,from,consumer,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> @Nullable 	protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1518567721;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			ConnectionFactory connectionFactory = getConnectionFactory()__			JmsResourceHolder resourceHolder = null__			if (connectionFactory != null) {_				resourceHolder = (JmsResourceHolder) TransactionSynchronizationManager.getResource(connectionFactory)__			}_			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = receiveFromConsumer(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,connection,factory,connection,factory,get,connection,factory,jms,resource,holder,resource,holder,null,if,connection,factory,null,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,receive,from,consumer,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> @Nullable 	protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1530174524;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			ConnectionFactory connectionFactory = getConnectionFactory()__			JmsResourceHolder resourceHolder = null__			if (connectionFactory != null) {_				resourceHolder = (JmsResourceHolder) TransactionSynchronizationManager.getResource(connectionFactory)__			}_			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = receiveFromConsumer(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,connection,factory,connection,factory,get,connection,factory,jms,resource,holder,resource,holder,null,if,connection,factory,null,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,receive,from,consumer,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> @Nullable 	protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException;1530174524;Actually receive a JMS message._@param session the JMS Session to operate on_@param consumer the JMS MessageConsumer to receive with_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doReceive(Session session, MessageConsumer consumer) throws JMSException {_		try {_			_			long timeout = getReceiveTimeout()__			ConnectionFactory connectionFactory = getConnectionFactory()__			JmsResourceHolder resourceHolder = null__			if (connectionFactory != null) {_				resourceHolder = (JmsResourceHolder) TransactionSynchronizationManager.getResource(connectionFactory)__			}_			if (resourceHolder != null && resourceHolder.hasTimeout()) {_				timeout = Math.min(timeout, resourceHolder.getTimeToLiveInMillis())__			}_			Message message = receiveFromConsumer(consumer, timeout)__			if (session.getTransacted()) {_				_				if (isSessionLocallyTransacted(session)) {_					_					JmsUtils.commitIfNecessary(session)__				}_			}_			else if (isClientAcknowledge(session)) {_				_				if (message != null) {_					message.acknowledge()__				}_			}_			return message__		}_		finally {_			JmsUtils.closeMessageConsumer(consumer)__		}_	};actually,receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,consumer,the,jms,message,consumer,to,receive,with,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,receive,session,session,message,consumer,consumer,throws,jmsexception,try,long,timeout,get,receive,timeout,connection,factory,connection,factory,get,connection,factory,jms,resource,holder,resource,holder,null,if,connection,factory,null,resource,holder,jms,resource,holder,transaction,synchronization,manager,get,resource,connection,factory,if,resource,holder,null,resource,holder,has,timeout,timeout,math,min,timeout,resource,holder,get,time,to,live,in,millis,message,message,receive,from,consumer,consumer,timeout,if,session,get,transacted,if,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,else,if,is,client,acknowledge,session,if,message,null,message,acknowledge,return,message,finally,jms,utils,close,message,consumer,consumer
JmsTemplate -> @Nullable 	protected Session getSession(JmsResourceHolder holder);1495868221;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;@Nullable_	protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;nullable,protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> @Nullable 	protected Session getSession(JmsResourceHolder holder);1496259743;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;@Nullable_	protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;nullable,protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> @Nullable 	protected Session getSession(JmsResourceHolder holder);1496837955;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;@Nullable_	protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;nullable,protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> @Nullable 	protected Session getSession(JmsResourceHolder holder);1500448076;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;@Nullable_	protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;nullable,protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> @Nullable 	protected Session getSession(JmsResourceHolder holder);1500457438;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;@Nullable_	protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;nullable,protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> @Nullable 	protected Session getSession(JmsResourceHolder holder);1502974979;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;@Nullable_	protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;nullable,protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> @Nullable 	protected Session getSession(JmsResourceHolder holder);1518567721;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;@Nullable_	protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;nullable,protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> @Nullable 	protected Session getSession(JmsResourceHolder holder);1530174524;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;@Nullable_	protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;nullable,protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> @Nullable 	protected Session getSession(JmsResourceHolder holder);1530174524;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;@Nullable_	protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;nullable,protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector) 			throws JMSException;1328020251;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be <code>null</code>)_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,code,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector) 			throws JMSException;1356735495;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector) 			throws JMSException;1357119239;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector) 			throws JMSException;1364391982;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector) 			throws JMSException;1368482696;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector) 			throws JMSException;1385501137;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector) 			throws JMSException;1390318124;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector) 			throws JMSException;1405696891;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector) 			throws JMSException;1406555570;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector) 			throws JMSException;1406643767;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector) 			throws JMSException;1413568470;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector) 			throws JMSException;1434018810;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector) 			throws JMSException;1438003976;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector) 			throws JMSException;1461683397;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector) 			throws JMSException;1492515173;Create a JMS MessageConsumer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageConsumer for_@param destination the JMS Destination to create a MessageConsumer for_@param messageSelector the message selector for this consumer (can be {@code null})_@return the new JMS MessageConsumer_@throws JMSException if thrown by JMS API methods;protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector)_			throws JMSException {__		_		_		_		if (isPubSubDomain()) {_			return session.createConsumer(destination, messageSelector, isPubSubNoLocal())__		}_		else {_			return session.createConsumer(destination, messageSelector)__		}_	};create,a,jms,message,consumer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,consumer,for,param,destination,the,jms,destination,to,create,a,message,consumer,for,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,new,jms,message,consumer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,consumer,create,consumer,session,session,destination,destination,string,message,selector,throws,jmsexception,if,is,pub,sub,domain,return,session,create,consumer,destination,message,selector,is,pub,sub,no,local,else,return,session,create,consumer,destination,message,selector
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException;1328020251;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException;1356735495;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException;1357119239;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException;1364391982;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException;1368482696;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException;1385501137;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException;1390318124;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException;1405696891;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException;1406555570;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException;1406643767;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException;1413568470;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException;1434018810;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException;1438003976;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException;1461683397;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException;1492515173;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException;1495868221;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException;1496259743;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> public void setMessageConverter(@Nullable MessageConverter messageConverter);1500457438;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(@Nullable MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,nullable,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> public void setMessageConverter(@Nullable MessageConverter messageConverter);1502974979;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(@Nullable MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,nullable,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> public void setMessageConverter(@Nullable MessageConverter messageConverter);1518567721;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(@Nullable MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,nullable,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> public void setMessageConverter(@Nullable MessageConverter messageConverter);1530174524;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(@Nullable MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,nullable,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> public void setMessageConverter(@Nullable MessageConverter messageConverter);1530174524;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(@Nullable MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,nullable,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> protected void initDefaultStrategies();1328020251;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1356735495;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1357119239;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1364391982;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1368482696;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1385501137;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1390318124;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1405696891;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1406555570;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1406643767;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1413568470;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1434018810;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1438003976;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1461683397;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1492515173;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1495868221;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1496259743;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1496837955;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1500448076;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1500457438;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1502974979;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1518567721;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1530174524;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> protected void initDefaultStrategies();1530174524;Initialize the default implementations for the template's strategies:_DynamicDestinationResolver and SimpleMessageConverter._@see #setDestinationResolver_@see #setMessageConverter_@see org.springframework.jms.support.destination.DynamicDestinationResolver_@see org.springframework.jms.support.converter.SimpleMessageConverter;protected void initDefaultStrategies() {_		setMessageConverter(new SimpleMessageConverter())__	};initialize,the,default,implementations,for,the,template,s,strategies,dynamic,destination,resolver,and,simple,message,converter,see,set,destination,resolver,see,set,message,converter,see,org,springframework,jms,support,destination,dynamic,destination,resolver,see,org,springframework,jms,support,converter,simple,message,converter;protected,void,init,default,strategies,set,message,converter,new,simple,message,converter
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1328020251;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1356735495;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1357119239;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1364391982;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1368482696;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1385501137;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1390318124;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1405696891;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1406555570;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1406643767;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1413568470;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1434018810;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1438003976;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1461683397;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1492515173;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1495868221;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1496259743;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1496837955;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1500448076;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1500457438;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1502974979;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1518567721;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1530174524;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setMessageIdEnabled(boolean messageIdEnabled);1530174524;Set whether message IDs are enabled. Default is "true"._<p>This is only a hint to the JMS producer._See the JMS javadocs for details._@see javax.jms.MessageProducer#setDisableMessageID;public void setMessageIdEnabled(boolean messageIdEnabled) {_		this.messageIdEnabled = messageIdEnabled__	};set,whether,message,ids,are,enabled,default,is,true,p,this,is,only,a,hint,to,the,jms,producer,see,the,jms,javadocs,for,details,see,javax,jms,message,producer,set,disable,message,id;public,void,set,message,id,enabled,boolean,message,id,enabled,this,message,id,enabled,message,id,enabled
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1328020251;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} to inidicate that a receive operation_should check if a message is immediately available without blocking._@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receive()_@see javax.jms.MessageConsumer#receiveNoWait();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,to,inidicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,see,javax,jms,message,consumer,receive,no,wait;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1356735495;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} to inidicate that a receive operation_should check if a message is immediately available without blocking._@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receive()_@see javax.jms.MessageConsumer#receiveNoWait();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,to,inidicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,see,javax,jms,message,consumer,receive,no,wait;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1357119239;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} to inidicate that a receive operation_should check if a message is immediately available without blocking._@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receive()_@see javax.jms.MessageConsumer#receiveNoWait();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,to,inidicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,see,javax,jms,message,consumer,receive,no,wait;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1364391982;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} to inidicate that a receive operation_should check if a message is immediately available without blocking._@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receive()_@see javax.jms.MessageConsumer#receiveNoWait();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,to,inidicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,see,javax,jms,message,consumer,receive,no,wait;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1368482696;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} to inidicate that a receive operation_should check if a message is immediately available without blocking._@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receive()_@see javax.jms.MessageConsumer#receiveNoWait();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,to,inidicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,see,javax,jms,message,consumer,receive,no,wait;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1385501137;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} to inidicate that a receive operation_should check if a message is immediately available without blocking._@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receive()_@see javax.jms.MessageConsumer#receiveNoWait();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,to,inidicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,see,javax,jms,message,consumer,receive,no,wait;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1390318124;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} to inidicate that a receive operation_should check if a message is immediately available without blocking._@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receive()_@see javax.jms.MessageConsumer#receiveNoWait();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,to,inidicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,see,javax,jms,message,consumer,receive,no,wait;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1405696891;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} to inidicate that a receive operation_should check if a message is immediately available without blocking._@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receive()_@see javax.jms.MessageConsumer#receiveNoWait();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,to,inidicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,see,javax,jms,message,consumer,receive,no,wait;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1406555570;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} to inidicate that a receive operation_should check if a message is immediately available without blocking._@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receive()_@see javax.jms.MessageConsumer#receiveNoWait();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,to,inidicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,see,javax,jms,message,consumer,receive,no,wait;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1406643767;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} to inidicate that a receive operation_should check if a message is immediately available without blocking._@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receive()_@see javax.jms.MessageConsumer#receiveNoWait();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,to,inidicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,see,javax,jms,message,consumer,receive,no,wait;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1413568470;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} to inidicate that a receive operation_should check if a message is immediately available without blocking._@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receive()_@see javax.jms.MessageConsumer#receiveNoWait();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,to,inidicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,see,javax,jms,message,consumer,receive,no,wait;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1434018810;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} to inidicate that a receive operation_should check if a message is immediately available without blocking._@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receive()_@see javax.jms.MessageConsumer#receiveNoWait();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,to,inidicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,see,javax,jms,message,consumer,receive,no,wait;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1438003976;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} to inidicate that a receive operation_should check if a message is immediately available without blocking._@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receive()_@see javax.jms.MessageConsumer#receiveNoWait();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,to,inidicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,see,javax,jms,message,consumer,receive,no,wait;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1461683397;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} (or any other negative value)_to indicate that a receive operation should check if a message is_immediately available without blocking._@see #receiveFromConsumer(MessageConsumer, long)_@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receiveNoWait()_@see javax.jms.MessageConsumer#receive();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,or,any,other,negative,value,to,indicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,receive,from,consumer,message,consumer,long,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,no,wait,see,javax,jms,message,consumer,receive;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1492515173;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} (or any other negative value)_to indicate that a receive operation should check if a message is_immediately available without blocking._@see #receiveFromConsumer(MessageConsumer, long)_@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receiveNoWait()_@see javax.jms.MessageConsumer#receive();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,or,any,other,negative,value,to,indicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,receive,from,consumer,message,consumer,long,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,no,wait,see,javax,jms,message,consumer,receive;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1495868221;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} (or any other negative value)_to indicate that a receive operation should check if a message is_immediately available without blocking._@see #receiveFromConsumer(MessageConsumer, long)_@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receiveNoWait()_@see javax.jms.MessageConsumer#receive();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,or,any,other,negative,value,to,indicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,receive,from,consumer,message,consumer,long,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,no,wait,see,javax,jms,message,consumer,receive;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1496259743;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} (or any other negative value)_to indicate that a receive operation should check if a message is_immediately available without blocking._@see #receiveFromConsumer(MessageConsumer, long)_@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receiveNoWait()_@see javax.jms.MessageConsumer#receive();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,or,any,other,negative,value,to,indicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,receive,from,consumer,message,consumer,long,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,no,wait,see,javax,jms,message,consumer,receive;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1496837955;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} (or any other negative value)_to indicate that a receive operation should check if a message is_immediately available without blocking._@see #receiveFromConsumer(MessageConsumer, long)_@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receiveNoWait()_@see javax.jms.MessageConsumer#receive();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,or,any,other,negative,value,to,indicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,receive,from,consumer,message,consumer,long,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,no,wait,see,javax,jms,message,consumer,receive;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1500448076;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} (or any other negative value)_to indicate that a receive operation should check if a message is_immediately available without blocking._@see #receiveFromConsumer(MessageConsumer, long)_@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receiveNoWait()_@see javax.jms.MessageConsumer#receive();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,or,any,other,negative,value,to,indicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,receive,from,consumer,message,consumer,long,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,no,wait,see,javax,jms,message,consumer,receive;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1500457438;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} (or any other negative value)_to indicate that a receive operation should check if a message is_immediately available without blocking._@see #receiveFromConsumer(MessageConsumer, long)_@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receiveNoWait()_@see javax.jms.MessageConsumer#receive();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,or,any,other,negative,value,to,indicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,receive,from,consumer,message,consumer,long,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,no,wait,see,javax,jms,message,consumer,receive;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1502974979;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} (or any other negative value)_to indicate that a receive operation should check if a message is_immediately available without blocking._@see #receiveFromConsumer(MessageConsumer, long)_@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receiveNoWait()_@see javax.jms.MessageConsumer#receive();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,or,any,other,negative,value,to,indicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,receive,from,consumer,message,consumer,long,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,no,wait,see,javax,jms,message,consumer,receive;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1518567721;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} (or any other negative value)_to indicate that a receive operation should check if a message is_immediately available without blocking._@see #receiveFromConsumer(MessageConsumer, long)_@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receiveNoWait()_@see javax.jms.MessageConsumer#receive();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,or,any,other,negative,value,to,indicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,receive,from,consumer,message,consumer,long,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,no,wait,see,javax,jms,message,consumer,receive;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1530174524;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} (or any other negative value)_to indicate that a receive operation should check if a message is_immediately available without blocking._@see #receiveFromConsumer(MessageConsumer, long)_@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receiveNoWait()_@see javax.jms.MessageConsumer#receive();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,or,any,other,negative,value,to,indicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,receive,from,consumer,message,consumer,long,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,no,wait,see,javax,jms,message,consumer,receive;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public void setReceiveTimeout(long receiveTimeout);1530174524;Set the timeout to use for receive calls (in milliseconds)._<p>The default is {@link #RECEIVE_TIMEOUT_INDEFINITE_WAIT}, which indicates_a blocking receive without timeout._<p>Specify {@link #RECEIVE_TIMEOUT_NO_WAIT} (or any other negative value)_to indicate that a receive operation should check if a message is_immediately available without blocking._@see #receiveFromConsumer(MessageConsumer, long)_@see javax.jms.MessageConsumer#receive(long)_@see javax.jms.MessageConsumer#receiveNoWait()_@see javax.jms.MessageConsumer#receive();public void setReceiveTimeout(long receiveTimeout) {_		this.receiveTimeout = receiveTimeout__	};set,the,timeout,to,use,for,receive,calls,in,milliseconds,p,the,default,is,link,which,indicates,a,blocking,receive,without,timeout,p,specify,link,or,any,other,negative,value,to,indicate,that,a,receive,operation,should,check,if,a,message,is,immediately,available,without,blocking,see,receive,from,consumer,message,consumer,long,see,javax,jms,message,consumer,receive,long,see,javax,jms,message,consumer,receive,no,wait,see,javax,jms,message,consumer,receive;public,void,set,receive,timeout,long,receive,timeout,this,receive,timeout,receive,timeout
JmsTemplate -> public long getTimeToLive();1328020251;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1356735495;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1357119239;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1364391982;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1368482696;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1385501137;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1390318124;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1405696891;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1406555570;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1406643767;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1413568470;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1434018810;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1438003976;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1461683397;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1492515173;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1495868221;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1496259743;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1496837955;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1500448076;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1500457438;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1502974979;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1518567721;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1530174524;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> public long getTimeToLive();1530174524;Return the time-to-live of the message when sending.;public long getTimeToLive() {_		return this.timeToLive__	};return,the,time,to,live,of,the,message,when,sending;public,long,get,time,to,live,return,this,time,to,live
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1328020251;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1356735495;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1357119239;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1364391982;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (this.deliveryDelay > 0) {_			if (setDeliveryDelayMethod == null) {_				throw new IllegalStateException("setDeliveryDelay requires JMS 2.0")__			}_			ReflectionUtils.invokeMethod(setDeliveryDelayMethod, producer, this.deliveryDelay)__		}_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,this,delivery,delay,0,if,set,delivery,delay,method,null,throw,new,illegal,state,exception,set,delivery,delay,requires,jms,2,0,reflection,utils,invoke,method,set,delivery,delay,method,producer,this,delivery,delay,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1368482696;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (this.deliveryDelay > 0) {_			if (setDeliveryDelayMethod == null) {_				throw new IllegalStateException("setDeliveryDelay requires JMS 2.0")__			}_			ReflectionUtils.invokeMethod(setDeliveryDelayMethod, producer, this.deliveryDelay)__		}_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,this,delivery,delay,0,if,set,delivery,delay,method,null,throw,new,illegal,state,exception,set,delivery,delay,requires,jms,2,0,reflection,utils,invoke,method,set,delivery,delay,method,producer,this,delivery,delay,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1385501137;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (this.deliveryDelay > 0) {_			if (setDeliveryDelayMethod == null) {_				throw new IllegalStateException("setDeliveryDelay requires JMS 2.0")__			}_			ReflectionUtils.invokeMethod(setDeliveryDelayMethod, producer, this.deliveryDelay)__		}_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,this,delivery,delay,0,if,set,delivery,delay,method,null,throw,new,illegal,state,exception,set,delivery,delay,requires,jms,2,0,reflection,utils,invoke,method,set,delivery,delay,method,producer,this,delivery,delay,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1390318124;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (this.deliveryDelay > 0) {_			if (setDeliveryDelayMethod == null) {_				throw new IllegalStateException("setDeliveryDelay requires JMS 2.0")__			}_			ReflectionUtils.invokeMethod(setDeliveryDelayMethod, producer, this.deliveryDelay)__		}_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,this,delivery,delay,0,if,set,delivery,delay,method,null,throw,new,illegal,state,exception,set,delivery,delay,requires,jms,2,0,reflection,utils,invoke,method,set,delivery,delay,method,producer,this,delivery,delay,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1405696891;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (this.deliveryDelay > 0) {_			if (setDeliveryDelayMethod == null) {_				throw new IllegalStateException("setDeliveryDelay requires JMS 2.0")__			}_			ReflectionUtils.invokeMethod(setDeliveryDelayMethod, producer, this.deliveryDelay)__		}_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,this,delivery,delay,0,if,set,delivery,delay,method,null,throw,new,illegal,state,exception,set,delivery,delay,requires,jms,2,0,reflection,utils,invoke,method,set,delivery,delay,method,producer,this,delivery,delay,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1406555570;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (this.deliveryDelay > 0) {_			if (setDeliveryDelayMethod == null) {_				throw new IllegalStateException("setDeliveryDelay requires JMS 2.0")__			}_			ReflectionUtils.invokeMethod(setDeliveryDelayMethod, producer, this.deliveryDelay)__		}_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,this,delivery,delay,0,if,set,delivery,delay,method,null,throw,new,illegal,state,exception,set,delivery,delay,requires,jms,2,0,reflection,utils,invoke,method,set,delivery,delay,method,producer,this,delivery,delay,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1406643767;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (this.deliveryDelay > 0) {_			if (setDeliveryDelayMethod == null) {_				throw new IllegalStateException("setDeliveryDelay requires JMS 2.0")__			}_			ReflectionUtils.invokeMethod(setDeliveryDelayMethod, producer, this.deliveryDelay)__		}_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,this,delivery,delay,0,if,set,delivery,delay,method,null,throw,new,illegal,state,exception,set,delivery,delay,requires,jms,2,0,reflection,utils,invoke,method,set,delivery,delay,method,producer,this,delivery,delay,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1413568470;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (this.deliveryDelay >= 0) {_			if (setDeliveryDelayMethod == null) {_				throw new IllegalStateException("setDeliveryDelay requires JMS 2.0")__			}_			ReflectionUtils.invokeMethod(setDeliveryDelayMethod, producer, this.deliveryDelay)__		}_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,this,delivery,delay,0,if,set,delivery,delay,method,null,throw,new,illegal,state,exception,set,delivery,delay,requires,jms,2,0,reflection,utils,invoke,method,set,delivery,delay,method,producer,this,delivery,delay,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1434018810;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (this.deliveryDelay >= 0) {_			if (setDeliveryDelayMethod == null) {_				throw new IllegalStateException("setDeliveryDelay requires JMS 2.0")__			}_			ReflectionUtils.invokeMethod(setDeliveryDelayMethod, producer, this.deliveryDelay)__		}_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,this,delivery,delay,0,if,set,delivery,delay,method,null,throw,new,illegal,state,exception,set,delivery,delay,requires,jms,2,0,reflection,utils,invoke,method,set,delivery,delay,method,producer,this,delivery,delay,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1438003976;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (this.deliveryDelay >= 0) {_			if (setDeliveryDelayMethod == null) {_				throw new IllegalStateException("setDeliveryDelay requires JMS 2.0")__			}_			ReflectionUtils.invokeMethod(setDeliveryDelayMethod, producer, this.deliveryDelay)__		}_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,this,delivery,delay,0,if,set,delivery,delay,method,null,throw,new,illegal,state,exception,set,delivery,delay,requires,jms,2,0,reflection,utils,invoke,method,set,delivery,delay,method,producer,this,delivery,delay,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1461683397;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (this.deliveryDelay >= 0) {_			if (setDeliveryDelayMethod == null) {_				throw new IllegalStateException("setDeliveryDelay requires JMS 2.0")__			}_			ReflectionUtils.invokeMethod(setDeliveryDelayMethod, producer, this.deliveryDelay)__		}_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,this,delivery,delay,0,if,set,delivery,delay,method,null,throw,new,illegal,state,exception,set,delivery,delay,requires,jms,2,0,reflection,utils,invoke,method,set,delivery,delay,method,producer,this,delivery,delay,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1492515173;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (this.deliveryDelay >= 0) {_			if (setDeliveryDelayMethod == null) {_				throw new IllegalStateException("setDeliveryDelay requires JMS 2.0")__			}_			ReflectionUtils.invokeMethod(setDeliveryDelayMethod, producer, this.deliveryDelay)__		}_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,this,delivery,delay,0,if,set,delivery,delay,method,null,throw,new,illegal,state,exception,set,delivery,delay,requires,jms,2,0,reflection,utils,invoke,method,set,delivery,delay,method,producer,this,delivery,delay,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1495868221;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (this.deliveryDelay >= 0) {_			if (setDeliveryDelayMethod == null) {_				throw new IllegalStateException("setDeliveryDelay requires JMS 2.0")__			}_			ReflectionUtils.invokeMethod(setDeliveryDelayMethod, producer, this.deliveryDelay)__		}_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,this,delivery,delay,0,if,set,delivery,delay,method,null,throw,new,illegal,state,exception,set,delivery,delay,requires,jms,2,0,reflection,utils,invoke,method,set,delivery,delay,method,producer,this,delivery,delay,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1496259743;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (this.deliveryDelay >= 0) {_			if (setDeliveryDelayMethod == null) {_				throw new IllegalStateException("setDeliveryDelay requires JMS 2.0")__			}_			ReflectionUtils.invokeMethod(setDeliveryDelayMethod, producer, this.deliveryDelay)__		}_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,this,delivery,delay,0,if,set,delivery,delay,method,null,throw,new,illegal,state,exception,set,delivery,delay,requires,jms,2,0,reflection,utils,invoke,method,set,delivery,delay,method,producer,this,delivery,delay,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1496837955;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (this.deliveryDelay >= 0) {_			producer.setDeliveryDelay(this.deliveryDelay)__		}_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,this,delivery,delay,0,producer,set,delivery,delay,this,delivery,delay,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1500448076;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (this.deliveryDelay >= 0) {_			producer.setDeliveryDelay(this.deliveryDelay)__		}_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,this,delivery,delay,0,producer,set,delivery,delay,this,delivery,delay,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1500457438;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (this.deliveryDelay >= 0) {_			producer.setDeliveryDelay(this.deliveryDelay)__		}_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,this,delivery,delay,0,producer,set,delivery,delay,this,delivery,delay,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1502974979;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (this.deliveryDelay >= 0) {_			producer.setDeliveryDelay(this.deliveryDelay)__		}_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,this,delivery,delay,0,producer,set,delivery,delay,this,delivery,delay,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1518567721;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (this.deliveryDelay >= 0) {_			producer.setDeliveryDelay(this.deliveryDelay)__		}_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,this,delivery,delay,0,producer,set,delivery,delay,this,delivery,delay,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1530174524;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (this.deliveryDelay >= 0) {_			producer.setDeliveryDelay(this.deliveryDelay)__		}_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,this,delivery,delay,0,producer,set,delivery,delay,this,delivery,delay,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected void doSend(MessageProducer producer, Message message) throws JMSException;1530174524;Actually send the given JMS message._@param producer the JMS MessageProducer to send with_@param message the JMS Message to send_@throws JMSException if thrown by JMS API methods;protected void doSend(MessageProducer producer, Message message) throws JMSException {_		if (this.deliveryDelay >= 0) {_			producer.setDeliveryDelay(this.deliveryDelay)__		}_		if (isExplicitQosEnabled()) {_			producer.send(message, getDeliveryMode(), getPriority(), getTimeToLive())__		}_		else {_			producer.send(message)__		}_	};actually,send,the,given,jms,message,param,producer,the,jms,message,producer,to,send,with,param,message,the,jms,message,to,send,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,message,producer,producer,message,message,throws,jmsexception,if,this,delivery,delay,0,producer,set,delivery,delay,this,delivery,delay,if,is,explicit,qos,enabled,producer,send,message,get,delivery,mode,get,priority,get,time,to,live,else,producer,send,message
JmsTemplate -> protected MessageProducer createProducer(Session session, Destination destination) throws JMSException;1328020251;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer, which needs to be specific to JMS 1.1 or 1.0.2._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,which,needs,to,be,specific,to,jms,1,1,or,1,0,2,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> protected MessageProducer createProducer(Session session, Destination destination) throws JMSException;1356735495;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer, which needs to be specific to JMS 1.1 or 1.0.2._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,which,needs,to,be,specific,to,jms,1,1,or,1,0,2,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> protected MessageProducer createProducer(Session session, Destination destination) throws JMSException;1357119239;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer, which needs to be specific to JMS 1.1 or 1.0.2._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,which,needs,to,be,specific,to,jms,1,1,or,1,0,2,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> protected MessageProducer createProducer(Session session, Destination destination) throws JMSException;1364391982;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer, which needs to be specific to JMS 1.1 or 1.0.2._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,which,needs,to,be,specific,to,jms,1,1,or,1,0,2,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> protected MessageProducer createProducer(Session session, Destination destination) throws JMSException;1368482696;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer, which needs to be specific to JMS 1.1 or 1.0.2._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,which,needs,to,be,specific,to,jms,1,1,or,1,0,2,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> protected MessageProducer createProducer(Session session, Destination destination) throws JMSException;1385501137;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer, which needs to be specific to JMS 1.1 or 1.0.2._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,which,needs,to,be,specific,to,jms,1,1,or,1,0,2,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> protected MessageProducer createProducer(Session session, Destination destination) throws JMSException;1390318124;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer, which needs to be specific to JMS 1.1 or 1.0.2._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,which,needs,to,be,specific,to,jms,1,1,or,1,0,2,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> protected MessageProducer createProducer(Session session, Destination destination) throws JMSException;1405696891;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> protected MessageProducer createProducer(Session session, Destination destination) throws JMSException;1406555570;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> protected MessageProducer createProducer(Session session, Destination destination) throws JMSException;1406643767;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> protected MessageProducer createProducer(Session session, Destination destination) throws JMSException;1413568470;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> protected MessageProducer createProducer(Session session, Destination destination) throws JMSException;1434018810;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> protected MessageProducer createProducer(Session session, Destination destination) throws JMSException;1438003976;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> protected MessageProducer createProducer(Session session, Destination destination) throws JMSException;1461683397;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> protected MessageProducer createProducer(Session session, Destination destination) throws JMSException;1492515173;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> protected MessageProducer createProducer(Session session, Destination destination) throws JMSException;1495868221;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> protected MessageProducer createProducer(Session session, Destination destination) throws JMSException;1496259743;Create a JMS MessageProducer for the given Session and Destination,_configuring it to disable message ids and/or timestamps (if necessary)._<p>Delegates to {@link #doCreateProducer} for creation of the raw_JMS MessageProducer._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods_@see #setMessageIdEnabled_@see #setMessageTimestampEnabled;protected MessageProducer createProducer(Session session, Destination destination) throws JMSException {_		MessageProducer producer = doCreateProducer(session, destination)__		if (!isMessageIdEnabled()) {_			producer.setDisableMessageID(true)__		}_		if (!isMessageTimestampEnabled()) {_			producer.setDisableMessageTimestamp(true)__		}_		return producer__	};create,a,jms,message,producer,for,the,given,session,and,destination,configuring,it,to,disable,message,ids,and,or,timestamps,if,necessary,p,delegates,to,link,do,create,producer,for,creation,of,the,raw,jms,message,producer,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods,see,set,message,id,enabled,see,set,message,timestamp,enabled;protected,message,producer,create,producer,session,session,destination,destination,throws,jmsexception,message,producer,producer,do,create,producer,session,destination,if,is,message,id,enabled,producer,set,disable,message,id,true,if,is,message,timestamp,enabled,producer,set,disable,message,timestamp,true,return,producer
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1328020251;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1356735495;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1357119239;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1364391982;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1368482696;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1385501137;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1390318124;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1405696891;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1406555570;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1406643767;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1413568470;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1434018810;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1438003976;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1461683397;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1492515173;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1495868221;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1496259743;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1496837955;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1500448076;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1500457438;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1502974979;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1518567721;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1530174524;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public JmsTemplate(ConnectionFactory connectionFactory);1530174524;Create a new JmsTemplate, given a ConnectionFactory._@param connectionFactory the ConnectionFactory to obtain Connections from;public JmsTemplate(ConnectionFactory connectionFactory) {_		this()__		setConnectionFactory(connectionFactory)__		afterPropertiesSet()__	};create,a,new,jms,template,given,a,connection,factory,param,connection,factory,the,connection,factory,to,obtain,connections,from;public,jms,template,connection,factory,connection,factory,this,set,connection,factory,connection,factory,after,properties,set
JmsTemplate -> public void setDefaultDestinationName(String destinationName);1328020251;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,string,destination,name,this,default,destination,destination,name
JmsTemplate -> public void setDefaultDestinationName(String destinationName);1356735495;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,string,destination,name,this,default,destination,destination,name
JmsTemplate -> public void setDefaultDestinationName(String destinationName);1357119239;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,string,destination,name,this,default,destination,destination,name
JmsTemplate -> public void setDefaultDestinationName(String destinationName);1364391982;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,string,destination,name,this,default,destination,destination,name
JmsTemplate -> public void setDefaultDestinationName(String destinationName);1368482696;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,string,destination,name,this,default,destination,destination,name
JmsTemplate -> public void setDefaultDestinationName(String destinationName);1385501137;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,string,destination,name,this,default,destination,destination,name
JmsTemplate -> public void setDefaultDestinationName(String destinationName);1390318124;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,string,destination,name,this,default,destination,destination,name
JmsTemplate -> public void setDefaultDestinationName(String destinationName);1405696891;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,string,destination,name,this,default,destination,destination,name
JmsTemplate -> public void setDefaultDestinationName(String destinationName);1406555570;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,string,destination,name,this,default,destination,destination,name
JmsTemplate -> public void setDefaultDestinationName(String destinationName);1406643767;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,string,destination,name,this,default,destination,destination,name
JmsTemplate -> public void setDefaultDestinationName(String destinationName);1413568470;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,string,destination,name,this,default,destination,destination,name
JmsTemplate -> public void setDefaultDestinationName(String destinationName);1434018810;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,string,destination,name,this,default,destination,destination,name
JmsTemplate -> public void setDefaultDestinationName(String destinationName);1438003976;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,string,destination,name,this,default,destination,destination,name
JmsTemplate -> public void setDefaultDestinationName(String destinationName);1461683397;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,string,destination,name,this,default,destination,destination,name
JmsTemplate -> public void setDefaultDestinationName(String destinationName);1492515173;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,string,destination,name,this,default,destination,destination,name
JmsTemplate -> public void setDefaultDestinationName(String destinationName);1495868221;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,string,destination,name,this,default,destination,destination,name
JmsTemplate -> public void setDefaultDestinationName(String destinationName);1496259743;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,string,destination,name,this,default,destination,destination,name
JmsTemplate -> public void setDefaultDestinationName(String destinationName);1496837955;Set the destination name to be used on send/receive operations that_do not have a destination parameter. The specified name will be_dynamically resolved via the DestinationResolver._<p>Alternatively, specify a JMS Destination object as "defaultDestination"._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDestinationResolver_@see #setDefaultDestination(javax.jms.Destination);public void setDefaultDestinationName(String destinationName) {_		this.defaultDestination = destinationName__	};set,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,the,specified,name,will,be,dynamically,resolved,via,the,destination,resolver,p,alternatively,specify,a,jms,destination,object,as,default,destination,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,destination,resolver,see,set,default,destination,javax,jms,destination;public,void,set,default,destination,name,string,destination,name,this,default,destination,destination,name
JmsTemplate -> private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException;1328020251;Actually receive a message from the given consumer._@param consumer the JMS MessageConsumer to receive with_@param timeout the receive timeout_@return the JMS Message received, or <code>null</code> if none_@throws JMSException if thrown by JMS API methods;private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException {_		if (timeout == RECEIVE_TIMEOUT_NO_WAIT) {_			return consumer.receiveNoWait()__		}_		else if (timeout > 0) {_			return consumer.receive(timeout)__		}_		else {_			return consumer.receive()__		}_	};actually,receive,a,message,from,the,given,consumer,param,consumer,the,jms,message,consumer,to,receive,with,param,timeout,the,receive,timeout,return,the,jms,message,received,or,code,null,code,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;private,message,do,receive,message,consumer,consumer,long,timeout,throws,jmsexception,if,timeout,return,consumer,receive,no,wait,else,if,timeout,0,return,consumer,receive,timeout,else,return,consumer,receive
JmsTemplate -> private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException;1356735495;Actually receive a message from the given consumer._@param consumer the JMS MessageConsumer to receive with_@param timeout the receive timeout_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException {_		if (timeout == RECEIVE_TIMEOUT_NO_WAIT) {_			return consumer.receiveNoWait()__		}_		else if (timeout > 0) {_			return consumer.receive(timeout)__		}_		else {_			return consumer.receive()__		}_	};actually,receive,a,message,from,the,given,consumer,param,consumer,the,jms,message,consumer,to,receive,with,param,timeout,the,receive,timeout,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;private,message,do,receive,message,consumer,consumer,long,timeout,throws,jmsexception,if,timeout,return,consumer,receive,no,wait,else,if,timeout,0,return,consumer,receive,timeout,else,return,consumer,receive
JmsTemplate -> private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException;1357119239;Actually receive a message from the given consumer._@param consumer the JMS MessageConsumer to receive with_@param timeout the receive timeout_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException {_		if (timeout == RECEIVE_TIMEOUT_NO_WAIT) {_			return consumer.receiveNoWait()__		}_		else if (timeout > 0) {_			return consumer.receive(timeout)__		}_		else {_			return consumer.receive()__		}_	};actually,receive,a,message,from,the,given,consumer,param,consumer,the,jms,message,consumer,to,receive,with,param,timeout,the,receive,timeout,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;private,message,do,receive,message,consumer,consumer,long,timeout,throws,jmsexception,if,timeout,return,consumer,receive,no,wait,else,if,timeout,0,return,consumer,receive,timeout,else,return,consumer,receive
JmsTemplate -> private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException;1364391982;Actually receive a message from the given consumer._@param consumer the JMS MessageConsumer to receive with_@param timeout the receive timeout_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException {_		if (timeout == RECEIVE_TIMEOUT_NO_WAIT) {_			return consumer.receiveNoWait()__		}_		else if (timeout > 0) {_			return consumer.receive(timeout)__		}_		else {_			return consumer.receive()__		}_	};actually,receive,a,message,from,the,given,consumer,param,consumer,the,jms,message,consumer,to,receive,with,param,timeout,the,receive,timeout,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;private,message,do,receive,message,consumer,consumer,long,timeout,throws,jmsexception,if,timeout,return,consumer,receive,no,wait,else,if,timeout,0,return,consumer,receive,timeout,else,return,consumer,receive
JmsTemplate -> private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException;1368482696;Actually receive a message from the given consumer._@param consumer the JMS MessageConsumer to receive with_@param timeout the receive timeout_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException {_		if (timeout == RECEIVE_TIMEOUT_NO_WAIT) {_			return consumer.receiveNoWait()__		}_		else if (timeout > 0) {_			return consumer.receive(timeout)__		}_		else {_			return consumer.receive()__		}_	};actually,receive,a,message,from,the,given,consumer,param,consumer,the,jms,message,consumer,to,receive,with,param,timeout,the,receive,timeout,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;private,message,do,receive,message,consumer,consumer,long,timeout,throws,jmsexception,if,timeout,return,consumer,receive,no,wait,else,if,timeout,0,return,consumer,receive,timeout,else,return,consumer,receive
JmsTemplate -> private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException;1385501137;Actually receive a message from the given consumer._@param consumer the JMS MessageConsumer to receive with_@param timeout the receive timeout_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException {_		if (timeout == RECEIVE_TIMEOUT_NO_WAIT) {_			return consumer.receiveNoWait()__		}_		else if (timeout > 0) {_			return consumer.receive(timeout)__		}_		else {_			return consumer.receive()__		}_	};actually,receive,a,message,from,the,given,consumer,param,consumer,the,jms,message,consumer,to,receive,with,param,timeout,the,receive,timeout,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;private,message,do,receive,message,consumer,consumer,long,timeout,throws,jmsexception,if,timeout,return,consumer,receive,no,wait,else,if,timeout,0,return,consumer,receive,timeout,else,return,consumer,receive
JmsTemplate -> private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException;1390318124;Actually receive a message from the given consumer._@param consumer the JMS MessageConsumer to receive with_@param timeout the receive timeout_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException {_		if (timeout == RECEIVE_TIMEOUT_NO_WAIT) {_			return consumer.receiveNoWait()__		}_		else if (timeout > 0) {_			return consumer.receive(timeout)__		}_		else {_			return consumer.receive()__		}_	};actually,receive,a,message,from,the,given,consumer,param,consumer,the,jms,message,consumer,to,receive,with,param,timeout,the,receive,timeout,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;private,message,do,receive,message,consumer,consumer,long,timeout,throws,jmsexception,if,timeout,return,consumer,receive,no,wait,else,if,timeout,0,return,consumer,receive,timeout,else,return,consumer,receive
JmsTemplate -> private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException;1405696891;Actually receive a message from the given consumer._@param consumer the JMS MessageConsumer to receive with_@param timeout the receive timeout_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException {_		if (timeout == RECEIVE_TIMEOUT_NO_WAIT) {_			return consumer.receiveNoWait()__		}_		else if (timeout > 0) {_			return consumer.receive(timeout)__		}_		else {_			return consumer.receive()__		}_	};actually,receive,a,message,from,the,given,consumer,param,consumer,the,jms,message,consumer,to,receive,with,param,timeout,the,receive,timeout,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;private,message,do,receive,message,consumer,consumer,long,timeout,throws,jmsexception,if,timeout,return,consumer,receive,no,wait,else,if,timeout,0,return,consumer,receive,timeout,else,return,consumer,receive
JmsTemplate -> private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException;1406555570;Actually receive a message from the given consumer._@param consumer the JMS MessageConsumer to receive with_@param timeout the receive timeout_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException {_		if (timeout == RECEIVE_TIMEOUT_NO_WAIT) {_			return consumer.receiveNoWait()__		}_		else if (timeout > 0) {_			return consumer.receive(timeout)__		}_		else {_			return consumer.receive()__		}_	};actually,receive,a,message,from,the,given,consumer,param,consumer,the,jms,message,consumer,to,receive,with,param,timeout,the,receive,timeout,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;private,message,do,receive,message,consumer,consumer,long,timeout,throws,jmsexception,if,timeout,return,consumer,receive,no,wait,else,if,timeout,0,return,consumer,receive,timeout,else,return,consumer,receive
JmsTemplate -> private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException;1406643767;Actually receive a message from the given consumer._@param consumer the JMS MessageConsumer to receive with_@param timeout the receive timeout_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException {_		if (timeout == RECEIVE_TIMEOUT_NO_WAIT) {_			return consumer.receiveNoWait()__		}_		else if (timeout > 0) {_			return consumer.receive(timeout)__		}_		else {_			return consumer.receive()__		}_	};actually,receive,a,message,from,the,given,consumer,param,consumer,the,jms,message,consumer,to,receive,with,param,timeout,the,receive,timeout,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;private,message,do,receive,message,consumer,consumer,long,timeout,throws,jmsexception,if,timeout,return,consumer,receive,no,wait,else,if,timeout,0,return,consumer,receive,timeout,else,return,consumer,receive
JmsTemplate -> private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException;1413568470;Actually receive a message from the given consumer._@param consumer the JMS MessageConsumer to receive with_@param timeout the receive timeout_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException {_		if (timeout == RECEIVE_TIMEOUT_NO_WAIT) {_			return consumer.receiveNoWait()__		}_		else if (timeout > 0) {_			return consumer.receive(timeout)__		}_		else {_			return consumer.receive()__		}_	};actually,receive,a,message,from,the,given,consumer,param,consumer,the,jms,message,consumer,to,receive,with,param,timeout,the,receive,timeout,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;private,message,do,receive,message,consumer,consumer,long,timeout,throws,jmsexception,if,timeout,return,consumer,receive,no,wait,else,if,timeout,0,return,consumer,receive,timeout,else,return,consumer,receive
JmsTemplate -> private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException;1434018810;Actually receive a message from the given consumer._@param consumer the JMS MessageConsumer to receive with_@param timeout the receive timeout_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException {_		if (timeout == RECEIVE_TIMEOUT_NO_WAIT) {_			return consumer.receiveNoWait()__		}_		else if (timeout > 0) {_			return consumer.receive(timeout)__		}_		else {_			return consumer.receive()__		}_	};actually,receive,a,message,from,the,given,consumer,param,consumer,the,jms,message,consumer,to,receive,with,param,timeout,the,receive,timeout,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;private,message,do,receive,message,consumer,consumer,long,timeout,throws,jmsexception,if,timeout,return,consumer,receive,no,wait,else,if,timeout,0,return,consumer,receive,timeout,else,return,consumer,receive
JmsTemplate -> private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException;1438003976;Actually receive a message from the given consumer._@param consumer the JMS MessageConsumer to receive with_@param timeout the receive timeout_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;private Message doReceive(MessageConsumer consumer, long timeout) throws JMSException {_		if (timeout == RECEIVE_TIMEOUT_NO_WAIT) {_			return consumer.receiveNoWait()__		}_		else if (timeout > 0) {_			return consumer.receive(timeout)__		}_		else {_			return consumer.receive()__		}_	};actually,receive,a,message,from,the,given,consumer,param,consumer,the,jms,message,consumer,to,receive,with,param,timeout,the,receive,timeout,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;private,message,do,receive,message,consumer,consumer,long,timeout,throws,jmsexception,if,timeout,return,consumer,receive,no,wait,else,if,timeout,0,return,consumer,receive,timeout,else,return,consumer,receive
JmsTemplate -> public Destination getDefaultDestination();1328020251;Return the destination to be used on send/receive operations that do not_have a destination parameter.;public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> public Destination getDefaultDestination();1356735495;Return the destination to be used on send/receive operations that do not_have a destination parameter.;public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> public Destination getDefaultDestination();1357119239;Return the destination to be used on send/receive operations that do not_have a destination parameter.;public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> public Destination getDefaultDestination();1364391982;Return the destination to be used on send/receive operations that do not_have a destination parameter.;public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> public Destination getDefaultDestination();1368482696;Return the destination to be used on send/receive operations that do not_have a destination parameter.;public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> public Destination getDefaultDestination();1385501137;Return the destination to be used on send/receive operations that do not_have a destination parameter.;public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> public Destination getDefaultDestination();1390318124;Return the destination to be used on send/receive operations that do not_have a destination parameter.;public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> public Destination getDefaultDestination();1405696891;Return the destination to be used on send/receive operations that do not_have a destination parameter.;public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> public Destination getDefaultDestination();1406555570;Return the destination to be used on send/receive operations that do not_have a destination parameter.;public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> public Destination getDefaultDestination();1406643767;Return the destination to be used on send/receive operations that do not_have a destination parameter.;public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> public Destination getDefaultDestination();1413568470;Return the destination to be used on send/receive operations that do not_have a destination parameter.;public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> public Destination getDefaultDestination();1434018810;Return the destination to be used on send/receive operations that do not_have a destination parameter.;public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> public Destination getDefaultDestination();1438003976;Return the destination to be used on send/receive operations that do not_have a destination parameter.;public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> public Destination getDefaultDestination();1461683397;Return the destination to be used on send/receive operations that do not_have a destination parameter.;public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> public Destination getDefaultDestination();1492515173;Return the destination to be used on send/receive operations that do not_have a destination parameter.;public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> public Destination getDefaultDestination();1495868221;Return the destination to be used on send/receive operations that do not_have a destination parameter.;public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> public Destination getDefaultDestination();1496259743;Return the destination to be used on send/receive operations that do not_have a destination parameter.;public Destination getDefaultDestination() {_		return (this.defaultDestination instanceof Destination ? (Destination) this.defaultDestination : null)__	};return,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;public,destination,get,default,destination,return,this,default,destination,instanceof,destination,destination,this,default,destination,null
JmsTemplate -> @Nullable 	protected Message doReceive(Session session, Destination destination, @Nullable String messageSelector) 			throws JMSException;1495868221;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doReceive(Session session, Destination destination, @Nullable String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,receive,session,session,destination,destination,nullable,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> @Nullable 	protected Message doReceive(Session session, Destination destination, @Nullable String messageSelector) 			throws JMSException;1496259743;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doReceive(Session session, Destination destination, @Nullable String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,receive,session,session,destination,destination,nullable,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> @Nullable 	protected Message doReceive(Session session, Destination destination, @Nullable String messageSelector) 			throws JMSException;1496837955;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doReceive(Session session, Destination destination, @Nullable String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,receive,session,session,destination,destination,nullable,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> @Nullable 	protected Message doReceive(Session session, Destination destination, @Nullable String messageSelector) 			throws JMSException;1500448076;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doReceive(Session session, Destination destination, @Nullable String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,receive,session,session,destination,destination,nullable,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> @Nullable 	protected Message doReceive(Session session, Destination destination, @Nullable String messageSelector) 			throws JMSException;1500457438;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doReceive(Session session, Destination destination, @Nullable String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,receive,session,session,destination,destination,nullable,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> @Nullable 	protected Message doReceive(Session session, Destination destination, @Nullable String messageSelector) 			throws JMSException;1502974979;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doReceive(Session session, Destination destination, @Nullable String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,receive,session,session,destination,destination,nullable,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> @Nullable 	protected Message doReceive(Session session, Destination destination, @Nullable String messageSelector) 			throws JMSException;1518567721;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doReceive(Session session, Destination destination, @Nullable String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,receive,session,session,destination,destination,nullable,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> @Nullable 	protected Message doReceive(Session session, Destination destination, @Nullable String messageSelector) 			throws JMSException;1530174524;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doReceive(Session session, Destination destination, @Nullable String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,receive,session,session,destination,destination,nullable,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> @Nullable 	protected Message doReceive(Session session, Destination destination, @Nullable String messageSelector) 			throws JMSException;1530174524;Receive a JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to receive from_@param messageSelector the message selector for this consumer (can be {@code null})_@return the JMS Message received, or {@code null} if none_@throws JMSException if thrown by JMS API methods;@Nullable_	protected Message doReceive(Session session, Destination destination, @Nullable String messageSelector)_			throws JMSException {__		return doReceive(session, createConsumer(session, destination, messageSelector))__	};receive,a,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,receive,from,param,message,selector,the,message,selector,for,this,consumer,can,be,code,null,return,the,jms,message,received,or,code,null,if,none,throws,jmsexception,if,thrown,by,jms,api,methods;nullable,protected,message,do,receive,session,session,destination,destination,nullable,string,message,selector,throws,jmsexception,return,do,receive,session,create,consumer,session,destination,message,selector
JmsTemplate -> public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1328020251;Execute the action specified by the given action object within a_JMS Session. Generalized version of <code>execute(SessionCallback)</code>,_allowing the JMS Connection to be started on the fly._<p>Use <code>execute(SessionCallback)</code> for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the <code>receive</code> methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					getConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,code,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,code,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,code,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,get,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1356735495;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					getConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,get,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1357119239;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					getConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,get,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1364391982;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					getConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,get,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1368482696;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					getConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,get,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1385501137;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					getConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,get,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1390318124;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					getConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,get,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1405696891;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					getConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,get,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1406555570;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					getConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,get,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1406643767;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					getConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,get,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1413568470;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					getConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,get,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1434018810;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					getConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,get,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1438003976;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					getConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,get,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1461683397;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					getConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,get,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1492515173;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					getConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,get,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1495868221;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					getConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,get,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException;1496259743;Execute the action specified by the given action object within a_JMS Session. Generalized version of {@code execute(SessionCallback)},_allowing the JMS Connection to be started on the fly._<p>Use {@code execute(SessionCallback)} for the general case._Starting the JMS Connection is just necessary for receiving messages,_which is preferably achieved through the {@code receive} methods._@param action callback object that exposes the Session_@param startConnection whether to start the Connection_@return the result object from working with the Session_@throws JmsException if there is any problem_@see #execute(SessionCallback)_@see #receive;public <T> T execute(SessionCallback<T> action, boolean startConnection) throws JmsException {_		Assert.notNull(action, "Callback object must not be null")__		Connection conToClose = null__		Session sessionToClose = null__		try {_			Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession(_					getConnectionFactory(), this.transactionalResourceFactory, startConnection)__			if (sessionToUse == null) {_				conToClose = createConnection()__				sessionToClose = createSession(conToClose)__				if (startConnection) {_					conToClose.start()__				}_				sessionToUse = sessionToClose__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Executing callback on JMS Session: " + sessionToUse)__			}_			return action.doInJms(sessionToUse)__		}_		catch (JMSException ex) {_			throw convertJmsAccessException(ex)__		}_		finally {_			JmsUtils.closeSession(sessionToClose)__			ConnectionFactoryUtils.releaseConnection(conToClose, getConnectionFactory(), startConnection)__		}_	};execute,the,action,specified,by,the,given,action,object,within,a,jms,session,generalized,version,of,code,execute,session,callback,allowing,the,jms,connection,to,be,started,on,the,fly,p,use,code,execute,session,callback,for,the,general,case,starting,the,jms,connection,is,just,necessary,for,receiving,messages,which,is,preferably,achieved,through,the,code,receive,methods,param,action,callback,object,that,exposes,the,session,param,start,connection,whether,to,start,the,connection,return,the,result,object,from,working,with,the,session,throws,jms,exception,if,there,is,any,problem,see,execute,session,callback,see,receive;public,t,t,execute,session,callback,t,action,boolean,start,connection,throws,jms,exception,assert,not,null,action,callback,object,must,not,be,null,connection,con,to,close,null,session,session,to,close,null,try,session,session,to,use,connection,factory,utils,do,get,transactional,session,get,connection,factory,this,transactional,resource,factory,start,connection,if,session,to,use,null,con,to,close,create,connection,session,to,close,create,session,con,to,close,if,start,connection,con,to,close,start,session,to,use,session,to,close,if,logger,is,debug,enabled,logger,debug,executing,callback,on,jms,session,session,to,use,return,action,do,in,jms,session,to,use,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,finally,jms,utils,close,session,session,to,close,connection,factory,utils,release,connection,con,to,close,get,connection,factory,start,connection
JmsTemplate -> public void setDefaultDestination(@Nullable Destination destination);1500448076;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(@Nullable Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,nullable,destination,destination,this,default,destination,destination
JmsTemplate -> public void setDefaultDestination(@Nullable Destination destination);1500457438;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(@Nullable Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,nullable,destination,destination,this,default,destination,destination
JmsTemplate -> public void setDefaultDestination(@Nullable Destination destination);1502974979;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(@Nullable Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,nullable,destination,destination,this,default,destination,destination
JmsTemplate -> public void setDefaultDestination(@Nullable Destination destination);1518567721;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(@Nullable Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,nullable,destination,destination,this,default,destination,destination
JmsTemplate -> public void setDefaultDestination(@Nullable Destination destination);1530174524;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(@Nullable Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,nullable,destination,destination,this,default,destination,destination
JmsTemplate -> public void setDefaultDestination(@Nullable Destination destination);1530174524;Set the destination to be used on send/receive operations that do not_have a destination parameter._<p>Alternatively, specify a "defaultDestinationName", to be_dynamically resolved via the DestinationResolver._@see #send(MessageCreator)_@see #convertAndSend(Object)_@see #convertAndSend(Object, MessagePostProcessor)_@see #setDefaultDestinationName(String);public void setDefaultDestination(@Nullable Destination destination) {_		this.defaultDestination = destination__	};set,the,destination,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter,p,alternatively,specify,a,default,destination,name,to,be,dynamically,resolved,via,the,destination,resolver,see,send,message,creator,see,convert,and,send,object,see,convert,and,send,object,message,post,processor,see,set,default,destination,name,string;public,void,set,default,destination,nullable,destination,destination,this,default,destination,destination
JmsTemplate -> public long getReceiveTimeout();1328020251;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1356735495;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1357119239;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1364391982;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1368482696;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1385501137;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1390318124;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1405696891;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1406555570;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1406643767;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1413568470;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1434018810;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1438003976;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1461683397;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1492515173;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1495868221;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1496259743;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1496837955;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1500448076;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1500457438;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1502974979;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1518567721;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1530174524;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> public long getReceiveTimeout();1530174524;Return the timeout to use for receive calls (in milliseconds).;public long getReceiveTimeout() {_		return this.receiveTimeout__	};return,the,timeout,to,use,for,receive,calls,in,milliseconds;public,long,get,receive,timeout,return,this,receive,timeout
JmsTemplate -> @Nullable 	protected Object doConvertFromMessage(@Nullable Message message);1495868221;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;@Nullable_	protected Object doConvertFromMessage(@Nullable Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;nullable,protected,object,do,convert,from,message,nullable,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> @Nullable 	protected Object doConvertFromMessage(@Nullable Message message);1496259743;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;@Nullable_	protected Object doConvertFromMessage(@Nullable Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;nullable,protected,object,do,convert,from,message,nullable,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> @Nullable 	protected Object doConvertFromMessage(@Nullable Message message);1496837955;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;@Nullable_	protected Object doConvertFromMessage(@Nullable Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;nullable,protected,object,do,convert,from,message,nullable,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> @Nullable 	protected Object doConvertFromMessage(@Nullable Message message);1500448076;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;@Nullable_	protected Object doConvertFromMessage(@Nullable Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;nullable,protected,object,do,convert,from,message,nullable,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> @Nullable 	protected Object doConvertFromMessage(@Nullable Message message);1500457438;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;@Nullable_	protected Object doConvertFromMessage(@Nullable Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;nullable,protected,object,do,convert,from,message,nullable,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> @Nullable 	protected Object doConvertFromMessage(@Nullable Message message);1502974979;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;@Nullable_	protected Object doConvertFromMessage(@Nullable Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;nullable,protected,object,do,convert,from,message,nullable,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> @Nullable 	protected Object doConvertFromMessage(@Nullable Message message);1518567721;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;@Nullable_	protected Object doConvertFromMessage(@Nullable Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;nullable,protected,object,do,convert,from,message,nullable,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> @Nullable 	protected Object doConvertFromMessage(@Nullable Message message);1530174524;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;@Nullable_	protected Object doConvertFromMessage(@Nullable Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;nullable,protected,object,do,convert,from,message,nullable,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> @Nullable 	protected Object doConvertFromMessage(@Nullable Message message);1530174524;Extract the content from the given JMS message._@param message the JMS Message to convert (can be {@code null})_@return the content of the message, or {@code null} if none;@Nullable_	protected Object doConvertFromMessage(@Nullable Message message) {_		if (message != null) {_			try {_				return getRequiredMessageConverter().fromMessage(message)__			}_			catch (JMSException ex) {_				throw convertJmsAccessException(ex)__			}_		}_		return null__	};extract,the,content,from,the,given,jms,message,param,message,the,jms,message,to,convert,can,be,code,null,return,the,content,of,the,message,or,code,null,if,none;nullable,protected,object,do,convert,from,message,nullable,message,message,if,message,null,try,return,get,required,message,converter,from,message,message,catch,jmsexception,ex,throw,convert,jms,access,exception,ex,return,null
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1328020251;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.TopicSession#createSubscriber(javax.jms.Topic, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,topic,session,create,subscriber,javax,jms,topic,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1356735495;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.TopicSession#createSubscriber(javax.jms.Topic, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,topic,session,create,subscriber,javax,jms,topic,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1357119239;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.TopicSession#createSubscriber(javax.jms.Topic, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,topic,session,create,subscriber,javax,jms,topic,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1364391982;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.TopicSession#createSubscriber(javax.jms.Topic, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,topic,session,create,subscriber,javax,jms,topic,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1368482696;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.TopicSession#createSubscriber(javax.jms.Topic, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,topic,session,create,subscriber,javax,jms,topic,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1385501137;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.TopicSession#createSubscriber(javax.jms.Topic, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,topic,session,create,subscriber,javax,jms,topic,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1390318124;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.TopicSession#createSubscriber(javax.jms.Topic, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,topic,session,create,subscriber,javax,jms,topic,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1405696891;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.Session#createConsumer(javax.jms.Destination, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,session,create,consumer,javax,jms,destination,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1406555570;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.Session#createConsumer(javax.jms.Destination, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,session,create,consumer,javax,jms,destination,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1406643767;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.Session#createConsumer(javax.jms.Destination, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,session,create,consumer,javax,jms,destination,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1413568470;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.Session#createConsumer(javax.jms.Destination, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,session,create,consumer,javax,jms,destination,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1434018810;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.Session#createConsumer(javax.jms.Destination, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,session,create,consumer,javax,jms,destination,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1438003976;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.Session#createConsumer(javax.jms.Destination, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,session,create,consumer,javax,jms,destination,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1461683397;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.Session#createConsumer(javax.jms.Destination, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,session,create,consumer,javax,jms,destination,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1492515173;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.Session#createConsumer(javax.jms.Destination, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,session,create,consumer,javax,jms,destination,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1495868221;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.Session#createConsumer(javax.jms.Destination, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,session,create,consumer,javax,jms,destination,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1496259743;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.Session#createConsumer(javax.jms.Destination, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,session,create,consumer,javax,jms,destination,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1496837955;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.Session#createConsumer(javax.jms.Destination, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,session,create,consumer,javax,jms,destination,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1500448076;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.Session#createConsumer(javax.jms.Destination, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,session,create,consumer,javax,jms,destination,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1500457438;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.Session#createConsumer(javax.jms.Destination, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,session,create,consumer,javax,jms,destination,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1502974979;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.Session#createConsumer(javax.jms.Destination, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,session,create,consumer,javax,jms,destination,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1518567721;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.Session#createConsumer(javax.jms.Destination, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,session,create,consumer,javax,jms,destination,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1530174524;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.Session#createConsumer(javax.jms.Destination, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,session,create,consumer,javax,jms,destination,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> public void setPubSubNoLocal(boolean pubSubNoLocal);1530174524;Set whether to inhibit the delivery of messages published by its own connection._Default is "false"._@see javax.jms.Session#createConsumer(javax.jms.Destination, String, boolean);public void setPubSubNoLocal(boolean pubSubNoLocal) {_		this.pubSubNoLocal = pubSubNoLocal__	};set,whether,to,inhibit,the,delivery,of,messages,published,by,its,own,connection,default,is,false,see,javax,jms,session,create,consumer,javax,jms,destination,string,boolean;public,void,set,pub,sub,no,local,boolean,pub,sub,no,local,this,pub,sub,no,local,pub,sub,no,local
JmsTemplate -> protected Session getSession(JmsResourceHolder holder);1328020251;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or <code>null</code> if none found;protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,code,if,none,found;protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> protected Session getSession(JmsResourceHolder holder);1356735495;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> protected Session getSession(JmsResourceHolder holder);1357119239;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> protected Session getSession(JmsResourceHolder holder);1364391982;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> protected Session getSession(JmsResourceHolder holder);1368482696;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> protected Session getSession(JmsResourceHolder holder);1385501137;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> protected Session getSession(JmsResourceHolder holder);1390318124;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> protected Session getSession(JmsResourceHolder holder);1405696891;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> protected Session getSession(JmsResourceHolder holder);1406555570;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> protected Session getSession(JmsResourceHolder holder);1406643767;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> protected Session getSession(JmsResourceHolder holder);1413568470;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> protected Session getSession(JmsResourceHolder holder);1434018810;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> protected Session getSession(JmsResourceHolder holder);1438003976;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> protected Session getSession(JmsResourceHolder holder);1461683397;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> protected Session getSession(JmsResourceHolder holder);1492515173;Fetch an appropriate Session from the given JmsResourceHolder._<p>This implementation accepts any JMS 1.1 Session._@param holder the JmsResourceHolder_@return an appropriate Session fetched from the holder,_or {@code null} if none found;protected Session getSession(JmsResourceHolder holder) {_		return holder.getSession()__	};fetch,an,appropriate,session,from,the,given,jms,resource,holder,p,this,implementation,accepts,any,jms,1,1,session,param,holder,the,jms,resource,holder,return,an,appropriate,session,fetched,from,the,holder,or,code,null,if,none,found;protected,session,get,session,jms,resource,holder,holder,return,holder,get,session
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1328020251;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1356735495;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1357119239;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1364391982;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1368482696;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1385501137;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1390318124;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1405696891;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1406555570;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1406643767;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1413568470;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1434018810;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1438003976;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1461683397;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1492515173;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1495868221;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1496259743;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1496837955;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1500448076;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1500457438;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1502974979;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1518567721;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1530174524;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> protected void doSend(Session session, Destination destination, MessageCreator messageCreator) 			throws JMSException;1530174524;Send the given JMS message._@param session the JMS Session to operate on_@param destination the JMS Destination to send to_@param messageCreator callback to create a JMS Message_@throws JMSException if thrown by JMS API methods;protected void doSend(Session session, Destination destination, MessageCreator messageCreator)_			throws JMSException {__		Assert.notNull(messageCreator, "MessageCreator must not be null")__		MessageProducer producer = createProducer(session, destination)__		try {_			Message message = messageCreator.createMessage(session)__			if (logger.isDebugEnabled()) {_				logger.debug("Sending created message: " + message)__			}_			doSend(producer, message)__			_			if (session.getTransacted() && isSessionLocallyTransacted(session)) {_				_				JmsUtils.commitIfNecessary(session)__			}_		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,jms,message,param,session,the,jms,session,to,operate,on,param,destination,the,jms,destination,to,send,to,param,message,creator,callback,to,create,a,jms,message,throws,jmsexception,if,thrown,by,jms,api,methods;protected,void,do,send,session,session,destination,destination,message,creator,message,creator,throws,jmsexception,assert,not,null,message,creator,message,creator,must,not,be,null,message,producer,producer,create,producer,session,destination,try,message,message,message,creator,create,message,session,if,logger,is,debug,enabled,logger,debug,sending,created,message,message,do,send,producer,message,if,session,get,transacted,is,session,locally,transacted,session,jms,utils,commit,if,necessary,session,finally,jms,utils,close,message,producer,producer
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1328020251;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1356735495;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1357119239;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1364391982;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1368482696;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1385501137;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1390318124;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1405696891;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1406555570;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1406643767;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1413568470;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1434018810;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1438003976;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1461683397;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1492515173;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1495868221;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1496259743;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1496837955;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1500448076;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1500457438;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1502974979;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1518567721;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1530174524;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> public void setExplicitQosEnabled(boolean explicitQosEnabled);1530174524;Set if the QOS values (deliveryMode, priority, timeToLive)_should be used for sending a message._@see #setDeliveryMode_@see #setPriority_@see #setTimeToLive;public void setExplicitQosEnabled(boolean explicitQosEnabled) {_		this.explicitQosEnabled = explicitQosEnabled__	};set,if,the,qos,values,delivery,mode,priority,time,to,live,should,be,used,for,sending,a,message,see,set,delivery,mode,see,set,priority,see,set,time,to,live;public,void,set,explicit,qos,enabled,boolean,explicit,qos,enabled,this,explicit,qos,enabled,explicit,qos,enabled
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, @Nullable Destination destination) throws JMSException;1496837955;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, @Nullable Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,nullable,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, @Nullable Destination destination) throws JMSException;1500448076;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, @Nullable Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,nullable,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, @Nullable Destination destination) throws JMSException;1500457438;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, @Nullable Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,nullable,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, @Nullable Destination destination) throws JMSException;1502974979;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, @Nullable Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,nullable,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, @Nullable Destination destination) throws JMSException;1518567721;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, @Nullable Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,nullable,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, @Nullable Destination destination) throws JMSException;1530174524;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, @Nullable Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,nullable,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> protected MessageProducer doCreateProducer(Session session, @Nullable Destination destination) throws JMSException;1530174524;Create a raw JMS MessageProducer for the given Session and Destination._<p>This implementation uses JMS 1.1 API._@param session the JMS Session to create a MessageProducer for_@param destination the JMS Destination to create a MessageProducer for_@return the new JMS MessageProducer_@throws JMSException if thrown by JMS API methods;protected MessageProducer doCreateProducer(Session session, @Nullable Destination destination) throws JMSException {_		return session.createProducer(destination)__	};create,a,raw,jms,message,producer,for,the,given,session,and,destination,p,this,implementation,uses,jms,1,1,api,param,session,the,jms,session,to,create,a,message,producer,for,param,destination,the,jms,destination,to,create,a,message,producer,for,return,the,new,jms,message,producer,throws,jmsexception,if,thrown,by,jms,api,methods;protected,message,producer,do,create,producer,session,session,nullable,destination,destination,throws,jmsexception,return,session,create,producer,destination
JmsTemplate -> public JmsTemplate();1328020251;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1356735495;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1357119239;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1364391982;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1368482696;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1385501137;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1390318124;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1405696891;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1406555570;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1406643767;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1413568470;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1434018810;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1438003976;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1461683397;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1492515173;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1495868221;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1496259743;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1496837955;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1500448076;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1500457438;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1502974979;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1518567721;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1530174524;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public JmsTemplate();1530174524;Create a new JmsTemplate for bean-style usage._<p>Note: The ConnectionFactory has to be set before using the instance._This constructor can be used to prepare a JmsTemplate via a BeanFactory,_typically setting the ConnectionFactory via setConnectionFactory._@see #setConnectionFactory;public JmsTemplate() {_		initDefaultStrategies()__	};create,a,new,jms,template,for,bean,style,usage,p,note,the,connection,factory,has,to,be,set,before,using,the,instance,this,constructor,can,be,used,to,prepare,a,jms,template,via,a,bean,factory,typically,setting,the,connection,factory,via,set,connection,factory,see,set,connection,factory;public,jms,template,init,default,strategies
JmsTemplate -> public MessageConverter getMessageConverter();1328020251;Return the message converter for this template.;public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> public MessageConverter getMessageConverter();1356735495;Return the message converter for this template.;public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> public MessageConverter getMessageConverter();1357119239;Return the message converter for this template.;public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> public MessageConverter getMessageConverter();1364391982;Return the message converter for this template.;public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> public MessageConverter getMessageConverter();1368482696;Return the message converter for this template.;public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> public MessageConverter getMessageConverter();1385501137;Return the message converter for this template.;public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> public MessageConverter getMessageConverter();1390318124;Return the message converter for this template.;public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> public MessageConverter getMessageConverter();1405696891;Return the message converter for this template.;public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> public MessageConverter getMessageConverter();1406555570;Return the message converter for this template.;public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> public MessageConverter getMessageConverter();1406643767;Return the message converter for this template.;public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> public MessageConverter getMessageConverter();1413568470;Return the message converter for this template.;public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> public MessageConverter getMessageConverter();1434018810;Return the message converter for this template.;public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> public MessageConverter getMessageConverter();1438003976;Return the message converter for this template.;public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> public MessageConverter getMessageConverter();1461683397;Return the message converter for this template.;public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> public MessageConverter getMessageConverter();1492515173;Return the message converter for this template.;public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> public MessageConverter getMessageConverter();1495868221;Return the message converter for this template.;public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> public MessageConverter getMessageConverter();1496259743;Return the message converter for this template.;public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> public MessageConverter getMessageConverter();1500448076;Return the message converter for this template.;public MessageConverter getMessageConverter() {_		return this.messageConverter__	};return,the,message,converter,for,this,template;public,message,converter,get,message,converter,return,this,message,converter
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1328020251;Set the delivery mode to use when sending a message._Default is the Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1356735495;Set the delivery mode to use when sending a message._Default is the Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1357119239;Set the delivery mode to use when sending a message._Default is the Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1364391982;Set the delivery mode to use when sending a message._Default is the Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1368482696;Set the delivery mode to use when sending a message._Default is the Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1385501137;Set the delivery mode to use when sending a message._Default is the Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1390318124;Set the delivery mode to use when sending a message._Default is the JMS Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,jms,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1405696891;Set the delivery mode to use when sending a message._Default is the JMS Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,jms,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1406555570;Set the delivery mode to use when sending a message._Default is the JMS Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,jms,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1406643767;Set the delivery mode to use when sending a message._Default is the JMS Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,jms,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1413568470;Set the delivery mode to use when sending a message._Default is the JMS Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,jms,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1434018810;Set the delivery mode to use when sending a message._Default is the JMS Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,jms,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1438003976;Set the delivery mode to use when sending a message._Default is the JMS Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,jms,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1461683397;Set the delivery mode to use when sending a message._Default is the JMS Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,jms,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1492515173;Set the delivery mode to use when sending a message._Default is the JMS Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,jms,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1495868221;Set the delivery mode to use when sending a message._Default is the JMS Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,jms,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1496259743;Set the delivery mode to use when sending a message._Default is the JMS Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,jms,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1496837955;Set the delivery mode to use when sending a message._Default is the JMS Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,jms,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1500448076;Set the delivery mode to use when sending a message._Default is the JMS Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,jms,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1500457438;Set the delivery mode to use when sending a message._Default is the JMS Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,jms,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1502974979;Set the delivery mode to use when sending a message._Default is the JMS Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,jms,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1518567721;Set the delivery mode to use when sending a message._Default is the JMS Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,jms,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1530174524;Set the delivery mode to use when sending a message._Default is the JMS Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,jms,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> public void setDeliveryMode(int deliveryMode);1530174524;Set the delivery mode to use when sending a message._Default is the JMS Message default: "PERSISTENT"._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param deliveryMode the delivery mode to use_@see #isExplicitQosEnabled_@see javax.jms.DeliveryMode#PERSISTENT_@see javax.jms.DeliveryMode#NON_PERSISTENT_@see javax.jms.Message#DEFAULT_DELIVERY_MODE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setDeliveryMode(int deliveryMode) {_		this.deliveryMode = deliveryMode__	};set,the,delivery,mode,to,use,when,sending,a,message,default,is,the,jms,message,default,persistent,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,delivery,mode,the,delivery,mode,to,use,see,is,explicit,qos,enabled,see,javax,jms,delivery,mode,persistent,see,javax,jms,delivery,mode,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,delivery,mode,int,delivery,mode,this,delivery,mode,delivery,mode
JmsTemplate -> @Nullable 	public String getDefaultDestinationName();1496837955;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;@Nullable_	public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;nullable,public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> @Nullable 	public String getDefaultDestinationName();1500448076;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;@Nullable_	public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;nullable,public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> @Nullable 	public String getDefaultDestinationName();1500457438;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;@Nullable_	public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;nullable,public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> @Nullable 	public String getDefaultDestinationName();1502974979;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;@Nullable_	public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;nullable,public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> @Nullable 	public String getDefaultDestinationName();1518567721;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;@Nullable_	public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;nullable,public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> @Nullable 	public String getDefaultDestinationName();1530174524;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;@Nullable_	public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;nullable,public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> @Nullable 	public String getDefaultDestinationName();1530174524;Return the destination name to be used on send/receive operations that_do not have a destination parameter.;@Nullable_	public String getDefaultDestinationName() {_		return (this.defaultDestination instanceof String ? (String) this.defaultDestination : null)__	};return,the,destination,name,to,be,used,on,send,receive,operations,that,do,not,have,a,destination,parameter;nullable,public,string,get,default,destination,name,return,this,default,destination,instanceof,string,string,this,default,destination,null
JmsTemplate -> public long getDeliveryDelay();1364391982;Return the delivery delay to use for send calls (in milliseconds).;public long getDeliveryDelay() {_		return this.deliveryDelay__	};return,the,delivery,delay,to,use,for,send,calls,in,milliseconds;public,long,get,delivery,delay,return,this,delivery,delay
JmsTemplate -> public long getDeliveryDelay();1368482696;Return the delivery delay to use for send calls (in milliseconds).;public long getDeliveryDelay() {_		return this.deliveryDelay__	};return,the,delivery,delay,to,use,for,send,calls,in,milliseconds;public,long,get,delivery,delay,return,this,delivery,delay
JmsTemplate -> public long getDeliveryDelay();1385501137;Return the delivery delay to use for send calls (in milliseconds).;public long getDeliveryDelay() {_		return this.deliveryDelay__	};return,the,delivery,delay,to,use,for,send,calls,in,milliseconds;public,long,get,delivery,delay,return,this,delivery,delay
JmsTemplate -> public long getDeliveryDelay();1390318124;Return the delivery delay to use for send calls (in milliseconds).;public long getDeliveryDelay() {_		return this.deliveryDelay__	};return,the,delivery,delay,to,use,for,send,calls,in,milliseconds;public,long,get,delivery,delay,return,this,delivery,delay
JmsTemplate -> public long getDeliveryDelay();1405696891;Return the delivery delay to use for send calls (in milliseconds).;public long getDeliveryDelay() {_		return this.deliveryDelay__	};return,the,delivery,delay,to,use,for,send,calls,in,milliseconds;public,long,get,delivery,delay,return,this,delivery,delay
JmsTemplate -> public long getDeliveryDelay();1406555570;Return the delivery delay to use for send calls (in milliseconds).;public long getDeliveryDelay() {_		return this.deliveryDelay__	};return,the,delivery,delay,to,use,for,send,calls,in,milliseconds;public,long,get,delivery,delay,return,this,delivery,delay
JmsTemplate -> public long getDeliveryDelay();1406643767;Return the delivery delay to use for send calls (in milliseconds).;public long getDeliveryDelay() {_		return this.deliveryDelay__	};return,the,delivery,delay,to,use,for,send,calls,in,milliseconds;public,long,get,delivery,delay,return,this,delivery,delay
JmsTemplate -> public long getDeliveryDelay();1413568470;Return the delivery delay to use for send calls (in milliseconds).;public long getDeliveryDelay() {_		return this.deliveryDelay__	};return,the,delivery,delay,to,use,for,send,calls,in,milliseconds;public,long,get,delivery,delay,return,this,delivery,delay
JmsTemplate -> public long getDeliveryDelay();1434018810;Return the delivery delay to use for send calls (in milliseconds).;public long getDeliveryDelay() {_		return this.deliveryDelay__	};return,the,delivery,delay,to,use,for,send,calls,in,milliseconds;public,long,get,delivery,delay,return,this,delivery,delay
JmsTemplate -> public long getDeliveryDelay();1438003976;Return the delivery delay to use for send calls (in milliseconds).;public long getDeliveryDelay() {_		return this.deliveryDelay__	};return,the,delivery,delay,to,use,for,send,calls,in,milliseconds;public,long,get,delivery,delay,return,this,delivery,delay
JmsTemplate -> public long getDeliveryDelay();1461683397;Return the delivery delay to use for send calls (in milliseconds).;public long getDeliveryDelay() {_		return this.deliveryDelay__	};return,the,delivery,delay,to,use,for,send,calls,in,milliseconds;public,long,get,delivery,delay,return,this,delivery,delay
JmsTemplate -> public long getDeliveryDelay();1492515173;Return the delivery delay to use for send calls (in milliseconds).;public long getDeliveryDelay() {_		return this.deliveryDelay__	};return,the,delivery,delay,to,use,for,send,calls,in,milliseconds;public,long,get,delivery,delay,return,this,delivery,delay
JmsTemplate -> public long getDeliveryDelay();1495868221;Return the delivery delay to use for send calls (in milliseconds).;public long getDeliveryDelay() {_		return this.deliveryDelay__	};return,the,delivery,delay,to,use,for,send,calls,in,milliseconds;public,long,get,delivery,delay,return,this,delivery,delay
JmsTemplate -> public long getDeliveryDelay();1496259743;Return the delivery delay to use for send calls (in milliseconds).;public long getDeliveryDelay() {_		return this.deliveryDelay__	};return,the,delivery,delay,to,use,for,send,calls,in,milliseconds;public,long,get,delivery,delay,return,this,delivery,delay
JmsTemplate -> public long getDeliveryDelay();1496837955;Return the delivery delay to use for send calls (in milliseconds).;public long getDeliveryDelay() {_		return this.deliveryDelay__	};return,the,delivery,delay,to,use,for,send,calls,in,milliseconds;public,long,get,delivery,delay,return,this,delivery,delay
JmsTemplate -> public long getDeliveryDelay();1500448076;Return the delivery delay to use for send calls (in milliseconds).;public long getDeliveryDelay() {_		return this.deliveryDelay__	};return,the,delivery,delay,to,use,for,send,calls,in,milliseconds;public,long,get,delivery,delay,return,this,delivery,delay
JmsTemplate -> public long getDeliveryDelay();1500457438;Return the delivery delay to use for send calls (in milliseconds).;public long getDeliveryDelay() {_		return this.deliveryDelay__	};return,the,delivery,delay,to,use,for,send,calls,in,milliseconds;public,long,get,delivery,delay,return,this,delivery,delay
JmsTemplate -> public long getDeliveryDelay();1502974979;Return the delivery delay to use for send calls (in milliseconds).;public long getDeliveryDelay() {_		return this.deliveryDelay__	};return,the,delivery,delay,to,use,for,send,calls,in,milliseconds;public,long,get,delivery,delay,return,this,delivery,delay
JmsTemplate -> public long getDeliveryDelay();1518567721;Return the delivery delay to use for send calls (in milliseconds).;public long getDeliveryDelay() {_		return this.deliveryDelay__	};return,the,delivery,delay,to,use,for,send,calls,in,milliseconds;public,long,get,delivery,delay,return,this,delivery,delay
JmsTemplate -> public long getDeliveryDelay();1530174524;Return the delivery delay to use for send calls (in milliseconds).;public long getDeliveryDelay() {_		return this.deliveryDelay__	};return,the,delivery,delay,to,use,for,send,calls,in,milliseconds;public,long,get,delivery,delay,return,this,delivery,delay
JmsTemplate -> public long getDeliveryDelay();1530174524;Return the delivery delay to use for send calls (in milliseconds).;public long getDeliveryDelay() {_		return this.deliveryDelay__	};return,the,delivery,delay,to,use,for,send,calls,in,milliseconds;public,long,get,delivery,delay,return,this,delivery,delay
JmsTemplate -> public void setTimeToLive(long timeToLive);1328020251;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1356735495;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1357119239;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1364391982;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1368482696;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1385501137;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1390318124;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1405696891;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1406555570;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1406643767;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1413568470;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1434018810;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1438003976;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1461683397;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1492515173;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1495868221;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1496259743;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1496837955;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1500448076;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1500457438;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1502974979;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1518567721;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1530174524;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setTimeToLive(long timeToLive);1530174524;Set the time-to-live of the message when sending._<p>Since a default value may be defined administratively,_this is only used when "isExplicitQosEnabled" equals "true"._@param timeToLive the message's lifetime (in milliseconds)_@see #isExplicitQosEnabled_@see javax.jms.Message#DEFAULT_TIME_TO_LIVE_@see javax.jms.MessageProducer#send(javax.jms.Message, int, int, long);public void setTimeToLive(long timeToLive) {_		this.timeToLive = timeToLive__	};set,the,time,to,live,of,the,message,when,sending,p,since,a,default,value,may,be,defined,administratively,this,is,only,used,when,is,explicit,qos,enabled,equals,true,param,time,to,live,the,message,s,lifetime,in,milliseconds,see,is,explicit,qos,enabled,see,javax,jms,message,see,javax,jms,message,producer,send,javax,jms,message,int,int,long;public,void,set,time,to,live,long,time,to,live,this,time,to,live,time,to,live
JmsTemplate -> public void setMessageConverter(MessageConverter messageConverter);1328020251;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> public void setMessageConverter(MessageConverter messageConverter);1356735495;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> public void setMessageConverter(MessageConverter messageConverter);1357119239;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> public void setMessageConverter(MessageConverter messageConverter);1364391982;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> public void setMessageConverter(MessageConverter messageConverter);1368482696;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> public void setMessageConverter(MessageConverter messageConverter);1385501137;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> public void setMessageConverter(MessageConverter messageConverter);1390318124;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> public void setMessageConverter(MessageConverter messageConverter);1405696891;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> public void setMessageConverter(MessageConverter messageConverter);1406555570;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> public void setMessageConverter(MessageConverter messageConverter);1406643767;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> public void setMessageConverter(MessageConverter messageConverter);1413568470;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> public void setMessageConverter(MessageConverter messageConverter);1434018810;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> public void setMessageConverter(MessageConverter messageConverter);1438003976;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> public void setMessageConverter(MessageConverter messageConverter);1461683397;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> public void setMessageConverter(MessageConverter messageConverter);1492515173;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> public void setMessageConverter(MessageConverter messageConverter);1495868221;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> public void setMessageConverter(MessageConverter messageConverter);1496259743;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> public void setMessageConverter(MessageConverter messageConverter);1496837955;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter
JmsTemplate -> public void setMessageConverter(MessageConverter messageConverter);1500448076;Set the message converter for this template. Used to resolve_Object parameters to convertAndSend methods and Object results_from receiveAndConvert methods._<p>The default converter is a SimpleMessageConverter, which is able_to handle BytesMessages, TextMessages and ObjectMessages._@see #convertAndSend_@see #receiveAndConvert_@see org.springframework.jms.support.converter.SimpleMessageConverter;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,message,converter,for,this,template,used,to,resolve,object,parameters,to,convert,and,send,methods,and,object,results,from,receive,and,convert,methods,p,the,default,converter,is,a,simple,message,converter,which,is,able,to,handle,bytes,messages,text,messages,and,object,messages,see,convert,and,send,see,receive,and,convert,see,org,springframework,jms,support,converter,simple,message,converter;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter
