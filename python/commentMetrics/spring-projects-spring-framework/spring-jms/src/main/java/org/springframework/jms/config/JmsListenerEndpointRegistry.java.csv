# id;timestamp;commentText;codeText;commentWords;codeWords
JmsListenerEndpointRegistry -> public MessageListenerContainer getListenerContainer(String id);1405696881;Return the {@link MessageListenerContainer} with the specified id or_{@code null} if no such container exists._@param id the id of the container_@return the container or {@code null} if no container with that id exists_@see JmsListenerEndpoint#getId();public MessageListenerContainer getListenerContainer(String id) {_		Assert.notNull(id, "Container identifier must not be null")__		return this.listenerContainers.get(id)__	};return,the,link,message,listener,container,with,the,specified,id,or,code,null,if,no,such,container,exists,param,id,the,id,of,the,container,return,the,container,or,code,null,if,no,container,with,that,id,exists,see,jms,listener,endpoint,get,id;public,message,listener,container,get,listener,container,string,id,assert,not,null,id,container,identifier,must,not,be,null,return,this,listener,containers,get,id
JmsListenerEndpointRegistry -> public MessageListenerContainer getListenerContainer(String id);1425484795;Return the {@link MessageListenerContainer} with the specified id or_{@code null} if no such container exists._@param id the id of the container_@return the container or {@code null} if no container with that id exists_@see JmsListenerEndpoint#getId();public MessageListenerContainer getListenerContainer(String id) {_		Assert.notNull(id, "Container identifier must not be null")__		return this.listenerContainers.get(id)__	};return,the,link,message,listener,container,with,the,specified,id,or,code,null,if,no,such,container,exists,param,id,the,id,of,the,container,return,the,container,or,code,null,if,no,container,with,that,id,exists,see,jms,listener,endpoint,get,id;public,message,listener,container,get,listener,container,string,id,assert,not,null,id,container,identifier,must,not,be,null,return,this,listener,containers,get,id
JmsListenerEndpointRegistry -> public MessageListenerContainer getListenerContainer(String id);1446477227;Return the {@link MessageListenerContainer} with the specified id or_{@code null} if no such container exists._@param id the id of the container_@return the container or {@code null} if no container with that id exists_@see JmsListenerEndpoint#getId()_@see #getListenerContainerIds();public MessageListenerContainer getListenerContainer(String id) {_		Assert.notNull(id, "Container identifier must not be null")__		return this.listenerContainers.get(id)__	};return,the,link,message,listener,container,with,the,specified,id,or,code,null,if,no,such,container,exists,param,id,the,id,of,the,container,return,the,container,or,code,null,if,no,container,with,that,id,exists,see,jms,listener,endpoint,get,id,see,get,listener,container,ids;public,message,listener,container,get,listener,container,string,id,assert,not,null,id,container,identifier,must,not,be,null,return,this,listener,containers,get,id
JmsListenerEndpointRegistry -> public MessageListenerContainer getListenerContainer(String id);1446492941;Return the {@link MessageListenerContainer} with the specified id or_{@code null} if no such container exists._@param id the id of the container_@return the container or {@code null} if no container with that id exists_@see JmsListenerEndpoint#getId()_@see #getListenerContainerIds();public MessageListenerContainer getListenerContainer(String id) {_		Assert.notNull(id, "Container identifier must not be null")__		return this.listenerContainers.get(id)__	};return,the,link,message,listener,container,with,the,specified,id,or,code,null,if,no,such,container,exists,param,id,the,id,of,the,container,return,the,container,or,code,null,if,no,container,with,that,id,exists,see,jms,listener,endpoint,get,id,see,get,listener,container,ids;public,message,listener,container,get,listener,container,string,id,assert,not,null,id,container,identifier,must,not,be,null,return,this,listener,containers,get,id
JmsListenerEndpointRegistry -> public MessageListenerContainer getListenerContainer(String id);1459786870;Return the {@link MessageListenerContainer} with the specified id or_{@code null} if no such container exists._@param id the id of the container_@return the container or {@code null} if no container with that id exists_@see JmsListenerEndpoint#getId()_@see #getListenerContainerIds();public MessageListenerContainer getListenerContainer(String id) {_		Assert.notNull(id, "Container identifier must not be null")__		return this.listenerContainers.get(id)__	};return,the,link,message,listener,container,with,the,specified,id,or,code,null,if,no,such,container,exists,param,id,the,id,of,the,container,return,the,container,or,code,null,if,no,container,with,that,id,exists,see,jms,listener,endpoint,get,id,see,get,listener,container,ids;public,message,listener,container,get,listener,container,string,id,assert,not,null,id,container,identifier,must,not,be,null,return,this,listener,containers,get,id
JmsListenerEndpointRegistry -> public MessageListenerContainer getListenerContainer(String id);1459795890;Return the {@link MessageListenerContainer} with the specified id or_{@code null} if no such container exists._@param id the id of the container_@return the container or {@code null} if no container with that id exists_@see JmsListenerEndpoint#getId()_@see #getListenerContainerIds();public MessageListenerContainer getListenerContainer(String id) {_		Assert.notNull(id, "Container identifier must not be null")__		return this.listenerContainers.get(id)__	};return,the,link,message,listener,container,with,the,specified,id,or,code,null,if,no,such,container,exists,param,id,the,id,of,the,container,return,the,container,or,code,null,if,no,container,with,that,id,exists,see,jms,listener,endpoint,get,id,see,get,listener,container,ids;public,message,listener,container,get,listener,container,string,id,assert,not,null,id,container,identifier,must,not,be,null,return,this,listener,containers,get,id
JmsListenerEndpointRegistry -> public MessageListenerContainer getListenerContainer(String id);1467730834;Return the {@link MessageListenerContainer} with the specified id or_{@code null} if no such container exists._@param id the id of the container_@return the container or {@code null} if no container with that id exists_@see JmsListenerEndpoint#getId()_@see #getListenerContainerIds();public MessageListenerContainer getListenerContainer(String id) {_		Assert.notNull(id, "Container identifier must not be null")__		return this.listenerContainers.get(id)__	};return,the,link,message,listener,container,with,the,specified,id,or,code,null,if,no,such,container,exists,param,id,the,id,of,the,container,return,the,container,or,code,null,if,no,container,with,that,id,exists,see,jms,listener,endpoint,get,id,see,get,listener,container,ids;public,message,listener,container,get,listener,container,string,id,assert,not,null,id,container,identifier,must,not,be,null,return,this,listener,containers,get,id
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory, 			boolean startImmediately);1425484795;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._<p>The {@code startImmediately} flag determines if the container should be_started immediately._@param endpoint the endpoint to add_@param factory the listener factory to use_@param startImmediately start the container immediately if necessary_@see #getListenerContainers()_@see #getListenerContainer(String);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory,_			boolean startImmediately) {__		Assert.notNull(endpoint, "Endpoint must not be null")__		Assert.notNull(factory, "Factory must not be null")___		String id = endpoint.getId()__		Assert.notNull(id, "Endpoint id must not be null")__		synchronized (this.listenerContainers) {_			Assert.state(!this.listenerContainers.containsKey(id),_					"Another endpoint is already registered with id '" + id + "'")__			MessageListenerContainer container = createListenerContainer(endpoint, factory)__			this.listenerContainers.put(id, container)__			if (startImmediately) {_				startIfNecessary(container)__			}_		}_	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,p,the,code,start,immediately,flag,determines,if,the,container,should,be,started,immediately,param,endpoint,the,endpoint,to,add,param,factory,the,listener,factory,to,use,param,start,immediately,start,the,container,immediately,if,necessary,see,get,listener,containers,see,get,listener,container,string;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,boolean,start,immediately,assert,not,null,endpoint,endpoint,must,not,be,null,assert,not,null,factory,factory,must,not,be,null,string,id,endpoint,get,id,assert,not,null,id,endpoint,id,must,not,be,null,synchronized,this,listener,containers,assert,state,this,listener,containers,contains,key,id,another,endpoint,is,already,registered,with,id,id,message,listener,container,container,create,listener,container,endpoint,factory,this,listener,containers,put,id,container,if,start,immediately,start,if,necessary,container
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory, 			boolean startImmediately);1446477227;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._<p>The {@code startImmediately} flag determines if the container should be_started immediately._@param endpoint the endpoint to add_@param factory the listener factory to use_@param startImmediately start the container immediately if necessary_@see #getListenerContainers()_@see #getListenerContainer(String);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory,_			boolean startImmediately) {__		Assert.notNull(endpoint, "Endpoint must not be null")__		Assert.notNull(factory, "Factory must not be null")___		String id = endpoint.getId()__		Assert.notNull(id, "Endpoint id must not be null")__		synchronized (this.listenerContainers) {_			Assert.state(!this.listenerContainers.containsKey(id),_					"Another endpoint is already registered with id '" + id + "'")__			MessageListenerContainer container = createListenerContainer(endpoint, factory)__			this.listenerContainers.put(id, container)__			if (startImmediately) {_				startIfNecessary(container)__			}_		}_	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,p,the,code,start,immediately,flag,determines,if,the,container,should,be,started,immediately,param,endpoint,the,endpoint,to,add,param,factory,the,listener,factory,to,use,param,start,immediately,start,the,container,immediately,if,necessary,see,get,listener,containers,see,get,listener,container,string;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,boolean,start,immediately,assert,not,null,endpoint,endpoint,must,not,be,null,assert,not,null,factory,factory,must,not,be,null,string,id,endpoint,get,id,assert,not,null,id,endpoint,id,must,not,be,null,synchronized,this,listener,containers,assert,state,this,listener,containers,contains,key,id,another,endpoint,is,already,registered,with,id,id,message,listener,container,container,create,listener,container,endpoint,factory,this,listener,containers,put,id,container,if,start,immediately,start,if,necessary,container
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory, 			boolean startImmediately);1446492941;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._<p>The {@code startImmediately} flag determines if the container should be_started immediately._@param endpoint the endpoint to add_@param factory the listener factory to use_@param startImmediately start the container immediately if necessary_@see #getListenerContainers()_@see #getListenerContainer(String);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory,_			boolean startImmediately) {__		Assert.notNull(endpoint, "Endpoint must not be null")__		Assert.notNull(factory, "Factory must not be null")___		String id = endpoint.getId()__		Assert.notNull(id, "Endpoint id must not be null")__		synchronized (this.listenerContainers) {_			Assert.state(!this.listenerContainers.containsKey(id),_					"Another endpoint is already registered with id '" + id + "'")__			MessageListenerContainer container = createListenerContainer(endpoint, factory)__			this.listenerContainers.put(id, container)__			if (startImmediately) {_				startIfNecessary(container)__			}_		}_	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,p,the,code,start,immediately,flag,determines,if,the,container,should,be,started,immediately,param,endpoint,the,endpoint,to,add,param,factory,the,listener,factory,to,use,param,start,immediately,start,the,container,immediately,if,necessary,see,get,listener,containers,see,get,listener,container,string;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,boolean,start,immediately,assert,not,null,endpoint,endpoint,must,not,be,null,assert,not,null,factory,factory,must,not,be,null,string,id,endpoint,get,id,assert,not,null,id,endpoint,id,must,not,be,null,synchronized,this,listener,containers,assert,state,this,listener,containers,contains,key,id,another,endpoint,is,already,registered,with,id,id,message,listener,container,container,create,listener,container,endpoint,factory,this,listener,containers,put,id,container,if,start,immediately,start,if,necessary,container
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory, 			boolean startImmediately);1459786870;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._<p>The {@code startImmediately} flag determines if the container should be_started immediately._@param endpoint the endpoint to add_@param factory the listener factory to use_@param startImmediately start the container immediately if necessary_@see #getListenerContainers()_@see #getListenerContainer(String);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory,_			boolean startImmediately) {__		Assert.notNull(endpoint, "Endpoint must not be null")__		Assert.notNull(factory, "Factory must not be null")___		String id = endpoint.getId()__		Assert.notNull(id, "Endpoint id must not be null")__		synchronized (this.listenerContainers) {_			Assert.state(!this.listenerContainers.containsKey(id),_					"Another endpoint is already registered with id '" + id + "'")__			MessageListenerContainer container = createListenerContainer(endpoint, factory)__			this.listenerContainers.put(id, container)__			if (startImmediately) {_				startIfNecessary(container)__			}_		}_	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,p,the,code,start,immediately,flag,determines,if,the,container,should,be,started,immediately,param,endpoint,the,endpoint,to,add,param,factory,the,listener,factory,to,use,param,start,immediately,start,the,container,immediately,if,necessary,see,get,listener,containers,see,get,listener,container,string;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,boolean,start,immediately,assert,not,null,endpoint,endpoint,must,not,be,null,assert,not,null,factory,factory,must,not,be,null,string,id,endpoint,get,id,assert,not,null,id,endpoint,id,must,not,be,null,synchronized,this,listener,containers,assert,state,this,listener,containers,contains,key,id,another,endpoint,is,already,registered,with,id,id,message,listener,container,container,create,listener,container,endpoint,factory,this,listener,containers,put,id,container,if,start,immediately,start,if,necessary,container
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory, 			boolean startImmediately);1459795890;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._<p>The {@code startImmediately} flag determines if the container should be_started immediately._@param endpoint the endpoint to add_@param factory the listener factory to use_@param startImmediately start the container immediately if necessary_@see #getListenerContainers()_@see #getListenerContainer(String);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory,_			boolean startImmediately) {__		Assert.notNull(endpoint, "Endpoint must not be null")__		Assert.notNull(factory, "Factory must not be null")___		String id = endpoint.getId()__		Assert.notNull(id, "Endpoint id must not be null")__		synchronized (this.listenerContainers) {_			if (this.listenerContainers.containsKey(id)) {_				throw new IllegalStateException("Another endpoint is already registered with id '" + id + "'")__			}_			MessageListenerContainer container = createListenerContainer(endpoint, factory)__			this.listenerContainers.put(id, container)__			if (startImmediately) {_				startIfNecessary(container)__			}_		}_	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,p,the,code,start,immediately,flag,determines,if,the,container,should,be,started,immediately,param,endpoint,the,endpoint,to,add,param,factory,the,listener,factory,to,use,param,start,immediately,start,the,container,immediately,if,necessary,see,get,listener,containers,see,get,listener,container,string;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,boolean,start,immediately,assert,not,null,endpoint,endpoint,must,not,be,null,assert,not,null,factory,factory,must,not,be,null,string,id,endpoint,get,id,assert,not,null,id,endpoint,id,must,not,be,null,synchronized,this,listener,containers,if,this,listener,containers,contains,key,id,throw,new,illegal,state,exception,another,endpoint,is,already,registered,with,id,id,message,listener,container,container,create,listener,container,endpoint,factory,this,listener,containers,put,id,container,if,start,immediately,start,if,necessary,container
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory, 			boolean startImmediately);1467730834;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._<p>The {@code startImmediately} flag determines if the container should be_started immediately._@param endpoint the endpoint to add_@param factory the listener factory to use_@param startImmediately start the container immediately if necessary_@see #getListenerContainers()_@see #getListenerContainer(String);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory,_			boolean startImmediately) {__		Assert.notNull(endpoint, "Endpoint must not be null")__		Assert.notNull(factory, "Factory must not be null")___		String id = endpoint.getId()__		Assert.notNull(id, "Endpoint id must not be null")__		synchronized (this.listenerContainers) {_			if (this.listenerContainers.containsKey(id)) {_				throw new IllegalStateException("Another endpoint is already registered with id '" + id + "'")__			}_			MessageListenerContainer container = createListenerContainer(endpoint, factory)__			this.listenerContainers.put(id, container)__			if (startImmediately) {_				startIfNecessary(container)__			}_		}_	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,p,the,code,start,immediately,flag,determines,if,the,container,should,be,started,immediately,param,endpoint,the,endpoint,to,add,param,factory,the,listener,factory,to,use,param,start,immediately,start,the,container,immediately,if,necessary,see,get,listener,containers,see,get,listener,container,string;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,boolean,start,immediately,assert,not,null,endpoint,endpoint,must,not,be,null,assert,not,null,factory,factory,must,not,be,null,string,id,endpoint,get,id,assert,not,null,id,endpoint,id,must,not,be,null,synchronized,this,listener,containers,if,this,listener,containers,contains,key,id,throw,new,illegal,state,exception,another,endpoint,is,already,registered,with,id,id,message,listener,container,container,create,listener,container,endpoint,factory,this,listener,containers,put,id,container,if,start,immediately,start,if,necessary,container
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory, 			boolean startImmediately);1495868221;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._<p>The {@code startImmediately} flag determines if the container should be_started immediately._@param endpoint the endpoint to add_@param factory the listener factory to use_@param startImmediately start the container immediately if necessary_@see #getListenerContainers()_@see #getListenerContainer(String);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory,_			boolean startImmediately) {__		Assert.notNull(endpoint, "Endpoint must not be null")__		Assert.notNull(factory, "Factory must not be null")___		String id = endpoint.getId()__		Assert.notNull(id, "Endpoint id must not be null")__		synchronized (this.listenerContainers) {_			if (this.listenerContainers.containsKey(id)) {_				throw new IllegalStateException("Another endpoint is already registered with id '" + id + "'")__			}_			MessageListenerContainer container = createListenerContainer(endpoint, factory)__			this.listenerContainers.put(id, container)__			if (startImmediately) {_				startIfNecessary(container)__			}_		}_	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,p,the,code,start,immediately,flag,determines,if,the,container,should,be,started,immediately,param,endpoint,the,endpoint,to,add,param,factory,the,listener,factory,to,use,param,start,immediately,start,the,container,immediately,if,necessary,see,get,listener,containers,see,get,listener,container,string;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,boolean,start,immediately,assert,not,null,endpoint,endpoint,must,not,be,null,assert,not,null,factory,factory,must,not,be,null,string,id,endpoint,get,id,assert,not,null,id,endpoint,id,must,not,be,null,synchronized,this,listener,containers,if,this,listener,containers,contains,key,id,throw,new,illegal,state,exception,another,endpoint,is,already,registered,with,id,id,message,listener,container,container,create,listener,container,endpoint,factory,this,listener,containers,put,id,container,if,start,immediately,start,if,necessary,container
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory, 			boolean startImmediately);1498780456;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._<p>The {@code startImmediately} flag determines if the container should be_started immediately._@param endpoint the endpoint to add_@param factory the listener factory to use_@param startImmediately start the container immediately if necessary_@see #getListenerContainers()_@see #getListenerContainer(String);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory,_			boolean startImmediately) {__		Assert.notNull(endpoint, "Endpoint must not be null")__		Assert.notNull(factory, "Factory must not be null")__		String id = endpoint.getId()__		Assert.hasText(id, "Endpoint id must be set")___		synchronized (this.listenerContainers) {_			if (this.listenerContainers.containsKey(id)) {_				throw new IllegalStateException("Another endpoint is already registered with id '" + id + "'")__			}_			MessageListenerContainer container = createListenerContainer(endpoint, factory)__			this.listenerContainers.put(id, container)__			if (startImmediately) {_				startIfNecessary(container)__			}_		}_	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,p,the,code,start,immediately,flag,determines,if,the,container,should,be,started,immediately,param,endpoint,the,endpoint,to,add,param,factory,the,listener,factory,to,use,param,start,immediately,start,the,container,immediately,if,necessary,see,get,listener,containers,see,get,listener,container,string;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,boolean,start,immediately,assert,not,null,endpoint,endpoint,must,not,be,null,assert,not,null,factory,factory,must,not,be,null,string,id,endpoint,get,id,assert,has,text,id,endpoint,id,must,be,set,synchronized,this,listener,containers,if,this,listener,containers,contains,key,id,throw,new,illegal,state,exception,another,endpoint,is,already,registered,with,id,id,message,listener,container,container,create,listener,container,endpoint,factory,this,listener,containers,put,id,container,if,start,immediately,start,if,necessary,container
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory, 			boolean startImmediately);1530174524;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._<p>The {@code startImmediately} flag determines if the container should be_started immediately._@param endpoint the endpoint to add_@param factory the listener factory to use_@param startImmediately start the container immediately if necessary_@see #getListenerContainers()_@see #getListenerContainer(String);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory,_			boolean startImmediately) {__		Assert.notNull(endpoint, "Endpoint must not be null")__		Assert.notNull(factory, "Factory must not be null")__		String id = endpoint.getId()__		Assert.hasText(id, "Endpoint id must be set")___		synchronized (this.listenerContainers) {_			if (this.listenerContainers.containsKey(id)) {_				throw new IllegalStateException("Another endpoint is already registered with id '" + id + "'")__			}_			MessageListenerContainer container = createListenerContainer(endpoint, factory)__			this.listenerContainers.put(id, container)__			if (startImmediately) {_				startIfNecessary(container)__			}_		}_	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,p,the,code,start,immediately,flag,determines,if,the,container,should,be,started,immediately,param,endpoint,the,endpoint,to,add,param,factory,the,listener,factory,to,use,param,start,immediately,start,the,container,immediately,if,necessary,see,get,listener,containers,see,get,listener,container,string;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,boolean,start,immediately,assert,not,null,endpoint,endpoint,must,not,be,null,assert,not,null,factory,factory,must,not,be,null,string,id,endpoint,get,id,assert,has,text,id,endpoint,id,must,be,set,synchronized,this,listener,containers,if,this,listener,containers,contains,key,id,throw,new,illegal,state,exception,another,endpoint,is,already,registered,with,id,id,message,listener,container,container,create,listener,container,endpoint,factory,this,listener,containers,put,id,container,if,start,immediately,start,if,necessary,container
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory, 			boolean startImmediately);1534414082;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._<p>The {@code startImmediately} flag determines if the container should be_started immediately._@param endpoint the endpoint to add_@param factory the listener factory to use_@param startImmediately start the container immediately if necessary_@see #getListenerContainers()_@see #getListenerContainer(String);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory,_			boolean startImmediately) {__		Assert.notNull(endpoint, "Endpoint must not be null")__		Assert.notNull(factory, "Factory must not be null")__		String id = endpoint.getId()__		Assert.hasText(id, "Endpoint id must be set")___		synchronized (this.listenerContainers) {_			if (this.listenerContainers.containsKey(id)) {_				throw new IllegalStateException("Another endpoint is already registered with id '" + id + "'")__			}_			MessageListenerContainer container = createListenerContainer(endpoint, factory)__			this.listenerContainers.put(id, container)__			if (startImmediately) {_				startIfNecessary(container)__			}_		}_	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,p,the,code,start,immediately,flag,determines,if,the,container,should,be,started,immediately,param,endpoint,the,endpoint,to,add,param,factory,the,listener,factory,to,use,param,start,immediately,start,the,container,immediately,if,necessary,see,get,listener,containers,see,get,listener,container,string;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,boolean,start,immediately,assert,not,null,endpoint,endpoint,must,not,be,null,assert,not,null,factory,factory,must,not,be,null,string,id,endpoint,get,id,assert,has,text,id,endpoint,id,must,be,set,synchronized,this,listener,containers,if,this,listener,containers,contains,key,id,throw,new,illegal,state,exception,another,endpoint,is,already,registered,with,id,id,message,listener,container,container,create,listener,container,endpoint,factory,this,listener,containers,put,id,container,if,start,immediately,start,if,necessary,container
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory, 			boolean startImmediately);1534417347;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._<p>The {@code startImmediately} flag determines if the container should be_started immediately._@param endpoint the endpoint to add_@param factory the listener factory to use_@param startImmediately start the container immediately if necessary_@see #getListenerContainers()_@see #getListenerContainer(String);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory,_			boolean startImmediately) {__		Assert.notNull(endpoint, "Endpoint must not be null")__		Assert.notNull(factory, "Factory must not be null")__		String id = endpoint.getId()__		Assert.hasText(id, "Endpoint id must be set")___		synchronized (this.listenerContainers) {_			if (this.listenerContainers.containsKey(id)) {_				throw new IllegalStateException("Another endpoint is already registered with id '" + id + "'")__			}_			MessageListenerContainer container = createListenerContainer(endpoint, factory)__			this.listenerContainers.put(id, container)__			if (startImmediately) {_				startIfNecessary(container)__			}_		}_	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,p,the,code,start,immediately,flag,determines,if,the,container,should,be,started,immediately,param,endpoint,the,endpoint,to,add,param,factory,the,listener,factory,to,use,param,start,immediately,start,the,container,immediately,if,necessary,see,get,listener,containers,see,get,listener,container,string;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,boolean,start,immediately,assert,not,null,endpoint,endpoint,must,not,be,null,assert,not,null,factory,factory,must,not,be,null,string,id,endpoint,get,id,assert,has,text,id,endpoint,id,must,be,set,synchronized,this,listener,containers,if,this,listener,containers,contains,key,id,throw,new,illegal,state,exception,another,endpoint,is,already,registered,with,id,id,message,listener,container,container,create,listener,container,endpoint,factory,this,listener,containers,put,id,container,if,start,immediately,start,if,necessary,container
JmsListenerEndpointRegistry -> private void startIfNecessary(MessageListenerContainer listenerContainer);1459786870;Start the specified {@link MessageListenerContainer} if it should be started_on startup or when start is called explicitly after startup._@see MessageListenerContainer#isAutoStartup();private void startIfNecessary(MessageListenerContainer listenerContainer) {_		if (this.contextRefreshed || listenerContainer.isAutoStartup()) {_			listenerContainer.start()__		}_	};start,the,specified,link,message,listener,container,if,it,should,be,started,on,startup,or,when,start,is,called,explicitly,after,startup,see,message,listener,container,is,auto,startup;private,void,start,if,necessary,message,listener,container,listener,container,if,this,context,refreshed,listener,container,is,auto,startup,listener,container,start
JmsListenerEndpointRegistry -> private void startIfNecessary(MessageListenerContainer listenerContainer);1459795890;Start the specified {@link MessageListenerContainer} if it should be started_on startup or when start is called explicitly after startup._@see MessageListenerContainer#isAutoStartup();private void startIfNecessary(MessageListenerContainer listenerContainer) {_		if (this.contextRefreshed || listenerContainer.isAutoStartup()) {_			listenerContainer.start()__		}_	};start,the,specified,link,message,listener,container,if,it,should,be,started,on,startup,or,when,start,is,called,explicitly,after,startup,see,message,listener,container,is,auto,startup;private,void,start,if,necessary,message,listener,container,listener,container,if,this,context,refreshed,listener,container,is,auto,startup,listener,container,start
JmsListenerEndpointRegistry -> private void startIfNecessary(MessageListenerContainer listenerContainer);1467730834;Start the specified {@link MessageListenerContainer} if it should be started_on startup or when start is called explicitly after startup._@see MessageListenerContainer#isAutoStartup();private void startIfNecessary(MessageListenerContainer listenerContainer) {_		if (this.contextRefreshed || listenerContainer.isAutoStartup()) {_			listenerContainer.start()__		}_	};start,the,specified,link,message,listener,container,if,it,should,be,started,on,startup,or,when,start,is,called,explicitly,after,startup,see,message,listener,container,is,auto,startup;private,void,start,if,necessary,message,listener,container,listener,container,if,this,context,refreshed,listener,container,is,auto,startup,listener,container,start
JmsListenerEndpointRegistry -> private void startIfNecessary(MessageListenerContainer listenerContainer);1495868221;Start the specified {@link MessageListenerContainer} if it should be started_on startup or when start is called explicitly after startup._@see MessageListenerContainer#isAutoStartup();private void startIfNecessary(MessageListenerContainer listenerContainer) {_		if (this.contextRefreshed || listenerContainer.isAutoStartup()) {_			listenerContainer.start()__		}_	};start,the,specified,link,message,listener,container,if,it,should,be,started,on,startup,or,when,start,is,called,explicitly,after,startup,see,message,listener,container,is,auto,startup;private,void,start,if,necessary,message,listener,container,listener,container,if,this,context,refreshed,listener,container,is,auto,startup,listener,container,start
JmsListenerEndpointRegistry -> private void startIfNecessary(MessageListenerContainer listenerContainer);1498780456;Start the specified {@link MessageListenerContainer} if it should be started_on startup or when start is called explicitly after startup._@see MessageListenerContainer#isAutoStartup();private void startIfNecessary(MessageListenerContainer listenerContainer) {_		if (this.contextRefreshed || listenerContainer.isAutoStartup()) {_			listenerContainer.start()__		}_	};start,the,specified,link,message,listener,container,if,it,should,be,started,on,startup,or,when,start,is,called,explicitly,after,startup,see,message,listener,container,is,auto,startup;private,void,start,if,necessary,message,listener,container,listener,container,if,this,context,refreshed,listener,container,is,auto,startup,listener,container,start
JmsListenerEndpointRegistry -> private void startIfNecessary(MessageListenerContainer listenerContainer);1530174524;Start the specified {@link MessageListenerContainer} if it should be started_on startup or when start is called explicitly after startup._@see MessageListenerContainer#isAutoStartup();private void startIfNecessary(MessageListenerContainer listenerContainer) {_		if (this.contextRefreshed || listenerContainer.isAutoStartup()) {_			listenerContainer.start()__		}_	};start,the,specified,link,message,listener,container,if,it,should,be,started,on,startup,or,when,start,is,called,explicitly,after,startup,see,message,listener,container,is,auto,startup;private,void,start,if,necessary,message,listener,container,listener,container,if,this,context,refreshed,listener,container,is,auto,startup,listener,container,start
JmsListenerEndpointRegistry -> private void startIfNecessary(MessageListenerContainer listenerContainer);1534414082;Start the specified {@link MessageListenerContainer} if it should be started_on startup or when start is called explicitly after startup._@see MessageListenerContainer#isAutoStartup();private void startIfNecessary(MessageListenerContainer listenerContainer) {_		if (this.contextRefreshed || listenerContainer.isAutoStartup()) {_			listenerContainer.start()__		}_	};start,the,specified,link,message,listener,container,if,it,should,be,started,on,startup,or,when,start,is,called,explicitly,after,startup,see,message,listener,container,is,auto,startup;private,void,start,if,necessary,message,listener,container,listener,container,if,this,context,refreshed,listener,container,is,auto,startup,listener,container,start
JmsListenerEndpointRegistry -> private void startIfNecessary(MessageListenerContainer listenerContainer);1534417347;Start the specified {@link MessageListenerContainer} if it should be started_on startup or when start is called explicitly after startup._@see MessageListenerContainer#isAutoStartup();private void startIfNecessary(MessageListenerContainer listenerContainer) {_		if (this.contextRefreshed || listenerContainer.isAutoStartup()) {_			listenerContainer.start()__		}_	};start,the,specified,link,message,listener,container,if,it,should,be,started,on,startup,or,when,start,is,called,explicitly,after,startup,see,message,listener,container,is,auto,startup;private,void,start,if,necessary,message,listener,container,listener,container,if,this,context,refreshed,listener,container,is,auto,startup,listener,container,start
JmsListenerEndpointRegistry -> private static void startIfNecessary(MessageListenerContainer listenerContainer);1425484795;Start the specified {@link MessageListenerContainer} if it should be started_on startup._@see MessageListenerContainer#isAutoStartup();private static void startIfNecessary(MessageListenerContainer listenerContainer) {_		if (listenerContainer.isAutoStartup()) {_			listenerContainer.start()__		}_	};start,the,specified,link,message,listener,container,if,it,should,be,started,on,startup,see,message,listener,container,is,auto,startup;private,static,void,start,if,necessary,message,listener,container,listener,container,if,listener,container,is,auto,startup,listener,container,start
JmsListenerEndpointRegistry -> private static void startIfNecessary(MessageListenerContainer listenerContainer);1446477227;Start the specified {@link MessageListenerContainer} if it should be started_on startup._@see MessageListenerContainer#isAutoStartup();private static void startIfNecessary(MessageListenerContainer listenerContainer) {_		if (listenerContainer.isAutoStartup()) {_			listenerContainer.start()__		}_	};start,the,specified,link,message,listener,container,if,it,should,be,started,on,startup,see,message,listener,container,is,auto,startup;private,static,void,start,if,necessary,message,listener,container,listener,container,if,listener,container,is,auto,startup,listener,container,start
JmsListenerEndpointRegistry -> private static void startIfNecessary(MessageListenerContainer listenerContainer);1446492941;Start the specified {@link MessageListenerContainer} if it should be started_on startup._@see MessageListenerContainer#isAutoStartup();private static void startIfNecessary(MessageListenerContainer listenerContainer) {_		if (listenerContainer.isAutoStartup()) {_			listenerContainer.start()__		}_	};start,the,specified,link,message,listener,container,if,it,should,be,started,on,startup,see,message,listener,container,is,auto,startup;private,static,void,start,if,necessary,message,listener,container,listener,container,if,listener,container,is,auto,startup,listener,container,start
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory);1405696881;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._@param endpoint the endpoint to add_@see #getListenerContainers()_@see #getListenerContainer(String);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory) {_		Assert.notNull(endpoint, "Endpoint must not be null")__		Assert.notNull(factory, "Factory must not be null")___		String id = endpoint.getId()__		Assert.notNull(id, "Endpoint id must not be null")__		Assert.state(!this.listenerContainers.containsKey(id),_				"Another endpoint is already registered with id '" + id + "'")___		MessageListenerContainer container = createListenerContainer(endpoint, factory)__		this.listenerContainers.put(id, container)__	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,param,endpoint,the,endpoint,to,add,see,get,listener,containers,see,get,listener,container,string;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,assert,not,null,endpoint,endpoint,must,not,be,null,assert,not,null,factory,factory,must,not,be,null,string,id,endpoint,get,id,assert,not,null,id,endpoint,id,must,not,be,null,assert,state,this,listener,containers,contains,key,id,another,endpoint,is,already,registered,with,id,id,message,listener,container,container,create,listener,container,endpoint,factory,this,listener,containers,put,id,container
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory);1425484795;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._@param endpoint the endpoint to add_@param factory the listener factory to use_@see #registerListenerContainer(JmsListenerEndpoint, JmsListenerContainerFactory, boolean);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory) {_		registerListenerContainer(endpoint, factory, false)__	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,param,endpoint,the,endpoint,to,add,param,factory,the,listener,factory,to,use,see,register,listener,container,jms,listener,endpoint,jms,listener,container,factory,boolean;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,register,listener,container,endpoint,factory,false
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory);1446477227;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._@param endpoint the endpoint to add_@param factory the listener factory to use_@see #registerListenerContainer(JmsListenerEndpoint, JmsListenerContainerFactory, boolean);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory) {_		registerListenerContainer(endpoint, factory, false)__	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,param,endpoint,the,endpoint,to,add,param,factory,the,listener,factory,to,use,see,register,listener,container,jms,listener,endpoint,jms,listener,container,factory,boolean;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,register,listener,container,endpoint,factory,false
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory);1446492941;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._@param endpoint the endpoint to add_@param factory the listener factory to use_@see #registerListenerContainer(JmsListenerEndpoint, JmsListenerContainerFactory, boolean);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory) {_		registerListenerContainer(endpoint, factory, false)__	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,param,endpoint,the,endpoint,to,add,param,factory,the,listener,factory,to,use,see,register,listener,container,jms,listener,endpoint,jms,listener,container,factory,boolean;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,register,listener,container,endpoint,factory,false
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory);1459786870;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._@param endpoint the endpoint to add_@param factory the listener factory to use_@see #registerListenerContainer(JmsListenerEndpoint, JmsListenerContainerFactory, boolean);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory) {_		registerListenerContainer(endpoint, factory, false)__	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,param,endpoint,the,endpoint,to,add,param,factory,the,listener,factory,to,use,see,register,listener,container,jms,listener,endpoint,jms,listener,container,factory,boolean;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,register,listener,container,endpoint,factory,false
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory);1459795890;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._@param endpoint the endpoint to add_@param factory the listener factory to use_@see #registerListenerContainer(JmsListenerEndpoint, JmsListenerContainerFactory, boolean);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory) {_		registerListenerContainer(endpoint, factory, false)__	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,param,endpoint,the,endpoint,to,add,param,factory,the,listener,factory,to,use,see,register,listener,container,jms,listener,endpoint,jms,listener,container,factory,boolean;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,register,listener,container,endpoint,factory,false
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory);1467730834;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._@param endpoint the endpoint to add_@param factory the listener factory to use_@see #registerListenerContainer(JmsListenerEndpoint, JmsListenerContainerFactory, boolean);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory) {_		registerListenerContainer(endpoint, factory, false)__	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,param,endpoint,the,endpoint,to,add,param,factory,the,listener,factory,to,use,see,register,listener,container,jms,listener,endpoint,jms,listener,container,factory,boolean;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,register,listener,container,endpoint,factory,false
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory);1495868221;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._@param endpoint the endpoint to add_@param factory the listener factory to use_@see #registerListenerContainer(JmsListenerEndpoint, JmsListenerContainerFactory, boolean);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory) {_		registerListenerContainer(endpoint, factory, false)__	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,param,endpoint,the,endpoint,to,add,param,factory,the,listener,factory,to,use,see,register,listener,container,jms,listener,endpoint,jms,listener,container,factory,boolean;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,register,listener,container,endpoint,factory,false
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory);1498780456;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._@param endpoint the endpoint to add_@param factory the listener factory to use_@see #registerListenerContainer(JmsListenerEndpoint, JmsListenerContainerFactory, boolean);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory) {_		registerListenerContainer(endpoint, factory, false)__	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,param,endpoint,the,endpoint,to,add,param,factory,the,listener,factory,to,use,see,register,listener,container,jms,listener,endpoint,jms,listener,container,factory,boolean;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,register,listener,container,endpoint,factory,false
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory);1530174524;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._@param endpoint the endpoint to add_@param factory the listener factory to use_@see #registerListenerContainer(JmsListenerEndpoint, JmsListenerContainerFactory, boolean);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory) {_		registerListenerContainer(endpoint, factory, false)__	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,param,endpoint,the,endpoint,to,add,param,factory,the,listener,factory,to,use,see,register,listener,container,jms,listener,endpoint,jms,listener,container,factory,boolean;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,register,listener,container,endpoint,factory,false
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory);1534414082;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._@param endpoint the endpoint to add_@param factory the listener factory to use_@see #registerListenerContainer(JmsListenerEndpoint, JmsListenerContainerFactory, boolean);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory) {_		registerListenerContainer(endpoint, factory, false)__	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,param,endpoint,the,endpoint,to,add,param,factory,the,listener,factory,to,use,see,register,listener,container,jms,listener,endpoint,jms,listener,container,factory,boolean;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,register,listener,container,endpoint,factory,false
JmsListenerEndpointRegistry -> public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory);1534417347;Create a message listener container for the given {@link JmsListenerEndpoint}._<p>This create the necessary infrastructure to honor that endpoint_with regards to its configuration._@param endpoint the endpoint to add_@param factory the listener factory to use_@see #registerListenerContainer(JmsListenerEndpoint, JmsListenerContainerFactory, boolean);public void registerListenerContainer(JmsListenerEndpoint endpoint, JmsListenerContainerFactory<?> factory) {_		registerListenerContainer(endpoint, factory, false)__	};create,a,message,listener,container,for,the,given,link,jms,listener,endpoint,p,this,create,the,necessary,infrastructure,to,honor,that,endpoint,with,regards,to,its,configuration,param,endpoint,the,endpoint,to,add,param,factory,the,listener,factory,to,use,see,register,listener,container,jms,listener,endpoint,jms,listener,container,factory,boolean;public,void,register,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,register,listener,container,endpoint,factory,false
JmsListenerEndpointRegistry -> public Collection<MessageListenerContainer> getListenerContainers();1405696881;Return the managed {@link MessageListenerContainer} instance(s).;public Collection<MessageListenerContainer> getListenerContainers() {_		return Collections.unmodifiableCollection(this.listenerContainers.values())__	};return,the,managed,link,message,listener,container,instance,s;public,collection,message,listener,container,get,listener,containers,return,collections,unmodifiable,collection,this,listener,containers,values
JmsListenerEndpointRegistry -> public Collection<MessageListenerContainer> getListenerContainers();1425484795;Return the managed {@link MessageListenerContainer} instance(s).;public Collection<MessageListenerContainer> getListenerContainers() {_		return Collections.unmodifiableCollection(this.listenerContainers.values())__	};return,the,managed,link,message,listener,container,instance,s;public,collection,message,listener,container,get,listener,containers,return,collections,unmodifiable,collection,this,listener,containers,values
JmsListenerEndpointRegistry -> public Collection<MessageListenerContainer> getListenerContainers();1446477227;Return the managed {@link MessageListenerContainer} instance(s).;public Collection<MessageListenerContainer> getListenerContainers() {_		return Collections.unmodifiableCollection(this.listenerContainers.values())__	};return,the,managed,link,message,listener,container,instance,s;public,collection,message,listener,container,get,listener,containers,return,collections,unmodifiable,collection,this,listener,containers,values
JmsListenerEndpointRegistry -> public Collection<MessageListenerContainer> getListenerContainers();1446492941;Return the managed {@link MessageListenerContainer} instance(s).;public Collection<MessageListenerContainer> getListenerContainers() {_		return Collections.unmodifiableCollection(this.listenerContainers.values())__	};return,the,managed,link,message,listener,container,instance,s;public,collection,message,listener,container,get,listener,containers,return,collections,unmodifiable,collection,this,listener,containers,values
JmsListenerEndpointRegistry -> public Collection<MessageListenerContainer> getListenerContainers();1459786870;Return the managed {@link MessageListenerContainer} instance(s).;public Collection<MessageListenerContainer> getListenerContainers() {_		return Collections.unmodifiableCollection(this.listenerContainers.values())__	};return,the,managed,link,message,listener,container,instance,s;public,collection,message,listener,container,get,listener,containers,return,collections,unmodifiable,collection,this,listener,containers,values
JmsListenerEndpointRegistry -> public Collection<MessageListenerContainer> getListenerContainers();1459795890;Return the managed {@link MessageListenerContainer} instance(s).;public Collection<MessageListenerContainer> getListenerContainers() {_		return Collections.unmodifiableCollection(this.listenerContainers.values())__	};return,the,managed,link,message,listener,container,instance,s;public,collection,message,listener,container,get,listener,containers,return,collections,unmodifiable,collection,this,listener,containers,values
JmsListenerEndpointRegistry -> public Collection<MessageListenerContainer> getListenerContainers();1467730834;Return the managed {@link MessageListenerContainer} instance(s).;public Collection<MessageListenerContainer> getListenerContainers() {_		return Collections.unmodifiableCollection(this.listenerContainers.values())__	};return,the,managed,link,message,listener,container,instance,s;public,collection,message,listener,container,get,listener,containers,return,collections,unmodifiable,collection,this,listener,containers,values
JmsListenerEndpointRegistry -> public Collection<MessageListenerContainer> getListenerContainers();1495868221;Return the managed {@link MessageListenerContainer} instance(s).;public Collection<MessageListenerContainer> getListenerContainers() {_		return Collections.unmodifiableCollection(this.listenerContainers.values())__	};return,the,managed,link,message,listener,container,instance,s;public,collection,message,listener,container,get,listener,containers,return,collections,unmodifiable,collection,this,listener,containers,values
JmsListenerEndpointRegistry -> public Collection<MessageListenerContainer> getListenerContainers();1498780456;Return the managed {@link MessageListenerContainer} instance(s).;public Collection<MessageListenerContainer> getListenerContainers() {_		return Collections.unmodifiableCollection(this.listenerContainers.values())__	};return,the,managed,link,message,listener,container,instance,s;public,collection,message,listener,container,get,listener,containers,return,collections,unmodifiable,collection,this,listener,containers,values
JmsListenerEndpointRegistry -> public Collection<MessageListenerContainer> getListenerContainers();1530174524;Return the managed {@link MessageListenerContainer} instance(s).;public Collection<MessageListenerContainer> getListenerContainers() {_		return Collections.unmodifiableCollection(this.listenerContainers.values())__	};return,the,managed,link,message,listener,container,instance,s;public,collection,message,listener,container,get,listener,containers,return,collections,unmodifiable,collection,this,listener,containers,values
JmsListenerEndpointRegistry -> public Collection<MessageListenerContainer> getListenerContainers();1534414082;Return the managed {@link MessageListenerContainer} instance(s).;public Collection<MessageListenerContainer> getListenerContainers() {_		return Collections.unmodifiableCollection(this.listenerContainers.values())__	};return,the,managed,link,message,listener,container,instance,s;public,collection,message,listener,container,get,listener,containers,return,collections,unmodifiable,collection,this,listener,containers,values
JmsListenerEndpointRegistry -> public Collection<MessageListenerContainer> getListenerContainers();1534417347;Return the managed {@link MessageListenerContainer} instance(s).;public Collection<MessageListenerContainer> getListenerContainers() {_		return Collections.unmodifiableCollection(this.listenerContainers.values())__	};return,the,managed,link,message,listener,container,instance,s;public,collection,message,listener,container,get,listener,containers,return,collections,unmodifiable,collection,this,listener,containers,values
JmsListenerEndpointRegistry -> protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint, 			JmsListenerContainerFactory<?> factory);1405696881;Create and start a new container using the specified factory.;protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint,_			JmsListenerContainerFactory<?> factory) {__		MessageListenerContainer listenerContainer = factory.createListenerContainer(endpoint)___		if (listenerContainer instanceof InitializingBean) {_			try {_				((InitializingBean) listenerContainer).afterPropertiesSet()__			}_			catch (Exception ex) {_				throw new BeanInitializationException("Failed to initialize message listener container", ex)__			}_		}__		int containerPhase = listenerContainer.getPhase()__		if (containerPhase < Integer.MAX_VALUE) {  _			if (this.phase < Integer.MAX_VALUE && this.phase != containerPhase) {_				throw new IllegalStateException("Encountered phase mismatch between container factory definitions: " +_						this.phase + " vs " + containerPhase)__			}_			this.phase = listenerContainer.getPhase()__		}__		return listenerContainer__	};create,and,start,a,new,container,using,the,specified,factory;protected,message,listener,container,create,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,message,listener,container,listener,container,factory,create,listener,container,endpoint,if,listener,container,instanceof,initializing,bean,try,initializing,bean,listener,container,after,properties,set,catch,exception,ex,throw,new,bean,initialization,exception,failed,to,initialize,message,listener,container,ex,int,container,phase,listener,container,get,phase,if,container,phase,integer,if,this,phase,integer,this,phase,container,phase,throw,new,illegal,state,exception,encountered,phase,mismatch,between,container,factory,definitions,this,phase,vs,container,phase,this,phase,listener,container,get,phase,return,listener,container
JmsListenerEndpointRegistry -> protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint, 			JmsListenerContainerFactory<?> factory);1425484795;Create and start a new container using the specified factory.;protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint,_			JmsListenerContainerFactory<?> factory) {__		MessageListenerContainer listenerContainer = factory.createListenerContainer(endpoint)___		if (listenerContainer instanceof InitializingBean) {_			try {_				((InitializingBean) listenerContainer).afterPropertiesSet()__			}_			catch (Exception ex) {_				throw new BeanInitializationException("Failed to initialize message listener container", ex)__			}_		}__		int containerPhase = listenerContainer.getPhase()__		if (containerPhase < Integer.MAX_VALUE) {  _			if (this.phase < Integer.MAX_VALUE && this.phase != containerPhase) {_				throw new IllegalStateException("Encountered phase mismatch between container factory definitions: " +_						this.phase + " vs " + containerPhase)__			}_			this.phase = listenerContainer.getPhase()__		}__		return listenerContainer__	};create,and,start,a,new,container,using,the,specified,factory;protected,message,listener,container,create,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,message,listener,container,listener,container,factory,create,listener,container,endpoint,if,listener,container,instanceof,initializing,bean,try,initializing,bean,listener,container,after,properties,set,catch,exception,ex,throw,new,bean,initialization,exception,failed,to,initialize,message,listener,container,ex,int,container,phase,listener,container,get,phase,if,container,phase,integer,if,this,phase,integer,this,phase,container,phase,throw,new,illegal,state,exception,encountered,phase,mismatch,between,container,factory,definitions,this,phase,vs,container,phase,this,phase,listener,container,get,phase,return,listener,container
JmsListenerEndpointRegistry -> protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint, 			JmsListenerContainerFactory<?> factory);1446477227;Create and start a new container using the specified factory.;protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint,_			JmsListenerContainerFactory<?> factory) {__		MessageListenerContainer listenerContainer = factory.createListenerContainer(endpoint)___		if (listenerContainer instanceof InitializingBean) {_			try {_				((InitializingBean) listenerContainer).afterPropertiesSet()__			}_			catch (Exception ex) {_				throw new BeanInitializationException("Failed to initialize message listener container", ex)__			}_		}__		int containerPhase = listenerContainer.getPhase()__		if (containerPhase < Integer.MAX_VALUE) {  _			if (this.phase < Integer.MAX_VALUE && this.phase != containerPhase) {_				throw new IllegalStateException("Encountered phase mismatch between container factory definitions: " +_						this.phase + " vs " + containerPhase)__			}_			this.phase = listenerContainer.getPhase()__		}__		return listenerContainer__	};create,and,start,a,new,container,using,the,specified,factory;protected,message,listener,container,create,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,message,listener,container,listener,container,factory,create,listener,container,endpoint,if,listener,container,instanceof,initializing,bean,try,initializing,bean,listener,container,after,properties,set,catch,exception,ex,throw,new,bean,initialization,exception,failed,to,initialize,message,listener,container,ex,int,container,phase,listener,container,get,phase,if,container,phase,integer,if,this,phase,integer,this,phase,container,phase,throw,new,illegal,state,exception,encountered,phase,mismatch,between,container,factory,definitions,this,phase,vs,container,phase,this,phase,listener,container,get,phase,return,listener,container
JmsListenerEndpointRegistry -> protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint, 			JmsListenerContainerFactory<?> factory);1446492941;Create and start a new container using the specified factory.;protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint,_			JmsListenerContainerFactory<?> factory) {__		MessageListenerContainer listenerContainer = factory.createListenerContainer(endpoint)___		if (listenerContainer instanceof InitializingBean) {_			try {_				((InitializingBean) listenerContainer).afterPropertiesSet()__			}_			catch (Exception ex) {_				throw new BeanInitializationException("Failed to initialize message listener container", ex)__			}_		}__		int containerPhase = listenerContainer.getPhase()__		if (containerPhase < Integer.MAX_VALUE) {  _			if (this.phase < Integer.MAX_VALUE && this.phase != containerPhase) {_				throw new IllegalStateException("Encountered phase mismatch between container factory definitions: " +_						this.phase + " vs " + containerPhase)__			}_			this.phase = listenerContainer.getPhase()__		}__		return listenerContainer__	};create,and,start,a,new,container,using,the,specified,factory;protected,message,listener,container,create,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,message,listener,container,listener,container,factory,create,listener,container,endpoint,if,listener,container,instanceof,initializing,bean,try,initializing,bean,listener,container,after,properties,set,catch,exception,ex,throw,new,bean,initialization,exception,failed,to,initialize,message,listener,container,ex,int,container,phase,listener,container,get,phase,if,container,phase,integer,if,this,phase,integer,this,phase,container,phase,throw,new,illegal,state,exception,encountered,phase,mismatch,between,container,factory,definitions,this,phase,vs,container,phase,this,phase,listener,container,get,phase,return,listener,container
JmsListenerEndpointRegistry -> protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint, 			JmsListenerContainerFactory<?> factory);1459786870;Create and start a new container using the specified factory.;protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint,_			JmsListenerContainerFactory<?> factory) {__		MessageListenerContainer listenerContainer = factory.createListenerContainer(endpoint)___		if (listenerContainer instanceof InitializingBean) {_			try {_				((InitializingBean) listenerContainer).afterPropertiesSet()__			}_			catch (Exception ex) {_				throw new BeanInitializationException("Failed to initialize message listener container", ex)__			}_		}__		int containerPhase = listenerContainer.getPhase()__		if (containerPhase < Integer.MAX_VALUE) {  _			if (this.phase < Integer.MAX_VALUE && this.phase != containerPhase) {_				throw new IllegalStateException("Encountered phase mismatch between container factory definitions: " +_						this.phase + " vs " + containerPhase)__			}_			this.phase = listenerContainer.getPhase()__		}__		return listenerContainer__	};create,and,start,a,new,container,using,the,specified,factory;protected,message,listener,container,create,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,message,listener,container,listener,container,factory,create,listener,container,endpoint,if,listener,container,instanceof,initializing,bean,try,initializing,bean,listener,container,after,properties,set,catch,exception,ex,throw,new,bean,initialization,exception,failed,to,initialize,message,listener,container,ex,int,container,phase,listener,container,get,phase,if,container,phase,integer,if,this,phase,integer,this,phase,container,phase,throw,new,illegal,state,exception,encountered,phase,mismatch,between,container,factory,definitions,this,phase,vs,container,phase,this,phase,listener,container,get,phase,return,listener,container
JmsListenerEndpointRegistry -> protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint, 			JmsListenerContainerFactory<?> factory);1459795890;Create and start a new container using the specified factory.;protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint,_			JmsListenerContainerFactory<?> factory) {__		MessageListenerContainer listenerContainer = factory.createListenerContainer(endpoint)___		if (listenerContainer instanceof InitializingBean) {_			try {_				((InitializingBean) listenerContainer).afterPropertiesSet()__			}_			catch (Exception ex) {_				throw new BeanInitializationException("Failed to initialize message listener container", ex)__			}_		}__		int containerPhase = listenerContainer.getPhase()__		if (containerPhase < Integer.MAX_VALUE) {  _			if (this.phase < Integer.MAX_VALUE && this.phase != containerPhase) {_				throw new IllegalStateException("Encountered phase mismatch between container factory definitions: " +_						this.phase + " vs " + containerPhase)__			}_			this.phase = listenerContainer.getPhase()__		}__		return listenerContainer__	};create,and,start,a,new,container,using,the,specified,factory;protected,message,listener,container,create,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,message,listener,container,listener,container,factory,create,listener,container,endpoint,if,listener,container,instanceof,initializing,bean,try,initializing,bean,listener,container,after,properties,set,catch,exception,ex,throw,new,bean,initialization,exception,failed,to,initialize,message,listener,container,ex,int,container,phase,listener,container,get,phase,if,container,phase,integer,if,this,phase,integer,this,phase,container,phase,throw,new,illegal,state,exception,encountered,phase,mismatch,between,container,factory,definitions,this,phase,vs,container,phase,this,phase,listener,container,get,phase,return,listener,container
JmsListenerEndpointRegistry -> protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint, 			JmsListenerContainerFactory<?> factory);1467730834;Create and start a new container using the specified factory.;protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint,_			JmsListenerContainerFactory<?> factory) {__		MessageListenerContainer listenerContainer = factory.createListenerContainer(endpoint)___		if (listenerContainer instanceof InitializingBean) {_			try {_				((InitializingBean) listenerContainer).afterPropertiesSet()__			}_			catch (Exception ex) {_				throw new BeanInitializationException("Failed to initialize message listener container", ex)__			}_		}__		int containerPhase = listenerContainer.getPhase()__		if (containerPhase < Integer.MAX_VALUE) {  _			if (this.phase < Integer.MAX_VALUE && this.phase != containerPhase) {_				throw new IllegalStateException("Encountered phase mismatch between container factory definitions: " +_						this.phase + " vs " + containerPhase)__			}_			this.phase = listenerContainer.getPhase()__		}__		return listenerContainer__	};create,and,start,a,new,container,using,the,specified,factory;protected,message,listener,container,create,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,message,listener,container,listener,container,factory,create,listener,container,endpoint,if,listener,container,instanceof,initializing,bean,try,initializing,bean,listener,container,after,properties,set,catch,exception,ex,throw,new,bean,initialization,exception,failed,to,initialize,message,listener,container,ex,int,container,phase,listener,container,get,phase,if,container,phase,integer,if,this,phase,integer,this,phase,container,phase,throw,new,illegal,state,exception,encountered,phase,mismatch,between,container,factory,definitions,this,phase,vs,container,phase,this,phase,listener,container,get,phase,return,listener,container
JmsListenerEndpointRegistry -> protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint, 			JmsListenerContainerFactory<?> factory);1495868221;Create and start a new container using the specified factory.;protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint,_			JmsListenerContainerFactory<?> factory) {__		MessageListenerContainer listenerContainer = factory.createListenerContainer(endpoint)___		if (listenerContainer instanceof InitializingBean) {_			try {_				((InitializingBean) listenerContainer).afterPropertiesSet()__			}_			catch (Exception ex) {_				throw new BeanInitializationException("Failed to initialize message listener container", ex)__			}_		}__		int containerPhase = listenerContainer.getPhase()__		if (containerPhase < Integer.MAX_VALUE) {  _			if (this.phase < Integer.MAX_VALUE && this.phase != containerPhase) {_				throw new IllegalStateException("Encountered phase mismatch between container factory definitions: " +_						this.phase + " vs " + containerPhase)__			}_			this.phase = listenerContainer.getPhase()__		}__		return listenerContainer__	};create,and,start,a,new,container,using,the,specified,factory;protected,message,listener,container,create,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,message,listener,container,listener,container,factory,create,listener,container,endpoint,if,listener,container,instanceof,initializing,bean,try,initializing,bean,listener,container,after,properties,set,catch,exception,ex,throw,new,bean,initialization,exception,failed,to,initialize,message,listener,container,ex,int,container,phase,listener,container,get,phase,if,container,phase,integer,if,this,phase,integer,this,phase,container,phase,throw,new,illegal,state,exception,encountered,phase,mismatch,between,container,factory,definitions,this,phase,vs,container,phase,this,phase,listener,container,get,phase,return,listener,container
JmsListenerEndpointRegistry -> protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint, 			JmsListenerContainerFactory<?> factory);1498780456;Create and start a new container using the specified factory.;protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint,_			JmsListenerContainerFactory<?> factory) {__		MessageListenerContainer listenerContainer = factory.createListenerContainer(endpoint)___		if (listenerContainer instanceof InitializingBean) {_			try {_				((InitializingBean) listenerContainer).afterPropertiesSet()__			}_			catch (Exception ex) {_				throw new BeanInitializationException("Failed to initialize message listener container", ex)__			}_		}__		int containerPhase = listenerContainer.getPhase()__		if (containerPhase < Integer.MAX_VALUE) {  _			if (this.phase < Integer.MAX_VALUE && this.phase != containerPhase) {_				throw new IllegalStateException("Encountered phase mismatch between container factory definitions: " +_						this.phase + " vs " + containerPhase)__			}_			this.phase = listenerContainer.getPhase()__		}__		return listenerContainer__	};create,and,start,a,new,container,using,the,specified,factory;protected,message,listener,container,create,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,message,listener,container,listener,container,factory,create,listener,container,endpoint,if,listener,container,instanceof,initializing,bean,try,initializing,bean,listener,container,after,properties,set,catch,exception,ex,throw,new,bean,initialization,exception,failed,to,initialize,message,listener,container,ex,int,container,phase,listener,container,get,phase,if,container,phase,integer,if,this,phase,integer,this,phase,container,phase,throw,new,illegal,state,exception,encountered,phase,mismatch,between,container,factory,definitions,this,phase,vs,container,phase,this,phase,listener,container,get,phase,return,listener,container
JmsListenerEndpointRegistry -> protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint, 			JmsListenerContainerFactory<?> factory);1530174524;Create and start a new container using the specified factory.;protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint,_			JmsListenerContainerFactory<?> factory) {__		MessageListenerContainer listenerContainer = factory.createListenerContainer(endpoint)___		if (listenerContainer instanceof InitializingBean) {_			try {_				((InitializingBean) listenerContainer).afterPropertiesSet()__			}_			catch (Exception ex) {_				throw new BeanInitializationException("Failed to initialize message listener container", ex)__			}_		}__		int containerPhase = listenerContainer.getPhase()__		if (containerPhase < Integer.MAX_VALUE) {  _			if (this.phase < Integer.MAX_VALUE && this.phase != containerPhase) {_				throw new IllegalStateException("Encountered phase mismatch between container factory definitions: " +_						this.phase + " vs " + containerPhase)__			}_			this.phase = listenerContainer.getPhase()__		}__		return listenerContainer__	};create,and,start,a,new,container,using,the,specified,factory;protected,message,listener,container,create,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,message,listener,container,listener,container,factory,create,listener,container,endpoint,if,listener,container,instanceof,initializing,bean,try,initializing,bean,listener,container,after,properties,set,catch,exception,ex,throw,new,bean,initialization,exception,failed,to,initialize,message,listener,container,ex,int,container,phase,listener,container,get,phase,if,container,phase,integer,if,this,phase,integer,this,phase,container,phase,throw,new,illegal,state,exception,encountered,phase,mismatch,between,container,factory,definitions,this,phase,vs,container,phase,this,phase,listener,container,get,phase,return,listener,container
JmsListenerEndpointRegistry -> protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint, 			JmsListenerContainerFactory<?> factory);1534414082;Create and start a new container using the specified factory.;protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint,_			JmsListenerContainerFactory<?> factory) {__		MessageListenerContainer listenerContainer = factory.createListenerContainer(endpoint)___		if (listenerContainer instanceof InitializingBean) {_			try {_				((InitializingBean) listenerContainer).afterPropertiesSet()__			}_			catch (Exception ex) {_				throw new BeanInitializationException("Failed to initialize message listener container", ex)__			}_		}__		int containerPhase = listenerContainer.getPhase()__		if (containerPhase < Integer.MAX_VALUE) {  _			if (this.phase < Integer.MAX_VALUE && this.phase != containerPhase) {_				throw new IllegalStateException("Encountered phase mismatch between container factory definitions: " +_						this.phase + " vs " + containerPhase)__			}_			this.phase = listenerContainer.getPhase()__		}__		return listenerContainer__	};create,and,start,a,new,container,using,the,specified,factory;protected,message,listener,container,create,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,message,listener,container,listener,container,factory,create,listener,container,endpoint,if,listener,container,instanceof,initializing,bean,try,initializing,bean,listener,container,after,properties,set,catch,exception,ex,throw,new,bean,initialization,exception,failed,to,initialize,message,listener,container,ex,int,container,phase,listener,container,get,phase,if,container,phase,integer,if,this,phase,integer,this,phase,container,phase,throw,new,illegal,state,exception,encountered,phase,mismatch,between,container,factory,definitions,this,phase,vs,container,phase,this,phase,listener,container,get,phase,return,listener,container
JmsListenerEndpointRegistry -> protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint, 			JmsListenerContainerFactory<?> factory);1534417347;Create and start a new container using the specified factory.;protected MessageListenerContainer createListenerContainer(JmsListenerEndpoint endpoint,_			JmsListenerContainerFactory<?> factory) {__		MessageListenerContainer listenerContainer = factory.createListenerContainer(endpoint)___		if (listenerContainer instanceof InitializingBean) {_			try {_				((InitializingBean) listenerContainer).afterPropertiesSet()__			}_			catch (Exception ex) {_				throw new BeanInitializationException("Failed to initialize message listener container", ex)__			}_		}__		int containerPhase = listenerContainer.getPhase()__		if (containerPhase < Integer.MAX_VALUE) {  _			if (this.phase < Integer.MAX_VALUE && this.phase != containerPhase) {_				throw new IllegalStateException("Encountered phase mismatch between container factory definitions: " +_						this.phase + " vs " + containerPhase)__			}_			this.phase = listenerContainer.getPhase()__		}__		return listenerContainer__	};create,and,start,a,new,container,using,the,specified,factory;protected,message,listener,container,create,listener,container,jms,listener,endpoint,endpoint,jms,listener,container,factory,factory,message,listener,container,listener,container,factory,create,listener,container,endpoint,if,listener,container,instanceof,initializing,bean,try,initializing,bean,listener,container,after,properties,set,catch,exception,ex,throw,new,bean,initialization,exception,failed,to,initialize,message,listener,container,ex,int,container,phase,listener,container,get,phase,if,container,phase,integer,if,this,phase,integer,this,phase,container,phase,throw,new,illegal,state,exception,encountered,phase,mismatch,between,container,factory,definitions,this,phase,vs,container,phase,this,phase,listener,container,get,phase,return,listener,container
JmsListenerEndpointRegistry -> public Set<String> getListenerContainerIds();1446477227;Return the ids of the managed {@link MessageListenerContainer} instance(s)._@see #getListenerContainer(String);public Set<String> getListenerContainerIds() {_		return Collections.unmodifiableSet(this.listenerContainers.keySet())__	};return,the,ids,of,the,managed,link,message,listener,container,instance,s,see,get,listener,container,string;public,set,string,get,listener,container,ids,return,collections,unmodifiable,set,this,listener,containers,key,set
JmsListenerEndpointRegistry -> public Set<String> getListenerContainerIds();1446492941;Return the ids of the managed {@link MessageListenerContainer} instance(s)._@see #getListenerContainer(String)_@since 4.2.3;public Set<String> getListenerContainerIds() {_		return Collections.unmodifiableSet(this.listenerContainers.keySet())__	};return,the,ids,of,the,managed,link,message,listener,container,instance,s,see,get,listener,container,string,since,4,2,3;public,set,string,get,listener,container,ids,return,collections,unmodifiable,set,this,listener,containers,key,set
JmsListenerEndpointRegistry -> public Set<String> getListenerContainerIds();1459786870;Return the ids of the managed {@link MessageListenerContainer} instance(s)._@see #getListenerContainer(String)_@since 4.2.3;public Set<String> getListenerContainerIds() {_		return Collections.unmodifiableSet(this.listenerContainers.keySet())__	};return,the,ids,of,the,managed,link,message,listener,container,instance,s,see,get,listener,container,string,since,4,2,3;public,set,string,get,listener,container,ids,return,collections,unmodifiable,set,this,listener,containers,key,set
JmsListenerEndpointRegistry -> public Set<String> getListenerContainerIds();1459795890;Return the ids of the managed {@link MessageListenerContainer} instance(s)._@see #getListenerContainer(String)_@since 4.2.3;public Set<String> getListenerContainerIds() {_		return Collections.unmodifiableSet(this.listenerContainers.keySet())__	};return,the,ids,of,the,managed,link,message,listener,container,instance,s,see,get,listener,container,string,since,4,2,3;public,set,string,get,listener,container,ids,return,collections,unmodifiable,set,this,listener,containers,key,set
JmsListenerEndpointRegistry -> public Set<String> getListenerContainerIds();1467730834;Return the ids of the managed {@link MessageListenerContainer} instance(s)._@see #getListenerContainer(String)_@since 4.2.3;public Set<String> getListenerContainerIds() {_		return Collections.unmodifiableSet(this.listenerContainers.keySet())__	};return,the,ids,of,the,managed,link,message,listener,container,instance,s,see,get,listener,container,string,since,4,2,3;public,set,string,get,listener,container,ids,return,collections,unmodifiable,set,this,listener,containers,key,set
JmsListenerEndpointRegistry -> public Set<String> getListenerContainerIds();1495868221;Return the ids of the managed {@link MessageListenerContainer} instance(s)._@see #getListenerContainer(String)_@since 4.2.3;public Set<String> getListenerContainerIds() {_		return Collections.unmodifiableSet(this.listenerContainers.keySet())__	};return,the,ids,of,the,managed,link,message,listener,container,instance,s,see,get,listener,container,string,since,4,2,3;public,set,string,get,listener,container,ids,return,collections,unmodifiable,set,this,listener,containers,key,set
JmsListenerEndpointRegistry -> public Set<String> getListenerContainerIds();1498780456;Return the ids of the managed {@link MessageListenerContainer} instance(s)._@see #getListenerContainer(String)_@since 4.2.3;public Set<String> getListenerContainerIds() {_		return Collections.unmodifiableSet(this.listenerContainers.keySet())__	};return,the,ids,of,the,managed,link,message,listener,container,instance,s,see,get,listener,container,string,since,4,2,3;public,set,string,get,listener,container,ids,return,collections,unmodifiable,set,this,listener,containers,key,set
JmsListenerEndpointRegistry -> public Set<String> getListenerContainerIds();1530174524;Return the ids of the managed {@link MessageListenerContainer} instance(s)._@since 4.2.3_@see #getListenerContainer(String);public Set<String> getListenerContainerIds() {_		return Collections.unmodifiableSet(this.listenerContainers.keySet())__	};return,the,ids,of,the,managed,link,message,listener,container,instance,s,since,4,2,3,see,get,listener,container,string;public,set,string,get,listener,container,ids,return,collections,unmodifiable,set,this,listener,containers,key,set
JmsListenerEndpointRegistry -> public Set<String> getListenerContainerIds();1534414082;Return the ids of the managed {@link MessageListenerContainer} instance(s)._@since 4.2.3_@see #getListenerContainer(String);public Set<String> getListenerContainerIds() {_		return Collections.unmodifiableSet(this.listenerContainers.keySet())__	};return,the,ids,of,the,managed,link,message,listener,container,instance,s,since,4,2,3,see,get,listener,container,string;public,set,string,get,listener,container,ids,return,collections,unmodifiable,set,this,listener,containers,key,set
JmsListenerEndpointRegistry -> public Set<String> getListenerContainerIds();1534417347;Return the ids of the managed {@link MessageListenerContainer} instance(s)._@since 4.2.3_@see #getListenerContainer(String);public Set<String> getListenerContainerIds() {_		return Collections.unmodifiableSet(this.listenerContainers.keySet())__	};return,the,ids,of,the,managed,link,message,listener,container,instance,s,since,4,2,3,see,get,listener,container,string;public,set,string,get,listener,container,ids,return,collections,unmodifiable,set,this,listener,containers,key,set
JmsListenerEndpointRegistry -> @Nullable 	public MessageListenerContainer getListenerContainer(String id);1495868221;Return the {@link MessageListenerContainer} with the specified id or_{@code null} if no such container exists._@param id the id of the container_@return the container or {@code null} if no container with that id exists_@see JmsListenerEndpoint#getId()_@see #getListenerContainerIds();@Nullable_	public MessageListenerContainer getListenerContainer(String id) {_		Assert.notNull(id, "Container identifier must not be null")__		return this.listenerContainers.get(id)__	};return,the,link,message,listener,container,with,the,specified,id,or,code,null,if,no,such,container,exists,param,id,the,id,of,the,container,return,the,container,or,code,null,if,no,container,with,that,id,exists,see,jms,listener,endpoint,get,id,see,get,listener,container,ids;nullable,public,message,listener,container,get,listener,container,string,id,assert,not,null,id,container,identifier,must,not,be,null,return,this,listener,containers,get,id
JmsListenerEndpointRegistry -> @Nullable 	public MessageListenerContainer getListenerContainer(String id);1498780456;Return the {@link MessageListenerContainer} with the specified id or_{@code null} if no such container exists._@param id the id of the container_@return the container or {@code null} if no container with that id exists_@see JmsListenerEndpoint#getId()_@see #getListenerContainerIds();@Nullable_	public MessageListenerContainer getListenerContainer(String id) {_		Assert.notNull(id, "Container identifier must not be null")__		return this.listenerContainers.get(id)__	};return,the,link,message,listener,container,with,the,specified,id,or,code,null,if,no,such,container,exists,param,id,the,id,of,the,container,return,the,container,or,code,null,if,no,container,with,that,id,exists,see,jms,listener,endpoint,get,id,see,get,listener,container,ids;nullable,public,message,listener,container,get,listener,container,string,id,assert,not,null,id,container,identifier,must,not,be,null,return,this,listener,containers,get,id
JmsListenerEndpointRegistry -> @Nullable 	public MessageListenerContainer getListenerContainer(String id);1530174524;Return the {@link MessageListenerContainer} with the specified id or_{@code null} if no such container exists._@param id the id of the container_@return the container or {@code null} if no container with that id exists_@see JmsListenerEndpoint#getId()_@see #getListenerContainerIds();@Nullable_	public MessageListenerContainer getListenerContainer(String id) {_		Assert.notNull(id, "Container identifier must not be null")__		return this.listenerContainers.get(id)__	};return,the,link,message,listener,container,with,the,specified,id,or,code,null,if,no,such,container,exists,param,id,the,id,of,the,container,return,the,container,or,code,null,if,no,container,with,that,id,exists,see,jms,listener,endpoint,get,id,see,get,listener,container,ids;nullable,public,message,listener,container,get,listener,container,string,id,assert,not,null,id,container,identifier,must,not,be,null,return,this,listener,containers,get,id
JmsListenerEndpointRegistry -> @Nullable 	public MessageListenerContainer getListenerContainer(String id);1534414082;Return the {@link MessageListenerContainer} with the specified id or_{@code null} if no such container exists._@param id the id of the container_@return the container or {@code null} if no container with that id exists_@see JmsListenerEndpoint#getId()_@see #getListenerContainerIds();@Nullable_	public MessageListenerContainer getListenerContainer(String id) {_		Assert.notNull(id, "Container identifier must not be null")__		return this.listenerContainers.get(id)__	};return,the,link,message,listener,container,with,the,specified,id,or,code,null,if,no,such,container,exists,param,id,the,id,of,the,container,return,the,container,or,code,null,if,no,container,with,that,id,exists,see,jms,listener,endpoint,get,id,see,get,listener,container,ids;nullable,public,message,listener,container,get,listener,container,string,id,assert,not,null,id,container,identifier,must,not,be,null,return,this,listener,containers,get,id
JmsListenerEndpointRegistry -> @Nullable 	public MessageListenerContainer getListenerContainer(String id);1534417347;Return the {@link MessageListenerContainer} with the specified id or_{@code null} if no such container exists._@param id the id of the container_@return the container or {@code null} if no container with that id exists_@see JmsListenerEndpoint#getId()_@see #getListenerContainerIds();@Nullable_	public MessageListenerContainer getListenerContainer(String id) {_		Assert.notNull(id, "Container identifier must not be null")__		return this.listenerContainers.get(id)__	};return,the,link,message,listener,container,with,the,specified,id,or,code,null,if,no,such,container,exists,param,id,the,id,of,the,container,return,the,container,or,code,null,if,no,container,with,that,id,exists,see,jms,listener,endpoint,get,id,see,get,listener,container,ids;nullable,public,message,listener,container,get,listener,container,string,id,assert,not,null,id,container,identifier,must,not,be,null,return,this,listener,containers,get,id
