commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * Set the {@link MessageListener} to invoke when a message matching  * the endpoint is received.  */ ;/**  * Set the {@link MessageListener} to invoke when a message matching  * the endpoint is received.  */ public void setMessageListener(@Nullable MessageListener messageListener) {     this.messageListener = messageListener. }
true;public;0;4;/**  * Return the {@link MessageListener} to invoke when a message matching  * the endpoint is received.  */ ;/**  * Return the {@link MessageListener} to invoke when a message matching  * the endpoint is received.  */ @Nullable public MessageListener getMessageListener() {     return this.messageListener. }
false;protected;1;6;;@Override protected MessageListener createMessageListener(MessageListenerContainer container) {     MessageListener listener = getMessageListener().     Assert.state(listener != null, "No MessageListener set").     return listener. }
false;protected;0;5;;@Override protected StringBuilder getEndpointDescription() {     return super.getEndpointDescription().append(" | messageListener='").append(this.messageListener).append("'"). }
